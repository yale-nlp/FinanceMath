[
    {
        "tables": [
            "| Asset Class    | Geometric Return(%) |\n| -------------- | ------------------- |\n| Equities       | 8.0                 |\n| Corporate Bonds| 6.5                 |\n| Treasury bills | 2.5                 |\n| Inflation      | 2.1                 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-0",
        "python_solution": "",
        "ground_truth": null,
        "question": "What historical geometric real rate of return for corporate bonds does a researcher identify?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    corporate_bonds_return = 6.5\n    inflation_rate = 2.1\n    \n    # Do math calculation to get the answer\n    real_rate_of_return = corporate_bonds_return - inflation_rate\n    \n    # return answer\n    return real_rate_of_return\n```"
        ]
    },
    {
        "tables": [
            "| Period | Years | Forward Rate |\n|--------|-------|--------------|\n| 1      | 0.5   | 1.20%        |\n| 2      | 1     | 1.80%        |\n| 3      | 1.5   | 2.30%        |\n| 4      | 2     | 2.70%        |\n| 5      | 2.5   | 3.00%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-1",
        "python_solution": "",
        "ground_truth": null,
        "question": "With the given US Treasury forward rates, what's the value of a 2.5-year $100 face value Treasury bond with a 5% interest rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    coupon_rate = 0.05\n    periods = [0.5, 1, 1.5, 2, 2.5]\n    forward_rates = [0.012, 0.018, 0.023, 0.027, 0.030]\n    \n    # Calculate the discount factors\n    discount_factors = [1 / (1 + forward_rates[i]) ** periods[i] for i in range(len(periods))]\n    \n    # Calculate the present value of each coupon payment\n    coupon_payments = [face_value * coupon_rate * discount_factors[i] for i in range(len(periods))]\n    \n    # Calculate the present value of the face value\n    pv_face_value = face_value * discount_factors[-1]\n    \n    # Sum up all present values to get the bond value\n    bond_value = sum(coupon_payments) + pv_face_value\n    \n    # return answer\n    return bond_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-2",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming U.S. GAAP is in effect unless stated otherwise, imagine a highly profitable company, Alpha Enterprises, acquired a new asset for $1,000,000 on January 1, 2002. How does the asset acquisition impact Alpha Enterprises' deferred tax liability for 2002 given the following conditions for the asset: for financial statements purposes, straight-line depreciation over 10 years with no salvage value; for tax purposes, the asset is classified under three-year MACRS depreciation with the first year MACRS factor being 0.333, and the tax rate stands at 40%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_cost = 1000000\n    financial_depreciation_period = 10\n    tax_depreciation_factor_year1 = 0.333\n    tax_rate = 0.40\n\n    # Calculate depreciation for financial statements and tax purposes\n    financial_depreciation = asset_cost / financial_depreciation_period\n    tax_depreciation_year1 = asset_cost * tax_depreciation_factor_year1\n\n    # Calculate the temporary difference between financial and tax depreciation\n    temporary_difference = tax_depreciation_year1 - financial_depreciation\n\n    # Calculate the deferred tax liability\n    deferred_tax_liability = temporary_difference * tax_rate\n\n    # return answer\n    return deferred_tax_liability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-3",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the average P/E of 30 shares in a particular manufacturing sector is 18 and the sample standard deviation is 3.5, what is the standard error of the mean closest to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average_pe = 18\n    sample_std_dev = 3.5\n    sample_size = 30\n    \n    # Do math calculation to get the answer\n    standard_error_of_mean = sample_std_dev / (sample_size ** 0.5)\n    \n    # return answer\n    return standard_error_of_mean\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-4",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose there are two stocks, X and Y. If their annual returns are jointly normally distributed, the marginal distribution of each stock has a mean of 2% and a standard deviation of 10%, and the correlation is 0.9, can you tell me the expected annual return of stock X if the annual return of stock Y is 3%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean_X = 0.02  # Mean annual return of stock X\n    mean_Y = 0.02  # Mean annual return of stock Y\n    std_dev_X = 0.10  # Standard deviation of annual return of stock X\n    std_dev_Y = 0.10  # Standard deviation of annual return of stock Y\n    correlation = 0.9  # Correlation between the annual returns of stock X and stock Y\n    given_Y = 0.03  # Given annual return of stock Y\n\n    # Do math calculation to get the answer\n    # Using the conditional expectation formula for bivariate normal distribution\n    # E(X|Y) = mean_X + (correlation * std_dev_X / std_dev_Y) * (given_Y - mean_Y)\n    expected_return_X = mean_X + (correlation * std_dev_X / std_dev_Y) * (given_Y - mean_Y)\n\n    # return answer\n    return expected_return_X\n```"
        ]
    },
    {
        "tables": [
            "| Balances as of year ended 31 December | 2004 | 2005 |\n| ------------------------------------- | ---- | ---- |\n| Retained earnings                     | 120  | 145  |\n| Accounts receivable                   | 38   | 43   |\n| Inventory                             | 45   | 48   |\n| Accounts payable                      | 36   | 29   |"
        ],
        "topic": "Accounting",
        "question_id": "test-5",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's consider that U.S. GAAP is applicable unless stated differently. A research analyst has collected this data from a corporation's financial statements for the year 2005 (in millions of dollars): The firm announced and distributed cash dividends worth $10 million in 2005 and accounted for a depreciation cost of $25 million for the same year. What was the corporation's cash flow from operations, in millions, for 2005?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    retained_earnings_2004 = 120  # in millions\n    retained_earnings_2005 = 145  # in millions\n    cash_dividends = 10  # in millions\n    depreciation_cost = 25  # in millions\n\n    # Do math calculation to get the answer\n    # Calculate the change in retained earnings\n    change_in_retained_earnings = retained_earnings_2005 - retained_earnings_2004\n\n    # Cash flow from operations (CFO) can be calculated using the indirect method:\n    # CFO = Change in Retained Earnings + Cash Dividends + Depreciation Cost\n    cfo = change_in_retained_earnings + cash_dividends + depreciation_cost\n\n    # return answer\n    return cfo\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-6",
        "python_solution": "",
        "ground_truth": null,
        "question": "In early 2009, Steel Production procured a new assembly line equipment for $600,000. The equipment is anticipated to have a useful life of 10 years and an estimated salvage value of $50,000. What amount of depreciation would Steel Production record in 2009 for financial statements using the double-declining balance method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 600000\n    useful_life = 10\n    salvage_value = 50000\n    \n    # Calculate the double-declining balance rate\n    straight_line_rate = 1 / useful_life\n    double_declining_rate = 2 * straight_line_rate\n    \n    # Calculate the depreciation for 2009\n    book_value = initial_cost\n    depreciation_2009 = book_value * double_declining_rate\n    \n    # return answer\n    return depreciation_2009\n```"
        ]
    },
    {
        "tables": [
            "| ASSETS                         |         | Company A | Company B | Sector Average |\n|--------------------------------|---------|-----------|-----------|----------------|\n| Current assets                 |         |           |           |                |\n| Cash and cash equivalents      |         | 5         | 7         |                |\n| Marketable securities          |         | 0         | 2         |                |\n| Accounts receivable, net       |         | 15        | 12        |                |\n| Inventories                    |         | 20        | 16        |                |\n| Prepaid expenses               |         | 15        | 11        |                |\n| Total current assets           |         | 55        | 48        |                |\n| Property, plant, and equipment | net     | 35        | 37        |                |\n| Goodwill                       |         | 0         | 8         |                |\n| Other assets                   |         | 10        | 7         |                |\n| Total assets                   | 100     | 100       | 100       | 100            |\n|--------------------------------|---------|-----------|-----------|----------------|\n| LIABILITIES AND SHAREHOLDERS' EQUITY | | | | |\n| Current liabilities                 |   | | | |\n| Accounts payable                    |   | 10 | 10 | 10 |\n| Short-term debt                     |   | 25 | 10 | 15 |\n| Accrued expenses                    |   | 5  | 3  |    |\n| Total current liabilities           |   | 35 | 25 | 28 |\n| Long-term debt                      |   | 45 | 20 | 28 |\n| Other non-current liabilities       |   | 0  | 10 | 7  |\n| Total liabilities                   |   | 80 | 55 | 63 |\n| Total shareholders' equity          |   | 20 | 45 | 37 |\n| Total liabilities and shareholders' equity | | 100 | 100 | 100 |"
        ],
        "topic": "Accounting",
        "question_id": "test-7",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the quick ratio for Company B as per the common-size balance sheets displayed in Exhibit 1 for Company A, Company B, and the Sector Average?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_and_equivalents_B = 7\n    marketable_securities_B = 2\n    accounts_receivable_B = 12\n    total_current_assets_B = 48\n    total_current_liabilities_B = 25\n    \n    # Do math calculation to get the answer\n    quick_assets_B = cash_and_equivalents_B + marketable_securities_B + accounts_receivable_B\n    quick_ratio_B = quick_assets_B / total_current_liabilities_B\n    \n    # return answer\n    return quick_ratio_B\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-8",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of the year, the portfolio of Frontier Investment Group, a hedge fund, was valued at $475,000,000. A year later, the value of assets under management has grown to $541,500,000. The hedge fund imposes a 1.5% management fee based on the portfolio value at the end of the year and a 10% incentive fee. If these two fees are calculated separately, what would be the effective return for an investor in this hedge fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_portfolio_value = 475000000\n    final_portfolio_value = 541500000\n    management_fee_rate = 0.015\n    incentive_fee_rate = 0.10\n\n    # Calculate the growth in portfolio value\n    growth_in_portfolio_value = final_portfolio_value - initial_portfolio_value\n\n    # Calculate the management fee\n    management_fee = final_portfolio_value * management_fee_rate\n\n    # Calculate the net value after management fee\n    net_value_after_management_fee = final_portfolio_value - management_fee\n\n    # Calculate the incentive fee\n    incentive_fee = growth_in_portfolio_value * incentive_fee_rate\n\n    # Calculate the net value after incentive fee\n    net_value_after_incentive_fee = net_value_after_management_fee - incentive_fee\n\n    # Calculate the effective return\n    effective_return = (net_value_after_incentive_fee - initial_portfolio_value) / initial_portfolio_value\n\n    # return answer\n    return effective_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-9",
        "python_solution": "",
        "ground_truth": null,
        "question": "What does an analyst project as the expected return on equity for a corporation using the Bond yield plus risk premium approach, given a yield on the corporation's bonds at 4.3% and a 6.1% historical risk premium obtained by equity investors compared to long-term corporate bond yields?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_yield = 0.043  # 4.3% yield on the corporation's bonds\n    risk_premium = 0.061  # 6.1% historical risk premium\n    \n    # Do math calculation to get the answer\n    expected_return_on_equity = bond_yield + risk_premium\n    \n    # return answer\n    return expected_return_on_equity\n```"
        ]
    },
    {
        "tables": [
            "|         | RDI=30% | RDI=25% | RDI=15% |\n|---------|---------|---------|---------|\n| RFI=25% | 0.25    |         |         |\n| RFI=15% |         | 0.5     |         |\n| RFI=10% |         |         | 0.25    |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-10",
        "python_solution": "",
        "ground_truth": null,
        "question": "A specialist generates the subsequent joint probability function for an international index (FI) and a local index (DI). What is the covariance of returns on the international index and the returns on the local index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    joint_probabilities = {\n        (0.30, 0.25): 0.25,\n        (0.25, 0.15): 0.5,\n        (0.15, 0.10): 0.25\n    }\n    \n    # Expected values\n    expected_FI = sum(RFI * prob for (RDI, RFI), prob in joint_probabilities.items())\n    expected_DI = sum(RDI * prob for (RDI, RFI), prob in joint_probabilities.items())\n    \n    # Covariance calculation\n    covariance = sum(prob * (RFI - expected_FI) * (RDI - expected_DI) for (RDI, RFI), prob in joint_probabilities.items())\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [
            "| Cost of the equipment | UYP 1,200,000       |\n|----------------------|---------------------|\n| Estimated residual value | UYP 200,000      |\n| Expected useful life | 8 years             |\n| Total productive capacity| 800,000 units    |\n| Production in FY 2009 | 135,000 units      | \n| Expected production for the next 7 years | 95,000 units each |"
        ],
        "topic": "Accounting",
        "question_id": "test-11",
        "python_solution": "",
        "ground_truth": null,
        "question": "If MARIO S.A., a corporation based in Uruguay, uses the straight-line method, then how much is the depreciation expense on their income statement related to the manufacturing equipment, considering that Carlos Lopez from the company is calculating it for the fiscal year ended 31 December 2009? The equipment was obtained on 1 January 2009, and Lopez has gathered the following data (currency in Uruguayan pesos, UYP).",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_equipment = 1200000\n    residual_value = 200000\n    expected_useful_life = 8\n    \n    # Do math calculation to get the answer\n    depreciation_expense = (cost_of_equipment - residual_value) / expected_useful_life\n    \n    # return answer\n    return depreciation_expense\n```"
        ]
    },
    {
        "tables": [
            "|                                      |            |\n|--------------------------------------|------------|\n| **Wood Balance Sheet 2017**          |            |\n| **Assets**                           |            |\n| Cash                                 | $650,000   |\n| Inventory                            | 27,000     |\n| Accounts receivable                  | 25,000     |\n| Plant and equipment (cost less depreciation) | 300,000 |\n| TimberLand                           | 8,086,000  |\n| **Total assets**                     | $9,088,000 |\n| Accounts payables                    | $ 88,000   |\n| Long-term bank loan                  | 2,500,000  |\n| Common stock                         | 6,500,000  |\n| **Total liabilities and equity**     | $9,088,000 |\n| TimberLand (market value)            | 50,000,000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-12",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the balance sheet as of 31 December 2017, Pierre thinks that an asset-based assessment is suitable for Oak. Based on the extra presumption that other assets and liabilities on the balance sheet, what is the asset-based valuation of Oak?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash = 650000\n    inventory = 27000\n    accounts_receivable = 25000\n    plant_and_equipment = 300000\n    timberland = 8086000\n    \n    # Do math calculation to get the answer\n    total_assets = cash + inventory + accounts_receivable + plant_and_equipment + timberland\n    \n    # return answer\n    return total_assets\n```"
        ]
    },
    {
        "tables": [
            "| End of Year | Call Price |\n|-------------|------------|\n| 3           | 102        |\n| 4           | 101        |\n| 5           | 100        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-13",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond that has 5 years left until it matures is presently being traded for 101 for every 100 of par value. It provides a coupon rate of 6%, with interest being paid every six months. Considering that the bond can be first called in 3 years, and can be called following that date on interest payment dates per the provided schedule, what is the bond's yearly yield-to-first-call?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    current_price = 101\n    coupon_rate = 0.06\n    call_price_3_years = 102\n    years_to_first_call = 3\n    semi_annual_coupon = coupon_rate / 2\n    periods_to_first_call = years_to_first_call * 2\n\n    # Calculate the present value of the call price and the semi-annual coupons\n    call_price_pv = call_price_3_years / (1 + semi_annual_coupon) ** periods_to_first_call\n    coupons_pv = sum([semi_annual_coupon * par_value / (1 + semi_annual_coupon) ** i for i in range(1, periods_to_first_call + 1)])\n\n    # Calculate the yield to first call using the formula for the internal rate of return\n    # This is a simplified approach and assumes the yield is the same for all periods\n    yield_to_first_call = (coupons_pv + call_price_pv) / current_price\n\n    # Convert the yield to a yearly basis\n    yearly_yield_to_first_call = (1 + yield_to_first_call) ** 2 - 1\n\n    # return answer\n    return yearly_yield_to_first_call\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-14",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Corporation A disclosed a salary expenditure of $30 million and wage payable rose by $2 million, how much money was actually disbursed to workers?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    salary_expenditure = 30000000\n    wage_payable_increase = 2000000\n    \n    # Do math calculation to get the answer\n    actual_disbursed = salary_expenditure - wage_payable_increase\n    \n    # return answer\n    return actual_disbursed\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-15",
        "python_solution": "",
        "ground_truth": null,
        "question": "Peterson Energy Inc, a US-based, publicly traded energy firm, recently stated its plans to acquire Heartland Energy Inc, a smaller energy company based in the US. The offer from Peterson values Heartland at an enterprise worth of USD40.6 billion, which includes USD4.3 billion of existing Heartland debt. In order to finance the consideration of USD55 in cash along with 2.25 Peterson shares for each Heartland share, Peterson intends to issue 104 million new shares and will raise approximately USD26 billion in new debt, with the remaining being funded by cash on hand. Once the deal has closed, Peterson anticipates having an outstanding debt of nearly USD62 billion. Before the acquisition, Peterson had 1.096 billion shares in circulation, each trading at USD125. With the assumption of a constant share price and the book value of debt being equal to its market value, Jackson plans to ascertain the change in the proportions of debt and equity in Peterson\u2019s capital structure following",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    existing_shares = 1096000000  # 1.096 billion shares\n    new_shares = 104000000  # 104 million new shares\n    existing_share_price = 125  # USD 125 per share\n    existing_debt = 62000000000  # USD 62 billion debt after acquisition\n    total_equity_before = existing_shares * existing_share_price  # Total equity before acquisition\n    total_equity_after = (existing_shares + new_shares) * existing_share_price  # Total equity after acquisition\n    total_capital_after = total_equity_after + existing_debt  # Total capital after acquisition\n\n    # Do math calculation to get the answer\n    debt_ratio_after = existing_debt / total_capital_after  # Debt ratio after acquisition\n    equity_ratio_after = total_equity_after / total_capital_after  # Equity ratio after acquisition\n\n    # return answer\n    return {\n        \"Debt Ratio After Acquisition\": debt_ratio_after,\n        \"Equity Ratio After Acquisition\": equity_ratio_after\n    }\n```"
        ]
    },
    {
        "tables": [
            "| 1 Year | 3 Years | 5 Years | Since Inception |\n|--------|---------|---------|-----------------|\n| 5.3%   | 6.2%    | 4.7%    | 4.4%            |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-16",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the performance metrics for a different investment option: Let's assume that the highest drawdown risk remains constant at 10.2% for every time interval. Also, suppose that the mean drawdown risk is unchanging at 6.8% for every time interval. Based on the data given, compute the Calmar ratio in the usual manner. What is the resulting Calmar ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    highest_drawdown_risk = 10.2\n    mean_drawdown_risk = 6.8\n    annual_return = 5.3  # Using the 1-year return as the annual return for the Calmar ratio calculation\n    \n    # Do math calculation to get the answer\n    calmar_ratio = annual_return / highest_drawdown_risk\n    \n    # return answer\n    return calmar_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Returns | RB=50% | RB=20% | RB=-30% |\n|---------|--------|--------|---------|\n| RA=-10% | 0.4    | 0      | 0       |\n| RA=10%  | 0      | 0.3    | 0       |\n| RA=30%  | 0      | 0      | 0.3     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-17",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the above probability matrix, what is the covariance of returns on Portfolio X and Portfolio Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    RA = [-0.1, 0.1, 0.3]  # Returns on Portfolio X\n    RB = [0.5, 0.2, -0.3]  # Returns on Portfolio Y\n    probabilities = [\n        [0.4, 0, 0],\n        [0, 0.3, 0],\n        [0, 0, 0.3]\n    ]\n    \n    # Calculate expected returns\n    E_RA = sum(p * ra for i, ra in enumerate(RA) for j, p in enumerate(probabilities[i]))\n    E_RB = sum(p * rb for j, rb in enumerate(RB) for i, p in enumerate(probabilities[i]))\n    \n    # Calculate covariance\n    covariance = 0\n    for i in range(len(RA)):\n        for j in range(len(RB)):\n            covariance += (RA[i] - E_RA) * (RB[j] - E_RB) * probabilities[i][j]\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-18",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Fairfield Inc. intends to borrow sufficient funds to buy back 100,000 stocks, what would be Fairfield\u2019s earnings per share following the repurchase, with the following data related to the share buyback: Shares outstanding before buyback 3.1 million, Earnings per share before buyback US$4.00, Share price at the time of buyback US$50, and After-tax cost of borrowing 6%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_outstanding_before = 3100000\n    earnings_per_share_before = 4.00\n    share_price = 50\n    after_tax_cost_of_borrowing = 0.06\n    shares_to_buyback = 100000\n\n    # Calculate total earnings before buyback\n    total_earnings = earnings_per_share_before * shares_outstanding_before\n\n    # Calculate the cost of the buyback\n    cost_of_buyback = shares_to_buyback * share_price\n\n    # Calculate the interest expense due to borrowing\n    interest_expense = cost_of_buyback * after_tax_cost_of_borrowing\n\n    # Calculate the new total earnings after accounting for interest expense\n    new_total_earnings = total_earnings - interest_expense\n\n    # Calculate the new shares outstanding after buyback\n    new_shares_outstanding = shares_outstanding_before - shares_to_buyback\n\n    # Calculate the new earnings per share\n    new_earnings_per_share = new_total_earnings / new_shares_outstanding\n\n    # return answer\n    return new_earnings_per_share\n```"
        ]
    },
    {
        "tables": [
            "|      | Adesivo | Enviado | Gesticular |\n|------|---------|---------|------------|\n| Stock's current price | 14.72 | 72.20 | 132.16 |\n| Diluted EPS (last four quarters) | 0.81 | 2.92 | -0.05 |\n| Diluted EPS (next four quarters) | 0.91 | 3.10 | 2.85 |\n| Dividend rate (annualized most recent dividend) | 0.44 | 1.24 | 0.00 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-19",
        "python_solution": "",
        "ground_truth": null,
        "question": "Pinho instructs Martins to utilize a valuation metric to facilitate a comprehensive evaluation of the relative share value of the three corporations. The essential financial data for these businesses are shown in Exhibit 1. For Adesivo, Martins examines the base trailing EPS. With a basic trailing EPS of R$0.84, he found a note in the financial reports of Adesivo stating that\u201cOn a per share basis, Adesivo incurred in the last four quartersi. from a lawsuit, a non-recurring gain of R$0.04; andii. Based on Exhibit 1 and Adesivo\u2019s financial reports, what is the trailing P/E for Adesivo using the base EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_price_adesivo = 14.72\n    diluted_eps_last_four_quarters_adesivo = 0.81\n    non_recurring_gain = 0.04\n    \n    # Adjust the base EPS by subtracting the non-recurring gain\n    base_eps_adesivo = diluted_eps_last_four_quarters_adesivo - non_recurring_gain\n    \n    # Do math calculation to get the trailing P/E ratio\n    trailing_pe_ratio = stock_price_adesivo / base_eps_adesivo\n    \n    # return answer\n    return trailing_pe_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-20",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investor bought 200 stocks of a company that doesn't pay dividends on margin for a price of $50 each. The leverage ratio stands at 2.5. Half a year later, the investor offloads these stocks at $60 apiece. Disregarding the interest accrued on the borrowed sum and the transaction costs, what was the investor's return over the half-year period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 50\n    final_price = 60\n    num_stocks = 200\n    leverage_ratio = 2.5\n    \n    # Calculate the total investment and the borrowed amount\n    total_investment = initial_price * num_stocks\n    borrowed_amount = total_investment * (leverage_ratio - 1) / leverage_ratio\n    own_amount = total_investment - borrowed_amount\n    \n    # Calculate the final value of the investment\n    final_value = final_price * num_stocks\n    \n    # Calculate the profit\n    profit = final_value - total_investment\n    \n    # Calculate the return on the investor's own amount\n    return_on_own_amount = profit / own_amount\n    \n    # return answer\n    return return_on_own_amount\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| BVPS  | $28.25  |\n| ROE  | 14.5%  |\n| Constant long-term growth  | 5.5%  |\n| Cost of equity  | 10.9%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-21",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is assessing the value of Corporation Z using the single-stage residual income model and has compiled pertinent data in the listed table. What is the justified price-to-book ratio for Corporation Z?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ROE = 0.145\n    g = 0.055\n    r = 0.109\n    \n    # Do math calculation to get the answer\n    # The formula for justified price-to-book ratio in a single-stage residual income model is:\n    # P/B = (ROE - g) / (r - g)\n    P_B = (ROE - g) / (r - g)\n    \n    # return answer\n    return P_B\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-22",
        "python_solution": "",
        "ground_truth": null,
        "question": "An employee at a capital management firm, Jonathan, is given the task to determine the gain in 6 months on a transaction of $2,000,000 vega notional of a one-year variance swap on the S&P 500 at a 20% strike (expressed as annual volatility). After a period of six months, the S&P 500 shows a realized volatility of 16%, while the fair strike of a fresh 6-month variance swap on the S&P 500 is now 18%. The yearly interest rate is 2.00%. What is the updated value of the variance swap?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_notional = 2000000  # vega notional in USD\n    initial_strike = 0.20  # 20% annual volatility\n    realized_volatility = 0.16  # 16% annual volatility after 6 months\n    fair_strike_6months = 0.18  # 18% annual volatility for a fresh 6-month variance swap\n    yearly_interest_rate = 0.02  # 2.00% annual interest rate\n    time_to_maturity = 0.5  # 6 months remaining\n\n    # Convert annual volatilities to variances\n    initial_variance = initial_strike ** 2\n    realized_variance = realized_volatility ** 2\n    fair_variance_6months = fair_strike_6months ** 2\n\n    # Calculate the variance realized over the first 6 months\n    realized_variance_6months = realized_variance * 0.5  # since realized volatility is annual\n\n    # Calculate the variance expected for the next 6 months\n    expected_variance_next_6months = fair_variance_6months * 0.5  # since fair volatility is annual\n\n    # Calculate the total variance over the remaining period\n    total_variance_remaining = realized_variance_6months + expected_variance_next_6months\n\n    # Calculate the gain in variance\n    variance_gain = total_variance_remaining - initial_variance * time_to_maturity\n\n    # Calculate the gain in vega notional\n    vega_gain = initial_notional * variance_gain\n\n    # Discount the gain to present value\n    discount_factor = 1 / (1 + yearly_interest_rate * time_to_maturity)\n    present_value_gain = vega_gain * discount_factor\n\n    # return the updated value of the variance swap\n    return present_value_gain\n```\n\nThis Python program calculates the updated value of the variance swap after 6 months, taking into account the realized volatility, the fair strike of a fresh 6-month variance swap, and the yearly interest rate. The result is the present value of the gain in the variance"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-23",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a four-factor market model is being used for the return process of 100 companies, then what is the number of parameters that need to be estimated?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_companies = 100\n    num_factors = 4\n    \n    # Do math calculation to get the answer\n    # Each company has a constant term (alpha) and a coefficient for each factor (beta)\n    # Additionally, there is a variance term for the error of each company\n    num_parameters_per_company = 1 + num_factors + 1  # alpha + betas + variance\n    total_parameters = num_companies * num_parameters_per_company\n    \n    # return answer\n    return total_parameters\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-24",
        "python_solution": "",
        "ground_truth": null,
        "question": "A significant purchase has just been declared, aiming at corporation Y. The proposal from corporation X features an exchange offer with a ratio of 2. Directly following the declaration, corporation X and Y's prices are at $50 and $90, respectively. A hedge fund opts to take a long position in corporation Y, hedged with shares from X. Following the completion of the acquisition, the prices shift to $60 and $120. Therefore, the profit for each share from corporation Y is",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price_X = 50\n    initial_price_Y = 90\n    final_price_X = 60\n    final_price_Y = 120\n    exchange_ratio = 2\n    \n    # Do math calculation to get the answer\n    # Calculate the profit from each share of corporation Y\n    profit_per_share_Y = final_price_Y - initial_price_Y\n    \n    # Calculate the loss from each share of corporation X used for hedging\n    loss_per_share_X = (final_price_X - initial_price_X) * exchange_ratio\n    \n    # Net profit from the hedge strategy\n    net_profit_per_share_Y = profit_per_share_Y - loss_per_share_X\n    \n    # return answer\n    return net_profit_per_share_Y\n```\n\nThis program calculates the profit for each share from corporation Y by considering the initial and final prices of both corporations X and Y, along with the exchange ratio. It then computes the net profit after accounting for the hedging strategy using shares from corporation X."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-25",
        "python_solution": "",
        "ground_truth": null,
        "question": "Presuming the exercise price of a share option is $50, if the share undergoes a 2-to-1 split, what would be the fresh exercise price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    exercise_price = 50\n    split_ratio = 2 / 1\n    \n    # Do math calculation to get the answer\n    new_exercise_price = exercise_price / split_ratio\n    \n    # return answer\n    return new_exercise_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-26",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, Firm B had 10,000 shares and 1,000 outstanding warrants with an exercise price of $20/share. The average stock price was $25 over the course of that year. What was the net shares issued when computing the EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_outstanding = 10000\n    warrants_outstanding = 1000\n    exercise_price = 20\n    average_stock_price = 25\n    \n    # Do math calculation to get the answer\n    # Calculate the number of shares that would be issued if all warrants are exercised\n    shares_from_warrants = warrants_outstanding * (average_stock_price - exercise_price) / average_stock_price\n    \n    # Calculate the net shares issued\n    net_shares_issued = shares_from_warrants\n    \n    # return answer\n    return net_shares_issued\n```"
        ]
    },
    {
        "tables": [
            "| Year | Investment | Return |\n|------|------------|--------|\n| 1    | $500       | 12%    |\n| 2    | $600       | 5%     |\n| 3    | $1000      | 1%     |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-27",
        "python_solution": "",
        "ground_truth": null,
        "question": "The fund overseen by John displays the following returns in year1,2,3: What will be the time-weighted rate of return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investments = [500, 600, 1000]\n    returns = [0.12, 0.05, 0.01]\n    \n    # Initialize variables for calculation\n    cumulative_value = investments[0] * (1 + returns[0])\n    time_weighted_return = 1.0\n    \n    # Do math calculation to get the answer\n    for i in range(1, len(investments)):\n        period_return = (investments[i] * (1 + returns[i])) / cumulative_value\n        time_weighted_return *= period_return\n        cumulative_value = investments[i] * (1 + returns[i])\n    \n    time_weighted_return -= 1\n    \n    # return answer\n    return time_weighted_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-28",
        "python_solution": "",
        "ground_truth": null,
        "question": "On today's date, 5 June 2013, a semi-annual bond lasting three years that comes with a coupon rate of 6% just issued its initial coupon payment. The face value stands at 100. The due dates for interest payments are the 5th of April and the 5th of October. The bond's yield-to-maturity is equal to 5%. If the count convention is based on 30/360, figure out the accrued interest on this bond as of 5 June 2013.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    coupon_rate = 0.06\n    yield_to_maturity = 0.05\n    days_in_period = 180  # 30/360 convention, 6 months\n    days_since_last_payment = 60  # From 5th April to 5th June\n\n    # Do math calculation to get the answer\n    # Calculate the coupon payment per period\n    coupon_payment = face_value * coupon_rate / 2\n\n    # Calculate the accrued interest\n    accrued_interest = coupon_payment * (days_since_last_payment / days_in_period)\n\n    # return answer\n    return accrued_interest\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-29",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, Steel Production acquired a new machine for its production line at an expense of $600,000. The machine is expected to be useful for 10 years and has an approximate residual value of $50,000. Using the straight-line method, what amount of depreciation should Steel report in 2010 for financial accounting?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 600000\n    residual_value = 50000\n    useful_life = 10\n    \n    # Do math calculation to get the answer\n    annual_depreciation = (initial_cost - residual_value) / useful_life\n    \n    # return answer\n    return annual_depreciation\n```"
        ]
    },
    {
        "tables": [
            "| Asset | Annual Return | Volatility of Annual Return | Value |\n|-------|---------------|-----------------------------|-------|\n| A     | 10%           | 25%                         | 100   |\n| B     | 20%           | 20%                         | 50    |"
        ],
        "topic": "Risk Management",
        "question_id": "test-30",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there are 250 trading days in a year, how would the daily VaR at 99% level change if the financial institution sells $50 worth of asset A and purchases $50 worth of asset B, given that the institution's trading portfolio includes two assets with a Correlation (A, B) = 0.2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_return_A = 0.10\n    annual_return_B = 0.20\n    volatility_A = 0.25\n    volatility_B = 0.20\n    value_A = 100\n    value_B = 50\n    correlation_AB = 0.2\n    trading_days = 250\n    confidence_level = 0.01  # 99% confidence level\n\n    # Adjust the portfolio after selling $50 of A and buying $50 of B\n    value_A -= 50\n    value_B += 50\n\n    # Calculate the daily returns and volatilities\n    daily_return_A = annual_return_A / trading_days\n    daily_return_B = annual_return_B / trading_days\n    daily_volatility_A = volatility_A / (trading_days ** 0.5)\n    daily_volatility_B = volatility_B / (trading_days ** 0.5)\n\n    # Calculate the portfolio weights\n    total_value = value_A + value_B\n    weight_A = value_A / total_value\n    weight_B = value_B / total_value\n\n    # Calculate the portfolio daily return and volatility\n    portfolio_daily_return = weight_A * daily_return_A + weight_B * daily_return_B\n    portfolio_daily_volatility = (weight_A ** 2 * daily_volatility_A ** 2 + \n                                  weight_B ** 2 * daily_volatility_B ** 2 + \n                                  2 * weight_A * weight_B * daily_volatility_A * daily_volatility_B * correlation_AB) ** 0.5\n\n    # Calculate the daily VaR at 99% level\n    z_score = abs(np.random.normal(0, 1, 1000000).quantile(confidence_level))  # Approximation for z-score at 99%\n    daily_VaR = z_score * portfolio_daily_volatility\n\n    # return answer\n    return"
        ]
    },
    {
        "tables": [
            "|Maturity(years)|STRIPS Price|Spot Rate|Forward Rate|\n|---|---|---|---|\n|0.5|98.7654|2.50%|2.50%|\n|1.0|97.0662|3.00%|3.50%|\n|1.5|95.2652|3.26%|3.78%|\n|2.0|93.2775|?.??%|?.??%|"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-31",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the chart, what is the worth of a 1.5-year, 6% semiannual coupon, $100 face value bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    coupon_rate = 0.06\n    coupon_payment = face_value * coupon_rate / 2\n    spot_rates = [0.025, 0.03, 0.0326]\n    prices = [98.7654, 97.0662, 95.2652]\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of each cash flow\n    pv_coupon1 = coupon_payment / (1 + spot_rates[0] / 2)\n    pv_coupon2 = coupon_payment / ((1 + spot_rates[1] / 2) ** 2)\n    pv_coupon3 = (coupon_payment + face_value) / ((1 + spot_rates[2] / 2) ** 3)\n    \n    # Sum the present values to get the bond's worth\n    bond_worth = pv_coupon1 + pv_coupon2 + pv_coupon3\n    \n    # return answer\n    return bond_worth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-32",
        "python_solution": "",
        "ground_truth": null,
        "question": "The hedge fund known as Sovereign Wealth starts out with an initial capital of $300 million. They levy a 1% management fee anchored on year-end asset value and a 20% incentive fee that applies when returns surpass an 8% hurdle rate. Considering that Sovereign Wealth's first-year appreciation rate stands at 10% and its management fees are predicated on valuation at period's end, what will be the net return for the investor, provided the performance fee is computed after subtracting the management fee?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_capital = 300000000  # $300 million\n    management_fee_rate = 0.01  # 1% management fee\n    incentive_fee_rate = 0.20  # 20% incentive fee\n    hurdle_rate = 0.08  # 8% hurdle rate\n    appreciation_rate = 0.10  # 10% first-year appreciation rate\n\n    # Calculate year-end asset value\n    year_end_asset_value = initial_capital * (1 + appreciation_rate)\n\n    # Calculate management fee\n    management_fee = year_end_asset_value * management_fee_rate\n\n    # Calculate the amount above the hurdle rate\n    amount_above_hurdle = year_end_asset_value - (initial_capital * (1 + hurdle_rate))\n\n    # Calculate incentive fee\n    incentive_fee = amount_above_hurdle * incentive_fee_rate\n\n    # Calculate net return for the investor\n    net_return = year_end_asset_value - management_fee - incentive_fee - initial_capital\n\n    # Calculate net return percentage\n    net_return_percentage = (net_return / initial_capital) * 100\n\n    # return answer\n    return net_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Asset class | Portfolio Weight(%) | Benchmark Weight(%) | Portfolio Return(%) | Benchmark Return(%) |\n| ----------- | ------------------ | ------------------- | ------------------- | ------------------ |\n| Domestic equities | 55 | 40 | 10 | 8 |\n| International equities | 20 | 30 | 10 | 9 |\n| Bonds | 25 | 30 | 5 | 6 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-33",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the asset class returns for the 2016 financial year, what is the value added or active return for the supervised investment portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_weights = [55, 20, 25]\n    benchmark_weights = [40, 30, 30]\n    portfolio_returns = [10, 10, 5]\n    benchmark_returns = [8, 9, 6]\n    \n    # Do math calculation to get the answer\n    active_returns = [(p_ret - b_ret) * (p_weight / 100) for p_ret, b_ret, p_weight in zip(portfolio_returns, benchmark_returns, portfolio_weights)]\n    value_added = sum(active_returns)\n    \n    # return answer\n    return value_added\n```"
        ]
    },
    {
        "tables": [
            "| Exhibit 4.Arch way's 2015 Forecasted Price and Volume Changes ||\n| --- | --- |\n| Average price increase per unit | 5.00% |\n| Volume growth | -3.00% |"
        ],
        "topic": "Accounting",
        "question_id": "test-34",
        "python_solution": "",
        "ground_truth": null,
        "question": "French indicates that for the recently concluded year (2014), the cost of goods sold by Bridgeport was 30% of sales. When projecting Bridgeport's income statement for 2015, French assumes that all firms in the industry will encounter an inflation rate of 8% on the cost of goods sold. Exhibit 4 presents French\u2019s predictions about Bridgeport\u2019s price and volume variations. According to Exhibit 4, what is Bridgeport\u2019s anticipated gross profit margin for 2015?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold_as_percentage_of_sales_2014 = 0.30\n    inflation_rate_2015 = 0.08\n    average_price_increase_per_unit_2015 = 0.05\n    volume_growth_2015 = -0.03\n\n    # Do math calculation to get the answer\n    # Calculate the new cost of goods sold as a percentage of sales for 2015\n    cost_of_goods_sold_as_percentage_of_sales_2015 = cost_of_goods_sold_as_percentage_of_sales_2014 * (1 + inflation_rate_2015)\n    \n    # Calculate the new sales percentage for 2015 considering both price increase and volume decrease\n    sales_percentage_2015 = (1 + average_price_increase_per_unit_2015) * (1 + volume_growth_2015)\n    \n    # Calculate the gross profit margin for 2015\n    gross_profit_margin_2015 = 1 - (cost_of_goods_sold_as_percentage_of_sales_2015 / sales_percentage_2015)\n    \n    # return answer\n    return gross_profit_margin_2015\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-35",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a periodic inventory system, what was the cost of sales in 2008 (\u20ac thousands) for Nutmeg Enterprises, which launched in 2007 and employs the weighted average cost method? During its first year, the company bought 45,000 units of inventory for \u20ac10 each and sold 40,000 units for \u20ac20 each. The following year, it acquired an additional 50,000 units at \u20ac11 each and sold 45,000 units for \u20ac22 each.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    units_bought_2007 = 45000\n    cost_per_unit_2007 = 10\n    units_sold_2007 = 40000\n    \n    units_bought_2008 = 50000\n    cost_per_unit_2008 = 11\n    units_sold_2008 = 45000\n    \n    # Calculate the weighted average cost for 2008\n    total_units_2008 = units_bought_2007 + units_bought_2008\n    total_cost_2008 = (units_bought_2007 * cost_per_unit_2007) + (units_bought_2008 * cost_per_unit_2008)\n    weighted_avg_cost_2008 = total_cost_2008 / total_units_2008\n    \n    # Calculate the cost of sales for 2008\n    cost_of_sales_2008 = units_sold_2008 * weighted_avg_cost_2008\n    \n    # return answer\n    return cost_of_sales_2008\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-36",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a security is valued at 88.692 per 100 of par value, and the security's complete price decreases to 88.642 if the yield-to-maturity rises by 10 basis points and increases to 88.762 if the yield-to-maturity is reduced by 10 basis points, what is the approximate convexity of the security?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P0 = 88.692  # Initial price per 100 of par value\n    P_plus = 88.642  # Price when yield increases by 10 basis points\n    P_minus = 88.762  # Price when yield decreases by 10 basis points\n    delta_y = 0.001  # Change in yield (10 basis points as a decimal)\n\n    # Do math calculation to get the answer\n    # Convexity formula: (P_plus + P_minus - 2*P0) / (P0 * (delta_y ** 2))\n    convexity = (P_plus + P_minus - 2 * P0) / (P0 * (delta_y ** 2))\n\n    # return answer\n    return convexity\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-37",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of 2013, company N released bonds with a face value of $2,000,000 that would mature in 5 years. With the market interest rate being 7%, the bonds will provide an 8% coupon payment every 31st December. What would be the interest expenditure according to the effective interest rate method on the 31st December 2013?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 2000000\n    market_interest_rate = 0.07\n    coupon_rate = 0.08\n    years = 5\n    periods = 1  # since the coupon payment is annual\n\n    # Calculate the present value of the bond using the market interest rate\n    present_value = face_value / (1 + market_interest_rate) ** years\n\n    # Calculate the interest expenditure for the first period using the effective interest rate method\n    interest_expenditure = present_value * market_interest_rate\n\n    # return answer\n    return interest_expenditure\n```\n\nThis program calculates the interest expenditure for the first period (31st December 2013) using the effective interest rate method. It first calculates the present value of the bond using the market interest rate and then computes the interest expenditure based on this present value and the market interest rate."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-38",
        "python_solution": "",
        "ground_truth": null,
        "question": "If at the start of the year, Alpine Peak Investments, a hedge fund, had a portfolio valued at $475,000,000, which increased to $541,500,000 after a year, what would be the efficient yield for an investor? This is keeping in mind that the hedge fund levies a 1.5% management fee on the final portfolio value and a 10% incentive fee that are calculated separately.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_portfolio_value = 475000000\n    final_portfolio_value = 541500000\n    management_fee_rate = 0.015\n    incentive_fee_rate = 0.10\n\n    # Calculate the gross return\n    gross_return = final_portfolio_value - initial_portfolio_value\n\n    # Calculate the management fee\n    management_fee = final_portfolio_value * management_fee_rate\n\n    # Calculate the net return after management fee\n    net_return_after_management_fee = gross_return - management_fee\n\n    # Calculate the incentive fee\n    incentive_fee = net_return_after_management_fee * incentive_fee_rate\n\n    # Calculate the net return after incentive fee\n    net_return_after_incentive_fee = net_return_after_management_fee - incentive_fee\n\n    # Calculate the efficient yield\n    efficient_yield = (net_return_after_incentive_fee / initial_portfolio_value) * 100\n\n    # return answer\n    return efficient_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-39",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a daily compounded annual interest rate of 2.5%, how long would it take for Alex, who currently has an investment of $1 million, to save up to his required retirement goal of $2million for his everyday costs?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 1000000\n    target_amount = 2000000\n    annual_interest_rate = 0.025\n    \n    # Do math calculation to get the answer\n    # Using the formula for compound interest: A = P(1 + r/n)^(nt)\n    # Here, A is the amount after time t, P is the principal amount, r is the annual interest rate, n is the number of times interest is compounded per year, and t is the time in years.\n    # Since it's compounded daily, n = 365\n    # We need to find t such that A = target_amount\n    \n    # Rearrange the formula to solve for t: t = log(A/P) / (n * log(1 + r/n))\n    import math\n    t = math.log(target_amount / initial_investment) / (365 * math.log(1 + annual_interest_rate / 365))\n    \n    # return answer\n    return t\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-40",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financial expert predicts that a share may have a $2 dividend next year and could be sold for $38 by the end of next year. What would the share's value be if the required rate of return is 20%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend = 2\n    future_price = 38\n    required_rate_of_return = 0.20\n    \n    # Do math calculation to get the answer\n    present_value = (dividend + future_price) / (1 + required_rate_of_return)\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-41",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business is pondering on the idea of transitioning from a completely equity-based capital structure to a capital structure comprising of equal parts of equity and debt, keeping assets constant. This alteration would decrease the net income by 30%. If the present return on equity (ROE) is 10%, what would the ROE be with the suggested capital structure?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_ROE = 10  # Present return on equity (ROE) in percentage\n    net_income_decrease = 30  # Decrease in net income in percentage\n    \n    # Do math calculation to get the answer\n    new_ROE = current_ROE * (1 - net_income_decrease / 100)\n    \n    # return answer\n    return new_ROE\n```"
        ]
    },
    {
        "tables": [
            "|                     | Value  |\n|---------------------|--------|\n| Initial Value       | 87.1876|\n| 2-year shift for 1bp| 87.3212|\n| 5-year shift for 1bp| 87.2545|\n| 10-year shift for 1bp|87.1454|\n| 30-year shift for 1bp|87.3454|"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-42",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given table, what is the key rate duration for a shift of 10 years for a zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_value = 87.1876\n    shift_10_year_1bp = 87.1454\n    \n    # Do math calculation to get the answer\n    key_rate_duration_10_year = (shift_10_year_1bp - initial_value) / (initial_value * 0.0001)\n    \n    # return answer\n    return key_rate_duration_10_year\n```"
        ]
    },
    {
        "tables": [
            "| X   | 0   | 1   | 2   | 3   | 4   | 5   | 6   | 7   |\n|-----|-----|-----|-----|-----|-----|-----|-----|-----|\n| P(X)| 0.14| 0.09| 0.19| 0.25| 0.17| 0.06| 0.03| 0.07|\n\nNote: A discrete random variable X follows the probability distribution as given in the table above."
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-43",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided data, what is the value of P(3\u2264X\u22646)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = {\n        0: 0.14,\n        1: 0.09,\n        2: 0.19,\n        3: 0.25,\n        4: 0.17,\n        5: 0.06,\n        6: 0.03,\n        7: 0.07\n    }\n    \n    # Do math calculation to get the answer\n    answer = sum(probabilities[i] for i in range(3, 7))\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| company | Share price | Call premium | Strike price |\n|---------|-------------|--------------|--------------|\n| NZT     | 53.37       | 1.62         | 58           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-44",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data in Exhibit 1, if Michael is planning to implement a covered call strategy, what would be the breakeven share price for this strategy? Exhibit 1: Share Price and Option Premiums (share prices and option premiums in $)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    share_price = 53.37\n    call_premium = 1.62\n    strike_price = 58\n    \n    # Do math calculation to get the answer\n    # For a covered call strategy, the breakeven share price is the current share price minus the call premium\n    breakeven_share_price = share_price - call_premium\n    \n    # return answer\n    return breakeven_share_price\n```"
        ]
    },
    {
        "tables": [
            "| Acquisition cost                                       | \u20ac2,300,000           |\n|-------------------------------------------------------|----------------------|\n| Acquisition date                                      | 1 January 2008       |\n| Expected residual value at time of acquisition        | \u20ac500,000             |\n| The customer list is expected to result in extra sales for three years after acquisition. The present value of these expected extra sales exceeds the cost of the list. | |"
        ],
        "topic": "Accounting",
        "question_id": "test-45",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an analyst in the finance team of a French company, PLECCO Inc., calculates the amortization of a client list, an intangible asset, for the fiscal year concluded 31 December 2009 using the straight-line method, what would be the sum of accumulated amortization associated with the client list as of 31 December 2009, based on the data she has collected about the asset?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 2300000\n    residual_value = 500000\n    useful_life = 3  # years\n    acquisition_date = '1 January 2008'\n    fiscal_year_end = '31 December 2009'\n    \n    # Calculate the amortization per year using the straight-line method\n    annual_amortization = (acquisition_cost - residual_value) / useful_life\n    \n    # Calculate the number of years from acquisition to fiscal year end\n    # Acquisition date is 1 January 2008, fiscal year end is 31 December 2009\n    # This means the asset has been in use for 2 full years (2008 and 2009)\n    years_in_use = 2\n    \n    # Calculate the accumulated amortization as of 31 December 2009\n    accumulated_amortization = annual_amortization * years_in_use\n    \n    # return answer\n    return accumulated_amortization\n```"
        ]
    },
    {
        "tables": [
            "|                   | 2017($) | 2018($) |\n|-------------------|---------|---------|\n| net income        | 320,000 | 360,000 |\n| accounts receivable | 23,000  | 25,000  |\n| accounts payable  | 31,000  | 35,000  |\n| depreciation      | 7,000   | 7,000   |"
        ],
        "topic": "Accounting",
        "question_id": "test-46",
        "python_solution": "",
        "ground_truth": null,
        "question": "Can you compute the operational cash flow for the year 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income_2018 = 360000\n    accounts_receivable_2017 = 23000\n    accounts_receivable_2018 = 25000\n    accounts_payable_2017 = 31000\n    accounts_payable_2018 = 35000\n    depreciation_2018 = 7000\n    \n    # Do math calculation to get the answer\n    # Adjust net income for changes in working capital and add back depreciation\n    change_in_accounts_receivable = accounts_receivable_2018 - accounts_receivable_2017\n    change_in_accounts_payable = accounts_payable_2018 - accounts_payable_2017\n    \n    operational_cash_flow = net_income_2018 - change_in_accounts_receivable + change_in_accounts_payable + depreciation_2018\n    \n    # return answer\n    return operational_cash_flow\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-47",
        "python_solution": "",
        "ground_truth": null,
        "question": "An agriculturist intends to sell 50,000 tons of soybeans in six months and opts to short futures contracts to protect against a decrease in price. The present price of soybeans is $508/ton, the contract size is 100 tons, with a soybean storage cost of 1.5% annually. The exponentially compounded rate is 5%, what's the cost of the futures contract?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_price = 508  # in dollars per ton\n    contract_size = 100  # in tons\n    storage_cost_annual = 0.015  # 1.5% annually\n    compounded_rate = 0.05  # 5% exponentially compounded rate\n    time_to_maturity = 0.5  # 6 months, which is 0.5 years\n\n    # Calculate the storage cost for the period\n    storage_cost_period = storage_cost_annual * time_to_maturity\n\n    # Calculate the future value of the soybeans including storage cost\n    future_value = present_price * (1 + storage_cost_period)\n\n    # Calculate the present value of the future price using the compounded rate\n    present_value_future_price = future_value / ((1 + compounded_rate) ** time_to_maturity)\n\n    # Calculate the cost of the futures contract\n    cost_of_futures_contract = present_value_future_price * contract_size\n\n    # return answer\n    return cost_of_futures_contract\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-48",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the effective annual rate (EAR) if the declared yearly interest rate is 20% and the compounding occurs on a monthly basis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    declared_yearly_interest_rate = 0.20  # 20% as a decimal\n    compounding_frequency = 12  # Monthly compounding\n    \n    # Do math calculation to get the answer\n    effective_annual_rate = (1 + declared_yearly_interest_rate / compounding_frequency) ** compounding_frequency - 1\n    \n    # return answer\n    return effective_annual_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-49",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the correlation coefficient of the returns of XYZ company and the overall market, given that the covariance of the returns is 0.009, the standard deviation of the overall market returns is 0.08, and the standard deviation of XYZ's returns is 0.15?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    covariance = 0.009\n    std_dev_market = 0.08\n    std_dev_xyz = 0.15\n    \n    # Do math calculation to get the answer\n    correlation_coefficient = covariance / (std_dev_market * std_dev_xyz)\n    \n    # return answer\n    return correlation_coefficient\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-50",
        "python_solution": "",
        "ground_truth": null,
        "question": "The trader, Michael, is preparing to establish a regression hedge. He plans to sell a Treasury bond worth $500,000 and buy TIPS as a hedge. Based on past data, the DV01on the T-bond is 0.085, the DV01on the TIPS is 0.063, and the regression beta coefficient (hedge adjustment factor) is 1.1. How much TIPS should Michael acquire?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    t_bond_value = 500000\n    dv01_t_bond = 0.085\n    dv01_tips = 0.063\n    hedge_adjustment_factor = 1.1\n    \n    # Do math calculation to get the answer\n    # Calculate the required DV01 of TIPS to hedge the T-bond\n    required_dv01_tips = dv01_t_bond * t_bond_value * hedge_adjustment_factor\n    \n    # Calculate the amount of TIPS to acquire\n    amount_tips = required_dv01_tips / dv01_tips\n    \n    # return answer\n    return amount_tips\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-51",
        "python_solution": "",
        "ground_truth": null,
        "question": "Over the previous 36 months, the standard deviation of monthly returns within a fund's portfolio was recorded at 4.9%. What is the test statistic value to verify an assertion that this fund's investment approach results in a standard deviation of monthly returns of less than 5.0%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_std_dev = 4.9  # Sample standard deviation in percentage\n    hypothesized_std_dev = 5.0  # Hypothesized population standard deviation in percentage\n    sample_size = 36  # Number of months\n    \n    # Do math calculation to get the answer\n    # The test statistic for chi-square test for variance is given by:\n    # (n-1) * s^2 / sigma^2\n    # where n is the sample size, s is the sample standard deviation, and sigma is the hypothesized population standard deviation\n    test_statistic = ((sample_size - 1) * sample_std_dev**2) / hypothesized_std_dev**2\n    \n    # return answer\n    return test_statistic\n```"
        ]
    },
    {
        "tables": [
            "|         | November 2010 |       | December 2010 |       |\n|---------|---------------|-------|---------------|-------|\n| Goods   | Quantity      | Price | Quantity      | Price |\n| Sugar   | 70kg          | \u00a30.90/kg  | 120kg         | \u00a31.00/kg  |\n| Cotton  | 60kg          | \u20ac0.60/kg  | 50kg          | \u20ac0.80/kg  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-52",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we set the base period for 2010's consumption to be November and the starting price index at 100, what would be the inflation rate after determining the December price index as a Laspeyres index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sugar_nov_qty = 70\n    sugar_nov_price = 0.90\n    sugar_dec_qty = 120\n    sugar_dec_price = 1.00\n    \n    cotton_nov_qty = 60\n    cotton_nov_price = 0.60\n    cotton_dec_qty = 50\n    cotton_dec_price = 0.80\n    \n    base_index = 100\n    \n    # Do math calculation to get the answer\n    # Calculate the Laspeyres index for December using November quantities\n    dec_index = ((sugar_nov_qty * sugar_dec_price) + (cotton_nov_qty * cotton_dec_price)) / ((sugar_nov_qty * sugar_nov_price) + (cotton_nov_qty * cotton_nov_price)) * base_index\n    \n    # Calculate the inflation rate\n    inflation_rate = (dec_index - base_index) / base_index * 100\n    \n    # return answer\n    return inflation_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-53",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is interested in forecasting the earnings of his manufacturing plant in October 20X9, thus he employs income data from January 20X6 to September 20X9 as samples to create a AR(1) model, achieving the following outcome: Xt=293.5742+0.9387Xt\u22121X_t=293.5742+0.9387X_{t-1}Xt\u200b=293.5742+0.9387Xt\u22121\u200b Can you determine the long-term average?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    constant_term = 293.5742\n    coefficient = 0.9387\n    \n    # Do math calculation to get the answer\n    # For an AR(1) model, the long-term average (steady state) can be found by setting Xt = Xt-1 = LTA\n    # LTA = constant_term / (1 - coefficient)\n    long_term_average = constant_term / (1 - coefficient)\n    \n    # return answer\n    return long_term_average\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| 1. | Purchased a customer list for $100,000, which is expected to provide equal annual benefits for the next 4 years. |\n| 2. | Recorded $200,000 of goodwill in the acquisition of a competitor. It is estimated that the acquisition would provide substantial benefits for the company for at least the next 10 years. |\n| 3. | Spent $300,000 on media placements announcing the company had donated products and services to the community. The CEO believes the firm's reputation was enhanced substantially and the company will likely benefit from it for the next 5 years. |"
        ],
        "topic": "Accounting",
        "question_id": "test-54",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2010, certain incidents took place at a corporation. Given those incidents, what should be the corporation's documented amortization expense in 2011?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    customer_list_cost = 100000\n    customer_list_years = 4\n    goodwill_cost = 200000\n    goodwill_years = 10\n    media_placement_cost = 300000\n    media_placement_years = 5\n    \n    # Do math calculation to get the answer\n    customer_list_amortization = customer_list_cost / customer_list_years\n    goodwill_amortization = goodwill_cost / goodwill_years\n    media_placement_amortization = media_placement_cost / media_placement_years\n    \n    total_amortization_expense = customer_list_amortization + goodwill_amortization + media_placement_amortization\n    \n    # return answer\n    return total_amortization_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-55",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier is considering a property valued at $2.5 million. To purchase this property, he needs to pay up front 25% of the total cost and the remaining amount is to be financed at 10%, compounded monthly for a duration of 25 years. Determine the monthly mortgage payment for this scenario.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    property_value = 2500000\n    down_payment_percentage = 0.25\n    interest_rate = 0.10\n    loan_duration_years = 25\n    months_per_year = 12\n\n    # Calculate the down payment and the loan amount\n    down_payment = property_value * down_payment_percentage\n    loan_amount = property_value - down_payment\n\n    # Convert annual interest rate to monthly and loan duration to months\n    monthly_interest_rate = interest_rate / months_per_year\n    total_months = loan_duration_years * months_per_year\n\n    # Calculate the monthly mortgage payment using the formula for a fixed-rate mortgage\n    numerator = loan_amount * (monthly_interest_rate * (1 + monthly_interest_rate) ** total_months)\n    denominator = ((1 + monthly_interest_rate) ** total_months) - 1\n    monthly_payment = numerator / denominator\n\n    # return answer\n    return monthly_payment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-56",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a reversed head and shoulders formation, if the collar is at \u20ac100, the shoulders are priced at \u20ac90, and the head is at \u20ac75. What is the intended price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    collar_price = 100\n    shoulder_price = 90\n    head_price = 75\n    \n    # Do math calculation to get the answer\n    # The intended price is typically the price of the collar in a reversed head and shoulders formation\n    intended_price = collar_price\n    \n    # return answer\n    return intended_price\n```"
        ]
    },
    {
        "tables": [
            "| Security | Security Weight(%) | Expected Standard Deviation(%) |\n|----------|--------------------|--------------------------------|\n| Equity   | 40                 | 30                             |\n| Bond     | 60                 | 15                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-57",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the covariance between stocks and bonds is 0.058, what is the projected standard deviation of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_equity = 0.40\n    weight_bond = 0.60\n    std_dev_equity = 0.30\n    std_dev_bond = 0.15\n    covariance_equity_bond = 0.058\n    \n    # Do math calculation to get the answer\n    # Calculate the variance of the portfolio\n    variance_portfolio = (weight_equity**2 * std_dev_equity**2) + (weight_bond**2 * std_dev_bond**2) + (2 * weight_equity * weight_bond * covariance_equity_bond)\n    \n    # Calculate the standard deviation of the portfolio\n    std_dev_portfolio = variance_portfolio**0.5\n    \n    # return answer\n    return std_dev_portfolio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-58",
        "python_solution": "",
        "ground_truth": null,
        "question": "During the same period last year, the stock price of Company H surged by 2.5 times its initial price. What was the continuously compounded return on the company's stock price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    final_price = 2.5  # The stock price surged by 2.5 times its initial price\n    initial_price = 1  # Assuming the initial price was 1 for simplicity\n    \n    # Do math calculation to get the answer\n    # The formula for continuously compounded return is ln(P_final / P_initial)\n    import math\n    continuously_compounded_return = math.log(final_price / initial_price)\n    \n    # return answer\n    return continuously_compounded_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-59",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a portfolio contains 80 assets, what should be the estimated number of covariances?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    number_of_assets = 80\n    \n    # Do math calculation to get the answer\n    # The number of covariances in a portfolio is given by the combination formula n(n-1)/2\n    number_of_covariances = number_of_assets * (number_of_assets - 1) / 2\n    \n    # return answer\n    return number_of_covariances\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-60",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the worth of a bond that has a face value of EUR 1,000, a three-year maturity period, and annually pays a 5% coupon? Please note the following spot rate curve: 1-year, 6%; 2-year, 7%; and 3-year, 8%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000\n    coupon_rate = 0.05\n    maturity = 3\n    spot_rates = [0.06, 0.07, 0.08]\n    \n    # Do math calculation to get the answer\n    bond_worth = 0\n    for year in range(1, maturity + 1):\n        if year < maturity:\n            coupon_payment = face_value * coupon_rate\n            bond_worth += coupon_payment / (1 + spot_rates[year - 1]) ** year\n        else:\n            final_payment = face_value + (face_value * coupon_rate)\n            bond_worth += final_payment / (1 + spot_rates[year - 1]) ** year\n    \n    # return answer\n    return bond_worth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-61",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the critical value at the 0.05 level of significance is 9.4877, when will Samantha, a data analyst, reject the null hypothesis while using a chi-square distributed test statistic to check the independence of two categorical variables?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    critical_value = 9.4877\n    \n    # Do math calculation to get the answer\n    # Samantha will reject the null hypothesis if the test statistic exceeds the critical value\n    answer = \"Samantha will reject the null hypothesis if the test statistic is greater than 9.4877.\"\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-62",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company has to choose two out of four executives to join the finance committee. What are the possible combinations of two that can be created?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    executives = ['A', 'B', 'C', 'D']\n    from itertools import combinations\n    \n    # Do math calculation to get the answer\n    possible_combinations = list(combinations(executives, 2))\n    \n    # return answer\n    return possible_combinations\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-63",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier is interested in establishing a bull call spread with the next options: a call option with a strike price of $35 that costs $12.65, and a call option with a strike price of $40 priced at $8.85. What is the maximum profit that can be made from this bull call spread?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    call_option_1_strike = 35\n    call_option_1_cost = 12.65\n    call_option_2_strike = 40\n    call_option_2_cost = 8.85\n    \n    # Do math calculation to get the answer\n    # Maximum profit is the difference in strike prices minus the net premium paid\n    max_profit = (call_option_2_strike - call_option_1_strike) - (call_option_1_cost - call_option_2_cost)\n    \n    # return answer\n    return max_profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-64",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert is trying to determine the worth of Sovereign Corporation's shares. The corporation has recently issued a dividend of $0.58 per share. The dividends are projected to increase by 20 percent in the coming year and 15 percent in the following year. From the third year onwards, the dividends are expected to rise at a rate of 5.6 percent per annum perpetually. If the necessary rate of return is 8.3 percent, what is the inherent value of the stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_year1 = 0.58\n    growth_rate_year1 = 0.20\n    growth_rate_year2 = 0.15\n    perpetual_growth_rate = 0.056\n    required_rate_of_return = 0.083\n\n    # Calculate dividends for the next three years\n    dividend_year2 = dividend_year1 * (1 + growth_rate_year1)\n    dividend_year3 = dividend_year2 * (1 + growth_rate_year2)\n    dividend_year4_onwards = dividend_year3 * (1 + perpetual_growth_rate)\n\n    # Calculate the present value of each dividend\n    pv_dividend_year1 = dividend_year1 / (1 + required_rate_of_return)\n    pv_dividend_year2 = dividend_year2 / (1 + required_rate_of_return)**2\n    pv_dividend_year3 = dividend_year3 / (1 + required_rate_of_return)**3\n\n    # Calculate the present value of the perpetual dividends from year 4 onwards\n    pv_perpetual = dividend_year4_onwards / (required_rate_of_return - perpetual_growth_rate) / (1 + required_rate_of_return)**3\n\n    # Sum the present values to get the inherent value of the stock\n    inherent_value = pv_dividend_year1 + pv_dividend_year2 + pv_dividend_year3 + pv_perpetual\n\n    # return answer\n    return inherent_value\n```"
        ]
    },
    {
        "tables": [
            "| Scenario | Probability of Scenario (%) | Amount Recovered ($) | Probability of Amount (%) |\n|----------|-----------------------------|----------------------|--------------------------|\n| 1        | 40                          | 50,000               | 60                       |\n| 1        | 40                          | 30,000               | 40                       |\n| 2        | 60                          | 80,000               | 90                       |\n| 2        | 60                          | 60,000               | 10                       |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-65",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the two scenarios proposed by a financial examiner, what is the anticipated recovery value from the principal of defaulted loans amounting to $100,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    scenario1_prob = 0.40\n    scenario1_amount1 = 50000\n    scenario1_amount1_prob = 0.60\n    scenario1_amount2 = 30000\n    scenario1_amount2_prob = 0.40\n    \n    scenario2_prob = 0.60\n    scenario2_amount1 = 80000\n    scenario2_amount1_prob = 0.90\n    scenario2_amount2 = 60000\n    scenario2_amount2_prob = 0.10\n    \n    # Do math calculation to get the answer\n    # Calculate expected value for each scenario\n    scenario1_expected_value = (scenario1_amount1 * scenario1_amount1_prob) + (scenario1_amount2 * scenario1_amount2_prob)\n    scenario2_expected_value = (scenario2_amount1 * scenario2_amount1_prob) + (scenario2_amount2 * scenario2_amount2_prob)\n    \n    # Calculate overall expected recovery value\n    overall_expected_value = (scenario1_expected_value * scenario1_prob) + (scenario2_expected_value * scenario2_prob)\n    \n    # return answer\n    return overall_expected_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-66",
        "python_solution": "",
        "ground_truth": null,
        "question": "What are the chances of stock A underperforming the market, given an analyst's discovery that it has a 60% probability of outdoing the market?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_outperforming_market = 0.60\n    \n    # Do math calculation to get the answer\n    probability_underperforming_market = 1 - probability_outperforming_market\n    \n    # return answer\n    return probability_underperforming_market\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-67",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bank that complies with the Basel I Accord issues a loan of $100 million to a company having a risk weight of 50%. What is the fundamental on-balance-sheet credit risk charge?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 100000000  # $100 million\n    risk_weight = 0.5  # 50%\n    capital_requirement = 0.08  # 8% as per Basel I Accord\n    \n    # Do math calculation to get the answer\n    credit_risk_charge = loan_amount * risk_weight * capital_requirement\n    \n    # return answer\n    return credit_risk_charge\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-68",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood that a portfolio with an expected mean return of 8 percent and a standard deviation of 14 percent will have a return between 8 and 11 percent?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean_return = 8\n    std_deviation = 14\n    lower_bound = 8\n    upper_bound = 11\n    \n    # Import necessary library\n    from scipy.stats import norm\n    \n    # Calculate z-scores for the lower and upper bounds\n    z_lower = (lower_bound - mean_return) / std_deviation\n    z_upper = (upper_bound - mean_return) / std_deviation\n    \n    # Calculate the probability using the cumulative distribution function (CDF)\n    probability_lower = norm.cdf(z_lower)\n    probability_upper = norm.cdf(z_upper)\n    \n    # Calculate the likelihood of the return being between 8 and 11 percent\n    likelihood = probability_upper - probability_lower\n    \n    # return answer\n    return likelihood\n```\n\nThis program calculates the likelihood that a portfolio with an expected mean return of 8 percent and a standard deviation of 14 percent will have a return between 8 and 11 percent by using the normal distribution and the cumulative distribution function (CDF) from the `scipy.stats` module."
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-69",
        "python_solution": "",
        "ground_truth": null,
        "question": "Calculate Jensen's alpha measure for portfolio named P, which has a beta of 0.7, an expected return of 12.8%, and an equity risk premium of 5.25%. The risk-free rate is 4.85%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beta_p = 0.7\n    expected_return_p = 0.128\n    equity_risk_premium = 0.0525\n    risk_free_rate = 0.0485\n    \n    # Do math calculation to get the answer\n    jensens_alpha = expected_return_p - (risk_free_rate + beta_p * equity_risk_premium)\n    \n    # return answer\n    return jensens_alpha\n```"
        ]
    },
    {
        "tables": [
            "| Expected Security Standard Deviation (%) | Beta |\n|------------------------------------------|------|\n| Security 1 25                            | 1.50 |\n| Security 2 15                            | 1.40 |\n| Security 3 20                            | 1.60 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-70",
        "python_solution": "",
        "ground_truth": null,
        "question": "In regards to the capital asset pricing model, if the anticipated return for Bond 2 is 11.4% and the risk-free rate is 3%, what would be the expected market return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_bond2 = 11.4  # Expected return for Bond 2 in percent\n    risk_free_rate = 3  # Risk-free rate in percent\n    beta_bond2 = 1.40  # Beta for Bond 2\n    \n    # Do math calculation to get the answer\n    # Using the Capital Asset Pricing Model (CAPM): Expected Return = Risk-Free Rate + Beta * (Market Return - Risk-Free Rate)\n    # We need to solve for Market Return (MR):\n    # MR = (Expected Return - Risk-Free Rate) / Beta + Risk-Free Rate\n    market_return = ((expected_return_bond2 - risk_free_rate) / beta_bond2) + risk_free_rate\n    \n    # return answer\n    return market_return\n```"
        ]
    },
    {
        "tables": [
            "|               | Global Equity | Global Bonds |\n|---------------|---------------|--------------|\n| Global Equity | 0.0225        | 0.0022       |\n| Global Bonds  | 0.0022        | 0.0025       |",
            "|           | Sensitivities |      | Residual Risk |\n|-----------|---------------|------|---------------|\n|           | Global Equity | Global Bonds |   |\n| Market 1  | 1.20          | 0.00 | 12.00%        |\n| Market 2  | 0.90          | 0.00 | 7.00%         |\n| Market 3  | 0.00          | 0.95 | 1.80%         |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-71",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the factor covariance matrix for global equity and global bonds presented by Schultz in Exhibit 1, along with market factor sensitivities and residual risk displayed in Exhibit 2, what is the covariance between Market 1 and Market 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cov_global_equity = 0.0225\n    cov_global_bonds = 0.0025\n    cov_equity_bonds = 0.0022\n    \n    sensitivity_market1_equity = 1.20\n    sensitivity_market1_bonds = 0.00\n    sensitivity_market2_equity = 0.90\n    sensitivity_market2_bonds = 0.00\n    \n    residual_risk_market1 = 0.12\n    residual_risk_market2 = 0.07\n    \n    # Do math calculation to get the answer\n    # Covariance between Market 1 and Market 2 due to global equity\n    cov_market1_market2_equity = sensitivity_market1_equity * sensitivity_market2_equity * cov_global_equity\n    \n    # Covariance between Market 1 and Market 2 due to global bonds\n    cov_market1_market2_bonds = sensitivity_market1_bonds * sensitivity_market2_bonds * cov_global_bonds\n    \n    # Covariance between Market 1 and Market 2 due to interaction between global equity and bonds\n    cov_market1_market2_equity_bonds = (sensitivity_market1_equity * sensitivity_market2_bonds * cov_equity_bonds) + (sensitivity_market1_bonds * sensitivity_market2_equity * cov_equity_bonds)\n    \n    # Total covariance between Market 1 and Market 2\n    cov_market1_market2 = cov_market1_market2_equity + cov_market1_market2_bonds + cov_market1_market2_equity_bonds\n    \n    # Adding residual risk (assuming independence of residual risks)\n    total_cov_market1_market2 = cov_market1_market2 + (residual_risk_market1 * residual_risk_market2)\n    \n    # return answer\n    return total_cov_market1_market2\n```\n\nThis Python program calculates the covariance between Market 1 and Market 2 based"
        ]
    },
    {
        "tables": [
            "| Company | Market Share (%) |\n|---------|-----------------|\n| Zeta    | 35              |\n| Yusef   | 25              |\n| Xenon   | 20              |\n| Waters  | 10              |\n| Vlastos | 10              |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-72",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the three-firm Herfindahl\u2013Hirschmann Index for the sector, taking into account the market share information collected for a sector consisting of five firms?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_shares = [35, 25, 20, 10, 10]\n    \n    # Calculate the three-firm Herfindahl\u2013Hirschmann Index\n    # The Herfindahl\u2013Hirschmann Index (HHI) is calculated by squaring the market share of each firm competing in the market and then summing the resulting numbers.\n    # For the three-firm HHI, we consider only the top three firms.\n    top_three_shares = market_shares[:3]\n    hhi = sum(share ** 2 for share in top_three_shares)\n    \n    # return answer\n    return hhi\n```"
        ]
    },
    {
        "tables": [
            "|            | as of 31 December |    |\n|------------|------------------|----|\n| Assets     | 2016             | 2017 |\n| Cash and cash equivalents | 5 | 15 |\n| Short-term marketable securities | 5 | 15 |\n| Trade and other receivables | 15 | 5 |\n| Other non-financial assets | 5 | 18 |\n| Tax assets | 5 | 2 |\n| Total current assets | 35 | 55 |",
            "|                       |  as of  31 December  |     |    \n| ---------------       | :--------------:     | :-----:|    \n|   Assets              | 2016                 |  2017  |      \n| Total non-current assets | 65             |  55 |\n| Total assets         | 100                 | 110  |  \n| Equity and Liabilities |  |  |\n| Total current liabilities | 35 | 28 |\n| Total non-current liabilities | 45 | 45 |\n| Total liabilities | 80 | 73 |\n| Total equity | 20 | 37 |\n| Equity and liabilities | 100 | 110 |"
        ],
        "topic": "Accounting",
        "question_id": "test-73",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the financial leverage ratio for Business B, according to the balance sheet below, as of 31 December 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 110\n    total_equity = 37\n    \n    # Do math calculation to get the answer\n    financial_leverage_ratio = total_assets / total_equity\n    \n    # return answer\n    return financial_leverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Par value | $100.00 |\n|---|---|\n| Annual coupon rate | 8% |\n| Coupon payment frequency | Semiannual |\n| Coupon payment dates | 15 May and 15 November |\n| Maturity date | 15 November 2017 |\n| Day count convention | Actual/Actual |\n| Annual  yield to maturity | 5.5% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-74",
        "python_solution": "",
        "ground_truth": null,
        "question": "The bonds of a corporation named Whakatane and Co. are scheduled for settlement on 15 July 2014 and have several distinct attributes. Given these details, can you identify the discrepancy between the full and flat prices?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100.00\n    annual_coupon_rate = 0.08\n    coupon_payment_frequency = 2  # Semiannual\n    annual_yield_to_maturity = 0.055\n    settlement_date = \"15 July 2014\"\n    next_coupon_date = \"15 November 2014\"\n    maturity_date = \"15 November 2017\"\n    day_count_convention = \"Actual/Actual\"\n\n    # Calculate the number of days between settlement and next coupon date\n    from datetime import datetime\n    settlement_date_obj = datetime.strptime(settlement_date, \"%d %B %Y\")\n    next_coupon_date_obj = datetime.strptime(next_coupon_date, \"%d %B %Y\")\n    days_to_next_coupon = (next_coupon_date_obj - settlement_date_obj).days\n\n    # Calculate the number of days in the coupon period\n    previous_coupon_date_obj = next_coupon_date_obj.replace(year=next_coupon_date_obj.year - 1)\n    days_in_coupon_period = (next_coupon_date_obj - previous_coupon_date_obj).days\n\n    # Calculate the accrued interest\n    accrued_interest = (days_to_next_coupon / days_in_coupon_period) * (par_value * annual_coupon_rate / coupon_payment_frequency)\n\n    # Calculate the full price (dirty price)\n    import numpy_financial as npf\n    cash_flows = [-par_value] + [par_value * annual_coupon_rate / coupon_payment_frequency] * (coupon_payment_frequency * 3 - 1) + [par_value + par_value * annual_coupon_rate / coupon_payment_frequency]\n    full_price = -npf.npv(annual_yield_to_maturity / coupon_payment_frequency, cash_flows)\n\n    # Calculate the flat price (clean price"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-75",
        "python_solution": "",
        "ground_truth": null,
        "question": "A spreadsheet containing 108 monthly returns for shares in Saraswoti Inc is owned by Kaleb Perkins. He designs a software program that applies bootstrap resampling to generate 200 resamples from this Saraswoti data through sampling with replacement. Each resample comprises of 108 data points. The software programmed by Perkins computes the average of each of the 200 resamples, then determines that the mean of these 200 resample means equals 0.0261. The program subtracts 0.0261 from each of the 200 resample means, squares each of these 200 differences, and totals up the squared differences, resulting in 0.835. An estimate of the standard error of the sample mean is then calculated by the program. What is the estimated standard error of the sample mean?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_squared_differences = 0.835\n    number_of_resamples = 200\n    \n    # Do math calculation to get the answer\n    estimated_standard_error = (total_squared_differences / (number_of_resamples - 1)) ** 0.5\n    \n    # return answer\n    return estimated_standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-76",
        "python_solution": "",
        "ground_truth": null,
        "question": "The financial institution formalized a $30 million credit facility agreement with Firm B, with an outstanding amount of $20 million. Firm B has minimal collateral, therefore, the financial institution estimated the probability of default to be 1% per annum. Because the collateral is industry-specific, the financial institution assigned a loss rate of 90%. What is the projected loss (EL) of the financial institution?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    outstanding_amount = 20000000  # in dollars\n    probability_of_default = 0.01  # 1% per annum\n    loss_rate = 0.90  # 90%\n    \n    # Do math calculation to get the answer\n    expected_loss = outstanding_amount * probability_of_default * loss_rate\n    \n    # return answer\n    return expected_loss\n```"
        ]
    },
    {
        "tables": [
            "|                   | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 |\n|-------------------|------|------|------|------|------|------|\n| Called Down       | 120  | 40   | 25   | 60   | 25   | 10   |\n| Realized Results  | 0    | 0    | 25   | 80   | 100  | 195  |\n| Unrealized Results| -15  | -35  | 35   | 25   | 35   | 60   |\n| Distributions     |      |      |      | 60   | 110  | 175  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-77",
        "python_solution": "",
        "ground_truth": null,
        "question": "Reviewing the latest annual report for Fund VI (displayed in Exhibit 1) to assess Yushan's previous performance, what is the DPI value that Madan determines for Fund VI, taking into account a fund worth \u00a3300 million from 2011, management costs of 2%, a 20% carried interest, a 7% hurdle rate, and a term of 2018 up to 31st December 2016?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_distributions = 175  # Sum of distributions from 2011 to 2016\n    fund_value = 300  # Initial fund value in million pounds\n    management_costs = 0.02  # 2% management costs\n    carried_interest = 0.20  # 20% carried interest\n    hurdle_rate = 0.07  # 7% hurdle rate\n    term_end_date = '31st December 2016'\n    \n    # Calculate the total amount called down\n    total_called_down = 120 + 40 + 25 + 60 + 25 + 10\n    \n    # Calculate the DPI (Distribution to Paid-In)\n    DPI = total_distributions / total_called_down\n    \n    # return answer\n    return DPI\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $2,600,000 |\n| --- | --- |\n| Net profit margin | 35% |\n| Depreciation on PP&E | 180,000 |\n| Increase in accounts receivable | 90,000 |\n| Decrease in accounts payable | 70,000 |\n| Increase in inventory | 500,000 |\n| Gain on sale of equipment | 20,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-78",
        "python_solution": "",
        "ground_truth": null,
        "question": "Provided the following: The cash flow from operations is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 2600000\n    net_profit_margin = 0.35\n    depreciation_on_ppe = 180000\n    increase_in_accounts_receivable = 90000\n    decrease_in_accounts_payable = 70000\n    increase_in_inventory = 500000\n    gain_on_sale_of_equipment = 20000\n    \n    # Calculate net profit\n    net_profit = revenue * net_profit_margin\n    \n    # Calculate cash flow from operations\n    cash_flow_from_operations = net_profit + depreciation_on_ppe - increase_in_accounts_receivable - decrease_in_accounts_payable - increase_in_inventory - gain_on_sale_of_equipment\n    \n    # return answer\n    return cash_flow_from_operations\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-79",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the annual discount rate is 4% and it's compounded yearly, what is the (PV5) present value of $50,000, received as a cash flow at the end of the 20th year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    future_value = 50000\n    discount_rate = 0.04\n    years = 20\n    \n    # Do math calculation to get the answer\n    present_value = future_value / ((1 + discount_rate) ** years)\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "| Years | Present Value Factor |\n|-------|---------------------|\n| 0.25  | 0.997506            |\n| 0.5   | 0.992556            |\n| 0.75  | 0.985222            |\n| 1     | 0.975610            |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-80",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the following information, the annualized fixed swap rate is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value_factors = {\n        0.25: 0.997506,\n        0.5: 0.992556,\n        0.75: 0.985222,\n        1: 0.975610\n    }\n    \n    # Do math calculation to get the answer\n    # The annualized fixed swap rate is calculated by taking the average of the present value factors\n    annualized_fixed_swap_rate = sum(present_value_factors.values()) / len(present_value_factors)\n    \n    # return answer\n    return annualized_fixed_swap_rate\n```\n\nThis program calculates the annualized fixed swap rate by averaging the present value factors provided in the table. The result is the average of the present value factors for the given time periods."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-81",
        "python_solution": "",
        "ground_truth": null,
        "question": "For the end of its fiscal year, Tangerine Inc. reported a net income of $200 million and an average of 50,000,000 common shares in circulation. There are 2,000,000 convertible preferred shares circulating that paid a yearly dividend of $5. Each preferred share can be converted into two common shares. What would be the diluted EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 200000000  # in dollars\n    avg_common_shares = 50000000  # in shares\n    convertible_preferred_shares = 2000000  # in shares\n    preferred_dividend = 5  # in dollars per share\n    conversion_ratio = 2  # number of common shares per preferred share\n\n    # Calculate the total dividend paid to preferred shareholders\n    total_preferred_dividend = convertible_preferred_shares * preferred_dividend\n\n    # Calculate the adjusted net income after subtracting the preferred dividends\n    adjusted_net_income = net_income - total_preferred_dividend\n\n    # Calculate the additional common shares if all preferred shares are converted\n    additional_common_shares = convertible_preferred_shares * conversion_ratio\n\n    # Calculate the total number of common shares after conversion\n    total_common_shares = avg_common_shares + additional_common_shares\n\n    # Calculate the diluted EPS\n    diluted_eps = adjusted_net_income / total_common_shares\n\n    # return answer\n    return diluted_eps\n```"
        ]
    },
    {
        "tables": [
            "| Security | Security Weight(%) | Expected Standard Deviation(%) |\n|---|---|---|\n| Equity | 40 | 30 |\n| Bond | 60 | 25 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-82",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the covariance of the two investments? Presuming the portfolio's standard deviation is 27%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_equity = 0.40\n    weight_bond = 0.60\n    std_dev_equity = 0.30\n    std_dev_bond = 0.25\n    portfolio_std_dev = 0.27\n\n    # Do math calculation to get the answer\n    # Using the formula for portfolio variance: \u03c3_p^2 = w_e^2 * \u03c3_e^2 + w_b^2 * \u03c3_b^2 + 2 * w_e * w_b * Cov(e, b)\n    # Rearrange to solve for Cov(e, b): Cov(e, b) = (\u03c3_p^2 - w_e^2 * \u03c3_e^2 - w_b^2 * \u03c3_b^2) / (2 * w_e * w_b)\n    portfolio_variance = portfolio_std_dev ** 2\n    variance_equity = std_dev_equity ** 2\n    variance_bond = std_dev_bond ** 2\n\n    covariance = (portfolio_variance - (weight_equity ** 2 * variance_equity) - (weight_bond ** 2 * variance_bond)) / (2 * weight_equity * weight_bond)\n\n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-83",
        "python_solution": "",
        "ground_truth": null,
        "question": "For the financial year-end, Everest Aqua Enterprises (EAE) announced a net profit of $12 million and an average of 2,000,000 ordinary shares circulating. The firm disbursed $800,000 as preferred dividends and there were 100,000 options with an average exercise price of $20 still to be exercised. Over the course of the year, EAE's average market price was $25 a share. What is EAE\u2019s diluted EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_profit = 12000000\n    preferred_dividends = 800000\n    ordinary_shares = 2000000\n    stock_options = 100000\n    exercise_price = 20\n    average_market_price = 25\n\n    # Calculate the net profit available to ordinary shareholders\n    net_profit_available = net_profit - preferred_dividends\n\n    # Calculate the number of shares that would be issued if options were exercised\n    shares_from_options = stock_options * (average_market_price - exercise_price) / average_market_price\n\n    # Calculate the total number of diluted shares\n    diluted_shares = ordinary_shares + shares_from_options\n\n    # Calculate the diluted EPS\n    diluted_eps = net_profit_available / diluted_shares\n\n    # return answer\n    return diluted_eps\n```"
        ]
    },
    {
        "tables": [
            "| S&P Rating | G-Spread | S&P Rating | G-Spread |\n|------------|----------|------------|----------|\n| AAA        | 0.30     | A          | 1.00     |\n| AA+        | 0.45     | A-         | 1.10     |\n| AA         | 0.60     | BBB+       | 1.30     |\n| AA-        | 0.70     | BBB        | 1.45     |\n| A+         | 0.85     | BBB-       | 1.60     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-84",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jones mentions that the shift of a firm's ratings can affect the overall return of a bond asset. For instance, he chooses a 10-year maturity, 5% coupon bond presently trading at par and rated A+ by Moody's. He requests Smith to compute the anticipated total return over a one-year term assuming the bond is demoted by two notches and to figure out why the year-end duration for the bond is 6.9. Assuming no modification in market conditions and a horizontal yield curve and utilizing Table 2, what is the projected yield on Jones' demo bond over a one-year span?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_rating = \"A+\"\n    initial_g_spread = 0.85  # From the table for A+ rating\n    demotion_notches = 2\n    current_yield = 5  # 5% coupon bond trading at par\n    year_end_duration = 6.9\n\n    # Determine the new rating after demotion\n    rating_scale = [\"AAA\", \"AA+\", \"AA\", \"AA-\", \"A+\", \"A\", \"A-\", \"BBB+\", \"BBB\", \"BBB-\"]\n    g_spreads = [0.30, 0.45, 0.60, 0.70, 0.85, 1.00, 1.10, 1.30, 1.45, 1.60]\n    \n    initial_index = rating_scale.index(initial_rating)\n    new_index = initial_index + demotion_notches\n    new_rating = rating_scale[new_index]\n    new_g_spread = g_spreads[new_index]\n\n    # Calculate the new yield\n    new_yield = current_yield + (new_g_spread - initial_g_spread)\n\n    # return answer\n    return new_yield\n```"
        ]
    },
    {
        "tables": [
            "| Year | Return(%) |\n|------|-----------|\n| 2015 | 5         |\n| 2016 | -8        |\n| 2017 | 10        |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-85",
        "python_solution": "",
        "ground_truth": null,
        "question": "What's the return on investment for a three-year holding period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = {2015: 5, 2016: -8, 2017: 10}\n    \n    # Do math calculation to get the answer\n    # Calculate the compounded return over the three-year period\n    initial_investment = 100  # Assuming an initial investment of 100 for simplicity\n    for year, return_percentage in returns.items():\n        initial_investment *= (1 + return_percentage / 100)\n    \n    # Calculate the total return percentage\n    total_return_percentage = (initial_investment - 100) / 100 * 100\n    \n    # return answer\n    return total_return_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-86",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier invested $500 million in a hedge fund with a \"2 and 20\" fee arrangement. The management fee is determined by the assets under management at the end of the year, and the incentive fee is based on an 8% hurdle rate. If the hedge fund appreciates by 20% at the end of the year, what is the net return if the incentive fee is calculated after the management fee?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 500000000  # $500 million\n    appreciation_rate = 0.20  # 20% appreciation\n    management_fee_rate = 0.02  # 2% management fee\n    incentive_fee_rate = 0.20  # 20% incentive fee\n    hurdle_rate = 0.08  # 8% hurdle rate\n\n    # Calculate the value of the hedge fund at the end of the year\n    end_of_year_value = initial_investment * (1 + appreciation_rate)\n\n    # Calculate the management fee\n    management_fee = end_of_year_value * management_fee_rate\n\n    # Calculate the profit after management fee\n    profit_after_management_fee = end_of_year_value - management_fee - initial_investment\n\n    # Calculate the profit above the hurdle rate\n    profit_above_hurdle = profit_after_management_fee - (initial_investment * hurdle_rate)\n\n    # Calculate the incentive fee\n    incentive_fee = profit_above_hurdle * incentive_fee_rate if profit_above_hurdle > 0 else 0\n\n    # Calculate the net return after all fees\n    net_return = profit_after_management_fee - incentive_fee\n\n    # return the net return\n    return net_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-87",
        "python_solution": "",
        "ground_truth": null,
        "question": "Bright Blossom Ltd., a garden supply wholesale company, announced an annual cost of goods sold amounting to $80 million. The total properties increased by $55 million, incorporating a rise of $5 million in their stocks. The total obligations increased by $45 million, which also includes a $2 million rise in bills to be paid. What is the probable amount of cash that the company has paid to its vendors?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold = 80000000\n    increase_in_properties = 55000000\n    increase_in_stocks = 5000000\n    increase_in_obligations = 45000000\n    increase_in_bills_to_be_paid = 2000000\n    \n    # Do math calculation to get the answer\n    # The cash paid to vendors can be calculated by adjusting the cost of goods sold for changes in inventory and accounts payable\n    cash_paid_to_vendors = cost_of_goods_sold + increase_in_stocks - (increase_in_obligations - increase_in_bills_to_be_paid)\n    \n    # return answer\n    return cash_paid_to_vendors\n```"
        ]
    },
    {
        "tables": [
            "| Income Statement        | 2007  | 2008  |\n|------------------------ |-------|-------|\n| Revenue                 | $474  | $598  |\n| Depreciation            | 20    | 23    |\n| Other operating costs   | 368   | 460   |\n| Income before taxes     | 86    | 115   |\n| Taxes                   | 26    | 35    |\n| Net income              | 60    | 80    |\n| Dividends               | 18    | 24    |\n| Earnings per share      | $0.714| $0.952|\n| Dividends per share     | $0.214| $0.286|\n| Common shares outstanding|84.0  | 84.0  |",
            "| Required rate of ROE | 14% |\n|----------------------|-----|\n| Growth rate of industry | 13% |\n| Industry P/E | 26 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-88",
        "python_solution": "",
        "ground_truth": null,
        "question": "Claire Smith, CFA, has been tasked with examining Shyrdak. Smith anticipates that Shyrdak's earnings and dividends will experience a consistent growth rate of 13 percent. The financial statements for the most recent two years (2007 and 2008) along with other details for Shyrdak are supplied in Exhibits 1 and 2. These exhibits offer actual 2007 and 2008 Financial Statements as of May 31st (in Millions exceptPer-ShareData) and selected Financial Information respectively. Based on the data from Exhibits 1 and 2 and Smith's projections for Shyrdak, what are the justified forward P/Es for this company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    required_rate_of_ROE = 0.14\n    growth_rate = 0.13\n    industry_P_E = 26\n    \n    # Do math calculation to get the answer\n    # Calculate the justified forward P/E using the Gordon Growth Model\n    # P/E = (1 - b) / (r - g) where b is the retention ratio, r is the required rate of return, and g is the growth rate\n    \n    # Calculate the retention ratio (b)\n    dividends_2008 = 24  # in millions\n    net_income_2008 = 80  # in millions\n    retention_ratio = 1 - (dividends_2008 / net_income_2008)\n    \n    # Calculate the justified forward P/E\n    justified_forward_P_E = (retention_ratio) / (required_rate_of_ROE - growth_rate)\n    \n    # return answer\n    return justified_forward_P_E\n```"
        ]
    },
    {
        "tables": [
            "| Variable          | Coefficient | Std. Error | t-Statistic |\n|-------------------|-------------|------------|-------------|\n| Intercept         | -2582.791   | 940.613    | -2.746      |\n| GDP               | 0.022       | 0.006      | 3.667       |\n| Fiscal Expenditure| 0.702       | 0.033      | 21.273      |\n| RPI               | 23.985      | 8.738      | 2.745       |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-89",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Sarah desires to forecast her nation's tax revenue, she chooses GDP, Fiscal expenditure and RPI (Retail Price Index) as three independent variables. She finds that this year's GDP is 104790.6, Fiscal expenditure is 22053.15, and RPI is 98.7. What is the expected value of the tax revenue for this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = -2582.791\n    gdp_coefficient = 0.022\n    fiscal_expenditure_coefficient = 0.702\n    rpi_coefficient = 23.985\n    \n    gdp = 104790.6\n    fiscal_expenditure = 22053.15\n    rpi = 98.7\n    \n    # Do math calculation to get the answer\n    tax_revenue = intercept + (gdp_coefficient * gdp) + (fiscal_expenditure_coefficient * fiscal_expenditure) + (rpi_coefficient * rpi)\n    \n    # return answer\n    return tax_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-90",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the maximum leverage ratio for a position financed by a minimum margin requirement of 55 percent, as set by an internet-based trading company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    minimum_margin_requirement = 0.55\n    \n    # Do math calculation to get the answer\n    # The leverage ratio is the inverse of the margin requirement\n    leverage_ratio = 1 / minimum_margin_requirement\n    \n    # return answer\n    return leverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-91",
        "python_solution": "",
        "ground_truth": null,
        "question": "The stock collection has a market value of $6,000,000. The retirement fund is planning to use a futures contract priced at $250,000 to raise the beta from 0.9 to 1.2 for a span of one month. The futures contract has a beta of 0.95. After one month, the return of the stock market is 5%, the market value of the stock collection becomes $6,250,000, and the cost of the futures contract is $262,000. What is the effective beta of the stock element of the fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_market_value = 6000000\n    futures_contract_price = 250000\n    futures_contract_beta = 0.95\n    target_beta = 1.2\n    stock_market_return = 0.05\n    final_market_value = 6250000\n    final_futures_contract_cost = 262000\n\n    # Calculate the initial beta of the stock collection\n    initial_beta = 0.9\n\n    # Calculate the change in market value due to stock market return\n    change_in_market_value = final_market_value - initial_market_value\n\n    # Calculate the change in value of the futures contract\n    change_in_futures_value = final_futures_contract_cost - futures_contract_price\n\n    # Calculate the effective beta of the stock element of the fund\n    effective_beta = (change_in_market_value - change_in_futures_value * futures_contract_beta) / (initial_market_value * stock_market_return)\n\n    # return answer\n    return effective_beta\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-92",
        "python_solution": "",
        "ground_truth": null,
        "question": "You are creating models to predict earnings per share for two building firms, X and Y. The likelihood of Firm X's EPS growing by the year's end stands at 0.45. The chance of Firm Y's EPS swelling by the end of the year is 0.25. The probability that both firms' EPS will hike is 0.10. According to the predictive models, what is the likelihood that the EPS of at least one of these building firms will surge?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_X_grow = 0.45\n    prob_Y_grow = 0.25\n    prob_both_grow = 0.10\n    \n    # Do math calculation to get the answer\n    # The probability that at least one of the firms' EPS will surge is calculated by adding the probabilities of each firm growing and subtracting the probability of both growing (since it's counted twice)\n    prob_at_least_one_grow = prob_X_grow + prob_Y_grow - prob_both_grow\n    \n    # return answer\n    return prob_at_least_one_grow\n```"
        ]
    },
    {
        "tables": [
            "|                        | Company X      |\n|------------------------|----------------|\n|                        | As of 31 December |\n| Ending shareholders' equity | \u00a310,000,000   |\n| Tax rate               | 25%            |\n| Dividends              | \u00a30.00          |\n| Net income             | \u00a3750,000       |"
        ],
        "topic": "Accounting",
        "question_id": "test-93",
        "python_solution": "",
        "ground_truth": null,
        "question": "Firms A and B start the year with the same book value of equity and identical tax rates. They have the same transactions all year and report them in the same way, except for one. Both firms purchase a printer worth \u00a3300,000 with a lifespan of three years and a salvage value of \u00a30 at the start of the year. Firm A capitalizes the printer and depreciates it using a straight-line method, while Firm B expenses the printer. The following information is collected for Firm A at the end of the year. Given this information, what would be Firm B's return on equity using year-end equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equity_A = 10000000  # Assuming the same book value of equity for both firms\n    tax_rate = 0.25  # 25% tax rate\n    net_income_A = 750000  # Net income for Firm A\n    printer_cost = 300000  # Cost of the printer\n    depreciation_period = 3  # Lifespan of the printer in years\n    \n    # Calculate depreciation for Firm A using straight-line method\n    depreciation_A = printer_cost / depreciation_period\n    \n    # Adjust net income for Firm A to reflect the depreciation\n    adjusted_net_income_A = net_income_A - depreciation_A\n    \n    # Calculate return on equity for Firm A\n    roe_A = adjusted_net_income_A / equity_A\n    \n    # Firm B expenses the printer, so the entire cost is deducted from net income\n    net_income_B = net_income_A - printer_cost\n    \n    # Calculate return on equity for Firm B\n    roe_B = net_income_B / equity_A\n    \n    # return answer\n    return roe_B\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-94",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that active returns do not correlate, according to the basic law of active management, how many securities would a fund overseen by an investment strategist with a 0.75 information ratio, a 0.1819 information coefficient, and a transfer coefficient of 1.0 contain?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    information_ratio = 0.75\n    information_coefficient = 0.1819\n    transfer_coefficient = 1.0\n    \n    # Do math calculation to get the answer\n    # According to the basic law of active management: IR = IC * sqrt(N) * TC\n    # Solving for N (number of securities): N = (IR / (IC * TC)) ** 2\n    number_of_securities = (information_ratio / (information_coefficient * transfer_coefficient)) ** 2\n    \n    # return answer\n    return number_of_securities\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-95",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is trying to forecast the sales volume of his store in December 20X8, therefore he utilizes the sales volume from January 20X7 to November 20X8 as examples to create a linear trend model and obtains the following result: \u0177t =264.75+2.58t. What is the anticipated sales volume of December 20X8?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = 264.75\n    slope = 2.58\n    time_period = 24  # December 20X8 is the 24th month in the series (January 20X7 to December 20X8)\n    \n    # Do math calculation to get the answer\n    anticipated_sales_volume = intercept + slope * time_period\n    \n    # return answer\n    return anticipated_sales_volume\n```"
        ]
    },
    {
        "tables": [
            "| Spot rate (RMB/USD) | 6.7659 |\n|---|---|\n| 180-day Libor(RMB) | 4.80% |\n| 180-day Libor(USD) | 3.55% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-96",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given data, can you compute the forward premium for a half-year RMB/USD forward agreement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 6.7659\n    libor_rmb = 0.0480\n    libor_usd = 0.0355\n    days = 180\n    year_days = 360\n\n    # Do math calculation to get the answer\n    forward_premium = ((libor_rmb - libor_usd) * days / year_days) / (1 + libor_usd * days / year_days)\n    forward_premium_percentage = forward_premium * 100\n\n    # return answer\n    return forward_premium_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Asset | Position | Individual VAR | Marginal VAR | VAR Contribution |\n|-------|----------|----------------|--------------|------------------|\n| 1     | USD 100  | USD 23.3       | 0.176        | USD 17.6         |\n| 2     | USD 100  | USD 46.6       | 0.440        | USD 44.0         |\n| Total | USD 200  | USD 61.6       |              | USD 61.6         |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-97",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a risk analyst supposes the joint distribution of returns is multivariate normal and calculates the ensuing risk measures for a portfolio of two assets: what would be the decrease in portfolio VAR if we eliminate asset 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_portfolio_var = 61.6  # Total VAR in USD\n    asset2_var_contribution = 44.0  # VAR Contribution of Asset 2 in USD\n    \n    # Do math calculation to get the answer\n    decrease_in_portfolio_var = asset2_var_contribution\n    \n    # return answer\n    return decrease_in_portfolio_var\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-98",
        "python_solution": "",
        "ground_truth": null,
        "question": "The portfolio manager of AB pension, Jacques, has recently contemplated incorporating PZ Inc. (New York Stock Exchange: PZ) into the portfolio. Instead of utilizing the two-stage DDM, Jacques intends to use his forecast that the stock of PZ will be valued at 20 times its earnings per share (trailing P/E of 20) in 4 years. With a projected earnings retention ratio of 0.6 and a dividend of $ 0.3461 at that point, what will be the terminal value of the stock according to this method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    trailing_P_E = 20\n    projected_earnings_per_share = 0.3461 / (1 - 0.6)  # EPS = Dividend / (1 - Retention Ratio)\n    \n    # Do math calculation to get the answer\n    terminal_value = trailing_P_E * projected_earnings_per_share\n    \n    # return answer\n    return terminal_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-99",
        "python_solution": "",
        "ground_truth": null,
        "question": "Compute the correlation of the two properties: return variance of property X: 0.16, return variance of property Y: 0.09, covariance between the returns of X and Y: 0.009.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    variance_X = 0.16\n    variance_Y = 0.09\n    covariance_XY = 0.009\n    \n    # Do math calculation to get the answer\n    correlation_XY = covariance_XY / (variance_X * variance_Y)**0.5\n    \n    # return answer\n    return correlation_XY\n```"
        ]
    },
    {
        "tables": [
            "|                                             | Fund A | Fund B |\n|---------------------------------------------|--------|--------|\n| Portfolio weights (%)                       | 70     | 30     |\n| Expected returns (%)                        | 10     | 16     |\n| Standard deviations (%)                     | 7      | 13     |\n| Correlation between the returns of Fund A and Fund B | 0.80 |      |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-100",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the standard deviation of return for a portfolio made up of Investment X and Investment Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_A = 0.70\n    weight_B = 0.30\n    return_A = 10\n    return_B = 16\n    std_dev_A = 7\n    std_dev_B = 13\n    correlation = 0.80\n    \n    # Do math calculation to get the answer\n    # Calculate the variance of the portfolio\n    variance = (weight_A**2 * std_dev_A**2) + (weight_B**2 * std_dev_B**2) + (2 * weight_A * weight_B * std_dev_A * std_dev_B * correlation)\n    \n    # Calculate the standard deviation of the portfolio\n    std_dev_portfolio = variance**0.5\n    \n    # return answer\n    return std_dev_portfolio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-101",
        "python_solution": "",
        "ground_truth": null,
        "question": "George Smith and his group gather a lot of analytical and statistical information about the automobile market. Based on this information, they infer that the average cost of SUVs exceeds $46,435 in their nation. Following this, they randomly pick 64 SUVs with an average cost of $46,760. The standard deviation of this sample is assumed to be 1370. George Smith performs a hypothesis test to validate their inference. At what significance level should George Smith reject the null hypothesis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_mean = 46760\n    population_mean = 46435\n    standard_deviation = 1370\n    sample_size = 64\n\n    # Do math calculation to get the answer\n    # Calculate the z-score\n    z_score = (sample_mean - population_mean) / (standard_deviation / (sample_size ** 0.5))\n\n    # Using the z-table, find the p-value corresponding to the z-score\n    # For simplicity, we'll use a z-table lookup function or approximation\n    # Here, we'll assume a function `p_value_from_z` that gives the p-value from a z-score\n    # In practice, you would use a library like scipy.stats.norm.sf (survival function)\n    from scipy.stats import norm\n    p_value = norm.sf(z_score)\n\n    # return answer\n    # Typically, a significance level of 0.05 is used, so we check if p_value < 0.05\n    significance_level = 0.05\n    if p_value < significance_level:\n        return significance_level\n    else:\n        return \"Fail to reject the null hypothesis at the 0.05 significance level\"\n\n# Example usage:\nprint(solution())\n```\n\nThis Python program calculates the z-score for the given sample and then finds the corresponding p-value. It then checks if the p-value is less than the typical significance level of 0.05 to determine whether to reject the null hypothesis."
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-102",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial performance evaluator is working on some performance indicators for portfolio XYZ. Portfolio XYZ has a projected return of 9%, a volatility of 21%, and a beta of 0.3. If the riskless rate is 3%, what is the Treynor ratio of portfolio XYZ?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    projected_return = 9  # in percentage\n    riskless_rate = 3  # in percentage\n    beta = 0.3\n    \n    # Do math calculation to get the answer\n    treynor_ratio = (projected_return - riskless_rate) / beta\n    \n    # return answer\n    return treynor_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-103",
        "python_solution": "",
        "ground_truth": null,
        "question": "The monthly return correlation of equities in a portfolio adheres to the law of mean reverting and the long-term monthly return correlation is approximately 30%. Upon carrying out regression, we determine the mean reverting rate to be around 0.8. If the current month's return correlation is 56%, what would be the projected next monthly return correlation of equities in the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    long_term_correlation = 0.30\n    mean_reverting_rate = 0.8\n    current_correlation = 0.56\n    \n    # Do math calculation to get the answer\n    projected_correlation = long_term_correlation + mean_reverting_rate * (current_correlation - long_term_correlation)\n    \n    # return answer\n    return projected_correlation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-104",
        "python_solution": "",
        "ground_truth": null,
        "question": "A Chinese business organization primarily exports products to US and offers 90 days credit term to US firms. The transactions are settled in USD. The organization from China is concerned that the USD will lose its value and wants to hedge the potential risk by engaging in a short forward contract. The local risk-free rate is 4% and the foreign risk-free rate is 2%. The current spot rate is 6.7523\uffe5per $. What is the cost of the forward contract?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 6.7523  # in CNY per USD\n    domestic_risk_free_rate = 0.04  # 4%\n    foreign_risk_free_rate = 0.02  # 2%\n    time_to_maturity = 90 / 365  # 90 days credit term\n\n    # Do math calculation to get the answer\n    forward_rate = spot_rate * (1 + domestic_risk_free_rate * time_to_maturity) / (1 + foreign_risk_free_rate * time_to_maturity)\n\n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-105",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the holding period return for a trader who purchased 200 shares at $20 each and later sold them all at $22.5 per share, after obtaining a dividend of $0.2 per share for a quarter?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price_per_share = 20\n    sale_price_per_share = 22.5\n    dividend_per_share = 0.2\n    shares_purchased = 200\n\n    # Do math calculation to get the answer\n    initial_investment = purchase_price_per_share * shares_purchased\n    final_value = sale_price_per_share * shares_purchased\n    total_dividends = dividend_per_share * shares_purchased\n\n    holding_period_return = ((final_value + total_dividends - initial_investment) / initial_investment) * 100\n\n    # return answer\n    return holding_period_return\n```"
        ]
    },
    {
        "tables": [
            "|                       |       |                         |       |\n|-----------------------|-------|-------------------------|-------|\n| **Exhibit 1. Blanca Co. Balance Sheet at 31 December 2016 ($ millions)** |       |                         |       |\n| Cash                 | 20    | Current liabilities     | 25    |\n| Accounts receivable  | 50    | Noncurrent liabilities  | 30    |\n| Other assets         | 30    | Shareholders' equity    | 45    |\n| Total assets         | 100   | Total liabilities and equity | 100   |"
        ],
        "topic": "Accounting",
        "question_id": "test-106",
        "python_solution": "",
        "ground_truth": null,
        "question": "An analyst from an international securities firm's research department, named John Thronen, is working on a research report for Topmaker, Inc. This publicly-traded company adheres to IFRS. Now, a company named Castello Corp. has a plan to generate $40 million in capital through loans backed by its financial receivables. The plan entails formation of a special-purpose entity (SPE), injecting $10 million into the SPE, getting the SPE to secure a $40 million loan, and then use this capital to acquire $50 million worth of receivables from Castello Corp. Castello Corp., which fits the concept of control, aims to consolidate the SPE, with its balance sheet displayed in Exhibit 1. Considering Exhibit 1 and Castello Corp.'s method of lending against its financial receivables, what will the total assets on the consolidated balance sheet look like?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_total_assets = 100  # From Exhibit 1, total assets in $ millions\n    additional_assets_from_SPE = 50  # $50 million worth of receivables from Castello Corp.\n    \n    # Do math calculation to get the answer\n    # Since Castello Corp. consolidates the SPE, the assets of the SPE are added to Castello Corp.'s assets\n    consolidated_total_assets = initial_total_assets + additional_assets_from_SPE\n    \n    # return answer\n    return consolidated_total_assets\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-107",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer acquires an annual coupon bond with a 8% coupon rate and exactly 20 years left until maturity at a price equivalent to its par value. The buyer's investment horizon spans eight years. The approximate modified duration of the bond is 12.480 years. What is the duration gap at the moment of acquisition?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 12.480\n    investment_horizon = 8\n    \n    # Do math calculation to get the answer\n    duration_gap = modified_duration - investment_horizon\n    \n    # return answer\n    return duration_gap\n```"
        ]
    },
    {
        "tables": [
            "|               | Coefficients | Standard Error | t-Statistic |\n|---------------|--------------|----------------|-------------|\n| Intercept     | 3.7642       | 2.5743         | 1.4622      |\n| Season dummy  | 20.5732      | 10.3958        | 1.9790      |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-108",
        "python_solution": "",
        "ground_truth": null,
        "question": "Brown is curious about how the change in seasons impacts the sales of the down jacket. He structures a regression model incorporating a dummy variable (1 for winter and 0 for summer) as an independent variable and the sales volume (in thousands) as the dependent variable and achieves the following outcomes: What is the variance in the sales volume between summer and winter in thousands?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    season_dummy_coefficient = 20.5732\n    \n    # Do math calculation to get the answer\n    # The coefficient of the season dummy variable represents the difference in sales volume between winter and summer\n    variance_in_sales = season_dummy_coefficient\n    \n    # return answer\n    return variance_in_sales\n```\n\nThis program defines the coefficient of the season dummy variable from the provided table and directly returns it as the variance in sales volume between summer and winter, as the coefficient represents the difference in sales due to the change in seasons."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-109",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive is looking to establish a synthetic tracker fund tied to the S&P 500. The primary investment stands at $500,000,000. Given that an S&P 500 futures contract is valued at $1,000 with a multiplier of $250, and considering a risk-free rate of 3% and a futures expiration in three months, how many futures contracts does he need to purchase?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    primary_investment = 500000000  # in dollars\n    futures_contract_value = 1000  # in dollars\n    multiplier = 250  # in dollars\n    risk_free_rate = 0.03  # 3%\n    time_to_expiration = 3 / 12  # in years\n\n    # Calculate the present value of the futures contract\n    present_value_futures = futures_contract_value * (1 + risk_free_rate * time_to_expiration)\n\n    # Calculate the value of one futures contract\n    contract_value = present_value_futures * multiplier\n\n    # Calculate the number of futures contracts needed\n    number_of_contracts = primary_investment / contract_value\n\n    # return answer\n    return round(number_of_contracts)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-110",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business owner purchased the property B using loans. They borrowed $220 and their equity is $110. Based on the provided data, what is their leverage ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt = 220\n    equity = 110\n    \n    # Do math calculation to get the answer\n    leverage_ratio = total_debt / equity\n    \n    # return answer\n    return leverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Quanty(Q) | Total Fixed Cost(TFC) | Total Variable Cost(TVC) |\n|-----------|-----------------------|--------------------------|\n| 0         | 200                   | 0                        |\n| 1         | 200                   | 100                      |\n| 2         | 200                   | 150                      |\n| 3         | 200                   | 200                      |\n| 4         | 200                   | 240                      |\n| 5         | 200                   | 320                      |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-111",
        "python_solution": "",
        "ground_truth": null,
        "question": "The operations manager of a company collects the following data about the company's cost structure at various output levels: Please refer to the information in Exhibit 1. What is the average fixed cost (AFC) when the production quantity is 4 units?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_fixed_cost = 200\n    quantity = 4\n    \n    # Do math calculation to get the answer\n    average_fixed_cost = total_fixed_cost / quantity\n    \n    # return answer\n    return average_fixed_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-112",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, the S&P 500 had quarterly returns of 8%, -5%, 3%, and 1%. What is the quarterly arithmetic mean return for the S&P 500?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    quarterly_returns = [8, -5, 3, 1]\n    \n    # Do math calculation to get the answer\n    arithmetic_mean_return = sum(quarterly_returns) / len(quarterly_returns)\n    \n    # return answer\n    return arithmetic_mean_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-113",
        "python_solution": "",
        "ground_truth": null,
        "question": "A consultant has projected that the intrinsic worth of company B's share would be $25. If the latest dividend was $2 and is anticipated to rise at 3%, what's the necessitated return rate of a stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intrinsic_worth = 25\n    latest_dividend = 2\n    dividend_growth_rate = 0.03\n    \n    # Do math calculation to get the answer\n    necessitated_return_rate = (latest_dividend / intrinsic_worth) + dividend_growth_rate\n    \n    # return answer\n    return necessitated_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-114",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an organization's pretax income stands at $1,500,000, with taxable income amounting to $1,000,000 and a tax rate of 35%, what should be the declared current tax expense for the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    taxable_income = 1000000\n    tax_rate = 0.35\n    \n    # Do math calculation to get the answer\n    current_tax_expense = taxable_income * tax_rate\n    \n    # return answer\n    return current_tax_expense\n```"
        ]
    },
    {
        "tables": [
            "| Days to Maturity | LIBOR | Present Value Factors |\n|------------------|-------|-----------------------|\n| 180              | 3.0%  | 0.985222              |\n| 360              | 3.5%  | 0.966184              |\n| 540              | 4.0%  | 0.943396              |\n| 720              | 4.5%  | 0.917431              |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-115",
        "python_solution": "",
        "ground_truth": null,
        "question": "The two-year Libor-based interest rate swap with semi-annual resets (30/360 day count). In light of the following data, what is the swap's fixed rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value_factors = [0.985222, 0.966184, 0.943396, 0.917431]\n    days_to_maturity = [180, 360, 540, 720]\n    libor_rates = [0.03, 0.035, 0.04, 0.045]\n    \n    # Calculate the discount factors\n    discount_factors = [1 / (1 + libor_rate * day / 360) for libor_rate, day in zip(libor_rates, days_to_maturity)]\n    \n    # Calculate the forward rates\n    forward_rates = []\n    for i in range(len(days_to_maturity) - 1):\n        forward_rate = (discount_factors[i] / discount_factors[i + 1] - 1) * (360 / (days_to_maturity[i + 1] - days_to_maturity[i]))\n        forward_rates.append(forward_rate)\n    \n    # Calculate the fixed rate\n    fixed_rate = (1 - discount_factors[-1]) / sum(discount_factors)\n    \n    # return answer\n    return fixed_rate\n\n# Example usage\nprint(solution())\n```\n\nThis Python program calculates the fixed rate of a two-year Libor-based interest rate swap with semi-annual resets using the provided data. The program first calculates the discount factors based on the LIBOR rates and days to maturity, then computes the forward rates, and finally calculates the fixed rate of the swap."
        ]
    },
    {
        "tables": [
            "| Sales price per unit | \u00a385               |\n|---------------------|------------------|\n| Variable cost per unit  | \u00a365               |\n| Fixed operating costs   | \u00a350 million   |\n| Fixed financial costs   | \u00a330 million   |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-116",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the company's breakeven volume of sales in million units, given the following data is available for a company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales_price_per_unit = 85\n    variable_cost_per_unit = 65\n    fixed_operating_costs = 50000000\n    fixed_financial_costs = 30000000\n    \n    # Do math calculation to get the answer\n    total_fixed_costs = fixed_operating_costs + fixed_financial_costs\n    contribution_margin_per_unit = sales_price_per_unit - variable_cost_per_unit\n    breakeven_volume = total_fixed_costs / contribution_margin_per_unit\n    \n    # Convert breakeven volume to million units\n    breakeven_volume_in_millions = breakeven_volume / 1000000\n    \n    # return answer\n    return breakeven_volume_in_millions\n```"
        ]
    },
    {
        "tables": [
            "| Risk free interest rate (1-year, incorporating 2.6% inflation expectation) | 3.8% |\n| --- | --- |\n| Term premium(10-year vs.1-year government bond) | 1% |\n| 10-year BBB credit premium (over 10-year government bond) | 75bp |\n| Estimated liquidity premium on 10-year corporate bonds | 55bp |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-117",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial backer is pondering including three new assets into his globally focused fixed income collection. He is focusing on these non-callable assets: 1-year government bond, 10-year government bond and a 10-year BBB rated corporate bond. His plan is to either equally invest in all three assets under scrutiny, or he'll avoid all of them for the time being. His condition to make the additional investment is that the projected spread/premium of the equally weighed investment must be at least 1.5 percent (150bp) greater than the 1-year government bond. Using just the given details, calculate the estimated return that an equal-weighted investment in these three assets could offer.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate_1_year = 3.8  # 1-year government bond rate\n    term_premium_10_year = 1.0  # Term premium for 10-year vs. 1-year government bond\n    credit_premium_10_year_BBB = 0.75  # 10-year BBB credit premium over 10-year government bond\n    liquidity_premium_10_year_corporate = 0.55  # Estimated liquidity premium on 10-year corporate bonds\n\n    # Calculate the rates for each asset\n    rate_1_year_gov_bond = risk_free_rate_1_year\n    rate_10_year_gov_bond = risk_free_rate_1_year + term_premium_10_year\n    rate_10_year_BBB_corporate_bond = rate_10_year_gov_bond + credit_premium_10_year_BBB + liquidity_premium_10_year_corporate\n\n    # Calculate the equal-weighted average return of the three assets\n    equal_weighted_return = (rate_1_year_gov_bond + rate_10_year_gov_bond + rate_10_year_BBB_corporate_bond) / 3\n\n    # return the estimated return\n    return equal_weighted_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-118",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Apple View Corp.'s dividend policy is characterized by a slow adaptation towards a specific dividend payout proportion, and the company has projected its earnings per share for this year to be $4.00, given that last year, their earnings per share were $3.00 and they paid out a dividend of $0.60 per share, what will be this year's dividend per share, given that they have a predetermined payout proportion of 25 percent and employ a five-year period to adjust their dividend?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    last_year_eps = 3.00\n    last_year_dividend = 0.60\n    current_year_eps = 4.00\n    payout_proportion = 0.25\n    adjustment_period = 5\n\n    # Calculate the target dividend based on the current year's EPS and payout proportion\n    target_dividend = current_year_eps * payout_proportion\n\n    # Calculate the difference between the target dividend and last year's dividend\n    dividend_difference = target_dividend - last_year_dividend\n\n    # Calculate the annual adjustment needed to reach the target dividend over the adjustment period\n    annual_adjustment = dividend_difference / adjustment_period\n\n    # Calculate this year's dividend by adding the annual adjustment to last year's dividend\n    this_year_dividend = last_year_dividend + annual_adjustment\n\n    # return answer\n    return this_year_dividend\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-119",
        "python_solution": "",
        "ground_truth": null,
        "question": "A firm releases a leveraged floating-rate note which offers a coupon of 1.5 times Libor on notional principle of $1 million. This firm uses the capital to purchase a fixed-rate bond with 6% coupon rate. To counter the risk of fluctuating payments, the firm partakes in a swap with a fixed rate of 5% and a floating rate of 1.5 times Libor. Determine the net income from these transactions.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_principle = 1000000\n    libor_multiplier = 1.5\n    fixed_rate_bond_coupon = 0.06\n    swap_fixed_rate = 0.05\n    \n    # Assume a hypothetical Libor rate for calculation\n    libor_rate = 0.03  # Example value, replace with actual Libor rate if available\n    \n    # Calculate the coupon from the floating-rate note\n    floating_rate_note_coupon = libor_multiplier * libor_rate * notional_principle\n    \n    # Calculate the coupon from the fixed-rate bond\n    fixed_rate_bond_coupon_income = fixed_rate_bond_coupon * notional_principle\n    \n    # Calculate the fixed payment in the swap\n    swap_fixed_payment = swap_fixed_rate * notional_principle\n    \n    # Calculate the floating receipt in the swap\n    swap_floating_receipt = libor_multiplier * libor_rate * notional_principle\n    \n    # Calculate the net income from these transactions\n    net_income = (fixed_rate_bond_coupon_income + swap_floating_receipt) - (floating_rate_note_coupon + swap_fixed_payment)\n    \n    # return answer\n    return net_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-120",
        "python_solution": "",
        "ground_truth": null,
        "question": "A production company named Silver borrowed USD 500 million from Star Bank. To protect its debt exposure to Silver, Star Bank engages in a credit default swap transaction with Metro Bank, where Metro Bank would wholly reimburse Star Bank if Silver defaults. If the defaults of Star Bank, Metro Bank, and Silver are independent and their default probabilities are considered to be 0.5%, 0.6%, and 4.0%, respectively. What is the likelihood that Star Bank will encounter a credit loss in its exposure to Silver?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    default_prob_star_bank = 0.005\n    default_prob_metro_bank = 0.006\n    default_prob_silver = 0.04\n\n    # Do math calculation to get the answer\n    # The likelihood that Star Bank will encounter a credit loss is the probability that Silver defaults\n    # and both Star Bank and Metro Bank do not default.\n    prob_silver_default = default_prob_silver\n    prob_star_bank_not_default = 1 - default_prob_star_bank\n    prob_metro_bank_not_default = 1 - default_prob_metro_bank\n\n    prob_credit_loss = prob_silver_default * prob_star_bank_not_default * prob_metro_bank_not_default\n\n    # return answer\n    return prob_credit_loss\n```"
        ]
    },
    {
        "tables": [
            "| Time-to-Maturity | Spot Rates |\n| --- | --- |\n| 1 year | 3% |\n| 2 years | 4% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-121",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming the sequence of spot rates provided, what would be the cost of a 2-year bond with a 5% coupon rate, with interest paid yearly, that a trader is thinking about buying?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_1_year = 0.03\n    spot_rate_2_year = 0.04\n    coupon_rate = 0.05\n    face_value = 1000  # Assuming a face value of $1000 for simplicity\n\n    # Do math calculation to get the answer\n    # Calculate the present value of the first coupon payment\n    pv_coupon_1 = (coupon_rate * face_value) / (1 + spot_rate_1_year)\n    \n    # Calculate the present value of the second coupon payment and the principal\n    pv_coupon_2_and_principal = ((coupon_rate * face_value) + face_value) / ((1 + spot_rate_2_year) ** 2)\n    \n    # Sum the present values to get the total cost of the bond\n    total_cost = pv_coupon_1 + pv_coupon_2_and_principal\n\n    # return answer\n    return total_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-122",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond portfolio contains two bonds, bond X and bond Y. The values of bond X and bond Y are $60 millions and $40 millions respectively. The one-year probabilities of default and the recovery rate of bond X are 5% and 60% respectively, while for bond Y are 7% and 50%. Can you compute the one-year expected credit loss of this compilation? Assume that the default risk between X and Y is independent.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    value_bond_X = 60000000\n    value_bond_Y = 40000000\n    default_prob_X = 0.05\n    default_prob_Y = 0.07\n    recovery_rate_X = 0.60\n    recovery_rate_Y = 0.50\n    \n    # Do math calculation to get the answer\n    # Calculate expected credit loss for bond X\n    credit_loss_X = value_bond_X * default_prob_X * (1 - recovery_rate_X)\n    \n    # Calculate expected credit loss for bond Y\n    credit_loss_Y = value_bond_Y * default_prob_Y * (1 - recovery_rate_Y)\n    \n    # Total expected credit loss for the portfolio\n    total_credit_loss = credit_loss_X + credit_loss_Y\n    \n    # return answer\n    return total_credit_loss\n```\n\nThis Python program calculates the one-year expected credit loss for a bond portfolio containing two bonds, bond X and bond Y, by considering their respective values, default probabilities, and recovery rates. The total expected credit loss is the sum of the expected losses from both bonds."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-123",
        "python_solution": "",
        "ground_truth": null,
        "question": "The demand schedule in an entirely competitive market is dictated by P = 93 \u2013 1.5Q (for Q \u2264 62) and the enduring cost organization of each corporation is: Total cost: 256 + 2Q +  4Q2 Average cost: 256/Q + 2 + 4Q Marginal cost: 2 + 8Q New corporations will infiltrate the market at any price above:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Q = 62  # Since Q \u2264 62 is the condition given\n    \n    # Calculate the average cost at Q = 62\n    average_cost = 256 / Q + 2 + 4 * Q\n    \n    # return answer\n    return average_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-124",
        "python_solution": "",
        "ground_truth": null,
        "question": "The demand function for groceries is denoted by the equation Qdpg = 80 - 3Ppg + 0.1I + 0.5Ppdr where Qdpg is the quantity of groceries, Ppg is the price of groceries, I is the income, and Ppdr is the price of beverages. We understand that: Ppg = 30, I = 110, and Ppdr = 20. What will the price elasticity of demand for groceries be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Ppg = 30\n    I = 110\n    Ppdr = 20\n    \n    # Calculate the quantity of groceries (Qdpg) using the demand function\n    Qdpg = 80 - 3 * Ppg + 0.1 * I + 0.5 * Ppdr\n    \n    # Calculate the derivative of Qdpg with respect to Ppg\n    dQdpg_dPpg = -3\n    \n    # Calculate the price elasticity of demand\n    elasticity = (dQdpg_dPpg * Ppg) / Qdpg\n    \n    # return answer\n    return elasticity\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-125",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert is assessing the liquidity of XYZ Corporation based on the financial data from 2016 and 2017. The total debt was $200 in 2016 and rose to $300 in 2017. The total assets were $500 in 2016, increasing to $800 in 2017. The total equity was $250 in 2016 and went up to $400 in 2017. What is the financial leverage ratio in 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt_2017 = 300\n    total_equity_2017 = 400\n    \n    # Do math calculation to get the answer\n    financial_leverage_ratio = total_debt_2017 / total_equity_2017\n    \n    # return answer\n    return financial_leverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-126",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment director purchased 600 call options on a stock that doesn't pay dividends, with a strike price of USD 60, at a cost of USD 3 each. If the current stock price is at USD 62, the daily stock return volatility is pegged at 1.82%, and the delta of the option stands at 0.5. How can we approximate the 1-day 95% VaR of this position using the delta-normal approach?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_options = 600\n    option_cost = 3\n    current_stock_price = 62\n    daily_volatility = 0.0182\n    delta = 0.5\n    z_score_95 = 1.645  # Z-score for 95% confidence interval\n\n    # Calculate the total investment in options\n    total_investment = num_options * option_cost\n\n    # Calculate the delta-adjusted position in stocks\n    delta_adjusted_position = num_options * delta\n\n    # Calculate the 1-day 95% VaR using the delta-normal approach\n    var_1day_95 = delta_adjusted_position * current_stock_price * daily_volatility * z_score_95\n\n    # return answer\n    return var_1day_95\n```"
        ]
    },
    {
        "tables": [
            "|        | \u00a3 thousands |\n|--------|-------------|\n| Carrying amount | 132 |\n| Undiscounted expected future cash flows | 120 |\n| Present value of expected future cash flows | 100 |\n| Fair value if sold | 105 |\n| Costs to sell | 1 |"
        ],
        "topic": "Accounting",
        "question_id": "test-127",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering the data analyzed, what will be the impairment loss on this manufacturing plant (in thousands) under IFRS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_amount = 132  # in thousands\n    present_value_of_expected_future_cash_flows = 100  # in thousands\n    \n    # Do math calculation to get the answer\n    # Under IFRS, the impairment loss is calculated as the difference between the carrying amount and the present value of expected future cash flows\n    impairment_loss = carrying_amount - present_value_of_expected_future_cash_flows\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-128",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a tax rate of 28%, what is the annual after-tax cost of debt (%) for a business that releases fresh 20-year $1,000 bonds with a coupon rate of 6.2% payable semiannually at an issuance price of $1,030.34?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    tax_rate = 0.28\n    coupon_rate = 0.062\n    face_value = 1000\n    issuance_price = 1030.34\n    years = 20\n    payments_per_year = 2\n    \n    # Calculate the annual interest payment\n    annual_interest_payment = face_value * coupon_rate\n    \n    # Calculate the annual cost of debt before tax\n    annual_cost_of_debt_before_tax = annual_interest_payment / issuance_price * 100\n    \n    # Calculate the annual after-tax cost of debt\n    annual_after_tax_cost_of_debt = annual_cost_of_debt_before_tax * (1 - tax_rate)\n    \n    # return answer\n    return annual_after_tax_cost_of_debt\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-129",
        "python_solution": "",
        "ground_truth": null,
        "question": "Kelly is working on the valuation for XYZ Corp. She calculates that the long-term expected dividend payout rate for XYZ is 35 percent and the return on equity will be 12 percent in the long run. What is the long-term FCFE Sustainable growth rate for XYZ Corp.?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_payout_rate = 0.35\n    return_on_equity = 0.12\n    \n    # Do math calculation to get the answer\n    retention_rate = 1 - dividend_payout_rate\n    sustainable_growth_rate = retention_rate * return_on_equity\n    \n    # return answer\n    return sustainable_growth_rate\n```"
        ]
    },
    {
        "tables": [
            "|                |          | Actual Training |        |\n|----------------|----------|--------------|--------------|\n|                |          | results     |              |\n| Predicted      |          | Class \"1\"   | Class \"0\"    |\n| Results        | Class \"1\"| TP=182      | FP=52        |\n|                | Class \"0\"| FN=31       | TN=96        |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-130",
        "python_solution": "",
        "ground_truth": null,
        "question": "After settling on the last set of features, Johnson chooses and executes a model on the training set which labels the text as having either positive sentiment (Class \"1\") or negative sentiment (Class \"0\"). He subsequently inspects its performance through error analysis. As per Exhibit 1, what is the F1 score of the model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    TP = 182\n    FP = 52\n    FN = 31\n    TN = 96\n    \n    # Calculate precision and recall\n    precision = TP / (TP + FP)\n    recall = TP / (TP + FN)\n    \n    # Calculate F1 score\n    f1_score = 2 * (precision * recall) / (precision + recall)\n    \n    # return answer\n    return f1_score\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-131",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we consider a decrease in the yield by 90 basis points, what would be the percentage change in the price of a bond with a modified duration of 9.6?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 9.6\n    basis_points_decrease = 90\n    \n    # Convert basis points to percentage\n    yield_change_percentage = basis_points_decrease / 100\n    \n    # Do math calculation to get the answer\n    price_change_percentage = modified_duration * yield_change_percentage\n    \n    # return answer\n    return price_change_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-132",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the corporation buys back 1 million stocks at the current market rate, what would be the ensuing book value per share, considering the facts about another company revealed by an investigator which includes: 10 million shares in circulation, Earnings per share is US$2.00, P/E is 20, Book value per share is US$30?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_in_circulation = 10000000\n    earnings_per_share = 2.00\n    p_e_ratio = 20\n    book_value_per_share = 30\n    shares_bought_back = 1000000\n    \n    # Calculate the total earnings and total book value\n    total_earnings = earnings_per_share * shares_in_circulation\n    total_book_value = book_value_per_share * shares_in_circulation\n    \n    # Calculate the new number of shares in circulation after buyback\n    new_shares_in_circulation = shares_in_circulation - shares_bought_back\n    \n    # Calculate the new book value per share\n    new_book_value_per_share = total_book_value / new_shares_in_circulation\n    \n    # return answer\n    return new_book_value_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-133",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the carried interest paid to the general partner of the DeepSleep Investment, referenced in the brochure and having a committed capital of $150 million, a management fee of 2%, carried interest of 20%, and a hurdle rate of 9%, at the end of the second year? In the example given in the brochure, the fund demands $100 million in commitments at the start of the first year and disburses $40 million in Company X and $60 million in Company Y. At the onset of the second year, it calls the residual $50 million and invests into Company Z. By the end of the second year, the investment in Company Y is sold for $70 million. The investment in Company X amounts to $54 million by the end of the third year, the investment in Company Z is worth $40 million, and a cash reserve of $46 million is maintained.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    committed_capital = 150000000\n    management_fee_rate = 0.02\n    carried_interest_rate = 0.20\n    hurdle_rate = 0.09\n    initial_commitment = 100000000\n    investment_company_x = 40000000\n    investment_company_y = 60000000\n    residual_commitment = 50000000\n    sale_company_y = 70000000\n    investment_company_x_end_third_year = 54000000\n    investment_company_z = 40000000\n    cash_reserve = 46000000\n    \n    # Calculate management fee for the first year\n    management_fee_first_year = initial_commitment * management_fee_rate\n    \n    # Calculate management fee for the second year\n    management_fee_second_year = residual_commitment * management_fee_rate\n    \n    # Calculate total management fees\n    total_management_fees = management_fee_first_year + management_fee_second_year\n    \n    # Calculate the total value of the fund at the end of the second year\n    total_value_end_second_year = sale_company_y + investment_company_x + investment_company_z + cash_reserve\n    \n    # Calculate the net profit after management fees\n    net_profit = total_value_end_second_year - committed_capital - total_management_fees\n    \n    # Check if the net profit meets the hurdle rate\n    if net_profit > (committed_capital * hurdle_rate):\n        # Calculate carried interest\n        carried_interest = net_profit * carried_interest_rate\n    else:\n        carried_interest = 0\n    \n    # return answer\n    return carried_interest\n```"
        ]
    },
    {
        "tables": [
            "| Compensation of employees | 1,044,005 |\n|---------------------------|-----------|\n| Gross operating surplus | 518,979 |\n| Gross mixed income | 241,415 |\n| Net mixed income | 180,653 |\n| Taxes less subsidies on production | 90,507 |\n| Taxes less subsidies on products and imports | 139,443 |\n| Statistical discrepancy | 1,157 |\n| Net property income | 136,011 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-134",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the income approach, compute the personal income using the details in the succeeding table.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    compensation_of_employees = 1044005\n    gross_operating_surplus = 518979\n    gross_mixed_income = 241415\n    net_mixed_income = 180653\n    taxes_less_subsidies_on_production = 90507\n    taxes_less_subsidies_on_products_and_imports = 139443\n    statistical_discrepancy = 1157\n    net_property_income = 136011\n\n    # Do math calculation to get the answer\n    # Personal Income = Compensation of Employees + Net Property Income + Net Mixed Income\n    personal_income = compensation_of_employees + net_property_income + net_mixed_income\n\n    # return answer\n    return personal_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-135",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive intends to determine the price of a put option using a one-period binomial tree. The specifics are as such: The existing stock price is $30, with the put option's exercise price also at $30 The up factor sits at 1.12, while the down factor is at 0.92 The risk-free rate remains at 5%. What is the value of this particular put option?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 30  # Current stock price\n    K = 30  # Exercise price of the put option\n    u = 1.12  # Up factor\n    d = 0.92  # Down factor\n    r = 0.05  # Risk-free rate\n\n    # Calculate the stock prices at the up and down nodes\n    Su = S * u\n    Sd = S * d\n\n    # Calculate the payoffs at the up and down nodes\n    Pu = max(K - Su, 0)\n    Pd = max(K - Sd, 0)\n\n    # Calculate the risk-neutral probabilities\n    p = (1 + r - d) / (u - d)\n    q = 1 - p\n\n    # Calculate the present value of the put option\n    P = (p * Pu + q * Pd) / (1 + r)\n\n    # return answer\n    return P\n```"
        ]
    },
    {
        "tables": [
            "|            | Classification  | Cost   | Market value  2018 | Market value 2019 |\n|------------|-----------------|--------|------------------- |-------------------|\n| Shoes Corp | FVOCI           | 12,000 | 15,000             | 16,000            |\n| Angle PD   | Amortized cost  | 35,000 | 32,000             | 33,000            |\n| T-vision   | FVPL            | 42,000 | 45,000             | 56,000            |"
        ],
        "topic": "Accounting",
        "question_id": "test-136",
        "python_solution": "",
        "ground_truth": null,
        "question": "A CFA named Fabian, who is employed at the Equity investment firm, is in the process of preparing an analytical report on the PZ company, which is registered on the HK Exchange and is in compliance with IFRS 9. She has gathered data on three fixed-income investments from the PZ's 2019 year-end financial report (assuming cost equals par value). Could you determine the carrying value of PZ company's investment portfolio at the end of 2019?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shoes_corp_cost = 12000\n    shoes_corp_market_value_2019 = 16000\n    \n    angle_pd_cost = 35000\n    angle_pd_market_value_2019 = 33000\n    \n    t_vision_cost = 42000\n    t_vision_market_value_2019 = 56000\n    \n    # Do math calculation to get the answer\n    # For FVOCI (Fair Value Through Other Comprehensive Income), use market value\n    shoes_corp_carrying_value = shoes_corp_market_value_2019\n    \n    # For Amortized cost, use cost\n    angle_pd_carrying_value = angle_pd_cost\n    \n    # For FVPL (Fair Value Through Profit or Loss), use market value\n    t_vision_carrying_value = t_vision_market_value_2019\n    \n    # Calculate the total carrying value\n    total_carrying_value = shoes_corp_carrying_value + angle_pd_carrying_value + t_vision_carrying_value\n    \n    # return answer\n    return total_carrying_value\n```"
        ]
    },
    {
        "tables": [
            "| Time Period | Forward Rate |\n|-------------|--------------|\n| 0y1y        | 0.80%        |\n| 1y1y        | 1.12%        |\n| Z           | 3.94%        |\n| 3y1y        | 3.28%        |\n| 4y1y        | 3.14%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-137",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the 3-year implied spot rate if all rates are annual rates stated for a periodicity of one (effective annual rates)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    f0y1y = 0.008\n    f1y1y = 0.0112\n    f3y1y = 0.0328\n    f4y1y = 0.0314\n    \n    # Do math calculation to get the answer\n    # The 3-year implied spot rate is calculated using the forward rates and the formula for compounded interest\n    # (1 + s3)^3 = (1 + f0y1y) * (1 + f1y1y) * (1 + f3y1y)\n    s3 = ((1 + f0y1y) * (1 + f1y1y) * (1 + f3y1y)) ** (1/3) - 1\n    \n    # return answer\n    return s3\n```"
        ]
    },
    {
        "tables": [
            "| Investment | Expected Return(%) | Expected Standard Deviation(%) |\n|-----------|------------------|-----------------------------|\n| 1         | 19               | 3                           |\n| 2         | 21               | 9                           |\n| 3         | 24               | 20                          |\n| 4         | 19               | 35                          |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-138",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming the measure of risk aversion is -3, where is Mauricio Garcia, a daring investor who applies utility theory to select his investment portfolio, most likely to invest given a table of potential investments with expected returns and expected standard deviations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_aversion = -3\n    investments = {\n        1: {'return': 19, 'std_dev': 3},\n        2: {'return': 21, 'std_dev': 9},\n        3: {'return': 24, 'std_dev': 20},\n        4: {'return': 19, 'std_dev': 35}\n    }\n    \n    # Utility function: U = E(r) - 0.5 * A * \u03c3^2\n    # Where U is utility, E(r) is expected return, A is risk aversion, and \u03c3 is standard deviation\n    \n    # Calculate utility for each investment\n    utilities = {}\n    for investment, details in investments.items():\n        utility = details['return'] - 0.5 * risk_aversion * (details['std_dev'] ** 2)\n        utilities[investment] = utility\n    \n    # Find the investment with the highest utility\n    best_investment = max(utilities, key=utilities.get)\n    \n    # return answer\n    return best_investment\n```\n\nThis Python program calculates the utility for each investment using the utility function \\( U = E(r) - 0.5 \\times A \\times \\sigma^2 \\), where \\( U \\) is utility, \\( E(r) \\) is expected return, \\( A \\) is risk aversion, and \\( \\sigma \\) is standard deviation. It then selects the investment with the highest utility, which is the investment Mauricio Garcia is most likely to choose."
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-139",
        "python_solution": "",
        "ground_truth": null,
        "question": "A $1 million loan was granted to a vehicle manufacturing corporation by Bank B. The bank has projected a default likelihood of 10% for the vehicle manufacturer and an 80% recovery rate owing to strong collateral. What is the anticipated loss for the bank?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 1000000  # $1 million loan\n    default_likelihood = 0.10  # 10% default likelihood\n    recovery_rate = 0.80  # 80% recovery rate\n    \n    # Do math calculation to get the answer\n    expected_loss = loan_amount * default_likelihood * (1 - recovery_rate)\n    \n    # return answer\n    return expected_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-140",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company bond is set to mature in the coming year with a face value of 100 RMB, a market price of 88, a true default-free interest rate of 2.5%, anticipated inflation rate of 3%, and an unexpected inflation rate of 0.5%. Could you determine the implied credit risk premium embedded in the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    market_price = 88\n    default_free_interest_rate = 0.025\n    anticipated_inflation_rate = 0.03\n    unexpected_inflation_rate = 0.005\n    \n    # Calculate the total inflation rate\n    total_inflation_rate = anticipated_inflation_rate + unexpected_inflation_rate\n    \n    # Calculate the real interest rate\n    real_interest_rate = (1 + default_free_interest_rate) / (1 + total_inflation_rate) - 1\n    \n    # Calculate the yield to maturity (YTM)\n    YTM = (face_value / market_price) ** (1 / 1) - 1\n    \n    # Calculate the implied credit risk premium\n    implied_credit_risk_premium = YTM - real_interest_rate\n    \n    # return answer\n    return implied_credit_risk_premium\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-141",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a constant 6% interest rate, how much does a shareholder need to invest today in order to make $10,000 in twenty years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    future_value = 10000\n    interest_rate = 0.06\n    years = 20\n    \n    # Do math calculation to get the answer\n    present_value = future_value / ((1 + interest_rate) ** years)\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-142",
        "python_solution": "",
        "ground_truth": null,
        "question": "The corporation known as Delta Enterprises has authorized 160,000 shares of common stock. It has issued 88,000 shares and has 75,000 shares outstanding. How many shares of treasury stock does Delta Enterprises possess?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    authorized_shares = 160000\n    issued_shares = 88000\n    outstanding_shares = 75000\n    \n    # Do math calculation to get the answer\n    treasury_shares = issued_shares - outstanding_shares\n    \n    # return answer\n    return treasury_shares\n```"
        ]
    },
    {
        "tables": [
            "| Company M                    | $ millions |\n|---------------------------|----------|\n| Net Income                      | 485        |\n| Depreciation expense      | 270        |\n| Increase in accounts receivable | 59         |\n| Increase in accounts payable    | 33         |\n| Purchase of fixed assets        | 523        |\n| Increase in notes payable       | 15         |\n| Increase in long-term debt      | 60         |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-143",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is getting ready to assess the value of Company X's equity using the two-stage FCFE model. The anticipated growth rates for the initial three years are projected at 10%, 8%, and 6%, in that order, before potentially growing at 5% annually for an indefinite period. The necessary rate of return on equity for Company X stands at 10%. What is the fundamental value of Company X\u2019s equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_fcfe = 485  # Assuming initial FCFE is equal to Net Income for simplicity\n    growth_rates = [0.10, 0.08, 0.06]\n    terminal_growth_rate = 0.05\n    required_rate_of_return = 0.10\n    \n    # Calculate FCFE for the first three years\n    fcfe_values = [initial_fcfe * (1 + rate) for rate in growth_rates]\n    \n    # Calculate the present value of FCFE for the first three years\n    present_values = [fcfe / (1 + required_rate_of_return)**(i+1) for i, fcfe in enumerate(fcfe_values)]\n    \n    # Calculate the terminal value at the end of year 3\n    terminal_value = fcfe_values[-1] * (1 + terminal_growth_rate) / (required_rate_of_return - terminal_growth_rate)\n    \n    # Calculate the present value of the terminal value\n    present_value_terminal = terminal_value / (1 + required_rate_of_return)**3\n    \n    # Sum up the present values of the FCFE and the terminal value to get the fundamental value of equity\n    fundamental_value = sum(present_values) + present_value_terminal\n    \n    # return answer\n    return fundamental_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-144",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a buyer acquires a three-year bond that has a 5% annual coupon rate, is bought at a rate of 105.657223 per 100 of par value and has a yield-to-maturity of 3%, what would be the estimated modified duration of this bond given a 5-basis point shift in yield-to-maturity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.05  # 5% annual coupon rate\n    purchase_price = 105.657223  # bought at 105.657223 per 100 of par value\n    yield_to_maturity = 0.03  # 3% yield-to-maturity\n    yield_shift = 0.0005  # 5 basis point shift in yield-to-maturity\n    par_value = 100  # par value of the bond\n    years_to_maturity = 3  # three-year bond\n    \n    # Calculate the annual coupon payment\n    coupon_payment = coupon_rate * par_value\n    \n    # Calculate the Macaulay Duration\n    macaulay_duration = 0\n    for t in range(1, years_to_maturity + 1):\n        macaulay_duration += t * (coupon_payment / (1 + yield_to_maturity) ** t)\n    macaulay_duration += years_to_maturity * (par_value / (1 + yield_to_maturity) ** years_to_maturity)\n    macaulay_duration /= purchase_price\n    \n    # Calculate the Modified Duration\n    modified_duration = macaulay_duration / (1 + yield_to_maturity)\n    \n    # Estimate the change in price due to the yield shift\n    price_change = -modified_duration * yield_shift\n    \n    # Return the estimated modified duration\n    return modified_duration\n\n# Example usage\nprint(solution())\n```\n\nThis Python program calculates the estimated modified duration of a three-year bond given the specified parameters and a 5-basis point shift in yield-to-maturity. The program first calculates the Macaulay Duration and then converts it to the Modified Duration."
        ]
    },
    {
        "tables": [
            "|       | Beginning of Period Price($) | End of Period Price($) | Total Dividends($) |\n|-------|------------------------------|------------------------|--------------------|\n| A     | 8.00                         | 10.00                  | 0.50               |\n| B     | 22.00                        | 19.00                  | 1.20               |\n| C     | 25.00                        | 25.00                  | 1.50               |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-145",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, an analyst named Ahern from a financial firm gathered data for an equal-weighted index made up of assets A, B, and C: What is the index's price return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = [8.00, 22.00, 25.00]\n    end_prices = [10.00, 19.00, 25.00]\n    \n    # Calculate individual price returns\n    price_returns = [(end_prices[i] - beginning_prices[i]) / beginning_prices[i] for i in range(3)]\n    \n    # Calculate the equal-weighted index price return\n    index_price_return = sum(price_returns) / len(price_returns)\n    \n    # return answer\n    return index_price_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-146",
        "python_solution": "",
        "ground_truth": null,
        "question": "If John purchased a security for $55 in the first year, $60 in the second year, $64 in the third year, and $70 in the fourth year, what would be the harmonic mean of the price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prices = [55, 60, 64, 70]\n    \n    # Do math calculation to get the answer\n    harmonic_mean = len(prices) / sum(1/price for price in prices)\n    \n    # return answer\n    return harmonic_mean\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-147",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2013, AskIt bought a customer list for $100,000, expected to yield equal annual benefits for four years. It also registered $200,000 in goodwill from the takeover of a rival firm, with projections indicating substantial benefits for at least a decade. Furthermore, it allocated $300,000 on media slots publicizing the firm's donations of goods and services in the local community, a move which the CEO believes significantly boosted the company's reputation and anticipates it to yield rewards for five years. Consequently, how much should the company declare as amortization expense in 2014?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    customer_list_cost = 100000\n    customer_list_life = 4\n    goodwill_cost = 200000\n    goodwill_life = 10\n    media_slots_cost = 300000\n    media_slots_life = 5\n    \n    # Do math calculation to get the answer\n    customer_list_amortization = customer_list_cost / customer_list_life\n    goodwill_amortization = goodwill_cost / goodwill_life\n    media_slots_amortization = media_slots_cost / media_slots_life\n    \n    total_amortization_expense = customer_list_amortization + goodwill_amortization + media_slots_amortization\n    \n    # return answer\n    return total_amortization_expense\n```"
        ]
    },
    {
        "tables": [
            "| Bond Class      | Par Value (\u6bdb millions) |\n| ----------- | ----------- |\n| A (senior)      | 200       |\n| B (subordinated)   | 20        |\n| C (subordinated)   | 5        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-148",
        "python_solution": "",
        "ground_truth": null,
        "question": "At what level of default in par value would Bond Class A suffer a loss, if issued by a special purpose entity as part of asset-backed securities structure?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value_A = 200  # in millions\n    par_value_B = 20   # in millions\n    par_value_C = 5    # in millions\n    \n    # Do math calculation to get the answer\n    # Bond Class A would suffer a loss if the total default exceeds the sum of par values of Bond Classes B and C\n    total_subordinated_par_value = par_value_B + par_value_C\n    \n    # return answer\n    return total_subordinated_par_value\n\n# Example usage:\n# print(solution())  # This would output 25, meaning Bond Class A would suffer a loss if the default exceeds 25 million.\n```"
        ]
    },
    {
        "tables": [
            "|                                                    | \u00a5millions |\n|----------------------------------------------------|-----------|\n| Net income reported                                | 42        |\n| Dividends paid                                     | 7         |\n| Unrealized loss on investments carried at fair value through other comprehensive income | 3         |\n| Repurchase of company stock, to be held as Treasury stock | 6         |"
        ],
        "topic": "Accounting",
        "question_id": "test-149",
        "python_solution": "",
        "ground_truth": null,
        "question": "During the year, the following events happened: At the start of the year, an organization had total equity from shareholders comprising of \u00a5200 million in common share capital and \u00a550 million in preserved profits. What is the total equity from shareholders (in \u00a5 millions) at the conclusion of the year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_common_share_capital = 200  # in \u00a5 millions\n    initial_retained_earnings = 50  # in \u00a5 millions\n    net_income = 42  # in \u00a5 millions\n    dividends_paid = 7  # in \u00a5 millions\n    unrealized_loss = 3  # in \u00a5 millions\n    treasury_stock_repurchase = 6  # in \u00a5 millions\n    \n    # Do math calculation to get the answer\n    # Calculate the ending retained earnings\n    ending_retained_earnings = initial_retained_earnings + net_income - dividends_paid\n    \n    # Calculate the total equity from shareholders at the conclusion of the year\n    total_equity = initial_common_share_capital + ending_retained_earnings - unrealized_loss - treasury_stock_repurchase\n    \n    # return answer\n    return total_equity\n```"
        ]
    },
    {
        "tables": [
            "|                  | Asset 1 | Asset 2 | Asset 3 |\n|------------------|---------|---------|---------|\n| Expected return  | 5%      | 6%      | 7%      |\n| Portfolio weight | 0.20    | 0.30    | 0.50    |\n|                  | Asset 1 | Asset 2 | Asset 3 |\n| Asset 1          | 196     | 105     | 140     |\n| Asset 2          | 105     | 225     | 150     |\n| Asset 3          | 140     | 150     | 400     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-150",
        "python_solution": "",
        "ground_truth": null,
        "question": "The three-asset portfolio designed by Sophia Milligan is outlined below. Milligan estimated the portfolio return to be 6.3%. What is the standard deviation of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_returns = [0.05, 0.06, 0.07]\n    portfolio_weights = [0.20, 0.30, 0.50]\n    covariance_matrix = [\n        [196, 105, 140],\n        [105, 225, 150],\n        [140, 150, 400]\n    ]\n    \n    # Convert covariance matrix to correlation matrix\n    def convert_to_correlation(cov_matrix):\n        import numpy as np\n        cov_matrix = np.array(cov_matrix)\n        std_devs = np.sqrt(np.diag(cov_matrix))\n        outer_std = np.outer(std_devs, std_devs)\n        correlation_matrix = cov_matrix / outer_std\n        correlation_matrix[cov_matrix == 0] = 0\n        return correlation_matrix\n    \n    correlation_matrix = convert_to_correlation(covariance_matrix)\n    \n    # Calculate portfolio variance\n    import numpy as np\n    weights = np.array(portfolio_weights)\n    cov_matrix = np.array(covariance_matrix)\n    portfolio_variance = np.dot(weights.T, np.dot(cov_matrix, weights))\n    \n    # Calculate standard deviation\n    portfolio_std_dev = np.sqrt(portfolio_variance)\n    \n    # return answer\n    return portfolio_std_dev\n\n# Example usage\nprint(solution())\n```\n\nThis Python program calculates the standard deviation of the portfolio by first converting the covariance matrix to a correlation matrix, then computing the portfolio variance using the weights and the covariance matrix, and finally taking the square root of the portfolio variance to get the standard deviation."
        ]
    },
    {
        "tables": [
            "| Income Statement       | Millions ($) |\n|-----------------------|--------------|\n| Revenues              | 10.2         |\n| Variable operating costs | 4.6       |\n| Fixed operating costs    | 2.0       |\n| Operating income        | 3.6        |\n| Interest                | 1.2        |\n| Taxable income          | 2.4        |\n| Tax                     | 1.0        |\n| Net income              | 1.4        |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-151",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the degree of financial leverage (DFL) accessible for a company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_income = 3.6  # in millions\n    interest = 1.2  # in millions\n    net_income = 1.4  # in millions\n    \n    # Do math calculation to get the answer\n    # DFL = EBIT / (EBIT - Interest)\n    # EBIT (Earnings Before Interest and Taxes) is the same as Operating Income\n    ebit = operating_income\n    dfl = ebit / (ebit - interest)\n    \n    # return answer\n    return dfl\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-152",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the duration model with convexity adjustment, how much will the bond's price change, in percentage, if interest rates drop 2%, given that the bond's duration is 7.31 and its convexity is -24.85?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    duration = 7.31\n    convexity = -24.85\n    interest_rate_change = -0.02  # 2% drop in interest rates\n    \n    # Do math calculation to get the answer\n    # Calculate the price change due to duration\n    price_change_duration = -duration * interest_rate_change\n    \n    # Calculate the price change due to convexity\n    price_change_convexity = 0.5 * convexity * (interest_rate_change ** 2)\n    \n    # Total price change in percentage\n    total_price_change = price_change_duration + price_change_convexity\n    \n    # return answer\n    return total_price_change\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Price | Par Amount Held | Modified Duration |\n|------|-------|-----------------|-------------------|\n| A    | 101.43| 3               | 2.36              |\n| B    | 84.89 | 5               | 4.13              |\n| C    | 121.87| 8               | 6.27              |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-153",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the given portfolio of bonds (par amounts listed in millions of USD). What is the value of the portfolio's DV01 (dollar value of 1 basis point)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_A_price = 101.43\n    bond_A_par_amount = 3\n    bond_A_modified_duration = 2.36\n    \n    bond_B_price = 84.89\n    bond_B_par_amount = 5\n    bond_B_modified_duration = 4.13\n    \n    bond_C_price = 121.87\n    bond_C_par_amount = 8\n    bond_C_modified_duration = 6.27\n    \n    # Do math calculation to get the answer\n    # Calculate the DV01 for each bond\n    bond_A_dv01 = bond_A_price * bond_A_par_amount * bond_A_modified_duration * 0.0001\n    bond_B_dv01 = bond_B_price * bond_B_par_amount * bond_B_modified_duration * 0.0001\n    bond_C_dv01 = bond_C_price * bond_C_par_amount * bond_C_modified_duration * 0.0001\n    \n    # Sum the DV01s to get the portfolio's DV01\n    portfolio_dv01 = bond_A_dv01 + bond_B_dv01 + bond_C_dv01\n    \n    # return answer\n    return portfolio_dv01\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| Coupon rate  | 5%  |\n| Interest paid  | semiannually  |\n| Mature time  | 2 years  |\n| Required rate of return  | 6%  |\n| Par value of the bond  | 100 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-154",
        "python_solution": "",
        "ground_truth": null,
        "question": "The bond purchased by Brian has some detailed information summarized below. What is the price of this bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.05\n    interest_paid_frequency = 2  # semiannually\n    mature_time = 2  # years\n    required_rate_of_return = 0.06\n    par_value = 100\n    \n    # Calculate the coupon payment\n    coupon_payment = coupon_rate * par_value / interest_paid_frequency\n    \n    # Calculate the number of periods\n    periods = mature_time * interest_paid_frequency\n    \n    # Calculate the discount factor\n    discount_factor = (1 + required_rate_of_return / interest_paid_frequency)\n    \n    # Initialize the present value of the bond\n    present_value = 0\n    \n    # Calculate the present value of the coupon payments\n    for i in range(1, periods + 1):\n        present_value += coupon_payment / (discount_factor ** i)\n    \n    # Add the present value of the par value at maturity\n    present_value += par_value / (discount_factor ** periods)\n    \n    # return the price of the bond\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-155",
        "python_solution": "",
        "ground_truth": null,
        "question": "The XYZ Company is situated in a region with a 40 percent business tax rate on pre-tax income and a 30 percent individual tax rate on dividends. XYZ hands out all its post-tax income to its shareholders. What is the effective tax rate on XYZ's pre-tax income that is distributed as dividends?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    business_tax_rate = 0.40\n    individual_tax_rate = 0.30\n    \n    # Do math calculation to get the answer\n    # Calculate the post-tax income after business tax\n    post_tax_income = 1 - business_tax_rate\n    \n    # Calculate the effective tax rate on distributed dividends\n    # This is the combined effect of business tax and individual tax on dividends\n    effective_tax_rate = 1 - (post_tax_income * (1 - individual_tax_rate))\n    \n    # return answer\n    return effective_tax_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-156",
        "python_solution": "",
        "ground_truth": null,
        "question": "A note with a par of $100 and a semiannually paid coupon rate of 6%, with a YTM of 8% and a 10-year maturity timeframe. What is the DV01 of this note?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    coupon_rate = 0.06\n    YTM = 0.08\n    maturity = 10\n    frequency = 2  # semiannually\n\n    # Calculate the coupon payment\n    coupon_payment = par_value * coupon_rate / frequency\n\n    # Calculate the number of periods\n    periods = maturity * frequency\n\n    # Calculate the present value of the coupon payments\n    present_value_coupons = 0\n    for t in range(1, periods + 1):\n        present_value_coupons += coupon_payment / ((1 + YTM / frequency) ** t)\n\n    # Calculate the present value of the principal\n    present_value_principal = par_value / ((1 + YTM / frequency) ** periods)\n\n    # Calculate the price of the bond\n    bond_price = present_value_coupons + present_value_principal\n\n    # Calculate the DV01\n    # DV01 is the change in price for a 1 basis point change in yield\n    basis_point = 0.0001\n    new_YTM = YTM + basis_point\n\n    # Calculate the new present value of the coupon payments\n    new_present_value_coupons = 0\n    for t in range(1, periods + 1):\n        new_present_value_coupons += coupon_payment / ((1 + new_YTM / frequency) ** t)\n\n    # Calculate the new present value of the principal\n    new_present_value_principal = par_value / ((1 + new_YTM / frequency) ** periods)\n\n    # Calculate the new price of the bond\n    new_bond_price = new_present_value_coupons + new_present_value_principal\n\n    # Calculate DV01\n    DV01 = bond_price - new_bond_price\n\n    # return answer\n    return DV01\n```"
        ]
    },
    {
        "tables": [
            "| Amount | $1,000.00 |\n| ------- | ------------ |\n| Coupon | 5.00% |\n| Maturity | 3 years |\n| Probability of Default | Year 1: 2.0%. Year 2: 2.5%. Year 3: 3.0% |\n| Recovery Rate | 40% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-157",
        "python_solution": "",
        "ground_truth": null,
        "question": "BTB Bank is a top-tier corporate and institutional bank that runs a client-facing credit default swap (CDS) desk. Steve McQueen is a CDS client strategist. Paul Starr is BTB's chief CDS trader. McQueen and Starr are setting up a meeting with Adam Lopez, a portfolio manager for AEB Fund, to explore investment and trading techniques concerning bonds, CDSs, and equities. Lopez kick-starts the conversation by requesting a recap on fundamental CDS principles and parameters. McQueen responds by explaining that a CDS comprises both a premium leg and a payment leg and that anticipated loss forms one of the elements that impact its valuation. McQueen provides data for a bond issued by Zeus Corporation. According to the facts presented in Exhibit 1, what is the forecasted loss for the Zeus Corporation bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    amount = 1000  # in dollars\n    coupon = 0.05  # 5.00%\n    maturity = 3  # in years\n    probability_of_default = [0.02, 0.025, 0.03]  # Year 1: 2.0%, Year 2: 2.5%, Year 3: 3.0%\n    recovery_rate = 0.40  # 40%\n    \n    # Do math calculation to get the answer\n    forecasted_loss = 0\n    for year in range(maturity):\n        loss_given_default = amount * (1 - recovery_rate)\n        expected_loss = loss_given_default * probability_of_default[year]\n        forecasted_loss += expected_loss\n    \n    # return answer\n    return forecasted_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-158",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the interest from the coupon is reinvested at the bond's YTM, how much interest will a financier receive over the bond's 10-year lifespan if they buy a bond with a 6% annual coupon for $1,000 at par and holds it until it matures?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 1000  # Bond purchased at par value\n    annual_coupon_rate = 0.06  # 6% annual coupon rate\n    years_to_maturity = 10  # Bond's lifespan\n    ytm = 0.06  # Assuming YTM is equal to the coupon rate for simplicity\n\n    # Calculate the total interest received over the bond's lifespan\n    # Since the coupon is reinvested at the YTM, we use the formula for compound interest\n    total_interest = initial_investment * ((1 + ytm) ** years_to_maturity - 1)\n\n    # return answer\n    return total_interest\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-159",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer bought a stock 20 years ago for $15 and it paid no dividends throughout the investment period, but it had an annual compounded rate of 16%. Based on this information, what is the stock's value today?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 15\n    annual_rate = 0.16\n    years = 20\n    \n    # Do math calculation to get the answer\n    final_value = initial_price * (1 + annual_rate) ** years\n    \n    # return answer\n    return final_value\n```"
        ]
    },
    {
        "tables": [
            "| Information Ratio | 0.66 |\n|-------------------|------|\n| Information Coefficient | 0.5 |\n| Transfer Coefficient | 0.89 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-160",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on essential foundational rules, the researchers gathered some data. Could you compute the annual number of autonomous choices made?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    information_ratio = 0.66\n    information_coefficient = 0.5\n    transfer_coefficient = 0.89\n    \n    # Do math calculation to get the answer\n    # The formula to compute the annual number of autonomous choices is:\n    # Number of Choices = Information Ratio / (Information Coefficient * Transfer Coefficient)\n    number_of_choices = information_ratio / (information_coefficient * transfer_coefficient)\n    \n    # return answer\n    return number_of_choices\n```"
        ]
    },
    {
        "tables": [
            "|      | Current Year ($ thousands) | Projection for Next Year ($ thousands) |\n|------|---------------------------|---------------------------------------|\n| Sales | 2,200 | 2,500 |\n| Variable operating costs (% of sales) | 28% | 30% |\n| Fixed operating costs | 1,400 | 1,400 |\n| Tax rate | 25% | 25% |\n| Dividends paid | 55 | 60 |\n| Interest bearing debt at 5% | 500 | 500 |"
        ],
        "topic": "Accounting",
        "question_id": "test-161",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the chosen details, what is the projected net income (in $ thousands) for the corporation next year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales_next_year = 2500\n    variable_operating_costs_percentage_next_year = 30 / 100\n    fixed_operating_costs_next_year = 1400\n    tax_rate_next_year = 25 / 100\n    interest_bearing_debt_next_year = 500\n    interest_rate = 5 / 100\n\n    # Do math calculation to get the answer\n    # Calculate variable operating costs\n    variable_operating_costs_next_year = sales_next_year * variable_operating_costs_percentage_next_year\n    # Calculate total operating costs\n    total_operating_costs_next_year = variable_operating_costs_next_year + fixed_operating_costs_next_year\n    # Calculate earnings before interest and taxes (EBIT)\n    ebit_next_year = sales_next_year - total_operating_costs_next_year\n    # Calculate interest expense\n    interest_expense_next_year = interest_bearing_debt_next_year * interest_rate\n    # Calculate earnings before taxes (EBT)\n    ebt_next_year = ebit_next_year - interest_expense_next_year\n    # Calculate taxes\n    taxes_next_year = ebt_next_year * tax_rate_next_year\n    # Calculate net income\n    net_income_next_year = ebt_next_year - taxes_next_year\n\n    # return answer\n    return net_income_next_year\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-162",
        "python_solution": "",
        "ground_truth": null,
        "question": "The floral products seller, Lavender Bloom Corp., announced a yearly cost of goods sold amounting to $75 million. There was an increase in total assets by $55 million, though there was a decrease in inventory by $6 million. Meanwhile, total liabilities escalated by $45 million and there was a surge in accounts payable by $2 million. What would be the probable total of cash that the company paid to its vendors?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold = 75000000\n    increase_in_total_assets = 55000000\n    decrease_in_inventory = 6000000\n    increase_in_total_liabilities = 45000000\n    increase_in_accounts_payable = 2000000\n    \n    # Do math calculation to get the answer\n    # Cash paid to vendors can be calculated by adjusting the cost of goods sold for changes in inventory and accounts payable\n    cash_paid_to_vendors = cost_of_goods_sold + decrease_in_inventory - increase_in_accounts_payable\n    \n    # return answer\n    return cash_paid_to_vendors\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-163",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the equity's proportion in a business's capital structure, with a marginal tax rate of 30%, a weighted average cost of capital of 7.4%, a before-tax cost of debt of 5%, and a 10% cost of equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    marginal_tax_rate = 0.30\n    wacc = 0.074\n    cost_of_debt_before_tax = 0.05\n    cost_of_equity = 0.10\n    \n    # Do math calculation to get the answer\n    # WACC = (E/V) * Re + (D/V) * Rd * (1 - Tc)\n    # Where:\n    # E = Market value of equity\n    # D = Market value of debt\n    # V = E + D\n    # Re = Cost of equity\n    # Rd = Cost of debt\n    # Tc = Corporate tax rate\n    \n    # We need to solve for E/V (proportion of equity in the capital structure)\n    # Rearrange the WACC formula to solve for E/V:\n    # (E/V) * Re + (D/V) * Rd * (1 - Tc) = WACC\n    # (E/V) * Re + (1 - E/V) * Rd * (1 - Tc) = WACC\n    # (E/V) * Re + Rd * (1 - Tc) - (E/V) * Rd * (1 - Tc) = WACC\n    # (E/V) * (Re - Rd * (1 - Tc)) = WACC - Rd * (1 - Tc)\n    # E/V = (WACC - Rd * (1 - Tc)) / (Re - Rd * (1 - Tc))\n    \n    Rd_after_tax = cost_of_debt_before_tax * (1 - marginal_tax_rate)\n    E_over_V = (wacc - Rd_after_tax) / (cost_of_equity - Rd_after_tax)\n    \n    # return answer\n    return E_over_V\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-164",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is R2R^2R2 if the estimate for beta, \u03b2^=0\\widehat\\beta = 0\u03b2\u200b=0?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beta_hat = 0\n    \n    # Do math calculation to get the answer\n    R2R2R2 = beta_hat ** 2\n    \n    # return answer\n    return R2R2R2\n```"
        ]
    },
    {
        "tables": [
            "| Current year's earnings per share | $2.50 |\n|---|---|\n| Dividend payout ratio | 60% |\n| Dividend growth rate expected during Year 1 and 2 | 25% |\n| Dividend growth rate expected after Year 2 | 5% |\n| Investors' required rate of return | 12% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-165",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share value of the common stock a stockholder has collected data on for possible investment in a business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_eps = 2.50\n    dividend_payout_ratio = 0.60\n    dividend_growth_rate_year1_2 = 0.25\n    dividend_growth_rate_after_year2 = 0.05\n    required_rate_of_return = 0.12\n\n    # Calculate the initial dividend\n    initial_dividend = current_eps * dividend_payout_ratio\n\n    # Calculate dividends for Year 1 and Year 2\n    dividend_year1 = initial_dividend * (1 + dividend_growth_rate_year1_2)\n    dividend_year2 = dividend_year1 * (1 + dividend_growth_rate_year1_2)\n\n    # Calculate the dividend from Year 3 onwards using the Gordon Growth Model\n    dividend_year3 = dividend_year2 * (1 + dividend_growth_rate_after_year2)\n    terminal_value = dividend_year3 / (required_rate_of_return - dividend_growth_rate_after_year2)\n\n    # Present value of dividends and terminal value\n    present_value_year1 = dividend_year1 / (1 + required_rate_of_return)\n    present_value_year2 = dividend_year2 / (1 + required_rate_of_return)**2\n    present_value_terminal = terminal_value / (1 + required_rate_of_return)**2\n\n    # Sum of present values to get the per share value\n    per_share_value = present_value_year1 + present_value_year2 + present_value_terminal\n\n    # return answer\n    return per_share_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-166",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, Bob Inc. acquired a production equipment for $60,000, which is anticipated to produce an annual cash inflow of $25,000 for a duration of six years. The company plans to depreciate the equipment over six years for accounting reasons. Nonetheless, the tax department approximates the useful life of the equipment to be 5 years. Assuming a tax rate of 40% and the equipment has no residual value. What would be the tax payable by Bob Inc. in the 6th year if they use the straight-line depreciation method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 60000\n    annual_cash_inflow = 25000\n    useful_life_company = 6\n    useful_life_tax_department = 5\n    tax_rate = 0.40\n    residual_value = 0\n\n    # Calculate depreciation per year for both company and tax department\n    depreciation_per_year_company = initial_cost / useful_life_company\n    depreciation_per_year_tax_department = initial_cost / useful_life_tax_department\n\n    # Calculate taxable income for each year\n    taxable_income_years = [annual_cash_inflow - depreciation_per_year_tax_department for _ in range(useful_life_tax_department)]\n    \n    # Calculate taxable income for the 6th year\n    taxable_income_6th_year = annual_cash_inflow - depreciation_per_year_company\n\n    # Calculate tax payable for the 6th year\n    tax_payable_6th_year = taxable_income_6th_year * tax_rate\n\n    # return answer\n    return tax_payable_6th_year\n```"
        ]
    },
    {
        "tables": [
            "|                            |                |\n|----------------------------|----------------|\n| Exhibit 1 Commercial Property Information |       |\n| Net operating income       | $700,000       |\n| Mortgage on property       | $9,000,000     |\n| Debt service               | $600,000       |\n| Market value of property   | $10,000,000    |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-167",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson inquires from Smith about the most frequently utilized financial ratios for assessing private real estate investments, such as commercial property. Based on the data in Exhibit 1, what is the cash-on-cash return for the property that Smith requires analysis for?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_operating_income = 700000\n    debt_service = 600000\n    \n    # Do math calculation to get the answer\n    cash_on_cash_return = net_operating_income / debt_service\n    \n    # return answer\n    return cash_on_cash_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-168",
        "python_solution": "",
        "ground_truth": null,
        "question": "By employing the Black-Scholes model, determine the worth of a European call option with these details: spot price = 100; strike rate = 110; risk-free interest rate = 10%; duration until expiration = 0.5 years; N(d1) is 0.457185 and N(d2) is 0.374163.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_price = 100\n    strike_rate = 110\n    risk_free_interest_rate = 0.10  # 10% as a decimal\n    time_to_expiration = 0.5  # 0.5 years\n    N_d1 = 0.457185\n    N_d2 = 0.374163\n\n    # Do math calculation to get the answer\n    # Black-Scholes formula for a European call option:\n    # C = S * N(d1) - X * e^(-r * T) * N(d2)\n    import math\n    call_option_price = spot_price * N_d1 - strike_rate * math.exp(-risk_free_interest_rate * time_to_expiration) * N_d2\n\n    # return answer\n    return call_option_price\n```"
        ]
    },
    {
        "tables": [
            "| xor z 0 |     | 0.01 0.02 0.03 0.04 0.05 0.06 0.07                                   | 0.08 | 0.09 |\n| 0.10 |     | 0.5398 0.5438 0.5478 0.5517 0.5557 0.5596 0.5636 0.5675 0.5714 0.5753 |     |     |\n| 0.20 |     | 0.5793 0.5832 0.5871 0.5910 0.5948 0.5987 0.6026 0.6064 0.6103 0.6141 |     |     |\n| 0.30 |     | 0.6179 0.6217 0.6255 0.6293 0.6331 0.6368 0.6406 0.6443 0.6480 0.6517 |     |     |\n| 0.40 |     | 0.6554 0.6591 0.6628 0.6664 0.6700 0.6736 0.6772 0.6808 0.6844 0.6879 |     |     |\n| 1.10 |     | 0.8643 0.8665 0.8686 0.8708 0.8729 0.8749 0.8770 0.8790 0.8810 0.883  |     |     |\n| 1.20 | 0.8849 0.8869 0.8888 0.8907 0.8925 0.8944 0.8962 0.8980 0.8997 0.9015 |      |     |\n| 1.30 | 0.9032 0.9049 0.9066 0.9082 0.9099 0.9115 0.9131 0.9147 0.9162 0.9177 |      |     |\n| 1."
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-169",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the given extract from the cumulative distribution function for the standard normal random variable table: Cumulative Probabilities for a Standard Normal DistributionP(Z \u2264 x) = N(x) for x \u2265 0 or P(Z \u2264 z) = N(z) for z \u2265 0, If a variable follows a normal distribution with an average of 2.00 and a variance of 16.00, what's the likelihood of getting a value that is 7.40 or lower?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean = 2.00\n    variance = 16.00\n    std_dev = variance ** 0.5\n    value = 7.40\n    \n    # Standardize the value\n    z = (value - mean) / std_dev\n    \n    # Look up the z-value in the table\n    # For z = 1.35 (closest to 1.35 from the table)\n    z_value = 1.35\n    cumulative_probability = 0.9115  # From the table for z = 1.35\n    \n    # Return the cumulative probability\n    return cumulative_probability\n\n# Example usage:\nprint(solution())\n```\n\nThis program calculates the z-score for the given value (7.40) in a normal distribution with a mean of 2.00 and a variance of 16.00. It then looks up the corresponding cumulative probability from the provided table and returns it. The z-score of 1.35 is used as it is the closest value available in the table to the calculated z-score."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-170",
        "python_solution": "",
        "ground_truth": null,
        "question": "If under LIFO, the ABC organization reported a COGS of $500,000, and an ending inventory of $600,000 in 2017, and it was noted in the footnotes that LIFO reserve increased by $10,000, what would be its cost of goods sold if ABC organization switched its accounting method from LIFO to FIFO?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cogs_lifo = 500000\n    lifo_reserve_increase = 10000\n    \n    # Do math calculation to get the answer\n    cogs_fifo = cogs_lifo - lifo_reserve_increase\n    \n    # return answer\n    return cogs_fifo\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-171",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that in the futures market, the 1-year forward rate stands at NZD/AUD 1.1079. Given that the yearly interest rate is 2.5% in Australia (AUD) and 3% in New Zealand (NZD), what would be the NZD/AUD spot rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rate = 1.1079  # 1-year forward rate NZD/AUD\n    interest_rate_AUD = 0.025  # Yearly interest rate in Australia (AUD)\n    interest_rate_NZD = 0.03  # Yearly interest rate in New Zealand (NZD)\n    \n    # Do math calculation to get the answer\n    # Using the Interest Rate Parity formula: F = S * (1 + r_NZD) / (1 + r_AUD)\n    # Solving for the spot rate S:\n    spot_rate = forward_rate * (1 + interest_rate_AUD) / (1 + interest_rate_NZD)\n    \n    # return answer\n    return spot_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-172",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a credit commitment totals $10 million, with $8.5 million currently still due, and there's a 1% chance of default with a recovery rate of 40%, what's the predicted loss for the credit?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_credit_commitment = 10000000\n    current_due = 8500000\n    default_chance = 0.01\n    recovery_rate = 0.40\n    \n    # Do math calculation to get the answer\n    potential_loss = current_due * default_chance\n    actual_loss = potential_loss * (1 - recovery_rate)\n    \n    # return answer\n    return actual_loss\n```"
        ]
    },
    {
        "tables": [
            "| Height interval | Absolute Frequency |\n|----------------|---------------------|\n| 155~160         | 10                       |\n| 160~165         | 20                       |\n| 165~170         | 30                       |\n| 170~175         | 24                       |\n| 175~180         | 10                       |\n| 180~185         | 6                         |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-173",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the relative frequency of the height range \"170 ~175\" in the student height distribution for the class?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    absolute_frequency_170_175 = 24\n    total_students = 10 + 20 + 30 + 24 + 10 + 6\n    \n    # Do math calculation to get the answer\n    relative_frequency_170_175 = absolute_frequency_170_175 / total_students\n    \n    # return answer\n    return relative_frequency_170_175\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-174",
        "python_solution": "",
        "ground_truth": null,
        "question": "Calculate the forward price of a 6-month forward contract on a bond that is priced at $1,058, has a biannual coupon payment of $30 and had its last payment three months ago, given a continuous interest rate of 5%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_price = 1058\n    coupon_payment = 30\n    time_since_last_payment = 0.25  # in years (3 months)\n    time_to_next_payment = 0.25  # in years (3 months)\n    time_to_maturity = 0.5  # in years (6 months)\n    interest_rate = 0.05  # continuous interest rate\n\n    # Calculate the present value of the next coupon payment\n    pv_coupon = coupon_payment * (1 - time_since_last_payment) * (1 - time_to_next_payment)\n\n    # Calculate the forward price\n    forward_price = (bond_price - pv_coupon) * (1 + interest_rate) ** time_to_maturity\n\n    # return answer\n    return forward_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-175",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Lawson Company has recently paid a dividend of $1.75 per share. If the necessary annual return rate is 12.3 percent and dividends are predicted to consistently grow at 9.2 percent per year without end, what is the intrinsic worth of Lawson Company stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend = 1.75\n    required_return_rate = 0.123\n    growth_rate = 0.092\n    \n    # Do math calculation to get the answer\n    intrinsic_worth = dividend / (required_return_rate - growth_rate)\n    \n    # return answer\n    return intrinsic_worth\n```"
        ]
    },
    {
        "tables": [
            "|        | Spot Rate | Expected Spot Rate in One Year |\n|--------|-----------|------------------------|\n| USD/EUR| 1.3960    | 1.3860                 |\n| USD/CAD| 1.0110    | 1.0300                 |\n| EUR/GBP| 1.2850    | 1.2790                 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-176",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to a study carried out by a broker, what is the predicted increase (%) in value of the Canadian dollar (CAD) compared to the British pound (GBP)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    USD_CAD_spot = 1.0110\n    USD_CAD_expected = 1.0300\n    EUR_GBP_spot = 1.2850\n    EUR_GBP_expected = 1.2790\n    \n    # Convert USD/CAD to GBP/CAD spot and expected rates\n    GBP_CAD_spot = 1 / (USD_CAD_spot * EUR_GBP_spot)\n    GBP_CAD_expected = 1 / (USD_CAD_expected * EUR_GBP_expected)\n    \n    # Calculate the percentage increase in value of CAD compared to GBP\n    increase_percentage = ((GBP_CAD_expected - GBP_CAD_spot) / GBP_CAD_spot) * 100\n    \n    # return answer\n    return increase_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Coupon Rate | Time-to-Maturity |\n|------|-------------|------------------|\n| A    | 5%          | 2 years          |\n| B    | 3%          | 2 years          |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-177",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering two bonds that pay interest annually, what is the price difference between Bond 1 and Bond 2 per 100 of par value at a market discount rate of 4%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate_A = 0.05\n    coupon_rate_B = 0.03\n    time_to_maturity = 2\n    market_discount_rate = 0.04\n    par_value = 100\n    \n    # Function to calculate bond price\n    def bond_price(coupon_rate, time_to_maturity, market_discount_rate, par_value):\n        price = 0\n        for t in range(1, time_to_maturity + 1):\n            price += (coupon_rate * par_value) / (1 + market_discount_rate) ** t\n        price += par_value / (1 + market_discount_rate) ** time_to_maturity\n        return price\n    \n    # Calculate bond prices\n    price_A = bond_price(coupon_rate_A, time_to_maturity, market_discount_rate, par_value)\n    price_B = bond_price(coupon_rate_B, time_to_maturity, market_discount_rate, par_value)\n    \n    # Calculate the price difference\n    price_difference = price_A - price_B\n    \n    # return answer\n    return price_difference\n```"
        ]
    },
    {
        "tables": [
            "|                     | Bond A       | Bond B       | Bond C       |\n|---------------------|--------------|--------------|--------------|\n| Time to maturity (years) | 10     | 6     | 4     |\n| Par value         | $10,000,000  | $10,000,000  | $10,000,000  |\n| Market value      | $9,323,381   | $11,189,092  | $10,000,000  |\n| Annualized modified duration  | 7.3105  | 4.6880  | 3.4370  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-178",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the data on three securities: Security X, Security Y, and Security Z. A dividend income portfolio includes Security X and Security Y. If an additional $10 million is invested into the portfolio to acquire Security Z, what will be the yearly modified duration of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    security_x_market_value = 9323381  # Bond A's market value\n    security_x_modified_duration = 7.3105  # Bond A's modified duration\n    security_y_market_value = 11189092  # Bond B's market value\n    security_y_modified_duration = 4.6880  # Bond B's modified duration\n    security_z_market_value = 10000000  # Additional investment for Bond C\n    security_z_modified_duration = 3.4370  # Bond C's modified duration\n    \n    # Calculate the total market value of the portfolio after adding Security Z\n    total_market_value = security_x_market_value + security_y_market_value + security_z_market_value\n    \n    # Calculate the weighted average modified duration of the portfolio\n    weighted_duration_x = (security_x_market_value / total_market_value) * security_x_modified_duration\n    weighted_duration_y = (security_y_market_value / total_market_value) * security_y_modified_duration\n    weighted_duration_z = (security_z_market_value / total_market_value) * security_z_modified_duration\n    \n    # Sum the weighted durations to get the portfolio's yearly modified duration\n    portfolio_modified_duration = weighted_duration_x + weighted_duration_y + weighted_duration_z\n    \n    # return answer\n    return portfolio_modified_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-179",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the base value is $20 at expiration, the strike price is $18, what is the worth of the European put?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    base_value_at_expiration = 20\n    strike_price = 18\n    \n    # Do math calculation to get the answer\n    # The worth of a European put option is the maximum of 0 or the strike price minus the base value at expiration\n    worth_of_put = max(0, strike_price - base_value_at_expiration)\n    \n    # return answer\n    return worth_of_put\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| Net income  | \\$1,000,000.00  |\n| Debt outstanding with a coupon rate of 4%  | \\$5,000,000.00  |\n| Preferred stocks with dividend rate of 4%  | \\$1,000,000.00  |\n| Tax rate  | 35%  |\n| Average weighted number of shares issued  | 500,000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-180",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher gathered information about a corporation wherein the preferred shares can be transformed into 10,000 ordinary shares and the debt cannot be converted. What is the diluted earnings per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 1000000\n    debt_outstanding = 5000000\n    debt_coupon_rate = 0.04\n    preferred_stocks = 1000000\n    preferred_dividend_rate = 0.04\n    tax_rate = 0.35\n    average_shares_issued = 500000\n    convertible_preferred_shares = 10000\n\n    # Calculate interest expense on debt after tax\n    interest_expense = debt_outstanding * debt_coupon_rate * (1 - tax_rate)\n\n    # Calculate preferred dividends\n    preferred_dividends = preferred_stocks * preferred_dividend_rate\n\n    # Adjust net income for interest expense and preferred dividends\n    adjusted_net_income = net_income + interest_expense - preferred_dividends\n\n    # Calculate total number of shares after conversion of preferred shares\n    total_shares = average_shares_issued + convertible_preferred_shares\n\n    # Calculate diluted earnings per share\n    diluted_eps = adjusted_net_income / total_shares\n\n    # return answer\n    return diluted_eps\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-181",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there are 225 days in a year, what is the highest number of daily losses that can go beyond the 1-day 99% VaR acceptable in a 1-year backtest for a financial risk analyst to determine, with 95% certainty, that the model is properly calibrated?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    days_in_year = 225\n    confidence_level = 0.95\n    var_confidence_level = 0.99\n\n    # Do math calculation to get the answer\n    # Calculate the number of expected losses beyond 1-day 99% VaR in a year\n    expected_losses = days_in_year * (1 - var_confidence_level)\n\n    # Calculate the highest number of daily losses that can go beyond the 1-day 99% VaR\n    # to still be within the acceptable range for a 95% confidence level\n    highest_acceptable_losses = expected_losses / (1 - confidence_level)\n\n    # return answer\n    return highest_acceptable_losses\n```"
        ]
    },
    {
        "tables": [
            "| estimated beta of TMT Inc. against the S&P 500 Index | 1.4   |\n|------------------------------------------------|-------|\n| 10-year Treasury bond yield                             | 3.5% |\n| Return on S&P 500 Index used as a proxy for the market | 8%   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-182",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is contemplating incorporating ABC Corp. into his portfolio. The last dividend payment of the company was 1.45 per share. He observes that the company's dividends have experienced an average growth rate of 6 percent. Using the data provided below, could you calculate the stock\u2019s value of ABC Corp.?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    last_dividend = 1.45\n    dividend_growth_rate = 0.06\n    required_return = 0.08  # Assuming the return on S&P 500 Index is the required return\n\n    # Do math calculation to get the answer\n    # Using the Gordon Growth Model (Dividend Discount Model)\n    stock_value = last_dividend * (1 + dividend_growth_rate) / (required_return - dividend_growth_rate)\n\n    # return answer\n    return stock_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-183",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, the quarterly returns for the S&P 500 were 8%, -5%, 3% and 1%. What is the S&P 500's quarterly geometric mean return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [1.08, 0.95, 1.03, 1.01]  # Convert percentages to multipliers\n    \n    # Do math calculation to get the answer\n    geometric_mean = 1\n    for ret in returns:\n        geometric_mean *= ret\n    geometric_mean **= (1 / len(returns))\n    \n    # Convert geometric mean back to percentage\n    geometric_mean_percentage = (geometric_mean - 1) * 100\n    \n    # return answer\n    return geometric_mean_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-184",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher establishes that 60% of all US retirement funds possess hedge funds. In assessing this probability, a random array of 10 US retirement funds is selected. Utilizing the binomial probability function, what is the likelihood that precisely 6 of the 10 organizations in the group possess hedge funds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p = 0.6  # Probability of a retirement fund possessing hedge funds\n    n = 10   # Number of retirement funds selected\n    k = 6    # Number of retirement funds possessing hedge funds\n    \n    # Import necessary library for binomial coefficient calculation\n    from math import factorial\n    \n    # Function to calculate binomial coefficient\n    def binomial_coefficient(n, k):\n        return factorial(n) / (factorial(k) * factorial(n - k))\n    \n    # Do math calculation to get the answer\n    binomial_prob = binomial_coefficient(n, k) * (p ** k) * ((1 - p) ** (n - k))\n    \n    # return answer\n    return binomial_prob\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-185",
        "python_solution": "",
        "ground_truth": null,
        "question": "A finance expert is working out the beta for a collection of large-cap utility firm shares. They establish that the correlation between the portfolio's return and the benchmark's return stands at 0.7, the portfolio return's volatility is 6.5%, and the benchmark return's volatility is 5.0%. What is the portfolio's beta in relation to its benchmark?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.7\n    portfolio_volatility = 0.065\n    benchmark_volatility = 0.05\n    \n    # Do math calculation to get the answer\n    beta = correlation * (portfolio_volatility / benchmark_volatility)\n    \n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-186",
        "python_solution": "",
        "ground_truth": null,
        "question": "What are the odds of Jack Frost correctly answering more than 3 questions on a challenging multiple choice test that contains 5 questions, each with four nearly identical options, if he's answering randomly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_questions = 5\n    correct_choices_per_question = 1\n    total_choices_per_question = 4\n    \n    # Probability of answering a question correctly by guessing\n    p_correct = correct_choices_per_question / total_choices_per_question\n    \n    # Probability of answering more than 3 questions correctly\n    from math import comb\n    p_more_than_3_correct = sum(comb(total_questions, k) * (p_correct ** k) * ((1 - p_correct) ** (total_questions - k)) for k in range(4, total_questions + 1))\n    \n    # return answer\n    return p_more_than_3_correct\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-187",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial consultant is studying the potential anticipated returns of a novel fund created to imitate the directional shifts of the China Shanghai Composite Stock Market Index (SHANGHAI), but with double the volatility of the index. SHANGHAI has an anticipated yearly return of 7.6% and a volatility of 14.0%, and the risk-free rate is 3.0% annually. If the correlation between the fund\u2019s returns and the index's returns is 1.0, what would be the projected return of the fund according to the CAPM?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 3.0  # Risk-free rate in percentage\n    market_return = 7.6   # Anticipated yearly return of SHANGHAI in percentage\n    market_volatility = 14.0  # Volatility of SHANGHAI in percentage\n    fund_volatility = 2 * market_volatility  # Double the volatility of SHANGHAI\n    correlation = 1.0  # Correlation between fund's returns and index's returns\n    \n    # Calculate the beta of the fund\n    beta = (fund_volatility / market_volatility) * correlation\n    \n    # Do math calculation to get the answer using CAPM formula: E(R_i) = R_f + \u03b2_i * (E(R_m) - R_f)\n    fund_return = risk_free_rate + beta * (market_return - risk_free_rate)\n    \n    # return answer\n    return fund_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-188",
        "python_solution": "",
        "ground_truth": null,
        "question": "The bond's clean price was set at $1,000. The transaction occurred between coupon dates, with accrued interest equating to $35.50 per bond. What is the bond's dirty price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    clean_price = 1000\n    accrued_interest = 35.50\n    \n    # Do math calculation to get the answer\n    dirty_price = clean_price + accrued_interest\n    \n    # return answer\n    return dirty_price\n```"
        ]
    },
    {
        "tables": [
            "| | Cdn $ millions |\n| --- | --- |\n| Cash flow from operating activities | 105.9 |\n| Cash flow from investing activities | (11.8) |\n| Cash flow from financing activities | 46.5 |\n| Net change in cash for the year | 140.6 |\n| Interest paid (included in CFO) | 22.4 |\n| Taxes paid (tax rate of 30%) | 18.0 |\n| Total debt, end of year | 512.8 |"
        ],
        "topic": "Accounting",
        "question_id": "test-189",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the data collected by a researcher, what is the company's cash flow debt coverage ratio for this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_flow_from_operating_activities = 105.9\n    interest_paid = 22.4\n    total_debt_end_of_year = 512.8\n\n    # Do math calculation to get the answer\n    # Cash flow debt coverage ratio = (Cash flow from operating activities - Interest paid) / Total debt\n    cash_flow_debt_coverage_ratio = (cash_flow_from_operating_activities - interest_paid) / total_debt_end_of_year\n\n    # return answer\n    return cash_flow_debt_coverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-190",
        "python_solution": "",
        "ground_truth": null,
        "question": "On 1 January 2015, a corporation releases $1,000,000 nominal value of 10-year bonds, when the market interest rate for bonds with similar risk and terms is 5%. These bonds yield 6% interest yearly on 31 December. What is the recorded value of these outstanding bonds on the balance sheet at the time they were issued?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    nominal_value = 1000000  # Nominal value of the bonds\n    market_interest_rate = 0.05  # Market interest rate for similar bonds\n    bond_term = 10  # Bond term in years\n    annual_interest_rate = 0.06  # Annual interest rate on the bonds\n\n    # Calculate the present value of the bond's principal\n    present_value_principal = nominal_value / (1 + market_interest_rate) ** bond_term\n\n    # Calculate the present value of the bond's interest payments\n    present_value_interest = 0\n    for year in range(1, bond_term + 1):\n        present_value_interest += (nominal_value * annual_interest_rate) / (1 + market_interest_rate) ** year\n\n    # The recorded value of the bonds is the sum of the present value of the principal and the interest payments\n    recorded_value = present_value_principal + present_value_interest\n\n    # return answer\n    return recorded_value\n```"
        ]
    },
    {
        "tables": [
            "| Year | End_of-Year Payment |\n|------|---------------------|\n| 1    | $ 100,000           |\n| 2    | $ 150,000           |\n| 3    | $ 200,000           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-191",
        "python_solution": "",
        "ground_truth": null,
        "question": "A freelancer commences a job today which is projected to go on for three years. If he anticipates investing these sums at an annual interest rate of 3%, compounded annually until his retirement a decade from now, what is the worth after 10 years, keeping in mind his payment plan encompasses the following?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    payments = [100000, 150000, 200000]\n    annual_interest_rate = 0.03\n    years_to_retirement = 10\n\n    # Do math calculation to get the answer\n    future_values = [payment * (1 + annual_interest_rate) ** (years_to_retirement - year) for year, payment in enumerate(payments, start=1)]\n    total_future_value = sum(future_values)\n\n    # return answer\n    return total_future_value\n```"
        ]
    },
    {
        "tables": [
            "| Position (par value) | $100,000,000 |\n|---|---|\n| Flat price | 97.1251 |\n| Accrued interest | 0.4392 |\n| Macaulay duration | 8.586 |\n| Annual modified duration | 8.450 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-192",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data collected by a researcher, what is the monetary duration of the bond position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100000000\n    flat_price = 97.1251\n    annual_modified_duration = 8.450\n\n    # Convert flat price to a decimal\n    flat_price_decimal = flat_price / 100\n\n    # Calculate the market value of the bond\n    market_value = par_value * flat_price_decimal\n\n    # Calculate the monetary duration\n    monetary_duration = market_value * annual_modified_duration / 100\n\n    # return answer\n    return monetary_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-193",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Second-Hand Bookshop run by Susan generates its financial statements in line with IFRS. Inventory was obtained for \u00a31 million and afterwards reduced to \u00a3550,000. However, it was later found out that one of the books is a rare collector's piece, and the inventory is now approximated to be worth \u00a33 million. The inventory is probably listed on the balance sheet at:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_inventory_value = 1000000\n    reduced_inventory_value = 550000\n    updated_inventory_value = 3000000\n    \n    # Do math calculation to get the answer\n    # According to IFRS, the inventory should be valued at the lower of cost or net realizable value.\n    # Initially, the inventory was reduced to \u00a3550,000, which was lower than the cost of \u00a31 million.\n    # However, the discovery of the rare collector's piece changes the net realizable value to \u00a33 million.\n    # Since the net realizable value is now higher than the cost, the inventory should be valued at the cost.\n    \n    answer = initial_inventory_value\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-194",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that there is no need for an industry risk adjustment, use the build-up method to determine the equity discount rate for a small business. Here's the information you need:\u2022 5.0 percent is the equity risk premium\u2022 The mid-cap equity risk premium is 3.5 percent\u2022 A small stock risk premium is 4.2 percent\u2022 The income return on long-term bonds is 5.1 percent\u2022 The total return on intermediate-term bonds stands at 5.3 percent\u2022 3.0 percent is the company-specific risk premium\u2022 As of the valuation date, the 20-year Treasury bond yield is 4.5 percent.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equity_risk_premium = 5.0\n    mid_cap_equity_risk_premium = 3.5\n    small_stock_risk_premium = 4.2\n    income_return_long_term_bonds = 5.1\n    total_return_intermediate_term_bonds = 5.3\n    company_specific_risk_premium = 3.0\n    treasury_bond_yield_20_year = 4.5\n    \n    # Do math calculation to get the answer\n    # Start with the risk-free rate (20-year Treasury bond yield)\n    risk_free_rate = treasury_bond_yield_20_year\n    \n    # Add the equity risk premium\n    equity_discount_rate = risk_free_rate + equity_risk_premium\n    \n    # Add the mid-cap equity risk premium\n    equity_discount_rate += mid_cap_equity_risk_premium\n    \n    # Add the small stock risk premium\n    equity_discount_rate += small_stock_risk_premium\n    \n    # Add the company-specific risk premium\n    equity_discount_rate += company_specific_risk_premium\n    \n    # return answer\n    return equity_discount_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-195",
        "python_solution": "",
        "ground_truth": null,
        "question": "In an average year, 5% of all enterprise leaders are dismissed due to \"performance\" issues. Presume that the leader's performance is evaluated on the basis of share performance and that 50% of shares earn above-average returns or showcase \"good\" performance. From observed data, 30% of all enterprise leaders who were dismissed demonstrated \"good\" performance. Applying Bayes' theorem, what is the likelihood that an enterprise leader will be dismissed given \"good\" performance? (Hint, let P(A) be the likelihood of an enterprise leader being dismissed, P(B) be the probability of a \"good\" performance rating, P(B I A) represent the possibility of a \"good\" performance rating given that the enterprise leader was dismissed, and P(A I B) signify the probability of the enterprise leader being dismissed given a \"good\" performance rating.)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_A = 0.05  # Probability of an enterprise leader being dismissed\n    P_B = 0.50  # Probability of a \"good\" performance rating\n    P_B_given_A = 0.30  # Probability of a \"good\" performance rating given that the enterprise leader was dismissed\n\n    # Do math calculation to get the answer using Bayes' theorem\n    # P(A|B) = (P(B|A) * P(A)) / P(B)\n    P_A_given_B = (P_B_given_A * P_A) / P_B\n\n    # return answer\n    return P_A_given_B\n```"
        ]
    },
    {
        "tables": [
            "| Time-to-Maturity | Spot Rate |\n| --- | --- |\n| 1-year | 5% |\n| 2-year | 6% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-196",
        "python_solution": "",
        "ground_truth": null,
        "question": "The maturity time for Bond B is 2 years with annual interest payments and an 8% coupon rate. The spot rates are given as follows: Compute the cost of Bond B using these spot rates.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.08  # 8% coupon rate\n    face_value = 1000  # Assuming a face value of $1000 for simplicity\n    spot_rate_1_year = 0.05  # 5% spot rate for 1-year\n    spot_rate_2_year = 0.06  # 6% spot rate for 2-year\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the first coupon payment\n    pv_coupon_1 = (coupon_rate * face_value) / (1 + spot_rate_1_year)\n    \n    # Calculate the present value of the second coupon payment and the principal\n    pv_coupon_2 = (coupon_rate * face_value) / ((1 + spot_rate_2_year) ** 2)\n    pv_principal = face_value / ((1 + spot_rate_2_year) ** 2)\n    \n    # Sum the present values to get the total cost of Bond B\n    cost_of_bond_b = pv_coupon_1 + pv_coupon_2 + pv_principal\n    \n    # return answer\n    return cost_of_bond_b\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-197",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's say a random variable follows a standard distribution with a mean value of 80 and a deviation standard of 24. What is the percentage of this distribution that does not lie between 32 and 116?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean = 80\n    std_dev = 24\n    lower_bound = 32\n    upper_bound = 116\n    \n    # Import necessary library\n    from scipy.stats import norm\n    \n    # Calculate the z-scores for the bounds\n    z_lower = (lower_bound - mean) / std_dev\n    z_upper = (upper_bound - mean) / std_dev\n    \n    # Calculate the cumulative probabilities for the z-scores\n    prob_lower = norm.cdf(z_lower)\n    prob_upper = norm.cdf(z_upper)\n    \n    # Calculate the percentage of the distribution that does not lie between the bounds\n    prob_outside = 1 - (prob_upper - prob_lower)\n    \n    # Convert probability to percentage\n    percentage_outside = prob_outside * 100\n    \n    # return answer\n    return percentage_outside\n```"
        ]
    },
    {
        "tables": [
            "| Items | price$ |\n| --- | --- |\n| replacement cost | 50 |\n| original costs | 41 |\n| selling price | 45 |\n| normal profit margin | 10% |\n| selling costs | 5 |"
        ],
        "topic": "Accounting",
        "question_id": "test-198",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under US GAAP, how should the cost of running shoes be recorded by the Goodluck Company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    replacement_cost = 50\n    original_costs = 41\n    selling_price = 45\n    normal_profit_margin = 0.10  # 10%\n    selling_costs = 5\n\n    # Under US GAAP, the cost of inventory should be recorded at the lower of cost or market value.\n    # Cost is given as original costs.\n    # Market value is determined by the replacement cost, but it should not exceed the net realizable value (selling price - selling costs) nor be lower than the net realizable value less a normal profit margin.\n\n    # Calculate net realizable value\n    net_realizable_value = selling_price - selling_costs\n\n    # Calculate net realizable value less a normal profit margin\n    net_realizable_value_less_profit = net_realizable_value - (selling_price * normal_profit_margin)\n\n    # Determine the market value\n    if replacement_cost > net_realizable_value:\n        market_value = net_realizable_value\n    elif replacement_cost < net_realizable_value_less_profit:\n        market_value = net_realizable_value_less_profit\n    else:\n        market_value = replacement_cost\n\n    # Compare cost and market value to determine the recorded cost\n    recorded_cost = min(original_costs, market_value)\n\n    # return answer\n    return recorded_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-199",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio manager is looking to hedge the interest risk of a bond position with a 5-year key rate exposure of $9.84. What would be the amount of face value employed to hedge if a hedge instrument with a similar 5-year key rate exposure of 4.12 per $100 of face value can be utilized?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    key_rate_exposure_bond = 9.84\n    key_rate_exposure_hedge_per_100 = 4.12\n    \n    # Do math calculation to get the answer\n    face_value_employed = (key_rate_exposure_bond / key_rate_exposure_hedge_per_100) * 100\n    \n    # return answer\n    return face_value_employed\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-200",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the bond-equivalent yield if the yield to maturity on a yearly-payment bond is 7.75%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_to_maturity = 0.0775  # 7.75% as a decimal\n    periods_per_year = 2  # Since it's a yearly-payment bond, we assume semi-annual payments\n    \n    # Do math calculation to get the answer\n    bond_equivalent_yield = (1 + yield_to_maturity / periods_per_year) ** periods_per_year - 1\n    \n    # Convert the bond equivalent yield back to percentage\n    bond_equivalent_yield_percentage = bond_equivalent_yield * 100\n    \n    # return answer\n    return bond_equivalent_yield_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Trade # | Time     | Trade Price | Trade Size | Bid Price | Ask Price |\n|---------|----------|-------------|------------|-----------|-----------|\n| 1       | 9.45 a.m.| $25.20      | 1,200      | $25.17    | $25.20    |\n| 2       | 9.55 a.m.| $25.22      | 1,300      | $25.19    | $25.22    |\n| 3       | 11.30 a.m| $25.27      | 2,500      | $25.22    | $25.26    |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-201",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on Exhibit 1, what is the market impact per share relating to Trade 2 if Smith talks about a market buy order for 5,000 shares of an illiquid stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    trade_price_2 = 25.22  # Trade Price for Trade 2\n    ask_price_2 = 25.22    # Ask Price for Trade 2\n    trade_size_2 = 1300    # Trade Size for Trade 2\n    market_order_size = 5000  # Market buy order size for 5,000 shares\n\n    # Do math calculation to get the answer\n    # Market impact per share is calculated by the difference between the trade price and the ask price, normalized by the trade size\n    market_impact_per_share = (trade_price_2 - ask_price_2) / trade_size_2\n\n    # return answer\n    return market_impact_per_share\n```\n\nThis program calculates the market impact per share for Trade 2 by taking the difference between the trade price and the ask price, then dividing by the trade size. This approach assumes that the market impact is primarily influenced by the immediate trade price and ask price at the time of the trade."
        ]
    },
    {
        "tables": [
            "| Revenue              | $1,000,000 |\n|----------------------|------------|\n| Returns of goods sold| $100,000   |\n| Cash collected       | $800,000   |\n| Cost of goods sold   | $700,000   |"
        ],
        "topic": "Accounting",
        "question_id": "test-202",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under the accrual basis of accounting, how much net revenue would be reported on the 2009 income statement of a company called Fairplay, considering that it was their initial business year and this is the information they have about the sale of their products?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 1000000\n    returns_of_goods_sold = 100000\n    \n    # Do math calculation to get the answer\n    net_revenue = revenue - returns_of_goods_sold\n    \n    # return answer\n    return net_revenue\n```"
        ]
    },
    {
        "tables": [
            "|                  | 2015  | 2014  |\n|------------------|-------|-------|\n| COGS             |50,800 |48,500 |\n| Ending inventories|10,550|10,000 |\n| LIFO reserve     |4,320  |2,600  |"
        ],
        "topic": "Accounting",
        "question_id": "test-203",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the price of goods sold in 2015 employing the FIFO technique for a business that usually uses the LIFO strategy, as stated in pounds sterling?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    COGS_LIFO_2015 = 50800\n    LIFO_reserve_2015 = 4320\n    \n    # Do math calculation to get the answer\n    COGS_FIFO_2015 = COGS_LIFO_2015 - LIFO_reserve_2015\n    \n    # return answer\n    return COGS_FIFO_2015\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-204",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's say :P(occasion X happens)=15%, P(occasion Y happens)=35%, and P(occasion Z happens)=20%. If the occasions X, Y and Z are all not dependent on each other, what is the P(occasion X or occasion Z happens)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_X = 0.15\n    P_Y = 0.35\n    P_Z = 0.20\n    \n    # Do math calculation to get the answer\n    # P(X or Z) = P(X) + P(Z) - P(X and Z)\n    # Since X and Z are independent, P(X and Z) = P(X) * P(Z)\n    P_X_and_Z = P_X * P_Z\n    P_X_or_Z = P_X + P_Z - P_X_and_Z\n    \n    # return answer\n    return P_X_or_Z\n```"
        ]
    },
    {
        "tables": [
            "|                         |                      |\n|-------------------------|----------------------|\n| Seagraves Supply Company Operating Cash Flow - Direct Method For the year ended December 31, 20X7 |                      |\n| Cash paid to suppliers  | 265,866              |\n| Cash paid for operating expenses | 124,784             |\n| Cash paid for interest  | 4,326                |\n| Cash paid for taxes     | 14,956               |\n| Operating cash flow     | $ 20,048             |"
        ],
        "topic": "Accounting",
        "question_id": "test-205",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the direct method, determine the cash received from the client:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_paid_to_suppliers = 265866\n    cash_paid_for_operating_expenses = 124784\n    cash_paid_for_interest = 4326\n    cash_paid_for_taxes = 14956\n    operating_cash_flow = 20048\n    \n    # Do math calculation to get the answer\n    # Cash received from clients = Operating cash flow + Cash paid to suppliers + Cash paid for operating expenses + Cash paid for interest + Cash paid for taxes\n    cash_received_from_clients = operating_cash_flow + cash_paid_to_suppliers + cash_paid_for_operating_expenses + cash_paid_for_interest + cash_paid_for_taxes\n    \n    # return answer\n    return cash_received_from_clients\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-206",
        "python_solution": "",
        "ground_truth": null,
        "question": "When we apply vertical common-size analysis to the following financial data from a different business entity: Total liabilities $19 million, Total stockholders\u2019 equity $25 million, what is the percentage of total liabilities represented on the balance sheet?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_liabilities = 19000000\n    total_stockholders_equity = 25000000\n    \n    # Calculate the total assets (sum of liabilities and equity)\n    total_assets = total_liabilities + total_stockholders_equity\n    \n    # Do math calculation to get the answer\n    percentage_of_total_liabilities = (total_liabilities / total_assets) * 100\n    \n    # return answer\n    return percentage_of_total_liabilities\n```"
        ]
    },
    {
        "tables": [
            "| Date     | Closing Price |\n|----------|---------------|\n| 1 August | 112           |\n| 8 August | 160           |\n| 15 August| 120           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-207",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the continuously compounded return of shares for Riddle Inc between August 1 and August 15, taking into account the weekly closing prices of Riddle Inc's shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_1_aug = 112\n    price_15_aug = 120\n    \n    # Do math calculation to get the answer\n    # Calculate the continuously compounded return\n    import math\n    time_period = 14  # days between August 1 and August 15\n    continuously_compounded_return = math.log(price_15_aug / price_1_aug) / time_period\n    \n    # return answer\n    return continuously_compounded_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-208",
        "python_solution": "",
        "ground_truth": null,
        "question": "What's the value of Corporation Z, which is currently being appraised by John using the dividend discount model? The latest dividend is $1.0 per share with a required return rate of 7.5%. It is anticipated to have a high growth rate of 5% for the initial three years, and thereafter, the dividend growth rate will be 3% annually indefinitely.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    latest_dividend = 1.0  # $1.0 per share\n    required_return_rate = 0.075  # 7.5%\n    high_growth_rate = 0.05  # 5% for the initial three years\n    constant_growth_rate = 0.03  # 3% thereafter indefinitely\n    years_high_growth = 3  # number of years with high growth rate\n\n    # Calculate the present value of dividends during the high growth period\n    present_value_high_growth = 0\n    dividend = latest_dividend\n    for year in range(1, years_high_growth + 1):\n        dividend *= (1 + high_growth_rate)\n        present_value_high_growth += dividend / ((1 + required_return_rate) ** year)\n\n    # Calculate the terminal value at the end of the high growth period\n    terminal_dividend = dividend * (1 + constant_growth_rate)\n    terminal_value = terminal_dividend / (required_return_rate - constant_growth_rate)\n    present_value_terminal = terminal_value / ((1 + required_return_rate) ** years_high_growth)\n\n    # Calculate the total value of the corporation\n    total_value = present_value_high_growth + present_value_terminal\n\n    # return answer\n    return total_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-209",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume a share that has daily returns following a random walk, with an annualized volatility of 34%. Can you calculate the weekly volatility of this share assuming there are 52 weeks in a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_volatility = 0.34  # Annualized volatility of 34%\n    weeks_per_year = 52  # Number of weeks in a year\n    \n    # Do math calculation to get the answer\n    # Weekly volatility is calculated by dividing the annual volatility by the square root of the number of weeks in a year\n    weekly_volatility = annual_volatility / (weeks_per_year ** 0.5)\n    \n    # return answer\n    return weekly_volatility\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-210",
        "python_solution": "",
        "ground_truth": null,
        "question": "What are the odds for an event X if the probability for X is 14% (i.e., P(X) = 14%)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_X = 0.14  # Probability of event X\n    \n    # Do math calculation to get the answer\n    odds_X = probability_X / (1 - probability_X)\n    \n    # return answer\n    return odds_X\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-211",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that S0=400 and the risk-free rate stands at 5%. Figure out the forward price of a 6-month forward contract with continuous compounding.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 400  # Initial stock price\n    r = 0.05  # Risk-free rate\n    T = 0.5   # Time to maturity in years (6 months)\n    \n    # Do math calculation to get the answer\n    forward_price = S0 * (1 + r * T)\n    \n    # return answer\n    return forward_price\n```\n\nThis program calculates the forward price of a 6-month forward contract using the formula for continuous compounding, which is slightly different from the simple interest formula used above. The correct formula for continuous compounding is \\( F = S_0 \\times e^{rT} \\). Let's correct the program:\n\n```python\nimport math\n\ndef solution():\n    # Define variables name and value\n    S0 = 400  # Initial stock price\n    r = 0.05  # Risk-free rate\n    T = 0.5   # Time to maturity in years (6 months)\n    \n    # Do math calculation to get the answer\n    forward_price = S0 * math.exp(r * T)\n    \n    # return answer\n    return forward_price\n```\n\nThis corrected version uses the `math.exp` function to compute the exponential term for continuous compounding."
        ]
    },
    {
        "tables": [
            "| Security | Beginning($) | End($) | Shares |\n|----------|--------------|--------|--------|\n| G        | 15.00        | 17.00  | 500    |\n| H        | 35.00        | 33.00  | 300    |\n| 1        | 37.00        | 40.00  | 200    |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-212",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, an analyst named Benedict from a investment firm collected data for a value-weighted index consisting of securities G,H,I. What was the return of the value-weighted index during this period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = {'G': 15.00, 'H': 35.00, 'I': 37.00}\n    ending_prices = {'G': 17.00, 'H': 33.00, 'I': 40.00}\n    shares = {'G': 500, 'H': 300, 'I': 200}\n    \n    # Calculate the market value at the beginning and end\n    beginning_market_value = sum(beginning_prices[security] * shares[security] for security in beginning_prices)\n    ending_market_value = sum(ending_prices[security] * shares[security] for security in ending_prices)\n    \n    # Calculate the return of the value-weighted index\n    total_beginning_value = sum(beginning_prices[security] * shares[security] for security in beginning_prices)\n    total_ending_value = sum(ending_prices[security] * shares[security] for security in ending_prices)\n    \n    index_return = (total_ending_value - total_beginning_value) / total_beginning_value\n    \n    # return answer\n    return index_return\n```\n\nThis Python program calculates the return of a value-weighted index consisting of securities G, H, and I by first calculating the total market value at the beginning and end of the period, and then computing the return based on these values."
        ]
    },
    {
        "tables": [
            "|     | $ Millions |\n| --- | --- |\n| Short-term interest-bearing debt | 1,258 |\n| Long-term interest-bearing debt | 321 |\n| Total shareholder's equity | 4,285 |\n| Total assets | 8,750 |\n| EBIT | 2,504 |\n| Interest payments | 52 |"
        ],
        "topic": "Accounting",
        "question_id": "test-213",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the corporation's debt-to-assets ratio based on the data compiled by an analyst reviewing the corporation's solvency?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    short_term_debt = 1258\n    long_term_debt = 321\n    total_assets = 8750\n    \n    # Do math calculation to get the answer\n    total_debt = short_term_debt + long_term_debt\n    debt_to_assets_ratio = total_debt / total_assets\n    \n    # return answer\n    return debt_to_assets_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Next year's earnings per share | $3.00 |\n|---------------------------|-------|\n| Return on equity         | 12.5% |\n| Dividend payout ratio    | 60%   |\n| Required return on shares| 10%   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-214",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier collects the same information to calculate the intrinsic worth of a corporation\u2019s stock using the justified forward P/E method. What is the intrinsic value per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    next_year_earnings_per_share = 3.00\n    return_on_equity = 0.125\n    dividend_payout_ratio = 0.60\n    required_return_on_shares = 0.10\n    \n    # Do math calculation to get the answer\n    # Calculate the sustainable growth rate\n    sustainable_growth_rate = return_on_equity * (1 - dividend_payout_ratio)\n    \n    # Calculate the justified forward P/E ratio\n    justified_forward_P_E = (1 - dividend_payout_ratio) / (required_return_on_shares - sustainable_growth_rate)\n    \n    # Calculate the intrinsic value per share\n    intrinsic_value_per_share = justified_forward_P_E * next_year_earnings_per_share\n    \n    # return answer\n    return intrinsic_value_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-215",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager wants to understand the systematic risk of a stock portfolio and thus estimates the following linear regression: RPt\u2212RF=\u03b1P+\u03b2P[RMt\u2212RF]+\u03b5PtRPt\u200b\u2212RF\u200b=\u03b1P\u200b+\u03b2P\u200b[RMt\u200b\u2212RF\u200b]+\u03b5Pt\u200b, where RPtRPt\u200b represents the return of the portfolio at time t, RMtRMt\u200b represents the return of the market portfolio at time t, and RFRFRF\u200b is the risk-free rate, remaining constant throughout. Consider that \u03b1 is 0.008, \u03b2 is 0.977, \u03c3(RP)\\sigma{(R_P)}\u03c3(RP\u200b) is 0.167, and \u03c3(RM)\\sigma{(R_M)}\u03c3(RM\u200b) is 0.156. What is the likely coefficient of determination in this regression?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    alpha = 0.008\n    beta = 0.977\n    sigma_RP = 0.167\n    sigma_RM = 0.156\n    \n    # Do math calculation to get the answer\n    # The coefficient of determination (R-squared) can be calculated using the formula:\n    # R^2 = (\u03b2 * \u03c3(RM) / \u03c3(RP))^2\n    r_squared = (beta * sigma_RM / sigma_RP) ** 2\n    \n    # return answer\n    return r_squared\n```"
        ]
    },
    {
        "tables": [
            "| Item | Current Period |\n| --- | --- |\n| Total assets | 24,130 |\n| Total liabilities | 17,560 |\n| Total equity | 6,570 |\n| Total pension cost | 96 |\n| Pension contribution | 66 |\n| Financing cash flow | 2,323 |\n| Operating cash flow | -1,087 |\n| Effective tax rate | 30% |",
            "|   Item                    | 100-bp Increase | 100-bp Decrease |\n|---------------------------|-----------------|-----------------|\n| Benefit obligation change | $93             | -$76            |\n| Benefit expense change    | $12             | -$10            |"
        ],
        "topic": "Accounting",
        "question_id": "test-216",
        "python_solution": "",
        "ground_truth": null,
        "question": "Alexander Boone, a senior portfolio manager, collaborates with Rachel Stevens, a junior analyst. They are assessing the financial records of Corporation ABC (ABC), focusing on post-employment rewards. Stevens modifies the balance sheet and cash flow statement details presented in Exhibit 2 to more accurately represent the financial aspect of certain pension plan related items. Finally, Stevens scrutinizes the details present in Exhibit 3 and determines the effect of a 100-basis-point hike in health care inflation on ABC's debt-to-equity ratio. Considering Exhibits 2 and 3, alongside Boone's projection about future health care inflation, what should the debt-to-equity ratio computed by Stevens for ABC be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 24130\n    total_liabilities = 17560\n    total_equity = 6570\n    benefit_obligation_change_increase = 93\n    benefit_expense_change_increase = 12\n    \n    # Adjust liabilities and equity for the 100-bp increase in health care inflation\n    adjusted_liabilities = total_liabilities + benefit_obligation_change_increase + benefit_expense_change_increase\n    adjusted_equity = total_equity\n    \n    # Calculate the debt-to-equity ratio\n    debt_to_equity_ratio = adjusted_liabilities / adjusted_equity\n    \n    # return answer\n    return debt_to_equity_ratio\n```"
        ]
    },
    {
        "tables": [
            "| For Year Ending 31 December | 2012         |\n|----------------------------|------------|\n| Revenues                   | $6,456     |\n| Earnings before interest, taxes, depreciation, and amortization (EBITDA)   | 1,349     |\n| Depreciation expense       | 243        |\n| Operating income           | 1,106      |\n| Interest expense           | 186        |\n| Pretax income              | 920        |\n| Income tax (32%)           | 294        |\n| Net income                 | $626       |\n|                            |            |\n| Number of outstanding shares (millions) | 411     |\n| 2012 earnings per share    | $1.52      |\n| 2012 dividends paid (millions) | 148     |\n| 2012 dividends per share   | 0.36       |\n| 2012 fixed capital investment (millions) | 535  |\n|                            |            |\n| Cost of equity             | 12.0%      |\n| Weighted average cost of capital (WACC) | 9.0%  |",
            "|                                             | 2012  |       | 2011  |\n|---------------------------------------------|-------|-------|-------|\n| **Assets**                                  |       |       |       |\n| Cash and cash equivalents                   | $32   |       | $21   |\n| Accounts receivable                         | 413   |       | 417   |\n| Inventories                                 | 709   |       | 638   |\n| Other current assets                        | 136   |       | 123   |\n| Total current assets                        | $1,290|       | $1,199|\n|                                             |       |       |       |\n| **Liabilities and Stockholders' Equity**   |       |       |       |\n| Current liabilities                         | $2,783|       | $2,678|\n| Long-term debt                              | 2,249 |       | 2,449 |\n| Common stockholders' equity                 | 1,072 |       | 594   |\n| Total liabilities and stockholders' equity  | $6,104|       | $5,721|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-217",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the financial documents in Exhibits 1 and 2, Barnes' fiscal year concludes on December 31st. If the 2012 FCFF is equal to $500 million, what would be Barnes' FCFE ($ millions) for 2012, based on the information found in Exhibits 1 and 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    FCFF = 500  # Free Cash Flow to Firm (FCFF) for 2012 in millions\n    interest_expense = 186  # Interest expense for 2012 in millions\n    tax_rate = 0.32  # Income tax rate\n    net_borrowing = 200  # Assuming net borrowing is the difference between long-term debt in 2012 and 2011\n    depreciation_expense = 243  # Depreciation expense for 2012 in millions\n    capital_expenditures = 535  # Fixed capital investment for 2012 in millions\n    change_in_working_capital = 1290 - 1199  # Change in total current assets from 2011 to 2012 in millions\n\n    # Do math calculation to get the answer\n    # FCFE = FCFF + Net Borrowing - Interest Expense * (1 - Tax Rate)\n    FCFE = FCFF + net_borrowing - interest_expense * (1 - tax_rate)\n\n    # return answer\n    return FCFE\n```\n\nThis program calculates the Free Cash Flow to Equity (FCFE) for Barnes for the year 2012 based on the provided financial data. The FCFE is derived from the FCFF by adjusting for net borrowing and interest expenses after tax."
        ]
    },
    {
        "tables": [
            "| | |\n| --- | --- |\n| Consumption function | C = 2,500+0.80*(Y-T) |\n| Investment function | l= 500+0.30*Y-25*r |\n| Government spending | G = 1,000 |\n| Tax function | T=-250+0.30*Y |\n| *Y* : Aggregate income *r*:Real interest rate | |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-218",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the real interest rate in a basic economy with no foreign trade stands at 3% and there's an upsurge in state expenditure to 2,000, what will be the surge in overall earnings?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r = 3  # Real interest rate in percent\n    G = 2000  # New government spending\n    G_original = 1000  # Original government spending\n    T = lambda Y: -250 + 0.30 * Y  # Tax function\n    C = lambda Y, T: 2500 + 0.80 * (Y - T)  # Consumption function\n    I = lambda Y, r: 500 + 0.30 * Y - 25 * r  # Investment function\n    \n    # Function to calculate aggregate income Y\n    def calculate_Y(G, r):\n        Y = 0\n        delta_Y = 1  # Initialize delta_Y to a non-zero value\n        while abs(delta_Y) > 0.01:  # Iterate until convergence\n            T_val = T(Y)\n            C_val = C(Y, T_val)\n            I_val = I(Y, r)\n            Y_new = C_val + I_val + G\n            delta_Y = Y_new - Y\n            Y = Y_new\n        return Y\n    \n    # Calculate original and new aggregate income\n    Y_original = calculate_Y(G_original, r)\n    Y_new = calculate_Y(G, r)\n    \n    # Calculate the surge in overall earnings\n    surge_in_earnings = Y_new - Y_original\n    \n    # return answer\n    return surge_in_earnings\n```\n\nThis Python program defines the necessary functions and variables to calculate the surge in overall earnings when the real interest rate is 3% and government spending increases to 2000. It uses an iterative approach to solve for aggregate income \\( Y \\) until it converges."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-219",
        "python_solution": "",
        "ground_truth": null,
        "question": "A customer buys a 6-year bond at face value with an 8% coupon rate, where the interest is disbursed once a year. If the customer decides to sell the bond at the close of the 5th year, and the prevailing market interest rate is 7% at that moment. Can you determine the capital gain or loss?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000  # Assuming face value is $1000 for simplicity\n    coupon_rate = 0.08\n    years_held = 5\n    market_interest_rate = 0.07\n    \n    # Calculate the annual coupon payment\n    annual_coupon_payment = face_value * coupon_rate\n    \n    # Calculate the present value of the bond at the end of the 5th year using the market interest rate\n    present_value = (annual_coupon_payment / market_interest_rate) * (1 - (1 / (1 + market_interest_rate) ** years_held)) + (face_value / (1 + market_interest_rate) ** years_held)\n    \n    # Calculate the capital gain or loss\n    capital_gain_or_loss = present_value - face_value\n    \n    # return answer\n    return capital_gain_or_loss\n```\n\nThis program calculates the present value of the bond at the end of the 5th year using the market interest rate of 7% and compares it to the face value to determine the capital gain or loss."
        ]
    },
    {
        "tables": [
            "| Trades | Execution Price | Shares Executed |\n|--------|-----------------|-----------------|\n| Trade 1| $40.75 |    10,000     |\n| Trade 2| $41.25 |    30,000     |\n| Trade 3| $41.50 |    20,000     |\n| Trade 4| $41.75 |    30,000     |\n| Total  |        |    90,000     |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-220",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following day, Morris instructs Blue to go over their analysis on XYZ Corporation. Blue\u2019s evaluation leads her to believe that the company's shares are undervalued. She shares her discoveries with Morris, who then directs her at 10 a.m. to purchase 120,000 shares at a price of $40.00 through a limit order of $42.00. The buy-side trader proceeds with the market execution when the cost is at $40.50. The sole charge is a commission of $0.02 per share. By the time the market closes, 90,000 shares from the order were bought, with XYZ Corporation closing at $42.50. The transaction was carried out at an average cost of $41.42, with detailed information about the executed trades in Exhibit 1. Based on the details in Exhibit 1, what is the execution cost for buying the 90,000 shares of XYZ Corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    trades = [\n        {\"price\": 40.75, \"shares\": 10000},\n        {\"price\": 41.25, \"shares\": 30000},\n        {\"price\": 41.50, \"shares\": 20000},\n        {\"price\": 41.75, \"shares\": 30000}\n    ]\n    commission_per_share = 0.02\n    \n    # Do math calculation to get the answer\n    total_cost = 0\n    for trade in trades:\n        cost_per_trade = trade[\"price\"] * trade[\"shares\"]\n        commission_cost = trade[\"shares\"] * commission_per_share\n        total_cost += cost_per_trade + commission_cost\n    \n    # return answer\n    return total_cost\n```"
        ]
    },
    {
        "tables": [
            "|                      | as of 31 December |       |\n|----------------------|-------------------|-------|\n| Assets               | 2009              | 2008  |\n| Cash and cash equivalents     | 1,884             | 1,280 |\n| Other financial assets        | 486               | 588   |\n| Trade and other receivables   | 2,546             | 3,178 |\n| Other non-financial assets    | 147               | 126   |\n| Tax assets                    | 192               | 399   |\n| Total  current assets         | 5,255             | 5,571 |",
            "|                         | as of 31 December |\n|------------------------ |---------- |---------- |\n| Assets                  | 2009      | 2008      |\n| Total non-current assets| 8,119     | 3,329     |\n| Total assets            | 13,374    | 13,900    |\n| Equity and Liabilities  |           |           |\n| Total current liabilities| 3,416     | 5,824     |\n| Total non-current liabilities| 1,467 | 905       |\n| Total liabilities       | 4,883     | 6,729     |\n| Total equity            | 8,491     | 7,171     |\n| Equity and liabilities  | 13,374    | 13,900    |"
        ],
        "topic": "Accounting",
        "question_id": "test-221",
        "python_solution": "",
        "ground_truth": null,
        "question": "From the data provided in Exhibit 4, what's the nearest quick ratio for the Oracle Corporation as of December 31, 2009? Exhibit 4. Oracle Corporation Consolidated Statements of Financial Position (Excerpt: Current Assets Detail)(In millions of \u20ac)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_and_equivalents = 1884\n    other_financial_assets = 486\n    total_current_assets = 5255\n    total_current_liabilities = 3416\n    \n    # Do math calculation to get the answer\n    quick_assets = cash_and_equivalents + other_financial_assets\n    quick_ratio = quick_assets / total_current_liabilities\n    \n    # return answer\n    return round(quick_ratio, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-222",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive is interested in determining the cost of a put option using a one-period binomial tree. Here are the relevant details: The existing stock price is $30, while the exercise price of the put option is also $30. The up factor is valued at 1.12 and the down factor stands at 0.92. The risk-free rate is set at 5%. What is the hedge ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_price = 30\n    exercise_price = 30\n    up_factor = 1.12\n    down_factor = 0.92\n    risk_free_rate = 0.05\n    \n    # Calculate the stock prices at the up and down nodes\n    stock_price_up = stock_price * up_factor\n    stock_price_down = stock_price * down_factor\n    \n    # Calculate the put option values at the up and down nodes\n    put_value_up = max(exercise_price - stock_price_up, 0)\n    put_value_down = max(exercise_price - stock_price_down, 0)\n    \n    # Calculate the hedge ratio\n    hedge_ratio = (put_value_up - put_value_down) / (stock_price_up - stock_price_down)\n    \n    # return answer\n    return hedge_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-223",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the two-period binomial model, Matt estimates the value of a two-year American-style call option on Alpha Corporation's common shares. The parameters are as follows: the present stock price sits at 96, while the call option's exercise price is 70. The up factor (u) equates to 1.20, with the down factor (d) at 0.83. The risk-free rate of return, calculated with continuous compounding, is 4%. How much is the option worth?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 96  # present stock price\n    K = 70  # exercise price of the call option\n    u = 1.20  # up factor\n    d = 0.83  # down factor\n    r = 0.04  # risk-free rate (continuous compounding)\n    T = 2  # time to maturity in years\n\n    # Calculate the stock prices at the end of two periods\n    Suu = S * u * u\n    Sud = S * u * d\n    Sdd = S * d * d\n\n    # Calculate the option payoffs at the end of two periods\n    Cuu = max(Suu - K, 0)\n    Cud = max(Sud - K, 0)\n    Cdd = max(Sdd - K, 0)\n\n    # Calculate the risk-neutral probabilities\n    p = (math.exp(r) - d) / (u - d)\n    q = 1 - p\n\n    # Calculate the option value at time zero\n    Cu = math.exp(-r) * (p * Cuu + q * Cud)\n    Cd = math.exp(-r) * (p * Cud + q * Cdd)\n    C0 = math.exp(-r) * (p * Cu + q * Cd)\n\n    # return answer\n    return C0\n```\n\nThis Python program calculates the value of a two-year American-style call option on Alpha Corporation's common shares using the two-period binomial model. The program defines the necessary variables, calculates the stock prices and option payoffs at the end of two periods, computes the risk-neutral probabilities, and finally calculates the option value at time zero. The result is returned as the answer."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-224",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financier utilizes a multivariate normal distribution to accurately model the returns on 3 stocks, how many parameters does he need to determine at the outset?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_stocks = 3\n    \n    # For a multivariate normal distribution, we need to determine:\n    # 1. The mean for each stock (num_stocks parameters)\n    # 2. The variance for each stock (num_stocks parameters)\n    # 3. The covariance between each pair of stocks (num_stocks * (num_stocks - 1) / 2 parameters)\n    \n    # Do math calculation to get the answer\n    num_means = num_stocks\n    num_variances = num_stocks\n    num_covariances = num_stocks * (num_stocks - 1) // 2\n    \n    total_parameters = num_means + num_variances + num_covariances\n    \n    # return answer\n    return total_parameters\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-225",
        "python_solution": "",
        "ground_truth": null,
        "question": "What's the chance of a pupil correctly answering less than two questions on a multiple-choice test that has four choices for a total of six questions, by just guessing?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    import math\n    from scipy.stats import binom\n\n    n = 6  # number of trials (questions)\n    p = 0.25  # probability of success (correct answer by guessing)\n    k = 1  # number of successes (correct answers)\n\n    # Do math calculation to get the answer\n    # Calculate the probability of getting less than 2 correct answers\n    probability = binom.cdf(k, n, p)\n\n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-226",
        "python_solution": "",
        "ground_truth": null,
        "question": "The head credit analyst of Vigilant Consultants recently stated that the five-year bond of Atlas Co. is currently yielding 7% and a similar CDS contract has a credit spread of 4.25%. Given that the MRR is 2.5%, Lopez advised performing a basis trade to exploit the pricing of Atlas Co.'s bonds and CDS. The basis trade would involve buying both the bond and the CDS contract. Considering the basis trade for Atlas Co., what will be the gain if convergence happens in the bond and CDS markets?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_yield = 7.0  # Bond yield in percentage\n    cds_spread = 4.25  # CDS spread in percentage\n    mrr = 2.5  # MRR in percentage\n    \n    # Do math calculation to get the answer\n    # The gain from the basis trade is the difference between the bond yield and the sum of MRR and CDS spread\n    gain = bond_yield - (mrr + cds_spread)\n    \n    # return answer\n    return gain\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-227",
        "python_solution": "",
        "ground_truth": null,
        "question": "Think about the purchaser of a 6x9 FRA. The contract rate is 6.35% on a notional sum of $10 million. Determine the settlement sum for the vendor if the settlement rate is 6.85%. Assume a 30/360-day count basis.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_sum = 10000000\n    contract_rate = 0.0635\n    settlement_rate = 0.0685\n    days_in_year = 360\n    days_in_contract = 90  # 3 months * 30 days per month\n\n    # Do math calculation to get the answer\n    interest_difference = (settlement_rate - contract_rate) * notional_sum\n    settlement_sum = interest_difference * (days_in_contract / days_in_year)\n\n    # return answer\n    return settlement_sum\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-228",
        "python_solution": "",
        "ground_truth": null,
        "question": "A task has been assigned to Jack, a consultant for a global investment firm, to evaluate the worth of an advanced technology enterprise. The collected information about the enterprise is as follows: It has 500 million ordinary shares in circulation. It has a current share price of $7. The enterprise has a declared debt of $3500 million, and its market value equals this figure. The enterprise has reported a cash holding of $1500 million. Furthermore, it has $50 million in preferred equity and $100 million in short-term investments. For this year, its reported net sales are $3000 million. With regard to the information provided, what is the enterprise EV to sales ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_shares = 500000000  # 500 million ordinary shares\n    share_price = 7  # current share price in dollars\n    debt = 3500000000  # declared debt in dollars\n    cash = 1500000000  # cash holding in dollars\n    preferred_equity = 50000000  # preferred equity in dollars\n    short_term_investments = 100000000  # short-term investments in dollars\n    net_sales = 3000000000  # net sales in dollars\n    \n    # Calculate market capitalization\n    market_cap = num_shares * share_price\n    \n    # Calculate Enterprise Value (EV)\n    ev = market_cap + debt - cash + preferred_equity + short_term_investments\n    \n    # Calculate EV to Sales ratio\n    ev_to_sales_ratio = ev / net_sales\n    \n    # return answer\n    return ev_to_sales_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-229",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the discount rate if the cash price stands at 97.63 and there are 60 calendar days left on the life of the government bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_price = 97.63\n    days_left = 60\n    face_value = 100  # Assuming the face value of the bond is 100\n\n    # Do math calculation to get the answer\n    discount_rate = ((face_value - cash_price) / face_value) * (365 / days_left)\n\n    # return answer\n    return discount_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-230",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the present value of a 10-year annuity due with yearly payments of $2,000 and an annual compound interest rate of 5%, if the present value of a 10-year regular annuity with the same payments and interest rate is $15,443.47?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    regular_annuity_pv = 15443.47\n    yearly_payment = 2000\n    annual_interest_rate = 0.05\n    years = 10\n    \n    # Calculate the present value factor for a regular annuity\n    pv_factor_regular = regular_annuity_pv / yearly_payment\n    \n    # Calculate the present value factor for an annuity due\n    pv_factor_due = pv_factor_regular * (1 + annual_interest_rate)\n    \n    # Calculate the present value of the annuity due\n    pv_annuity_due = pv_factor_due * yearly_payment\n    \n    # return answer\n    return pv_annuity_due\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-231",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a 2-year zero-coupon bond's present cost is $0.88035 and its face value is $1, then what is the 2-year spot rate given risk-neutral investors?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_cost = 0.88035\n    face_value = 1\n    years = 2\n    \n    # Do math calculation to get the answer\n    # The formula for the spot rate of a zero-coupon bond is:\n    # (Face Value / Present Cost) ^ (1 / Years) - 1\n    spot_rate = (face_value / present_cost) ** (1 / years) - 1\n    \n    # return answer\n    return spot_rate\n```"
        ]
    },
    {
        "tables": [
            "| Year | Spot Rate | Forward Rate |\n|------|-----------|--------------|\n| 1    | 3.00%     |              |\n| 2    | 4.00%     | 5.01%        |\n| 3    | 5.00%     | 7.03%        |\n| 4    | 6.00%     | 9.06%        |\n| 5    | 7.00%     | 11.10%       |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-232",
        "python_solution": "",
        "ground_truth": null,
        "question": "John acknowledges that this specific US Treasury bond might not be the best choice for investors seeking zero reinvestment risk. He proposes a different vehicle, namely a US Treasury zero-coupon note. This note is fresh off the press, has a term of five years, and is valued at $71.30 (with a face value of $100.00) to yield 7.00% at maturity. John explains that some investors might choose to buy this Treasury zero-coupon note now and keep it until it matures in five years. He also mentions that there are investors who might buy this Treasury zero-coupon note in two years and then keep it for three years until it matures. John requests that Bird calculate the forward rate that would make investors indifferent to either acquiring the Treasury zero-coupon note now or buying it two years down the line. Current spot rates and extrapolated one year forward rates are available in Exhibit 1. Using the data in Exhibit 1, what forward rate would make an",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_2yr = 0.04  # 2-year spot rate\n    spot_rate_5yr = 0.07  # 5-year spot rate\n    face_value = 100.0\n    price_now = 71.30\n    years_now = 5\n    years_later = 3\n\n    # Calculate the present value of the zero-coupon bond if bought now and held until maturity\n    pv_now = face_value / (1 + spot_rate_5yr) ** years_now\n\n    # Calculate the present value of the zero-coupon bond if bought in 2 years and held for 3 years\n    pv_later = face_value / (1 + spot_rate_2yr) ** 2\n\n    # Calculate the forward rate that makes investors indifferent\n    forward_rate = ((pv_now / pv_later) ** (1 / years_later)) - 1\n\n    # return answer\n    return forward_rate\n\n# Example usage:\nprint(solution())\n```\n\nThis Python program calculates the forward rate that would make investors indifferent to either acquiring the Treasury zero-coupon note now or buying it two years down the line. It uses the present value calculations of the bond under both scenarios to determine the forward rate."
        ]
    },
    {
        "tables": [
            "|                         |          |                       |         |\n|-------------------------|----------|-----------------------|---------|\n|Price per Share and Shares Outstanding|        ||             |\n|Current market price per share  | $15.0  |    |            |\n|Number of shares outstanding(millions)  | 1.0 |    |            |\n|Balance Sheet Data As of 2012 ($ millions)   |     |            ||\n|Cash and cash equivalents | 0.4 | Current liabilities    | 1.0       |\n|Accounts receivable | 1.2 | Long-term liabilities | 61.0   |\n|Inventories | 40.0 |  |  |\n|Investment securities |   6.0 |Common shareholders' equity | 15.6 |\n|Property, plant, and equipment | 30.0 | | |\n|Total assets  |  77.6 |Total liabilities and equity | 77.6 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-233",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a researcher predicts that the market worth of the corporation's investment securities is 115% of their recorded value, what is the corporation's price to adjusted book value ratio, taking into account the corporation's market data and balance sheet details at the close of the fiscal year 2012?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_market_price_per_share = 15.0\n    number_of_shares_outstanding = 1.0  # in millions\n    cash_and_cash_equivalents = 0.4\n    accounts_receivable = 1.2\n    inventories = 40.0\n    investment_securities = 6.0\n    property_plant_and_equipment = 30.0\n    total_assets = 77.6\n    current_liabilities = 1.0\n    long_term_liabilities = 61.0\n    common_shareholders_equity = 15.6\n    predicted_investment_securities_value = investment_securities * 1.15\n\n    # Adjusted book value calculation\n    adjusted_total_assets = total_assets - investment_securities + predicted_investment_securities_value\n    adjusted_total_liabilities = current_liabilities + long_term_liabilities\n    adjusted_book_value = adjusted_total_assets - adjusted_total_liabilities\n\n    # Market capitalization\n    market_capitalization = current_market_price_per_share * number_of_shares_outstanding * 1_000_000  # convert to actual number\n\n    # Price to adjusted book value ratio\n    price_to_adjusted_book_value_ratio = market_capitalization / adjusted_book_value\n\n    # return answer\n    return price_to_adjusted_book_value_ratio\n```\n\nThis Python program calculates the corporation's price to adjusted book value ratio, taking into account the predicted market worth of the corporation's investment securities."
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-234",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial instrument has a beta of 1.30. If the risk-free interest rate stands at 3% and the market's expected return is 8%, what is the anticipated return of this particular financial instrument, using the capital asset pricing model (CAPM)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beta = 1.30\n    risk_free_rate = 0.03\n    market_return = 0.08\n    \n    # Do math calculation to get the answer\n    expected_return = risk_free_rate + beta * (market_return - risk_free_rate)\n    \n    # return answer\n    return expected_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-235",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Sakamoto Company has recently distributed a dividend of \u00a5450 for each share. It is anticipated that the annual dividends will rise at a rate of 4 percent yearly for the forthcoming four years. By the conclusion of these four years, the Sakamoto Company's shares are predicted to have a selling price of \u00a59000. If a 12 percent return rate is necessary, what would be the fundamental value of a share of Sakamoto Company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_dividend = 450\n    growth_rate = 0.04\n    years = 4\n    future_price = 9000\n    required_return = 0.12\n    \n    # Calculate the present value of future dividends\n    present_value_dividends = 0\n    for year in range(1, years + 1):\n        dividend = initial_dividend * (1 + growth_rate) ** year\n        present_value_dividends += dividend / (1 + required_return) ** year\n    \n    # Calculate the present value of the future selling price\n    present_value_future_price = future_price / (1 + required_return) ** years\n    \n    # Calculate the fundamental value of the share\n    fundamental_value = present_value_dividends + present_value_future_price\n    \n    # return answer\n    return fundamental_value\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|----------|--------------------------|--------------------------------|\n| 1        | 16                       | 20                             |\n| 2        | 12                       | 20                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-236",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a fund manager constructs a portfolio with two securities that has a projected return of 15%, what is the percentage invested in Security1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_security1 = 16  # Expected annual return for Security 1 (%)\n    expected_return_security2 = 12  # Expected annual return for Security 2 (%)\n    projected_return_portfolio = 15  # Projected return for the portfolio (%)\n    \n    # Do math calculation to get the answer\n    # Let x be the percentage invested in Security 1, then (100 - x) is the percentage invested in Security 2\n    # The equation for the portfolio return is: x * expected_return_security1 + (100 - x) * expected_return_security2 = projected_return_portfolio\n    # Solving for x:\n    x = (projected_return_portfolio - expected_return_security2) / (expected_return_security1 - expected_return_security2) * 100\n    \n    # return answer\n    return x\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-237",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager employs a valuation model to calculate the worth of a bond portfolio at USD 125.00 million when the term structure is level. With the same model, the fund manager anticipates that the portfolio's value would surge to USD 127.70 million if all interest rates reduce by 20 bps and would drop to USD 122.20 million if all interest rates increase by 20 bps. Given these assumptions, what is the effective duration of the bond portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_value = 125.00  # in million USD\n    value_if_rates_decrease = 127.70  # in million USD\n    value_if_rates_increase = 122.20  # in million USD\n    rate_change = 0.002  # 20 bps in decimal form\n    \n    # Do math calculation to get the answer\n    # Effective duration formula: (P_down - P_up) / (2 * P_0 * delta_r)\n    P_down = value_if_rates_increase\n    P_up = value_if_rates_decrease\n    P_0 = initial_value\n    delta_r = rate_change\n    \n    effective_duration = (P_down - P_up) / (2 * P_0 * delta_r)\n    \n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-238",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current trading price of ABC shares is $50. A 1-year put option on these shares, with an exercise price of $50, is valued at $2.08. Given a continuously compounded risk-free rate of 4%, what would be the value of a call option that has the same exercise price and date?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 50  # Current trading price of ABC shares\n    X = 50  # Exercise price of the options\n    P = 2.08  # Value of the put option\n    r = 0.04  # Continuously compounded risk-free rate\n    T = 1  # Time to expiration in years\n\n    # Do math calculation to get the answer using the put-call parity\n    # C - P = S - X * e^(-rT)\n    # C = P + S - X * e^(-rT)\n    import math\n    call_value = P + S - (X * math.exp(-r * T))\n\n    # return answer\n    return call_value\n```"
        ]
    },
    {
        "tables": [
            "|             | Coefficient | Std. Error | t-Statistic |\n|-------------|-------------|------------|-------------|\n| Sample Size | 150         |            |             |\n| Intercept   | 4990.519    | 2280.093   | 2.189       |\n| P           | -35.666     | 17.871     | -1.996      |\n| 1           | 6.193       | 1.652      | 3.749       |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-239",
        "python_solution": "",
        "ground_truth": null,
        "question": "As an owner of a supermarket, David is keen on using mathematical models to tackle various issues. Lately, he wishes to examine the correlation between the quantity of product demand (V), product pricing (P), and customer earning levels (I). The quantity of product demand acts as the dependent variable while the other two serve as independent variables. After conducting a multiple regression analysis, he obtained the following results: What is the upper confidence interval of the regression coefficient for the customer's earning level at 0.1 level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coefficient_I = 6.193\n    std_error_I = 1.652\n    t_statistic_I = 3.749\n    alpha = 0.1  # 0.1 level of significance\n    \n    # Calculate the critical t-value for a two-tailed test\n    from scipy.stats import t\n    dof = 150 - 3  # degrees of freedom (sample size - number of parameters)\n    critical_t = t.ppf(1 - alpha / 2, dof)\n    \n    # Calculate the margin of error\n    margin_of_error = critical_t * std_error_I\n    \n    # Calculate the upper confidence interval\n    upper_ci = coefficient_I + margin_of_error\n    \n    # return answer\n    return upper_ci\n```\n\nThis program calculates the upper confidence interval for the regression coefficient of the customer's earning level (I) at a 0.1 level of significance. It uses the provided coefficient, standard error, and t-statistic for the earning level, along with the critical t-value from the t-distribution for the given degrees of freedom and significance level."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-240",
        "python_solution": "",
        "ground_truth": null,
        "question": "A client requests John to appraise the real estate with the presumption that the net operating income amounts to $125,000, the discount rate is 11%, and the growth rate stands at 6%. Choosing the direct capitalization approach to determine the value, what is the estimated worth of the multifamily property according to John's calculation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_operating_income = 125000\n    discount_rate = 0.11\n    growth_rate = 0.06\n    \n    # Do math calculation to get the answer\n    capitalization_rate = discount_rate - growth_rate\n    property_value = net_operating_income / capitalization_rate\n    \n    # return answer\n    return property_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-241",
        "python_solution": "",
        "ground_truth": null,
        "question": "A trader has set up a bearish option approach using three identical maturity put options. He purchases two $46 puts for $5 each, and then sells one $53 put for $8 and one $37 put for $3. If the underlying asset is valued at $32 at maturity, what is the ultimate gain of this strategy?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price_46_puts = 2 * 5  # Cost of purchasing two $46 puts at $5 each\n    sale_price_53_put = 8  # Revenue from selling one $53 put at $8\n    sale_price_37_put = 3  # Revenue from selling one $37 put at $8\n    underlying_asset_value = 32  # Value of the underlying asset at maturity\n\n    # Calculate the payoff for each option at maturity\n    payoff_46_puts = 2 * (46 - underlying_asset_value)  # Payoff for two $46 puts\n    payoff_53_put = max(0, 53 - underlying_asset_value) - 8  # Payoff for sold $53 put\n    payoff_37_put = max(0, 37 - underlying_asset_value) - 3  # Payoff for sold $37 put\n\n    # Calculate the total gain\n    total_gain = payoff_46_puts + payoff_53_put + payoff_37_put - purchase_price_46_puts\n\n    # return answer\n    return total_gain\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-242",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's think about this linear regression equation: Y=a+bX+e. If a equals 0.05, b equals 1.2, standard deviation of Y equals 0.26, and standard deviation of e equals 0.1, what would be the correlation between X and Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    a = 0.05\n    b = 1.2\n    std_dev_Y = 0.26\n    std_dev_e = 0.1\n    \n    # Do math calculation to get the answer\n    # The correlation between X and Y can be calculated using the formula:\n    # correlation(X, Y) = b * (std_dev_X / std_dev_Y)\n    # Since std_dev_X is not given, we assume it's 1 for standardization purposes.\n    # Therefore, correlation(X, Y) = b * (1 / std_dev_Y)\n    correlation = b * (1 / std_dev_Y)\n    \n    # return answer\n    return correlation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-243",
        "python_solution": "",
        "ground_truth": null,
        "question": "Enterprise B releases 20 unique bonds and the risk of default for Enterprise B is 2%. The portfolio, made up of the 20 bonds, has a notional value of $1,000,000. Assuming that the default correlation of the 20 bonds is equal to 1 and the recovery rate is 0%, what is the credit VaR of the portfolio at the 99% confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_bonds = 20\n    default_risk = 0.02\n    notional_value = 1000000\n    confidence_level = 0.99\n    recovery_rate = 0\n    default_correlation = 1\n\n    # Calculate the probability of exactly k defaults using the binomial distribution\n    from scipy.stats import binom\n\n    # Calculate the number of defaults at the 99% confidence level\n    k = binom.ppf(1 - confidence_level, num_bonds, default_risk)\n\n    # Calculate the loss due to k defaults\n    loss = k * (notional_value / num_bonds) * (1 - recovery_rate)\n\n    # return the credit VaR\n    return loss\n\n# Example usage:\nprint(solution())\n```\n\nThis program calculates the credit Value at Risk (VaR) for a portfolio of 20 bonds issued by Enterprise B, given a 2% default risk, a notional value of $1,000,000, a 99% confidence level, and a 0% recovery rate. The default correlation is assumed to be 1, meaning all bonds default together. The program uses the binomial distribution to find the number of defaults at the specified confidence level and calculates the corresponding loss."
        ]
    },
    {
        "tables": [
            "|                               |        |\n|-------------------------------|--------|\n| Straight bond value           | \u00a3 978  |\n| Value of embedded issuer call option | \u00a3 43   |\n| Value of embedded investor put option | \u00a3 26   |\n| Value of embedded call option on issuer's stock | \u00a3 147 |\n| Conversion price              | \u00a3 12.50|\n| Current common stock share price | \u00a3 11.75|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-244",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given data about the ZX bond, if ZX bond is identified as a callable-putable convertible bond, what would be the arbitrage-free value of this ZX bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    straight_bond_value = 978\n    value_of_embedded_issuer_call_option = 43\n    value_of_embedded_investor_put_option = 26\n    value_of_embedded_call_option_on_issuer_stock = 147\n    conversion_price = 12.50\n    current_common_stock_share_price = 11.75\n\n    # Do math calculation to get the answer\n    # The arbitrage-free value of the callable-putable convertible bond is calculated by summing the straight bond value, \n    # the value of the embedded issuer call option, the value of the embedded investor put option, and the value of the embedded call option on issuer's stock.\n    arbitrage_free_value = straight_bond_value + value_of_embedded_issuer_call_option + value_of_embedded_investor_put_option + value_of_embedded_call_option_on_issuer_stock\n\n    # return answer\n    return arbitrage_free_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-245",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a business has an unprotected credit line and needs to keep its EBIT-to-interest coverage ratio above 2.0. With EBIT expected to be within the range of $36 million to $48 million, all values equally probable, what's the likelihood that the EBIT/interest would exceed 2.0 if the projected annual interest charge is $20 million?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ebit_min = 36000000\n    ebit_max = 48000000\n    interest_charge = 20000000\n    \n    # Do math calculation to get the answer\n    # Calculate the EBIT values that would result in an EBIT/interest ratio of exactly 2.0\n    ebit_threshold = 2.0 * interest_charge\n    \n    # Check if the EBIT range includes values above the threshold\n    if ebit_min >= ebit_threshold:\n        # If the minimum EBIT is already above the threshold, all values are above 2.0\n        likelihood = 1.0\n    elif ebit_max < ebit_threshold:\n        # If the maximum EBIT is below the threshold, none of the values are above 2.0\n        likelihood = 0.0\n    else:\n        # If the range spans above and below the threshold, calculate the proportion above\n        likelihood = (ebit_max - ebit_threshold) / (ebit_max - ebit_min)\n    \n    # return answer\n    return likelihood\n```"
        ]
    },
    {
        "tables": [
            "|       | Volatility (%) |        | Volatility (%) |\n|-------|--------------|--------|--------------|\n| Fund 1 | 9.81         | Fund 8  | 13.99        |\n| Fund 2 | 10.12       | Fund 9  | 14.47        |\n| Fund 3 | 10.84       | Fund 10 | 14.85        |\n| Fund 4 | 11.33       | Fund 11 | 15.00        |\n| Fund 5 | 12.25       | Fund 12 | 17.36        |\n| Fund 6 | 13.39       | Fund 13 | 17.98        |\n| Fund 7 | 13.42       |         |              |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-246",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the approximate value of the first quintile, considering the volatility of a chain of funds that are part of the same group, arranged in rising order?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    volatilities = [9.81, 10.12, 10.84, 11.33, 12.25, 13.39, 13.42, 13.99, 14.47, 14.85, 15.00, 17.36, 17.98]\n    \n    # Sort the volatilities in ascending order\n    volatilities.sort()\n    \n    # Calculate the position of the first quintile (20th percentile)\n    first_quintile_index = int(len(volatilities) * 0.2)\n    \n    # Get the value at the first quintile position\n    first_quintile_value = volatilities[first_quintile_index]\n    \n    # return answer\n    return first_quintile_value\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class             | Global Equity | Global Bonds | Residual Risk (%) |\n|-------------------------|---------------|--------------|-------------------|\n| U.S. real estate equities | 0.60          | 0.15         | 4.4               |\n| Global timber equities  | 0.45          | 0.20         | 3.9               |\n\nAdditional Information\n\n| Variances             | 0.025  | 0.0014 |       |\n|-----------------------|--------|--------|-------|\n\nCorrelation between global equities and global bonds:  0.33"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-247",
        "python_solution": "",
        "ground_truth": null,
        "question": "Reviewing the RiteVal data from Exhibit 1, and adopting the two-factor model preferred by Cortez, where global equity and global bonds are the two primary drivers of return for all asset classes, what is the standard deviation of U.S. real estate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    global_equity_variance = 0.025\n    global_bonds_variance = 0.0014\n    correlation = 0.33\n    \n    # Weights for U.S. real estate equities\n    weight_global_equity = 0.60\n    weight_global_bonds = 0.15\n    \n    # Do math calculation to get the answer\n    # Calculate the covariance between global equity and global bonds\n    covariance = correlation * (global_equity_variance ** 0.5) * (global_bonds_variance ** 0.5)\n    \n    # Calculate the variance of U.S. real estate\n    variance_us_real_estate = (weight_global_equity ** 2) * global_equity_variance + \\\n                              (weight_global_bonds ** 2) * global_bonds_variance + \\\n                              2 * weight_global_equity * weight_global_bonds * covariance\n    \n    # Calculate the standard deviation of U.S. real estate\n    standard_deviation_us_real_estate = variance_us_real_estate ** 0.5\n    \n    # return answer\n    return standard_deviation_us_real_estate\n```\n\nThis Python program calculates the standard deviation of U.S. real estate using the two-factor model with global equity and global bonds as the primary drivers of return. The weights, variances, and correlation are provided in the problem statement."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-248",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, Telecom Corporation had an average of 1,000,000 shares in circulation. During the same year, the company also had 10,000 options in circulation with exercise prices of $10 each. The stock's average price during 2009 was $15. To calculate the diluted earnings per share, how many shares should be considered in the denominator?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    basic_shares = 1000000\n    options = 10000\n    exercise_price = 10\n    average_stock_price = 15\n    \n    # Calculate the number of shares that could be purchased with the option proceeds\n    shares_from_options = options * (average_stock_price - exercise_price) / average_stock_price\n    \n    # Calculate the total number of shares to be considered for diluted earnings per share\n    diluted_shares = basic_shares + shares_from_options\n    \n    # return answer\n    return diluted_shares\n```"
        ]
    },
    {
        "tables": [
            "| Year | Net Return (%) |\n|------|----------------|\n| 2008 | -34.8          |\n| 2009 | 32.2           |\n| 2010 | 11.1           |\n| 2011 | -1.4           |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-249",
        "python_solution": "",
        "ground_truth": null,
        "question": "What would be the required 2012 return to get a trailing five-year geometric mean annualized return of 5% by the end of 2012, assuming a wealth management company has the following yearly returns in their US large-cap equity portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = {\n        2008: -0.348,\n        2009: 0.322,\n        2010: 0.111,\n        2011: -0.014\n    }\n    target_geometric_mean = 1.05  # 5% geometric mean annualized return\n\n    # Do math calculation to get the answer\n    # Calculate the product of the first four years' returns\n    product_of_returns = 1\n    for year in returns:\n        product_of_returns *= (1 + returns[year])\n\n    # Calculate the required return for 2012\n    required_return_2012 = (target_geometric_mean ** 5 / product_of_returns) - 1\n\n    # return answer\n    return required_return_2012\n```"
        ]
    },
    {
        "tables": [
            "| End of Year | Call Price |\n|-------------|------------|\n| 3           | 102        |\n| 4           | 101        |\n| 5           | 100        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-250",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond that has 5 years left before maturity is presently being sold for 101 for every 100 of par value. This bond provides a 6% coupon rate, with interest paid twice a year. What is the bond's yearly yield-to-maturity, bearing in mind the bond can first be redeemed after 3 years, with further redemptions possible based on the successive coupon dates, according to the schedule provided?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    current_price = 101\n    coupon_rate = 0.06\n    frequency = 2  # semi-annual payments\n    years_to_maturity = 5\n    call_prices = {3: 102, 4: 101, 5: 100}\n    \n    # Function to calculate the yield to maturity using the Newton-Raphson method\n    def yield_to_maturity(price, par, coupon, freq, years, call_prices):\n        # Initial guess for the yield\n        ytm_guess = 0.05\n        tolerance = 1e-6\n        max_iterations = 1000\n        \n        for _ in range(max_iterations):\n            # Calculate the present value of the bond cash flows\n            pv = 0\n            for i in range(1, freq * years + 1):\n                if i <= freq * min(call_prices.keys()):\n                    pv += (coupon * par) / freq / (1 + ytm_guess / freq) ** i\n                else:\n                    call_year = min([year for year in call_prices if year >= i / freq])\n                    call_price = call_prices[call_year]\n                    pv += (coupon * par) / freq / (1 + ytm_guess / freq) ** i + call_price / (1 + ytm_guess / freq) ** i\n            \n            # Calculate the derivative of the present value with respect to the yield\n            derivative = 0\n            for i in range(1, freq * years + 1):\n                derivative -= i * (coupon * par) / freq / (1 + ytm_guess / freq) ** (i + 1)\n            \n            # Update the yield guess\n            new_ytm_guess = ytm_guess - (pv - price) / derivative\n            \n            # Check for convergence\n            if abs(new_ytm_guess - ytm_guess) < tolerance:\n                return new_ytm_guess\n            \n            ytm_guess = new_ytm_guess"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-251",
        "python_solution": "",
        "ground_truth": null,
        "question": "Management at S&Q Enterprises is given the option to receive options on common stocks. The options necessitate a service period of 4 years post the grant date for vesting. S&Q follows a financial year-end of December 31. The enterprise on July 1, 2014, gave out 61,600 options. The market price of the options on the date of grant was \u00a30.5. What is the chunk of the compensation expense associated with the stock option granted in 2014?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    options_granted = 61600\n    market_price_grant_date = 0.5\n    service_period_years = 4\n    year_2014_fraction = 6 / 12  # Since the options were granted on July 1, 2014\n\n    # Do math calculation to get the answer\n    total_compensation_expense = options_granted * market_price_grant_date\n    annual_compensation_expense = total_compensation_expense / service_period_years\n    compensation_expense_2014 = annual_compensation_expense * year_2014_fraction\n\n    # return answer\n    return compensation_expense_2014\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-252",
        "python_solution": "",
        "ground_truth": null,
        "question": "Leaving out the impacts of compound interest, what would be the predicted overall cost of keeping an investment for nine months in the ETF, keeping in mind an ETF with these management fees and trading expenses: An annual management fee of 0.40%, round-trip trading fees of 0.55%, and a bid-offer spread of 0.20% on buying and selling?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_management_fee = 0.40 / 100\n    round_trip_trading_fees = 0.55 / 100\n    bid_offer_spread = 0.20 / 100\n    investment_duration_months = 9\n    annual_months = 12\n    \n    # Do math calculation to get the answer\n    # Calculate the prorated management fee for 9 months\n    prorated_management_fee = (annual_management_fee / annual_months) * investment_duration_months\n    \n    # The total cost includes the prorated management fee, round-trip trading fees, and bid-offer spread\n    total_cost = prorated_management_fee + round_trip_trading_fees + bid_offer_spread\n    \n    # return answer\n    return total_cost\n```"
        ]
    },
    {
        "tables": [
            "| ($ thousands) | 2013 | 2012 |\n|---|---|---|\n|Deferred tax assets| 200 | 160 |\n|Deferred tax liabilities| -450 | -360 |\n|Net deferred tax liabilities| -250 | -200 |\n|Earnings before taxes| 4,000 | 3,800 |\n|Income taxes at the statutory rate| 1,200 | 1,140 |\n|Income tax payable (Current income tax expense)| 1,000 | 900 |"
        ],
        "topic": "Accounting",
        "question_id": "test-253",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the income tax expense (in thousands) in 2013 for the corporation, based on the provided data about the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    income_tax_payable = 1000  # in thousands for 2013\n    deferred_tax_liabilities_2013 = -450  # in thousands for 2013\n    deferred_tax_liabilities_2012 = -360  # in thousands for 2012\n    \n    # Do math calculation to get the answer\n    # Income tax expense = Income tax payable + Change in deferred tax liabilities\n    change_in_deferred_tax_liabilities = deferred_tax_liabilities_2013 - deferred_tax_liabilities_2012\n    income_tax_expense = income_tax_payable + change_in_deferred_tax_liabilities\n    \n    # return answer\n    return income_tax_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-254",
        "python_solution": "",
        "ground_truth": null,
        "question": "If corporation AR has a turnover that is 3 times and its sales amount to $5000, could you compute the corporation's AR?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    turnover_ratio = 3\n    sales_amount = 5000\n    \n    # Do math calculation to get the answer\n    accounts_receivable = sales_amount / turnover_ratio\n    \n    # return answer\n    return accounts_receivable\n```"
        ]
    },
    {
        "tables": [
            "|       | Fund Y(%) |\n|-------|-----------|\n| Year 1|   19.5    |\n| Year 2|   -1.9    |\n| Year 3|   19.7    |\n| Year 4|   35.0    |\n| Year 5|   5.7     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-255",
        "python_solution": "",
        "ground_truth": null,
        "question": "The accompanying display presents the yearly returns for Investment Pool X. What is the geometric mean return for Investment Pool X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [19.5, -1.9, 19.7, 35.0, 5.7]\n    \n    # Convert percentages to multipliers\n    multipliers = [(1 + r / 100) for r in returns]\n    \n    # Calculate the product of all multipliers\n    product = 1\n    for m in multipliers:\n        product *= m\n    \n    # Calculate the geometric mean return\n    geometric_mean = product ** (1 / len(multipliers)) - 1\n    \n    # Convert the geometric mean to percentage\n    geometric_mean_percentage = geometric_mean * 100\n    \n    # return answer\n    return geometric_mean_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-256",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a yearly discount rate of 6.5%, compounded monthly, what is the present worth of a financial agreement that promises to pay \u20ac1,200 each month for a period of five years, with the first payment being done instantly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_payment = 1200\n    yearly_discount_rate = 0.065\n    monthly_discount_rate = yearly_discount_rate / 12\n    number_of_months = 5 * 12\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the annuity due\n    present_value = monthly_payment * ((1 - (1 + monthly_discount_rate) ** -number_of_months) / monthly_discount_rate) * (1 + monthly_discount_rate)\n    \n    # return answer\n    return present_value\n```\n\nThis Python program calculates the present worth of a financial agreement that promises to pay \u20ac1,200 each month for a period of five years, with the first payment being done instantly, using a yearly discount rate of 6.5%, compounded monthly. The formula used here is for the present value of an annuity due, which takes into account the immediate first payment."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-257",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the standard deviation of the average weekly return if an investment analyst is estimating the VaR for a portfolio using a data set of 25 weekly returns, with an average weekly return of 7% and a standard deviation for the return series of 15%, given that the weekly returns are independent and identically distributed?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average_weekly_return = 0.07  # 7%\n    standard_deviation_weekly_return = 0.15  # 15%\n    number_of_weeks = 25\n    \n    # Do math calculation to get the answer\n    # Since the weekly returns are independent and identically distributed,\n    # the standard deviation of the average weekly return is calculated by\n    # dividing the standard deviation of the weekly return by the square root of the number of weeks.\n    standard_deviation_average_weekly_return = standard_deviation_weekly_return / (number_of_weeks ** 0.5)\n    \n    # return answer\n    return standard_deviation_average_weekly_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-258",
        "python_solution": "",
        "ground_truth": null,
        "question": "Financial institution C provides an unsecured loan worth $10 million to enterprise D. Based on the forecasted data, the likelihood of enterprise D defaulting is 4% and the recovery rate stands at 40%. What is the credit reserve that Financial institution C should maintain equal to the anticipated credit loss?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 10000000  # $10 million\n    default_likelihood = 0.04  # 4%\n    recovery_rate = 0.40  # 40%\n    \n    # Do math calculation to get the answer\n    anticipated_credit_loss = loan_amount * default_likelihood * (1 - recovery_rate)\n    \n    # return answer\n    return anticipated_credit_loss\n```"
        ]
    },
    {
        "tables": [
            "|                         | $ millions |\n|-------------------------|-----------|\n| Net Income              | 485       |\n| Depreciation expense    | 270       |\n| Increase in accounts receivable | 59        |\n| Increase in accounts payable | 33        |\n| Purchase of fixed assets | 523       |\n| Increase in notes payable | 15        |\n| Increase in long-term debt | 60        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-259",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the financial report, what is the FCFE for Company P?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 485\n    depreciation_expense = 270\n    increase_in_accounts_receivable = 59\n    increase_in_accounts_payable = 33\n    purchase_of_fixed_assets = 523\n    increase_in_notes_payable = 15\n    increase_in_long_term_debt = 60\n    \n    # Do math calculation to get the answer\n    # FCFE = Net Income + Depreciation - Increase in Accounts Receivable + Increase in Accounts Payable - Purchase of Fixed Assets + Increase in Notes Payable + Increase in Long-Term Debt\n    fcfe = (net_income + depreciation_expense - increase_in_accounts_receivable + increase_in_accounts_payable - purchase_of_fixed_assets + increase_in_notes_payable + increase_in_long_term_debt)\n    \n    # return answer\n    return fcfe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-260",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the lower limit of a 99% confidence interval for the population mean if you have a sample size of 65, a mean of 31, and a variance of 529 from a normally distributed population?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 65\n    sample_mean = 31\n    variance = 529\n    confidence_level = 0.99\n    \n    # Calculate the standard deviation\n    standard_deviation = variance ** 0.5\n    \n    # Calculate the standard error\n    standard_error = standard_deviation / (sample_size ** 0.5)\n    \n    # Calculate the z-score for the 99% confidence level\n    # For a 99% confidence interval, the z-score is approximately 2.576\n    z_score = 2.576\n    \n    # Calculate the lower limit of the confidence interval\n    lower_limit = sample_mean - (z_score * standard_error)\n    \n    # return answer\n    return lower_limit\n```"
        ]
    },
    {
        "tables": [
            "|                      | Book value | Fair value |\n|----------------------|------------|------------|\n| Plant & equipment    | 2500       | 2800       |\n| Total assets         | 2950       | 3250       |\n| Liabilities          | 1550       | 1550       |\n| Net assets           | 1400       | 1700       |"
        ],
        "topic": "Accounting",
        "question_id": "test-261",
        "python_solution": "",
        "ground_truth": null,
        "question": "On the 1st of January 2019, ABC corporation purchased a 20% stake with voting rights in XYZ Ltd. for $400 million. ABC corporation has a seat on XYZ's board of directors and has a say in their policymaking. An analyst named Anne collects specific financial data for XYZ in 2019. The plant and equipment are depreciated on a linear basis and have a remaining lifespan of 10 years. From the Exhibit mentioned, what is the goodwill included in ABC\u2019s acquisition of XYZ?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price = 400  # in millions\n    book_value_net_assets = 1400  # in millions\n    fair_value_net_assets = 1700  # in millions\n    plant_equipment_book_value = 2500  # in millions\n    plant_equipment_fair_value = 2800  # in millions\n    remaining_lifespan = 10  # years\n\n    # Calculate the fair value adjustment for plant and equipment\n    fair_value_adjustment = plant_equipment_fair_value - plant_equipment_book_value\n\n    # Calculate the annual depreciation for the fair value adjustment\n    annual_depreciation = fair_value_adjustment / remaining_lifespan\n\n    # Calculate the fair value of net assets after adjustment\n    fair_value_net_assets_adjusted = fair_value_net_assets + fair_value_adjustment - annual_depreciation\n\n    # Calculate the proportionate share of ABC corporation in XYZ Ltd.\n    abc_share = 0.20  # 20% stake\n\n    # Calculate the proportionate share of fair value of net assets\n    proportionate_fair_value_net_assets = fair_value_net_assets_adjusted * abc_share\n\n    # Calculate the goodwill included in the acquisition\n    goodwill = purchase_price - proportionate_fair_value_net_assets\n\n    # return answer\n    return goodwill\n```\n\nThis Python program calculates the goodwill included in ABC\u2019s acquisition of XYZ by adjusting the fair value of net assets for the plant and equipment's fair value adjustment and its depreciation, then subtracting ABC's proportionate share of the adjusted fair value of net assets from the purchase price."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-262",
        "python_solution": "",
        "ground_truth": null,
        "question": "If rolling the dice, the likelihood that number 1 is on top is 1/6, what are the chances of this happening?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_of_one = 1/6\n    \n    # Do math calculation to get the answer\n    # The probability is already given as 1/6, so no further calculation is needed.\n    \n    # return answer\n    return probability_of_one\n```"
        ]
    },
    {
        "tables": [
            "| Maturity | Coupon | Price |\n|----------|--------|-------|\n| 6 months | 4.5%   | 101.47 |\n| 1 year   | 6.0%   | 102.75 |\n| 2 years  | 7%     | 100.32 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-263",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the table illustrating data about three semiannual coupon payment bonds, what is the discount factor for d(0.5)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_6_months = 4.5 / 100  # Convert percentage to decimal\n    price_6_months = 101.47\n    face_value = 100  # Assuming face value is 100 for simplicity\n    \n    # Calculate the present value of the bond\n    present_value = price_6_months\n    \n    # Calculate the future value of the coupon payment and face value at maturity\n    future_value = face_value + (coupon_6_months * face_value)\n    \n    # Do math calculation to get the discount factor d(0.5)\n    discount_factor = present_value / future_value\n    \n    # return answer\n    return discount_factor\n```\n\nThis program calculates the discount factor for the 6-month bond by dividing the present value of the bond by the future value of the bond at maturity, including the coupon payment."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-264",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following table outlines details from the financial reports of BC Enterprises as of December 31, 20X8. Using this data, can you determine the sustainable growth rate of BC Enterprises? The figures are as follows: revenue: $800,000, dividend paid: $80,000, total asset turnover: 0.58, financial leverage: 1.7, sales to net income: 6.5, tax rate: 20%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 800000\n    dividend_paid = 80000\n    total_asset_turnover = 0.58\n    financial_leverage = 1.7\n    sales_to_net_income = 6.5\n    tax_rate = 0.20\n    \n    # Calculate net income\n    net_income = revenue / sales_to_net_income\n    \n    # Calculate retained earnings\n    retained_earnings = net_income - dividend_paid\n    \n    # Calculate return on assets (ROA)\n    roa = net_income / (revenue / total_asset_turnover)\n    \n    # Calculate return on equity (ROE)\n    roe = roa * financial_leverage\n    \n    # Calculate payout ratio\n    payout_ratio = dividend_paid / net_income\n    \n    # Calculate retention ratio\n    retention_ratio = 1 - payout_ratio\n    \n    # Calculate sustainable growth rate\n    sustainable_growth_rate = roe * retention_ratio\n    \n    # return answer\n    return sustainable_growth_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-265",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming equal funding from each source and a marginal tax rate of 30%, what is the weighted average cost of capital (%) if a company's post-tax debt costs, preferred shares, and equity are 8.4%, 14%, and 16% respectively?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    post_tax_debt_cost = 8.4\n    preferred_shares_cost = 14\n    equity_cost = 16\n    marginal_tax_rate = 30 / 100  # Convert percentage to decimal\n\n    # Assuming equal funding from each source\n    weight = 1 / 3  # Equal weight for debt, preferred shares, and equity\n\n    # Do math calculation to get the answer\n    wacc = (post_tax_debt_cost * weight) + (preferred_shares_cost * weight) + (equity_cost * weight)\n\n    # return answer\n    return wacc\n```"
        ]
    },
    {
        "tables": [
            "| Liabilities at  year-end | \u00a3 1,000 |\n|-------------------------|---------|\n| Contributed capital at year-end | \u00a3 500 |\n| Beginning retained earnings | \u00a3 600 |\n| Revenue during the year | \u00a3 5,000 |\n| Expenses during the year | \u00a3 4,300 |"
        ],
        "topic": "Accounting",
        "question_id": "test-266",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher has gathered the following data about Smithson Enterprises. No distributions have been made to the owners. What would most probably be the researcher's estimate of the total assets at the end of the year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    liabilities_year_end = 1000\n    contributed_capital_year_end = 500\n    beginning_retained_earnings = 600\n    revenue_during_year = 5000\n    expenses_during_year = 4300\n    \n    # Calculate net income for the year\n    net_income = revenue_during_year - expenses_during_year\n    \n    # Calculate ending retained earnings\n    ending_retained_earnings = beginning_retained_earnings + net_income\n    \n    # Calculate total assets using the accounting equation: Assets = Liabilities + Equity\n    total_assets = liabilities_year_end + contributed_capital_year_end + ending_retained_earnings\n    \n    # return answer\n    return total_assets\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-267",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that a random variable Y follows a normal distribution with a mean of 40 and a standard deviation of 14. What is the likelihood that Y is not within the range of 12 to 61?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean = 40\n    std_dev = 14\n    lower_bound = 12\n    upper_bound = 61\n    \n    # Import necessary library\n    from scipy.stats import norm\n    \n    # Calculate the cumulative distribution function (CDF) values\n    prob_below_lower_bound = norm.cdf(lower_bound, mean, std_dev)\n    prob_above_upper_bound = 1 - norm.cdf(upper_bound, mean, std_dev)\n    \n    # Calculate the likelihood that Y is not within the range of 12 to 61\n    prob_not_within_range = prob_below_lower_bound + prob_above_upper_bound\n    \n    # return answer\n    return prob_not_within_range\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-268",
        "python_solution": "",
        "ground_truth": null,
        "question": "How many permutations can be made when selecting 4 items from a group of 10 items?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_items = 10\n    selected_items = 4\n    \n    # Do math calculation to get the answer\n    # Calculate the factorial of total_items\n    def factorial(n):\n        if n == 0:\n            return 1\n        else:\n            return n * factorial(n-1)\n    \n    # Calculate permutations using the formula P(n, r) = n! / (n-r)!\n    permutations = factorial(total_items) / factorial(total_items - selected_items)\n    \n    # return answer\n    return permutations\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-269",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is a trader based in the United States. John has posted a 6-month forward exchange rate in USD/GBP at 1.3923. Additionally, John predicts a 6-month forward point percentage of 5.6%. Which among the following selections for the USD/GBP spot rate would be the most precise?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rate = 1.3923\n    forward_point_percentage = 5.6 / 100  # Convert percentage to decimal\n    \n    # Do math calculation to get the answer\n    # The spot rate can be calculated using the formula: Spot Rate = Forward Rate / (1 + Forward Point Percentage)\n    spot_rate = forward_rate / (1 + forward_point_percentage)\n    \n    # return answer\n    return spot_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-270",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Chief Information Officer of a private equity firm in Canada is looking to secure the interest on a three-month \"bridge\" loan that his company will acquire in six months to finalize an LBO transaction. He trades the applicable interest rate futures contracts at 98.05. After six months, he starts the loan at 2.70% and neutralizes the hedge at 97.30. What is the effective interest rate on the loan?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_futures_price = 98.05\n    final_futures_price = 97.30\n    loan_interest_rate = 2.70\n\n    # Do math calculation to get the answer\n    # Calculate the change in futures price\n    change_in_futures_price = initial_futures_price - final_futures_price\n\n    # Convert the change in futures price to a percentage\n    change_in_interest_rate = change_in_futures_price / 100\n\n    # Calculate the effective interest rate on the loan\n    effective_interest_rate = loan_interest_rate + change_in_interest_rate\n\n    # return answer\n    return effective_interest_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-271",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a functional procedure has a 5% chance of resulting in a substantial financial loss and if not, no significant loss is recorded (i.e., Bernoulli). If the substantial loss happens, the intensity is normally distributed with an average of $4 million and a standard deviation of $2 million. What is the expected shortfall at the 95% confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_of_loss = 0.05\n    average_loss = 4000000\n    standard_deviation_loss = 2000000\n    confidence_level = 0.95\n\n    # Do math calculation to get the answer\n    # Calculate the expected shortfall at the 95% confidence level\n    # Expected shortfall (ES) is the average of losses in the worst 5% cases\n    # We use the inverse of the standard normal cumulative distribution function (ppf) to find the threshold\n    from scipy.stats import norm\n    threshold = norm.ppf(1 - confidence_level)\n    expected_shortfall = average_loss + standard_deviation_loss * (norm.pdf(threshold) / (1 - confidence_level))\n\n    # Adjust for the probability of loss\n    expected_shortfall_adjusted = probability_of_loss * expected_shortfall\n\n    # return answer\n    return expected_shortfall_adjusted\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-272",
        "python_solution": "",
        "ground_truth": null,
        "question": "Miller is a tax consultant who gives tax awareness counsel to individual clients. Miller's client is Jane who currently has $10 million invested in a tax-deferred account earning 8% annually. Jane intends to liquidate the investment after five years, accrue the sale proceeds in a lump sum (which are taxed at a 20% rate), and utilize the proceeds to buy a mansion. Jane requested Miller to determine the leftover after-tax wealth after five years. What will be the after-tax wealth in Jane's tax-deferred account at the conclusion of the five years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 10000000\n    annual_interest_rate = 0.08\n    years = 5\n    tax_rate = 0.20\n    \n    # Do math calculation to get the answer\n    # Calculate the future value of the investment before tax\n    future_value_before_tax = initial_investment * (1 + annual_interest_rate) ** years\n    \n    # Calculate the tax on the future value\n    tax_amount = future_value_before_tax * tax_rate\n    \n    # Calculate the after-tax wealth\n    after_tax_wealth = future_value_before_tax - tax_amount\n    \n    # return answer\n    return after_tax_wealth\n```"
        ]
    },
    {
        "tables": [
            "|                          | Portfolio W       | Futures Contract and CTD Bond |\n| ------------------------ | --------------- | ----------------------------- |\n| Market value            | $120,349,000      | Price                         | 143.20                      |\n| Modified duration       | 9.30             | Modified duration             | 9.00                         |\n| Basis point value       | $111,924.57      | Basis point value             | 128.88                       |\n|                          |                   | Conversion factor             | 0.75                         |\n|                          |                   | Contract size                 | $100,000                     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-273",
        "python_solution": "",
        "ground_truth": null,
        "question": "John, a beginner analyst, oversees a portfolio X. The portfolio is completely committed to US Treasuries. John aims to fully safeguard this bond portfolio against any increase in interest rates. Exhibit 1 discloses certain information regarding Portfolio X, along with the related Treasury futures contract, and the cheapest-to-deliver (CTD) bond. Considering the data in Exhibit 1, how many Treasury futures contracts does John need to sell to fully protect Portfolio X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_market_value = 120349000\n    portfolio_basis_point_value = 111924.57\n    futures_basis_point_value = 128.88\n    conversion_factor = 0.75\n    contract_size = 100000\n\n    # Calculate the effective basis point value of the futures contract\n    effective_futures_bpv = futures_basis_point_value * conversion_factor\n\n    # Calculate the number of contracts needed to hedge the portfolio\n    number_of_contracts = (portfolio_basis_point_value / effective_futures_bpv) * (portfolio_market_value / contract_size)\n\n    # return answer\n    return round(number_of_contracts)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-274",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current status of the PlayPoint Resort Company is that it has 1.2 million outstanding common shares with a beta of 2.2. Also, it has bonds of a face value of $10 million that will mature in five years and these bonds have an 8% coupon with payments every 6 months, and are calculated to yield 13.65 percent. If PlayPoint decides to issue new bonds up to $2.5 million, the bonds will be priced at par value and will yield 13.65 percent. However, if the company decides to issue bonds beyond $2.5 million, the expected yield on the entire issuance will be 16 percent. PlayPoint recently determined that they can issue new common stock at $10 per share. The present risk-free interest rate is at 3 percent while the expected market return is 10 percent. PlayPoint's marginal tax rate is at 30 percent. What is the weighted average cost of capital if PlayPoint ac",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    outstanding_shares = 1200000\n    beta = 2.2\n    face_value_bonds = 10000000\n    coupon_rate = 0.08\n    bond_yield_1 = 0.1365\n    bond_yield_2 = 0.16\n    new_bonds_limit = 2500000\n    new_bonds_yield = 0.1365\n    stock_price = 10\n    risk_free_rate = 0.03\n    market_return = 0.10\n    tax_rate = 0.30\n\n    # Calculate cost of equity using CAPM\n    cost_of_equity = risk_free_rate + beta * (market_return - risk_free_rate)\n\n    # Calculate cost of existing bonds\n    cost_of_existing_bonds = bond_yield_1 * (1 - tax_rate)\n\n    # Calculate cost of new bonds up to $2.5 million\n    cost_of_new_bonds_1 = new_bonds_yield * (1 - tax_rate)\n\n    # Calculate cost of new bonds beyond $2.5 million\n    cost_of_new_bonds_2 = bond_yield_2 * (1 - tax_rate)\n\n    # Calculate total market value of equity\n    market_value_equity = outstanding_shares * stock_price\n\n    # Calculate total market value of existing bonds\n    market_value_existing_bonds = face_value_bonds\n\n    # Calculate total market value of new bonds\n    market_value_new_bonds = new_bonds_limit\n\n    # Calculate weights for WACC\n    total_capital = market_value_equity + market_value_existing_bonds + market_value_new_bonds\n    weight_equity = market_value_equity / total_capital\n    weight_existing_bonds = market_value_existing_bonds / total_capital\n    weight_new_bonds = market_value_new_bonds / total_capital\n\n    # Calculate"
        ]
    },
    {
        "tables": [
            "|                               |         |\n|-------------------------------|---------|\n|Exhibit 1 10-Year Trailing Risk-Adjusted Performance| |\n| Average annual return        | 8.20%   |\n| Minimum acceptable return (MAR) | 5.00%   |\n| Sharpe ratio                 | 0.95    |\n| Sortino ratio                | 0.87    |\n| Upside capture               | 0.66    |\n| Downside capture             | 0.50    |\n| Maximum drawdown             | -24.00% |\n| Drawdown duration            | 4 months|"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-275",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to Exhibit 1, what is the projected semi-deviation for the investment portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average_annual_return = 0.082\n    minimum_acceptable_return = 0.05\n    sortino_ratio = 0.87\n    \n    # Do math calculation to get the answer\n    # The formula for Sortino ratio is (Average Annual Return - Minimum Acceptable Return) / Semi-Deviation\n    # Rearranging the formula to solve for Semi-Deviation:\n    semi_deviation = (average_annual_return - minimum_acceptable_return) / sortino_ratio\n    \n    # return answer\n    return semi_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-276",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive is considering pricing a put option through a one-period binomial tree. The relevant data include: The present stock price is $30, the strike price of the put option stands at $30. The upward adjustment factor is 1.12, while the downward one rests at 0.92. The risk-free rate comes at 5%. The risk-neutral likelihood of a downward movement is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 30  # present stock price\n    K = 30  # strike price of the put option\n    u = 1.12  # upward adjustment factor\n    d = 0.92  # downward adjustment factor\n    r = 0.05  # risk-free rate\n    \n    # Do math calculation to get the answer\n    p = (1 + r - d) / (u - d)\n    \n    # return answer\n    return p\n```"
        ]
    },
    {
        "tables": [
            "| ($ millions) | 2016 | 2017 |\n| --- | --- | --- |\n| Revenue | 50 | 45 |\n| Cost of goods sold | 17 | 20 |\n| Inventory | 24 | 20 |\n| Accounts receivable | 20 | 17 |\n| Accounts payable | 30 | 33 |"
        ],
        "topic": "Accounting",
        "question_id": "test-277",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given data, how much money was paid to the vendor?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold_2016 = 17\n    cost_of_goods_sold_2017 = 20\n    accounts_payable_2016 = 30\n    accounts_payable_2017 = 33\n    \n    # Do math calculation to get the answer\n    # Calculate the change in accounts payable\n    change_in_accounts_payable = accounts_payable_2017 - accounts_payable_2016\n    \n    # Calculate the total cost of goods sold over the two years\n    total_cost_of_goods_sold = cost_of_goods_sold_2016 + cost_of_goods_sold_2017\n    \n    # Calculate the total amount paid to vendors\n    total_amount_paid_to_vendors = total_cost_of_goods_sold - change_in_accounts_payable\n    \n    # return answer\n    return total_amount_paid_to_vendors\n```"
        ]
    },
    {
        "tables": [
            "| | Exports | Imports |\n|---|---|---|\n| Initial Value (DCU) | 4,800 | 6,500 |\n| Demand elasticity | 0.70 | 0.55 |\n| **Note:** DCU:  domestic currency units | | |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-278",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will the trade balance be for a theoretical economy given the following international trade data if the value of the ZRB depreciates by 12%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_exports = 4800\n    initial_imports = 6500\n    export_elasticity = 0.70\n    import_elasticity = 0.55\n    depreciation_rate = 0.12\n    \n    # Calculate the new values of exports and imports after depreciation\n    new_exports = initial_exports * (1 + export_elasticity * depreciation_rate)\n    new_imports = initial_imports * (1 - import_elasticity * depreciation_rate)\n    \n    # Calculate the trade balance\n    trade_balance = new_exports - new_imports\n    \n    # return answer\n    return trade_balance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-279",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio manager possesses a portfolio of options on a non-dividend paying stock named LYR. The portfolio includes 10,000 deep in-the-money call options on LYR and 50,000 deep out-of-the money call options on LYR. Along with this, there are 20,000 forward contracts on LYR. The current trading price of LYR is USD 100. Given 252 trading days in a year and 30 percent per-year volatility of LYR, what would be the 1-day VaR of the portfolio at the 95 percent confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    import numpy as np\n    from scipy.stats import norm\n\n    num_deep_in_the_money_calls = 10000\n    num_deep_out_of_the_money_calls = 50000\n    num_forward_contracts = 20000\n    current_price_LYR = 100\n    trading_days_per_year = 252\n    volatility_LYR = 0.30\n    confidence_level = 0.95\n    z_score = norm.ppf(1 - confidence_level)\n\n    # Calculate the daily volatility\n    daily_volatility = volatility_LYR / np.sqrt(trading_days_per_year)\n\n    # Calculate the 1-day VaR for the portfolio\n    # Assuming the value of each option and forward contract is proportional to the stock price\n    # For simplicity, we assume the deep in-the-money call options and forward contracts have a delta of 1\n    # and the deep out-of-the-money call options have a delta of 0.\n    portfolio_value = (num_deep_in_the_money_calls + num_forward_contracts) * current_price_LYR\n    daily_var = portfolio_value * daily_volatility * z_score\n\n    # return answer\n    return daily_var\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-280",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the total assets of the Silver Airways company are $3,275,000 and their total debt is $2,315,000. Determine the financial leverage assuming Silver Airways securitized $200,000 of its account receivables to a SPE.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 3275000\n    total_debt = 2315000\n    securitized_receivables = 200000\n    \n    # Adjust total assets and total debt for securitization\n    adjusted_assets = total_assets - securitized_receivables\n    adjusted_debt = total_debt - securitized_receivables\n    \n    # Do math calculation to get the answer\n    financial_leverage = adjusted_assets / (adjusted_assets - adjusted_debt)\n    \n    # return answer\n    return financial_leverage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-281",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the portfolio beta for an investor who opts to borrow an additional $5,000 at the risk-free rate and invest a total of $10,000 in the market portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.02  # Example risk-free rate, typically around 2%\n    market_portfolio_beta = 1.0  # Beta of the market portfolio is typically 1\n    borrowed_amount = 5000\n    total_investment = 10000\n    initial_investment = total_investment - borrowed_amount\n    \n    # Do math calculation to get the answer\n    # The formula for portfolio beta when borrowing at the risk-free rate is:\n    # Portfolio Beta = (Total Investment / Initial Investment) * Market Portfolio Beta\n    portfolio_beta = (total_investment / initial_investment) * market_portfolio_beta\n    \n    # return answer\n    return portfolio_beta\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-282",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose the Peterson account experienced a return of -5.3% in a particular month, during which the portfolio benchmark saw a return of -5.5% and the market index had a return of -2.8%. What is the return of the Peterson account attributable to active management?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    peterson_account_return = -5.3  # in percent\n    benchmark_return = -5.5  # in percent\n    \n    # Do math calculation to get the answer\n    active_management_return = peterson_account_return - benchmark_return\n    \n    # return answer\n    return active_management_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-283",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an employee named Anna, FRM, who works as an analyst at Meyer Industries, is calculating the value at risk (VaR) for the company's profit/loss distribution, which is supposed to be normally distributed with a yearly average of $2 million and a standard deviation of $1 million, what would be the VaR at a 99% confidence level using a parametric method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average_profit = 2000000  # in dollars\n    standard_deviation = 1000000  # in dollars\n    confidence_level = 0.99\n    z_score_99 = 2.326  # z-score for 99% confidence level\n    \n    # Do math calculation to get the answer\n    VaR = average_profit - (z_score_99 * standard_deviation)\n    \n    # return answer\n    return VaR\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-284",
        "python_solution": "",
        "ground_truth": null,
        "question": "John Doe bought a mortgage-backed security that has an 8% coupon rate and a par value of $1,000 for $960. The coupon payments are made monthly. How much is the monthly coupon payment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.08  # 8% coupon rate\n    par_value = 1000  # Par value of $1,000\n    purchase_price = 960  # Purchased for $960\n    \n    # Do math calculation to get the answer\n    annual_coupon_payment = par_value * coupon_rate\n    monthly_coupon_payment = annual_coupon_payment / 12\n    \n    # return answer\n    return monthly_coupon_payment\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price($) | End of Period Price ($) | Dividends per Share ($) | Shares Outstanding |\n|---|---|---|---|---|\n| D | 3,400 | 3,600 | 120 | 1,500 |\n| E | 4,600 | 3,500 | 150 | 1,100 |\n| F | 1,200 | 1,300 | 180 | 5,000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-285",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, the total return of a market-capitalization-weighted index made up of securities D, E, F, has been compiled by Stacy, a research analyst from a financial investment firm. What is the total return of the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prices_beginning = {'D': 3400, 'E': 4600, 'F': 1200}\n    prices_end = {'D': 3600, 'E': 3500, 'F': 1300}\n    dividends = {'D': 120, 'E': 150, 'F': 180}\n    shares_outstanding = {'D': 1500, 'E': 1100, 'F': 5000}\n    \n    # Calculate market capitalization at the beginning and end of the period\n    market_cap_beginning = {security: prices_beginning[security] * shares_outstanding[security] for security in prices_beginning}\n    market_cap_end = {security: prices_end[security] * shares_outstanding[security] for security in prices_end}\n    \n    # Calculate total market capitalization\n    total_market_cap_beginning = sum(market_cap_beginning.values())\n    total_market_cap_end = sum(market_cap_end.values())\n    \n    # Calculate total dividends paid\n    total_dividends = sum(dividends[security] * shares_outstanding[security] for security in dividends)\n    \n    # Calculate total return\n    total_return = ((total_market_cap_end + total_dividends - total_market_cap_beginning) / total_market_cap_beginning) * 100\n    \n    # return answer\n    return total_return\n```\n\nThis Python program calculates the total return of a market-capitalization-weighted index made up of securities D, E, and F. It first calculates the market capitalization for each security at the beginning and end of the period, then sums these to get the total market capitalization. It also calculates the total dividends paid. Finally, it computes the total return based on these values."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-286",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the yield-to-maturity of Bond B decreases by 30 basis points, and given that its annual modified duration is 6.932 and the annual convexity is 59.270, what should be the expected percentage price change?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_change = 0.003  # 30 basis points converted to decimal\n    modified_duration = 6.932\n    convexity = 59.270\n    \n    # Do math calculation to get the answer\n    # Calculate the percentage price change due to duration\n    duration_effect = -modified_duration * yield_change\n    \n    # Calculate the percentage price change due to convexity\n    convexity_effect = 0.5 * convexity * (yield_change ** 2)\n    \n    # Total expected percentage price change\n    total_price_change = duration_effect + convexity_effect\n    \n    # return answer\n    return total_price_change\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-287",
        "python_solution": "",
        "ground_truth": null,
        "question": "What would the corresponding call option be worth, taking into account that the present share price is $25, an European put option on the share with a $27 strike price and a 9-month expiration is priced at $3, and the risk-free rate stands at 4%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 25  # present share price\n    K = 27  # strike price of the put option\n    T = 9 / 12  # time to expiration in years\n    r = 0.04  # risk-free rate\n    P = 3  # price of the European put option\n\n    # Use the put-call parity formula to find the call option price\n    # C = P + S - K * e^(-rT)\n    from math import exp\n    C = P + S - K * exp(-r * T)\n\n    # return answer\n    return C\n```"
        ]
    },
    {
        "tables": [
            "| Fair value of investment in Gama Company | $ 150,000 |\n| --- | --- |\n| Retained earning | $ 782,000 |\n| Common stock, $1 par value | $ 560,000 |\n| Preferred stock, $100 par value | $ 126,000 |\n| Deferred taxes | $ 75,000 |\n| Accumulated OCI | $ 35,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-288",
        "python_solution": "",
        "ground_truth": null,
        "question": "The subsequent balance sheet belongs to Omega Firm and includes chosen data at the year's conclusion: The investment in Alpha Firm was $130,000 and is categorised as FVOCI. By the year's end, what is the total owners' equity for Omega Firm?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investment_in_alpha = 130000\n    retained_earnings = 782000\n    common_stock = 560000\n    preferred_stock = 126000\n    accumulated_OCI = 35000\n    \n    # Do math calculation to get the answer\n    total_owners_equity = investment_in_alpha + retained_earnings + common_stock + preferred_stock + accumulated_OCI\n    \n    # return answer\n    return total_owners_equity\n```"
        ]
    },
    {
        "tables": [
            "| Time=0 | Time=1 | Time=2 |\n|---|---|---|\n| SO=100 | Su=110 | Suu=121 |\n|   | Sd=92 | Sud/du=101.20 |\n|   |   | Sdd=84.64 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-289",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose a company's share is expected to move as displayed below in the next two periods. The starting price for the share is $100. Considering the odds of an increase in any given period as 40% and the chance of a decrease is 60%, what is the likelihood of the share's price reaching $101.20 after two periods, using the binomial model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_up = 0.4  # Probability of an up move\n    p_down = 0.6  # Probability of a down move\n    \n    # Do math calculation to get the answer\n    # The price can reach $101.20 through either the path Suu or Sud/du\n    # Suu path: Up-Up\n    # Sud/du path: Up-Down or Down-Up\n    \n    # Probability of reaching $101.20 through the Suu path\n    prob_suu = p_up * p_up\n    \n    # Probability of reaching $101.20 through the Sud/du path\n    prob_sud_du = 2 * p_up * p_down  # There are two symmetric paths: Up-Down and Down-Up\n    \n    # Total probability of reaching $101.20\n    total_prob = prob_suu + prob_sud_du\n    \n    # return answer\n    return total_prob\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-290",
        "python_solution": "",
        "ground_truth": null,
        "question": "If PYTHON Ltd. sells an intangible asset that was originally acquired for \u20ac12 million and has an accumulated amortization of \u20ac2 million, and reported a loss of \u20ac3.2 million on its sale, what is a probable sale price of the asset?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_cost = 12000000  # in euros\n    accumulated_amortization = 2000000  # in euros\n    loss_on_sale = 3200000  # in euros\n    \n    # Do math calculation to get the answer\n    book_value = original_cost - accumulated_amortization\n    probable_sale_price = book_value - loss_on_sale\n    \n    # return answer\n    return probable_sale_price\n```"
        ]
    },
    {
        "tables": [
            "|                            |REIT B  |\n|----------------------------|--------|\n|Funds from operations (FFO)|$320,514|\n|Shares outstanding          |76,000  |\n|Property subsector average P/FFO multiple|15.3x|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-291",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share value of REIT B using the average P/FFO multiple method of the property subsector?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ffo = 320514\n    shares_outstanding = 76000\n    p_ffo_multiple = 15.3\n    \n    # Do math calculation to get the answer\n    ffo_per_share = ffo / shares_outstanding\n    per_share_value = ffo_per_share * p_ffo_multiple\n    \n    # return answer\n    return per_share_value\n```"
        ]
    },
    {
        "tables": [
            "|  | Number of Options | Weighted Average | Exercise Price |\n| --- | --- | --- | --- |\n| Balance, start of year | 3,666,500 | \u00a33.06 | |\n| Granted  during the  year | 872,000 | \u00a33.30 | |\n| Exercised during the year | -278,400 | \u00a32.88 | |\n| Forfeited during the year | -123,700 | \u00a32.96 | |\n| Balance, end of year | 4,136,400 | \u00a33.13 | |\n| Exercisable at end of the year | 827,280 | \u00a32.90 | |",
            "|               | Share Price | Option Fair Value |\n|---------------|-------------|-------------------|\n| January 1,2014  | \u00a32.85       | \u00a30.370            |\n| July 1, 2014    | \u00a33.00       | \u00a30.390            |\n| December 31, 2014 | \u00a33.06     | \u00a30.400            |\n| Average for 2014 | \u00a32.97      | \u00a30.386            |"
        ],
        "topic": "Accounting",
        "question_id": "test-292",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under the present LTIP, the Board awards options on common shares to the management team. These options necessitate a 6-year service period after the date they are granted before they vest. This information about the stock options granted this year under the LTIP is reviewed by Morrison as shown in Exhibit 2. The financial statements of Clarion are prepared in line with International Financial Reporting Standards (IFRS) and their year-end is December 31. All the options in 2014 were granted on July 1, 2014. Given the market price of shares and the fair value of stock options at crucial dates throughout the year as shown in Exhibit 3, what is the chunk of the compensation expense related to the stock option of the LTIP granted in 2014?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    number_of_options_granted = 872000\n    option_fair_value_at_grant_date = 0.390  # \u00a30.390 as the options were granted on July 1, 2014\n    service_period = 6  # 6-year service period\n    \n    # Do math calculation to get the answer\n    total_compensation_value = number_of_options_granted * option_fair_value_at_grant_date\n    annual_compensation_expense = total_compensation_value / service_period\n    \n    # return answer\n    return annual_compensation_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-293",
        "python_solution": "",
        "ground_truth": null,
        "question": "The yield for a one-year zero-coupon bond is 4.0%. The yields for zero-coupon bonds for the second and third years are 5.0% and 6.0% respectively. The spot rate for a five-year bond is not provided; however, the future price for a two-year zero-coupon bond starting in three years is 0.8479. What is today's price for a five-year zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_one_year = 0.04\n    yield_two_year = 0.05\n    yield_three_year = 0.06\n    future_price_two_year_in_three_years = 0.8479\n\n    # Calculate the present value of the future price of the two-year bond starting in three years\n    present_value_future_price = future_price_two_year_in_three_years / ((1 + yield_three_year) ** 3)\n\n    # Calculate the present value of the five-year bond using the spot rates\n    price_five_year_bond = present_value_future_price / ((1 + yield_two_year) ** 2)\n\n    # return answer\n    return price_five_year_bond\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-294",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the continually compounded return rate if a stock's price increases from $15.00 to $16.20 over the course of a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 15.00\n    final_price = 16.20\n    \n    # Do math calculation to get the answer\n    continually_compounded_return_rate = (final_price / initial_price) - 1\n    \n    # return answer\n    return continually_compounded_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-295",
        "python_solution": "",
        "ground_truth": null,
        "question": "A corporation bought a storage facility for \u20ac35 million and invested an extra \u20ac2.0 million for improvements to the building's roof and windows, \u20ac0.5 million to adapt the inner arrangement to their standards (repositioning walls, adding and removing dividers, etc.) and \u20ac0.1 million on a training and introduction program to acquaint workers with the premises. What is the cost to be capitalized to the building account (in millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_purchase_cost = 35\n    improvements_roof_windows = 2.0\n    adaptation_cost = 0.5\n    training_program_cost = 0.1\n    \n    # Do math calculation to get the answer\n    total_capitalized_cost = initial_purchase_cost + improvements_roof_windows + adaptation_cost + training_program_cost\n    \n    # return answer\n    return total_capitalized_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-296",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that JJ Corporation initially reported an operating income of $360,000, which later changed to $420,000. If the financial cost stands at $120,000, how would you calculate JJ Corporation's degree of financial leverage (DFL)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_operating_income = 360000\n    revised_operating_income = 420000\n    financial_cost = 120000\n    \n    # Do math calculation to get the answer\n    DFL = revised_operating_income / (revised_operating_income - financial_cost)\n    \n    # return answer\n    return DFL\n```"
        ]
    },
    {
        "tables": [
            "| Name National Annual ID Salary Number | Loan Amount | | Model Prediction | Actual Result | Prediction Result | Type 1 Error | Type 2 Error |\n|---|---|---|---|---|---|---|---|\n| Garcia XXX 099 $105,000 | $25,000 | | Default | Default | 1 | 0 | 0 |\n| Rodriquez XXX 810 $58,000 | $10,000 | | No Default | No Default | 1 | 0 | 0 |\n| Brown XXX 129 $75,000 | $15,000 | | Default | No Default | 0 | 1 | 0 |\n| Anderson XXX 193 $43,000 | $7,500 | | No Default | No Default | 1 | 0 | 0 |\n| Lewis XXX 122 $64,500 | $42,000 | | No Default | Default | 0 | 0 | 1 |\n| Number and use of client records | | | | | | | |\n| Total # of historical records | | | | 10,014 | | | |\n| Records removed in data cleansing | | | | 2,996 | | | |\n| Records modeled with correct predictions and errors | | | | 7,018 | 5,851 | 273 | 894 |\n\nNote: 1 in Prediction Result column is a correct prediction; 0 is an incorrect prediction."
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-297",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the results presented for the BETA model (Exhibit 1) along with its relevant documentation, what is the model's precision? The model was confirmed by Thompson to have accurately forecasted a default in 5,290 cases from the model prediction set after the data was fully processed. This is from a sample of loans taken from the BETA model where anticipated and actual defaults were compared for the previous 12 months.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    true_positives = 5290  # Number of correctly predicted defaults\n    false_positives = 273  # Number of incorrect predictions of default (Type 1 errors)\n    \n    # Do math calculation to get the answer\n    precision = true_positives / (true_positives + false_positives)\n    \n    # return answer\n    return precision\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-298",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the performance of the Russell 1000 from February 1990 to December 2016, with a monthly arithmetic return of 0.878% and a volatility characterized by a 4.199% standard deviation of return, what would be the geometric return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    arithmetic_return = 0.00878  # Monthly arithmetic return of 0.878%\n    standard_deviation = 0.04199  # Monthly standard deviation of return of 4.199%\n    \n    # Do math calculation to get the geometric return\n    # Geometric return formula: exp(arithmetic_return - 0.5 * standard_deviation^2) - 1\n    geometric_return = (1 + arithmetic_return) * (1 - 0.5 * standard_deviation**2) - 1\n    \n    # return answer\n    return geometric_return\n```"
        ]
    },
    {
        "tables": [
            "| Factor    | Time to Maturity (years) - 5 | Time to Maturity (years) - 20 |\n| --------- | ---------------------------- | ----------------------------- |\n| Level     | -0.4352%                     | -0.5128%                      |\n| Steepness | -0.0515%                     | -0.3015%                      |\n| Curvature | 0.3963%                      | 0.5227%                       |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-299",
        "python_solution": "",
        "ground_truth": null,
        "question": "Display 1. Tri-Factor Model of Term Structure Note: The entries show how the yields would alter for a one standard deviation boost in a factor. How much would you expect the yield on the 20-year bond to change due to an increase in the steepness factor by two standard deviations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    steepness_change_per_std_dev = -0.3015  # Percentage change in yield for 20-year bond due to one standard deviation increase in steepness factor\n    std_dev_increase = 2  # Number of standard deviations increase in steepness factor\n    \n    # Do math calculation to get the answer\n    yield_change = steepness_change_per_std_dev * std_dev_increase\n    \n    # return answer\n    return yield_change\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-300",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a manufacturing firm, the accountant named Samuel discovered that the acquisition cost of a certain equipment was $50,000 and noted a $10,000 loss in the income statement upon the equipment's sale. If the accumulated depreciation amounted to $35,000, what was the selling price of the equipment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 50000\n    loss_on_sale = 10000\n    accumulated_depreciation = 35000\n    \n    # Do math calculation to get the answer\n    # The book value of the equipment before sale is acquisition cost minus accumulated depreciation\n    book_value = acquisition_cost - accumulated_depreciation\n    \n    # The selling price is the book value plus the loss incurred upon sale\n    selling_price = book_value + loss_on_sale\n    \n    # return answer\n    return selling_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-301",
        "python_solution": "",
        "ground_truth": null,
        "question": "When the 95% confidence level VaR model of Chase Corporation is being backtested using the data from the last 750 trading days, how many anticipated irregularities would we expect to find?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    confidence_level = 0.95\n    total_trading_days = 750\n    \n    # Do math calculation to get the answer\n    # The number of anticipated irregularities is calculated by (1 - confidence_level) * total_trading_days\n    anticipated_irregularities = (1 - confidence_level) * total_trading_days\n    \n    # return answer\n    return anticipated_irregularities\n```"
        ]
    },
    {
        "tables": [
            "| Country       | Currency   | Spot Exchange Ratea    | One Year Risk-free Rate | Expected Annual Inflation Rate |\n|:-------------:|:----------:|:----------------------:|:-----------------------:|:----------------------:|\n| United States | US$        | NA                     | 4.80%                   | 2.30%                  |\n| Canada        | C$         | 1.2138-1.2259          | 4.10%                   | 1.90%                  |\n| Brazil        | Real (BRL) | 2.3844-2.4082          | 8.80%                   | 6.30%                  |\n\naNumber of foreign currency units per one U.S. dollar."
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-302",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the bid-side quote for the CAD/BRL from a merchant is C$0.5250, what is the profit for Johnson from a US$1,000,000 initial investment in the triangular arbitrage opportunity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment_usd = 1000000\n    cad_per_usd = 1.2138  # Bid-side spot exchange rate for CAD/USD\n    brl_per_usd = 2.3844  # Bid-side spot exchange rate for BRL/USD\n    cad_per_brl_bid = 0.5250  # Bid-side quote for CAD/BRL\n\n    # Do math calculation to get the answer\n    # Step 1: Convert USD to CAD\n    cad_from_usd = initial_investment_usd * cad_per_usd\n\n    # Step 2: Convert CAD to BRL using the bid-side quote for CAD/BRL\n    brl_from_cad = cad_from_usd / cad_per_brl_bid\n\n    # Step 3: Convert BRL back to USD\n    usd_from_brl = brl_from_cad / brl_per_usd\n\n    # Step 4: Calculate the profit\n    profit = usd_from_brl - initial_investment_usd\n\n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-303",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the study, 65% of all businesses possess a scanner. If we choose 8 businesses, what are the chances that five businesses would own a scanner?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p = 0.65  # Probability of a business owning a scanner\n    n = 8     # Number of businesses\n    k = 5     # Number of businesses owning a scanner\n    \n    # Do math calculation to get the answer\n    from math import comb\n    answer = comb(n, k) * (p ** k) * ((1 - p) ** (n - k))\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-304",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume that the continuously compounded 5-year spot rate is 10% and the 4-year spot rate is 8.8%. Could you determine the 1-year forward rate four years in the future?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r5 = 0.10  # 5-year spot rate\n    r4 = 0.088  # 4-year spot rate\n    \n    # Do math calculation to get the answer\n    # Formula for forward rate: f(4,1) = (1 + r5)^5 / (1 + r4)^4 - 1\n    forward_rate = ((1 + r5) ** 5) / ((1 + r4) ** 4) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [
            "| Asset class     | Portfolio weight (%) | Benchmark weight (%) | Portfolio return (%) | Benchmark return (%) |\n|-----------------|----------------------|----------------------|----------------------|----------------------|\n| Domestic        | 45                   | 50                   | 12                   | 10                   |\n| International equity | 25           | 20                   | 15                   | 12                   |\n| Bonds           | 30                   | 30                   | 7                    | 8                    |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-305",
        "python_solution": "",
        "ground_truth": null,
        "question": "The research team gathered the following data: Can you compute the value added for the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_weights = [45, 25, 30]\n    benchmark_weights = [50, 20, 30]\n    portfolio_returns = [12, 15, 7]\n    benchmark_returns = [10, 12, 8]\n    \n    # Do math calculation to get the answer\n    value_added = 0\n    for i in range(len(portfolio_weights)):\n        value_added += (portfolio_weights[i] / 100) * portfolio_returns[i] - (benchmark_weights[i] / 100) * benchmark_returns[i]\n    \n    # return answer\n    return value_added\n```"
        ]
    },
    {
        "tables": [
            "| Year | Return(%) |\n|------|-----------|\n| 2008 | 22        |\n| 2009 | -25       |\n| 2010 | 11        |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-306",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the yearly geometric mean return of a mutual fund based on the noted annual returns rates?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [22, -25, 11]\n    \n    # Convert percentages to multipliers\n    multipliers = [(1 + r / 100) for r in returns]\n    \n    # Calculate the product of all multipliers\n    product = 1\n    for m in multipliers:\n        product *= m\n    \n    # Calculate the geometric mean return\n    geometric_mean = product ** (1 / len(multipliers))\n    \n    # Convert geometric mean to percentage\n    geometric_mean_return = (geometric_mean - 1) * 100\n    \n    # return answer\n    return geometric_mean_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-307",
        "python_solution": "",
        "ground_truth": null,
        "question": "Position 1 (FTSE 100 Futures Contract): Harmony Capital maintains a long position in a FTSE 100 futures contract that is set to mature in three months. The Nikkei 225 Stock Index has a continuously compounded dividend yield of 1.1%, and the current level of the stock index is 16,080. The constantly compounded yearly interest rate is 0.2996%. What is the prevailing no-arbitrage futures price of the FTSE 100 futures contract (Position 1)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 16080  # Current level of the stock index\n    r = 0.002996  # Continuously compounded yearly interest rate\n    q = 0.011  # Continuously compounded dividend yield\n    T = 3 / 12  # Time to maturity in years (3 months)\n\n    # Do math calculation to get the answer\n    F = S * (1 + (r - q) * T)\n\n    # return answer\n    return F\n```"
        ]
    },
    {
        "tables": [
            "| Revenue        | \u00a3800,000 |\n| -------------- | -------- |\n| Variable cost  | \u00a3400,000 |\n| Fixed cost     | \u00a3200,000 |\n| Operating income | \u00a3200,000 |\n| Interest       | \u00a360,000  |\n| Net income     | \u00a3140,000 |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-308",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the company's total degree of leverage (DTL), based on the information provided for the company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 800000\n    variable_cost = 400000\n    fixed_cost = 200000\n    operating_income = 200000\n    interest = 60000\n    net_income = 140000\n    \n    # Calculate Degree of Operating Leverage (DOL)\n    dol = (revenue - variable_cost) / operating_income\n    \n    # Calculate Degree of Financial Leverage (DFL)\n    dfl = operating_income / (operating_income - interest)\n    \n    # Calculate Degree of Total Leverage (DTL)\n    dtl = dol * dfl\n    \n    # return answer\n    return dtl\n```"
        ]
    },
    {
        "tables": [
            "\n|                                             |                               |\n|---------------------------------------------|-------------------------------|\n| Cost of the equipment                       | UYP 1,200,000                 |\n| Estimated residual value                    | UYP 200,000                   |\n| Expected useful life                        | 8 years                       |\n| Total productive capacity                   | 800,000 units                 |\n| Production in FY 2009                       | 135,000 units                 |\n| Expected production for the next 7 years    | 95,000 units each year        |\n"
        ],
        "topic": "Accounting",
        "question_id": "test-309",
        "python_solution": "",
        "ground_truth": null,
        "question": "Carlos Perez from the Uruguayan company LUIGI Ltd., is calculating the depreciation expense of manufacturing machinery for the financial year closing on 31 December 2009. The machinery was purchased on 1 January 2009. Given the information gathered by Perez, what would be the amount of depreciation expense (in UYP) on LUIGI's profit and loss statement related to the manufacturing machinery, if LUIGI uses the units-of-production method? (Currency in Uruguayan pesos, UYP).",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_equipment = 1200000\n    residual_value = 200000\n    total_productive_capacity = 800000\n    production_in_FY2009 = 135000\n\n    # Do math calculation to get the answer\n    # Calculate the depreciation per unit\n    depreciation_per_unit = (cost_of_equipment - residual_value) / total_productive_capacity\n    # Calculate the depreciation expense for FY 2009\n    depreciation_expense = depreciation_per_unit * production_in_FY2009\n\n    # return answer\n    return depreciation_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-310",
        "python_solution": "",
        "ground_truth": null,
        "question": "A risk assessor is computing the VaR for a portfolio using a data set of 50 weekly returns. The average weekly return calculated from the sample is 8% with a standard deviation of 17%. Given that weekly returns are assumed to be independent and identically distributed, what is the standard deviation of the average weekly return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    std_dev_weekly_return = 17  # Standard deviation of weekly returns in percent\n    num_weeks = 50  # Number of weekly returns in the sample\n    \n    # Do math calculation to get the answer\n    # The standard deviation of the average weekly return is the standard deviation of the weekly returns divided by the square root of the number of weeks\n    std_dev_avg_weekly_return = std_dev_weekly_return / (num_weeks ** 0.5)\n    \n    # return answer\n    return std_dev_avg_weekly_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-311",
        "python_solution": "",
        "ground_truth": null,
        "question": "The preferred stock of Company N has a par value of $50 per share and it provides an annual dividend of 3.8%. If Nick thinks that it's reasonably priced at the market cost of $30, what is the capitalization rate of the preferred stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 50\n    annual_dividend_rate = 0.038\n    market_cost = 30\n    \n    # Do math calculation to get the answer\n    annual_dividend = par_value * annual_dividend_rate\n    capitalization_rate = annual_dividend / market_cost\n    \n    # return answer\n    return capitalization_rate\n```"
        ]
    },
    {
        "tables": [
            "markdown\n|                                      | 2015 | 2016 |\n|--------------------------------------|------|------|\n| **Cosmetic firm B.S for the ending 31 December** |      |      |\n| Cash                                 | 210  | 310  |\n| Accounts receivable                  |      | 31   |\n| Inventory                            | 60   | 80   |\n| Fixed assets                         | 200  | 200  |\n| Accumulated depreciation             |      | (35) |\n| Total assets                         | 470  | 586  |\n| Accounts payable                     | 105  | 162  |\n| Long-term debt                       | 235  | 273  |\n| Common stock                         | 130  | 130  |\n| Retained earnings                    |      | 21   |\n| Total liabilities and shareholders' equity | 470  | 586  |\n",
            "|                                  | US $/C$ |\n|----------------------------------|---------|\n| Rate on 31 December 2015         | 0.89    |\n|                                  |         |\n| Average rate in 2016             | 0.96    |\n| Weighted-average rate for inventory purchases | 0.94    |\n| Rate on 31 December 2016         | 0.94    |"
        ],
        "topic": "Accounting",
        "question_id": "test-312",
        "python_solution": "",
        "ground_truth": null,
        "question": "Sephora is a US-operated company that specializes in the sale of beauty products. It has a Canadian branch, Glossy Inc, that only carries out operations in Canada. It was established on 31 December 2015, and Glossy Inc uses the US dollar as its main currency. Let's consider that fixed assets were purchased at the company's conceptual stage. The financial statement details for the years ending 2015 and 2016 are provided in the adjacent table: Can you compute the converted value of Glossy Inc's retained earnings as of 31 December 2016?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    retained_earnings_2016 = 21  # in Canadian dollars\n    exchange_rate_2016 = 0.94  # rate on 31 December 2016\n    \n    # Do math calculation to get the answer\n    converted_retained_earnings = retained_earnings_2016 * exchange_rate_2016\n    \n    # return answer\n    return converted_retained_earnings\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-313",
        "python_solution": "",
        "ground_truth": null,
        "question": "A data set with 25 entries has an average of 8 and a standard deviation of 15. What is the standard error of this data set's mean?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 25\n    standard_deviation = 15\n    \n    # Do math calculation to get the answer\n    standard_error = standard_deviation / (sample_size ** 0.5)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-314",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of 2013, corporation X released 5-year bonds with a face value of $2,000,000. The market interest rate stands at 6%, and on each 31 December, a 5% coupon is paid on the bonds. What could be the calculated bonds payable at the time they were issued?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 2000000\n    market_interest_rate = 0.06\n    coupon_rate = 0.05\n    years = 5\n    \n    # Calculate the present value of the face value\n    present_value_face_value = face_value / (1 + market_interest_rate) ** years\n    \n    # Calculate the present value of the coupon payments\n    coupon_payment = face_value * coupon_rate\n    present_value_coupon_payments = 0\n    for i in range(1, years + 1):\n        present_value_coupon_payments += coupon_payment / (1 + market_interest_rate) ** i\n    \n    # Calculate the total present value of the bonds payable\n    bonds_payable = present_value_face_value + present_value_coupon_payments\n    \n    # return answer\n    return bonds_payable\n```"
        ]
    },
    {
        "tables": [
            "| Net income | | $55 million |\n|---|---|---|\n| Depreciation | | $3 million |\n| Balance Sheet Item | 12/31/2016 | 12/31/2017 |\n| Accounts receivable | $18 million | $20 million |\n| Inventory | $22 million | $17 million |\n| Accounts payable | $6 million | $3 million |"
        ],
        "topic": "Accounting",
        "question_id": "test-315",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given financial reports for Company B, what is the value of the operating cash flow?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 55000000\n    depreciation = 3000000\n    accounts_receivable_2016 = 18000000\n    accounts_receivable_2017 = 20000000\n    inventory_2016 = 22000000\n    inventory_2017 = 17000000\n    accounts_payable_2016 = 6000000\n    accounts_payable_2017 = 3000000\n    \n    # Do math calculation to get the answer\n    change_in_accounts_receivable = accounts_receivable_2017 - accounts_receivable_2016\n    change_in_inventory = inventory_2017 - inventory_2016\n    change_in_accounts_payable = accounts_payable_2017 - accounts_payable_2016\n    \n    operating_cash_flow = net_income + depreciation - change_in_accounts_receivable - change_in_inventory + change_in_accounts_payable\n    \n    # return answer\n    return operating_cash_flow\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-316",
        "python_solution": "",
        "ground_truth": null,
        "question": "A trader takes a short stance on a gold futures contract at a price of USD 294.20. Each contract oversees 100 troy ounces. The starting margin stands at USD 3,200, while the sustaining margin is set at USD 2,900. After the initial day, the futures price decreases to USD 286.6. What is the sum of the variation margin at the closure of the first day?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 294.20\n    final_price = 286.60\n    contract_size = 100  # troy ounces\n    \n    # Do math calculation to get the answer\n    price_change = initial_price - final_price\n    variation_margin = price_change * contract_size\n    \n    # return answer\n    return variation_margin\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-317",
        "python_solution": "",
        "ground_truth": null,
        "question": "For a price-weighted index made up of securities XYZ, MNOP, and QRST, an analyst has collected the following data: The starting and ending prices (in \u20ac) and total dividends (in \u20ac) are as follows: XYZ with 25.00 to 27.00 along with 1.00 in dividends, MNOP with 35.00 to 25.00 and 1.50 in dividends, and QRST from 15.00 to 16.00 with 1.00 in dividends. What is the price return of the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    start_prices = [25.00, 35.00, 15.00]\n    end_prices = [27.00, 25.00, 16.00]\n    dividends = [1.00, 1.50, 1.00]\n    \n    # Calculate the sum of starting and ending prices\n    sum_start_prices = sum(start_prices)\n    sum_end_prices = sum(end_prices)\n    \n    # Calculate the price return of the index\n    price_return = (sum_end_prices - sum_start_prices) / sum_start_prices\n    \n    # return answer\n    return price_return\n```"
        ]
    },
    {
        "tables": [
            "| Operating profit margin | 17.5% |\n|-------------------------|-------|\n| Net profit margin       | 11.7% |\n| Total asset turnover    | 0.89 times |\n| Return on assets (ROA)  | 10.4% |\n| Financial leverage      | 1.46  |\n| Debt to equity          | 0.46  |"
        ],
        "topic": "Accounting",
        "question_id": "test-318",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the return on equity (ROE) of the business that a financial examiner has determined?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    return_on_assets = 10.4  # ROA in percentage\n    financial_leverage = 1.46\n    \n    # Do math calculation to get the answer\n    return_on_equity = return_on_assets * financial_leverage\n    \n    # return answer\n    return return_on_equity\n```"
        ]
    },
    {
        "tables": [
            "| Interest Rate Assumption | Present Value of Liabilities |\n|-------------------------|-----------------------------|\n| 8%                      | $ 436.2 million             |\n| 9%                      | $ 357.5 million             |\n| 10%                     | $ 298.1 million             |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-319",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is a manager of a retirement fund who is interested in assessing the responsiveness of his retirement obligations to fluctuations in market interest rates. Supposing the base rate is 9%, with a 100 basis point rise in rates up to 10%, and a 100 basis point decrease in rates down to 8%. The associated data is given as follows: The effective duration of the retirement fund's obligations is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value_at_9_percent = 357.5  # in million dollars\n    present_value_at_10_percent = 298.1  # in million dollars\n    present_value_at_8_percent = 436.2  # in million dollars\n    change_in_interest_rate = 0.01  # 100 basis points change in rate\n\n    # Do math calculation to get the answer\n    # Effective duration formula: (PV_down - PV_up) / (2 * PV_base * change_in_rate)\n    effective_duration = (present_value_at_8_percent - present_value_at_10_percent) / (2 * present_value_at_9_percent * change_in_interest_rate)\n\n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [
            "|                     | $ millions |\n|---------------------|------------|\n| Sales               | 4,800      |\n| Cost of goods sold  | 2,880      |\n| Purchases           | 2,940      |\n| Average receivables | 625        |\n| Average inventory   | 710        |\n| Average payables    | 145        |"
        ],
        "topic": "Accounting",
        "question_id": "test-320",
        "python_solution": "",
        "ground_truth": null,
        "question": "The details for a particular business are given. What is the cash conversion cycle (in days) of this business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales = 4800  # in millions\n    cost_of_goods_sold = 2880  # in millions\n    purchases = 2940  # in millions\n    average_receivables = 625  # in millions\n    average_inventory = 710  # in millions\n    average_payables = 145  # in millions\n\n    # Do math calculation to get the answer\n    # Days Sales Outstanding (DSO)\n    days_sales_outstanding = 365 * (average_receivables / sales)\n\n    # Days Inventory Outstanding (DIO)\n    days_inventory_outstanding = 365 * (average_inventory / cost_of_goods_sold)\n\n    # Days Payables Outstanding (DPO)\n    days_payables_outstanding = 365 * (average_payables / purchases)\n\n    # Cash Conversion Cycle (CCC)\n    cash_conversion_cycle = days_sales_outstanding + days_inventory_outstanding - days_payables_outstanding\n\n    # return answer\n    return cash_conversion_cycle\n```"
        ]
    },
    {
        "tables": [
            "| Expected Security Standard Deviation (%) | Beta |\n| --- | --- |\n| Security 1 25 | 1.50 |\n| Security 2 15 | 1.40 |\n| Security 3 20 | 1.60 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-321",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the data collected by the researcher, using the capital asset pricing model, what is the predicted return for Investment A if the anticipated market risk premium is 6% and the risk-free rate is 3%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 3  # Risk-free rate in percentage\n    market_risk_premium = 6  # Market risk premium in percentage\n    beta_investment_a = 1.50  # Beta for Investment A (assuming it's Security 1 from the table)\n    \n    # Do math calculation to get the answer\n    # Using the Capital Asset Pricing Model (CAPM): Expected Return = Risk-Free Rate + Beta * Market Risk Premium\n    expected_return_investment_a = risk_free_rate + (beta_investment_a * market_risk_premium)\n    \n    # return answer\n    return expected_return_investment_a\n```\n\nThis program calculates the expected return for Investment A using the Capital Asset Pricing Model (CAPM), given the risk-free rate, the market risk premium, and the beta of Investment A. The beta is assumed to be that of Security 1 from the provided table."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-322",
        "python_solution": "",
        "ground_truth": null,
        "question": "When a business releases face value bonds worth \u20ac10,000,000 with a 10-year term dated 1 January 2015, the market interest rate of bonds with similar level of risk and terms stands at 6%. These bonds provide a yearly interest rate of 7%, paid out on December 31. Utilizing the effective interest rate method, what would be the interest cost on 31 December 2015?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 10000000\n    market_interest_rate = 0.06\n    coupon_rate = 0.07\n    years = 10\n    issue_date = '1 January 2015'\n    interest_payment_date = '31 December 2015'\n    \n    # Do math calculation to get the answer\n    # Using the effective interest rate method, the interest cost is calculated based on the market interest rate\n    interest_cost = face_value * market_interest_rate\n    \n    # return answer\n    return interest_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-323",
        "python_solution": "",
        "ground_truth": null,
        "question": "Smith investigates a technique driven by an event, precisely a potential fusion of B Corporation and U, Inc. B has proposed to acquire Unicorn through a stock-for-stock agreement: the offer ratio is 2 shares of B for every 3 Unicorn shares. B's trading price was \u20ac50 per share before the announcement of fusion, but it decreased to 45 euros per share after the declaration. Before the announcement, U's transaction price per share was 15 euros, and it appreciated to \u20ac20 per share with the expectation of the fusion deal getting necessary permissions and successfully concluding. If we assume the fusion between B and U comes to a successful close, what will be the result of Smith\u2019s merger arbitrage trade if he purchases 24,000 U shares at a rate of 20 euros per share, and goes short on 16,000 B shares at a rate of 45 euros per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    u_shares_purchased = 24000\n    u_purchase_price = 20\n    b_shares_shorted = 16000\n    b_short_price = 45\n    b_share_price_before = 50\n    u_share_price_before = 15\n    exchange_ratio = 2 / 3  # 2 shares of B for every 3 shares of U\n\n    # Calculate the total cost of purchasing U shares\n    total_cost_u_shares = u_shares_purchased * u_purchase_price\n\n    # Calculate the total proceeds from shorting B shares\n    total_proceeds_b_shares = b_shares_shorted * b_short_price\n\n    # Calculate the number of B shares that will be received from the merger\n    b_shares_received = u_shares_purchased * exchange_ratio\n\n    # Calculate the value of B shares received at the pre-announcement price\n    value_b_shares_received = b_shares_received * b_share_price_before\n\n    # Calculate the profit from the merger arbitrage trade\n    profit = value_b_shares_received - total_cost_u_shares + total_proceeds_b_shares\n\n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-324",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's assume that X and Y are random variables, each adheres to a standard normal distribution, and the covariance between X and Y is 0.35. What is the variance of (3X+2Y)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    variance_X = 1  # Variance of X since it's a standard normal distribution\n    variance_Y = 1  # Variance of Y since it's a standard normal distribution\n    covariance_XY = 0.35  # Given covariance between X and Y\n\n    # Do math calculation to get the answer\n    # Variance of (3X + 2Y) = 3^2 * Var(X) + 2^2 * Var(Y) + 2 * 3 * 2 * Cov(X, Y)\n    variance_3X_plus_2Y = (3**2 * variance_X) + (2**2 * variance_Y) + (2 * 3 * 2 * covariance_XY)\n\n    # return answer\n    return variance_3X_plus_2Y\n```"
        ]
    },
    {
        "tables": [
            "| Date        | 6-month LIBOR |\n|-------------|---------------|\n| Sep 7, 2016 | 2.46%         |\n| Mar 7, 2017 | 1.13%         |\n| Sept 7, 2017| 0.79%         |\n| Mar 7, 2018 | 0.42%         |\n| Sep 7, 2018 | 0.56%         |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-325",
        "python_solution": "",
        "ground_truth": null,
        "question": "On September 7, 2016, Bank XYZ initiated a 2-year interest rate swap contract. Per the terms of the swap, Bank XYZ was slated to receive a fixed 4.10% rate while paying a rate equivalent to LIBOR plus 1.30% on a principal amount of USD 7.5 million. Payments were scheduled biannually. The table below presents the actual annual 6-month LIBOR rates measured over the contract's 2-year lifespan: Assuming there was no default, what amount did Bank XYZ receive on September 7, 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 7500000\n    fixed_rate = 4.10 / 100\n    libor_plus = 1.30 / 100\n    libor_rates = [2.46 / 100, 1.13 / 100, 0.79 / 100, 0.42 / 100, 0.56 / 100]\n    \n    # Initialize total received amount\n    total_received = 0\n    \n    # Calculate the net payment for each period\n    for i in range(5):\n        fixed_payment = principal * fixed_rate / 2\n        floating_payment = principal * (libor_rates[i] + libor_plus) / 2\n        net_payment = fixed_payment - floating_payment\n        total_received += net_payment\n    \n    # Return the total amount received on September 7, 2018\n    return total_received\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-326",
        "python_solution": "",
        "ground_truth": null,
        "question": "Smith is a tax consultant who gives tax planning guidance to individual clients. A client of Smith's is Rose who presently has $10 million invested in a tax-deferred account that generates 8% every year. Rose will offload the investment after five years, collect the sales revenue all at once (withdrawals are taxed at 20%), and use the funds to buy a mansion. Rose requested Smith to estimate the after-tax wealth available after five years. What will be the after-tax wealth in Rose's tax-deferred account at the end of the five years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 10000000\n    annual_interest_rate = 0.08\n    years = 5\n    tax_rate = 0.20\n    \n    # Calculate the future value of the investment before tax\n    future_value_before_tax = initial_investment * (1 + annual_interest_rate) ** years\n    \n    # Calculate the tax on the future value\n    tax_amount = future_value_before_tax * tax_rate\n    \n    # Calculate the after-tax wealth\n    after_tax_wealth = future_value_before_tax - tax_amount\n    \n    # return answer\n    return after_tax_wealth\n```"
        ]
    },
    {
        "tables": [
            "| Statistic | Value |\n| --- | --- |\n| Covariance between market return and security return [Cov(Rj,Rm)] | 0.01104 |\n| Correlation coefficient between market return and security return (pi,m) | 0.3 |\n| Standard deviation of market return (\u03c3m) | 0.16 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-327",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the beta of security x, \u03b2x, considering the following information about a stock market index y and security x?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    covariance_Rj_Rm = 0.01104\n    correlation_pi_m = 0.3\n    std_dev_market_return = 0.16\n    \n    # Do math calculation to get the answer\n    # Beta is calculated using the formula: \u03b2x = Cov(Rj, Rm) / (\u03c3m^2)\n    # Alternatively, it can be calculated using the formula: \u03b2x = pi,m * (\u03c3j / \u03c3m)\n    # Here, we use the first formula since we have the covariance and market standard deviation\n    \n    beta_x = covariance_Rj_Rm / (std_dev_market_return ** 2)\n    \n    # return answer\n    return beta_x\n```"
        ]
    },
    {
        "tables": [
            "| Portfolio Number | Expected Nominal Returns | Standard Deviation | Sharpe Ratio |\n|------------------|--------------------------|--------------------|--------------|\n| 1                | 3%                       | 2.50%              | 0.4          |\n| 2                | 4%                       | 4.44%              | 0.45         |\n| 3                | 5%                       | 6%                 | 0.5          |\n| 4                | 6%                       | 6.15%              | 0.65         |\n| 5                | 7%                       | 8.33%              | 0.6          |\n| 6                | 8%                       | 10.90%             | 0.55         |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-328",
        "python_solution": "",
        "ground_truth": null,
        "question": "The overall investment goal of XY endowment is to sustain the real buying power of its portfolio after disbursements. The risk-free rate stands at 2%. An anticipated inflation rate is 1.5%. The cost of returns on earnings investment is 50 bp. XY aims at a 3% annual distribution of assets. Exhibit 1 presents key findings from a mean-variance optimization where the weights of the asset class are bound to be non-negative. To reach XY\u2019s expected return, what is the most suitable percentage for XY\u2019s investment in the corner portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 2  # in percent\n    inflation_rate = 1.5  # in percent\n    cost_of_returns = 0.5  # in percent (50 basis points)\n    annual_distribution = 3  # in percent\n    \n    # Expected return required by XY endowment\n    required_return = annual_distribution + inflation_rate + cost_of_returns\n    \n    # Portfolio details\n    portfolios = {\n        1: {'return': 3, 'std_dev': 2.5, 'sharpe': 0.4},\n        2: {'return': 4, 'std_dev': 4.44, 'sharpe': 0.45},\n        3: {'return': 5, 'std_dev': 6, 'sharpe': 0.5},\n        4: {'return': 6, 'std_dev': 6.15, 'sharpe': 0.65},\n        5: {'return': 7, 'std_dev': 8.33, 'sharpe': 0.6},\n        6: {'return': 8, 'std_dev': 10.9, 'sharpe': 0.55}\n    }\n    \n    # Find the portfolio with the closest return to the required return\n    closest_portfolio = min(portfolios, key=lambda k: abs(portfolios[k]['return'] - required_return))\n    \n    # Assuming the corner portfolio is the one with the closest return\n    corner_portfolio_return = portfolios[closest_portfolio]['return']\n    \n    # Calculate the percentage of investment in the corner portfolio\n    # Assuming linear interpolation for simplicity\n    percentage_investment = (required_return - risk_free_rate) / (corner_portfolio_return - risk_free_rate)\n    \n    # return answer\n    return percentage_investment * 100  # Convert to percentage\n\n# Example usage\nprint(solution())\n```\n\nThis Python program calculates the most suitable percentage for XY\u2019s investment in the corner portfolio based on the given requirements and portfolio details. It assumes linear interpolation to determine the percentage of investment in the portfolio that most"
        ]
    },
    {
        "tables": [
            "|   | Cumulative Distribution Function |\n|---|---|\n| Y=y  | F(y)=P(Y\u2264y) |\n| 20 | 0.08 |\n| 21 | 0.20 |\n| 22 | 0.30 |\n| 23 | 0.55 |\n| 24 | 0.75 |\n| 25 | 1.00 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-329",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that 'Z' is a discrete random variable, and the set of potential Z values constitutes Z= {20,21,22,23,24,25}. With the cumulative distribution function's probable value denoted in the chart, can you tell the likelihood that Z equals either 23 or 25?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    F_23 = 0.55\n    F_25 = 1.00\n    \n    # Do math calculation to get the answer\n    # P(Z = 23 or Z = 25) = P(Z = 23) + P(Z = 25)\n    # P(Z = 23) = F(23) - F(22)\n    # P(Z = 25) = F(25) - F(24)\n    F_22 = 0.30\n    F_24 = 0.75\n    \n    P_23 = F_23 - F_22\n    P_25 = F_25 - F_24\n    \n    answer = P_23 + P_25\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-330",
        "python_solution": "",
        "ground_truth": null,
        "question": "The corporation engages in a 2 \u00d7 5 receive-fixed FRA that has an advanced set, advanced settled with a notional amount of $100,000,000. The correct discount rate for the FRA settlement cash flows stands at 1.5%. Following 60 days, the 90-day Libor is 0.80%, and the 60-day Libor is 0.7%. If the original price of the FRA was pegged at 1.20%, what will be the settlement payment received for the 2 \u00d7 5 FRA?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_amount = 100000000\n    discount_rate = 0.015\n    libor_90_day = 0.008\n    libor_60_day = 0.007\n    original_price = 0.012\n    days_in_year = 360\n    days_to_settlement = 60\n    days_to_maturity = 90\n\n    # Calculate the FRA rate difference\n    fra_rate_difference = original_price - libor_90_day\n\n    # Calculate the interest differential\n    interest_differential = notional_amount * fra_rate_difference * (days_to_maturity / days_in_year)\n\n    # Calculate the present value of the settlement payment\n    settlement_payment = interest_differential / (1 + discount_rate * (days_to_settlement / days_in_year))\n\n    # return answer\n    return settlement_payment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-331",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager possesses five bonds in his holdings, and each bond carries a single-year default risk of 17%. The default occurrence for each bond is autonomous. What are the odds that only two bonds will default within the coming year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_bonds = 5\n    default_probability = 0.17\n    num_defaults = 2\n    \n    # Import necessary library\n    from math import comb\n    \n    # Do math calculation to get the answer\n    # Calculate the probability using the binomial distribution formula\n    probability = comb(num_bonds, num_defaults) * (default_probability ** num_defaults) * ((1 - default_probability) ** (num_bonds - num_defaults))\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [
            "| Date | Closing Price |\n|------|---------------|\n| May  | 132           |\n| June | 145           |\n| July | 159           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-332",
        "python_solution": "",
        "ground_truth": null,
        "question": "The stocks of BBB corporation have experienced shifting closing prices over the past 3 months: From May to July, what is the continuously compounded return of BBB corporation's stocks?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    closing_price_may = 132\n    closing_price_june = 145\n    closing_price_july = 159\n    \n    # Do math calculation to get the answer\n    # Calculate the continuously compounded return from May to July\n    # Formula: r = ln(P_end / P_start)\n    import math\n    r = math.log(closing_price_july / closing_price_may)\n    \n    # return answer\n    return r\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-333",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there are 250 trading days in a year and the daily returns are independently and identically distributed, what is the highest number of daily losses over a 10-year period exceeding the 1-day 99.5% VaR that would still indicate the model being correctly calibrated, for a risk manager who is backtesting an organization's VaR model at the 95% confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    trading_days_per_year = 250\n    years = 10\n    confidence_level = 0.95\n    var_confidence_level = 0.995\n\n    # Calculate the total number of trading days over the 10-year period\n    total_trading_days = trading_days_per_year * years\n\n    # Calculate the number of expected exceedances based on the 99.5% VaR\n    expected_exceedances = total_trading_days * (1 - var_confidence_level)\n\n    # Calculate the maximum number of exceedances that would still indicate the model being correctly calibrated at the 95% confidence level\n    max_exceedances = expected_exceedances + 1.645 * (expected_exceedances * var_confidence_level)**0.5\n\n    # Return the answer, rounding down to the nearest integer\n    return int(max_exceedances)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-334",
        "python_solution": "",
        "ground_truth": null,
        "question": "Eight weeks prior, an investor bought a stock forward contract with a maturity of three months. The starting forward price was $108.5, but the present forward price is $107.6. The risk-free rate remains 3%. What is the value of this forward contract?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_forward_price = 108.5\n    current_forward_price = 107.6\n    risk_free_rate = 0.03\n    time_to_maturity = 3/12  # Three months expressed in years\n\n    # Do math calculation to get the answer\n    # The value of the forward contract is calculated using the formula:\n    # Value = (Current Forward Price - Initial Forward Price) / (1 + Risk-Free Rate)^(Time to Maturity)\n    value_of_forward_contract = (current_forward_price - initial_forward_price) / ((1 + risk_free_rate) ** time_to_maturity)\n\n    # return answer\n    return value_of_forward_contract\n```"
        ]
    },
    {
        "tables": [
            "|               |           | Actual training |      |\n|---------------|-----------|-----------------|------|\n|               |           | results         |      |\n| Predicted     |           | Class \"1\"       | Class \"0\"     |\n| Results       | Class \"1\" | TP=182          | FP=52 |\n|               | Class \"0\" | FN=31           | TN=96 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-335",
        "python_solution": "",
        "ground_truth": null,
        "question": "After finalizing the chosen features, Thompson executes a model on the training set which identifies the text as either positive sentiment (Class \u201c1\u201d) or negative sentiment (Class \u201c0\u201d). Subsequently, she assesses its effectiveness through error analysis. Referring to Exhibit 1, what is the precision metric of the model as per the given confusion matrix?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    TP = 182\n    FP = 52\n    \n    # Do math calculation to get the answer\n    precision = TP / (TP + FP)\n    \n    # return answer\n    return precision\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-336",
        "python_solution": "",
        "ground_truth": null,
        "question": "A shareholder is evaluating the market risk of Orion Portfolio. The portfolio delivers an anticipated annual return of 6.8% and a volatility of 7.0%, and it is benchmarked in contrast with the S&P 500 Index. The shareholder presupposes that the S&P 500 Index has a projected annual return of 7.2% and a volatility of 8.2%. In accordance with the CAPM, if the risk-free rate is 2.2% per annum, what is the beta of Orion Portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 2.2  # Risk-free rate in percentage\n    market_return = 7.2  # S&P 500 Index return in percentage\n    portfolio_return = 6.8  # Orion Portfolio return in percentage\n    market_volatility = 8.2  # S&P 500 Index volatility in percentage\n    portfolio_volatility = 7.0  # Orion Portfolio volatility in percentage\n\n    # Do math calculation to get the answer\n    # Using the CAPM formula: E(R_i) = R_f + \u03b2_i * (E(R_m) - R_f)\n    # We need to solve for \u03b2_i (beta of the portfolio)\n    # \u03b2_i = (E(R_i) - R_f) / (E(R_m) - R_f)\n\n    beta = (portfolio_return - risk_free_rate) / (market_return - risk_free_rate)\n\n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [
            "| Exercise Price ($) | Option Premium ($) | Delta |\n|--------------------|--------------------|-------|\n| 88                 | 4.40               | 0.75  |\n| 94                 | 1.00               | 0.30  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-337",
        "python_solution": "",
        "ground_truth": null,
        "question": "A customer, Alice Thompson, thinks that large-cap stock prices will witness a slight increase, and she wishes to benefit from this trend using a bull spread technique. Parker suggests that Thompson utilize 1/100 options of the Dow Jones Industrial Average (DJX) which will expire in two months. The current DJX price stands at $91. Exhibit 1 offers current information on two DJX call options which will expire within two months. Exhibit 1 DJX Call Options Expiring in Two Months Thompson decides to use 100 contracts for each position. Each contract equals 100 shares. At the DJX call options expiration, what is the maximum potential gain from the bull spread strategy suggested for Thompson?\n",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_djx_price = 91\n    exercise_price_1 = 88\n    exercise_price_2 = 94\n    option_premium_1 = 4.40\n    option_premium_2 = 1.00\n    contracts = 100\n    shares_per_contract = 100\n\n    # Do math calculation to get the answer\n    # Calculate the maximum potential gain from the bull spread strategy\n    # Bull spread involves buying a call option with a lower exercise price and selling a call option with a higher exercise price\n    max_gain = (exercise_price_2 - exercise_price_1) - (option_premium_1 - option_premium_2)\n    total_max_gain = max_gain * contracts * shares_per_contract\n\n    # return answer\n    return total_max_gain\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-338",
        "python_solution": "",
        "ground_truth": null,
        "question": "Can you calculate the net operating cycle for XY corporation given that they have credit sales of $50,000, cost of goods sold is $30,000, average accounts receivable is $3,000, average accounts payable is $2,600, average inventory is $5,000 and purchase inventory is $46,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    credit_sales = 50000\n    cost_of_goods_sold = 30000\n    avg_accounts_receivable = 3000\n    avg_accounts_payable = 2600\n    avg_inventory = 5000\n    purchase_inventory = 46000\n    \n    # Calculate Days Sales Outstanding (DSO)\n    receivables_turnover = credit_sales / avg_accounts_receivable\n    days_sales_outstanding = 365 / receivables_turnover\n    \n    # Calculate Days Payable Outstanding (DPO)\n    payables_turnover = purchase_inventory / avg_accounts_payable\n    days_payable_outstanding = 365 / payables_turnover\n    \n    # Calculate Days Inventory Outstanding (DIO)\n    inventory_turnover = cost_of_goods_sold / avg_inventory\n    days_inventory_outstanding = 365 / inventory_turnover\n    \n    # Calculate Net Operating Cycle (NOC)\n    net_operating_cycle = days_sales_outstanding + days_inventory_outstanding - days_payable_outstanding\n    \n    # return answer\n    return net_operating_cycle\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-339",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a monthly compounded annual discount rate of 6.5%, what is the present value of a financial agreement that proposes to provide \u20ac1,200 monthly for a period of five years with the initial payment being made instantly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_payment = 1200\n    annual_discount_rate = 0.065\n    monthly_discount_rate = annual_discount_rate / 12\n    number_of_months = 5 * 12\n\n    # Do math calculation to get the answer\n    present_value = 0\n    for i in range(number_of_months):\n        present_value += monthly_payment / (1 + monthly_discount_rate) ** i\n\n    # Include the initial payment made instantly\n    present_value += monthly_payment\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "|   | Six lowest week returns | Hybrid  Weights | Hybrid  Cumulative weights |\n|---|-----------------------|--------------|---------------------------|\n| 1 | -10.2%                   | 0.0105         | 0.0105                           |\n| 2 | -9.1%                   | 0.0150          | 0.0255                           |\n| 3 | -7.8%                   | 0.0082          | 0.0337                           |\n| 4 | -6.0%                   | 0.0043          | 0.0380                           |\n| 5 | -5.5%                   | 0.0153          | 0.0533                           |\n| 6 | -4.9%                   | 0.0115          | 0.0648                           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-340",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the hybrid approach, what is the 5% VaR for a portfolio with 100 weeks of return history, with its lowest returns over six weeks illustrated in the chart?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lowest_week_returns = [-10.2, -9.1, -7.8, -6.0, -5.5, -4.9]\n    hybrid_cumulative_weights = [0.0105, 0.0255, 0.0337, 0.0380, 0.0533, 0.0648]\n    \n    # Find the 5% VaR\n    target_weight = 0.05\n    for i in range(len(hybrid_cumulative_weights)):\n        if hybrid_cumulative_weights[i] >= target_weight:\n            var = lowest_week_returns[i]\n            break\n    \n    # return answer\n    return var\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-341",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the yield decreases by 90 basis points, what would be the convexity impact for a bond having a convexity of 120?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    convexity = 120\n    yield_change = 0.009  # 90 basis points converted to decimal\n    \n    # Do math calculation to get the answer\n    convexity_impact = 0.5 * convexity * (yield_change ** 2)\n    \n    # return answer\n    return convexity_impact\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-342",
        "python_solution": "",
        "ground_truth": null,
        "question": "Determine the beta of the shares, if the covariance of the market returns with the returns of a particular share is 0.0035 and the standard deviation of the market returns is 0.05.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    covariance_market_share = 0.0035\n    std_dev_market = 0.05\n    \n    # Do math calculation to get the answer\n    beta = covariance_market_share / (std_dev_market ** 2)\n    \n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [
            "| Balances as of Year Ended 31 December 2017-2018 |      |      |\n|-------------------------------------------------|------|------|\n| Retained earnings                               |120 145|      |\n| Accounts receivable                             | 38 43|      |\n| Inventory                                       | 45  48|      |\n| Accounts payable                                | 36 29|      |"
        ],
        "topic": "Accounting",
        "question_id": "test-343",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher obtained the data from a business's 2018 financial reports (in $ millions): The business proclaimed and paid cash dividends of $10 million and recognized depreciation expenses of $25 million in 2018. The business views the disbursal of dividends as a financing operation. What was the business's operational cash flow in 2018 (in $ millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    retained_earnings_2017 = 120  # in $ millions\n    retained_earnings_2018 = 145  # in $ millions\n    cash_dividends_paid = 10  # in $ millions\n    depreciation_expenses = 25  # in $ millions\n    \n    # Calculate the change in retained earnings\n    change_in_retained_earnings = retained_earnings_2018 - retained_earnings_2017\n    \n    # Calculate net income (change in retained earnings + dividends paid)\n    net_income = change_in_retained_earnings + cash_dividends_paid\n    \n    # Calculate operational cash flow (net income + depreciation expenses)\n    operational_cash_flow = net_income + depreciation_expenses\n    \n    # return answer\n    return operational_cash_flow\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-344",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an analyst named Mary is attempting to evaluate a corporation's stocks, considering that the company recently paid a dividend of $0.50 per share and the dividend is predicted to increase by 25% in the following year, and by 10% in the subsequent year. Furthermore, from the third year and onwards, the dividend expansion is foreseen to be 5% per annum. Given an 8% required rate of return, what would be the stock's intrinsic value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_dividend = 0.50\n    growth_rate_year1 = 0.25\n    growth_rate_year2 = 0.10\n    constant_growth_rate = 0.05\n    required_rate_of_return = 0.08\n\n    # Calculate dividends for the first two years\n    dividend_year1 = current_dividend * (1 + growth_rate_year1)\n    dividend_year2 = dividend_year1 * (1 + growth_rate_year2)\n\n    # Calculate the present value of dividends for the first two years\n    pv_dividend_year1 = dividend_year1 / (1 + required_rate_of_return)\n    pv_dividend_year2 = dividend_year2 / (1 + required_rate_of_return)**2\n\n    # Calculate the present value of the dividend stream from year 3 onwards\n    # Using the Gordon Growth Model (P = D1 / (r - g))\n    dividend_year3 = dividend_year2 * (1 + constant_growth_rate)\n    stock_price_year2 = dividend_year3 / (required_rate_of_return - constant_growth_rate)\n    pv_stock_price_year2 = stock_price_year2 / (1 + required_rate_of_return)**2\n\n    # Sum up the present values to get the intrinsic value of the stock\n    intrinsic_value = pv_dividend_year1 + pv_dividend_year2 + pv_stock_price_year2\n\n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-345",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the 99.9% credit var for a bond valued at $100 million that has a one-year cumulative default probability of 2% with no recovery rate and a 99.9% confidence level for the coming month?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_value = 100000000  # $100 million\n    default_probability_yearly = 0.02  # 2%\n    confidence_level = 0.999  # 99.9%\n    months_in_year = 12\n\n    # Convert yearly default probability to monthly\n    default_probability_monthly = default_probability_yearly / months_in_year\n\n    # Calculate the 99.9% credit VAR\n    # Since there is no recovery rate, the loss given default is 100%\n    # The formula for VAR at a given confidence level is: Value * (1 - (1 - default_probability)^(1/months_in_year))\n    # However, since we are looking at a specific month, we use the monthly default probability directly\n    credit_var = bond_value * default_probability_monthly\n\n    # return answer\n    return credit_var\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-346",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the shares of the BBB corporation have a 30% chance of increasing each year, assuming each yearly attempt is unrelated to the others, what are the odds that it does not manage to increase more than once in the next 3 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_increase = 0.30  # Probability of share increasing in a year\n    p_no_increase = 1 - p_increase  # Probability of share not increasing in a year\n    years = 3\n    \n    # Do math calculation to get the answer\n    # We need to calculate the probability of the share not increasing more than once in 3 years\n    # This includes the scenarios:\n    # 1. The share does not increase at all in 3 years\n    # 2. The share increases exactly once in 3 years\n    \n    # Probability of not increasing at all in 3 years\n    prob_no_increase_all = p_no_increase ** years\n    \n    # Probability of increasing exactly once in 3 years\n    # This is a binomial distribution problem where we need to calculate the probability of exactly 1 success in 3 trials\n    prob_increase_once = (p_increase * p_no_increase ** 2) * 3  # Multiply by 3 to account for the 3 different positions where the increase can occur\n    \n    # Total probability of not increasing more than once\n    prob_not_more_than_once = prob_no_increase_all + prob_increase_once\n    \n    # return answer\n    return prob_not_more_than_once\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-347",
        "python_solution": "",
        "ground_truth": null,
        "question": "A one-year zero-coupon bond has a yield of 4.0%. The yields of the zero-coupon bonds for two and three years are 5.0% and 6.0% respectively. What would be the forward rate for a one-year loan that starts in two years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_one_year = 0.04\n    yield_two_years = 0.05\n    yield_three_years = 0.06\n    \n    # Do math calculation to get the answer\n    # Calculate the forward rate for a one-year loan that starts in two years\n    # Using the formula: (1 + yield_three_years)^3 / (1 + yield_two_years)^2 = (1 + forward_rate)\n    forward_rate = ((1 + yield_three_years)**3 / (1 + yield_two_years)**2) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [
            "| Mature time | 10 years |\n|-------------|----------|\n| Market discount rate | 4% |\n| Par value of the bond | 1000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-348",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming yearly compounding, what will be the price of the zero coupon bond given the details below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mature_time = 10\n    market_discount_rate = 0.04\n    par_value = 1000\n    \n    # Do math calculation to get the answer\n    price_of_bond = par_value / (1 + market_discount_rate) ** mature_time\n    \n    # return answer\n    return price_of_bond\n```"
        ]
    },
    {
        "tables": [
            "|                                                     | 2018  | 2017  | 2016  |\n|-----------------------------------------------------|-------|-------|-------|\n| Net income                                          | 3,560 | 2,071 | 1,295 |\n| Net cash flow provided by (used in) CFO             | 8,850 | 4,220 | 2,990 |\n| Net cash flow provided by (used in) CFI             | (9,880)| (3,250)| (4,875)|\n| Net cash flow provided by (used in) CFF             | (5,120)| 1,050 | (1,910)|\n| Average net operating assets                         | 42,000| 40,530| 41,600|"
        ],
        "topic": "Accounting",
        "question_id": "test-349",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the cash flow data in the following table, what was the cash-flow-based accruals ratio for the company PZ in the year 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income_2018 = 3560\n    net_cash_flow_CFO_2018 = 8850\n    average_net_operating_assets_2018 = 42000\n\n    # Do math calculation to get the answer\n    cash_flow_based_accruals = net_income_2018 - net_cash_flow_CFO_2018\n    cash_flow_based_accruals_ratio = cash_flow_based_accruals / average_net_operating_assets_2018\n\n    # return answer\n    return cash_flow_based_accruals_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Operating cash flow | 500 |\n|---------------------|-----|\n| Interest paid       | 30  |\n| Investment in working capital | 80 |\n| Investment in fixed asset | 60 |\n| Tax rate | 30% |"
        ],
        "topic": "Accounting",
        "question_id": "test-350",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business expert intends to evaluate a private corporation using the FCF Model. To calculate the free cash flow for all capital providers, what is the free cash flow value the expert intends to find, considering the gathered information (in million)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_cash_flow = 500\n    interest_paid = 30\n    investment_in_working_capital = 80\n    investment_in_fixed_asset = 60\n    tax_rate = 0.30\n\n    # Do math calculation to get the answer\n    # Free Cash Flow for all capital providers (FCFF) is calculated as:\n    # FCFF = Operating Cash Flow - Investment in Working Capital - Investment in Fixed Assets + Interest Paid * (1 - Tax Rate)\n    fcff = operating_cash_flow - investment_in_working_capital - investment_in_fixed_asset + interest_paid * (1 - tax_rate)\n\n    # return answer\n    return fcff\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-351",
        "python_solution": "",
        "ground_truth": null,
        "question": "What should be the projected total owners' equity by an analyst, if a firm is expected to have \u20ac2,000 of assets and \u20ac1,200 liabilities by the end of the year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 2000\n    total_liabilities = 1200\n    \n    # Do math calculation to get the answer\n    total_owners_equity = total_assets - total_liabilities\n    \n    # return answer\n    return total_owners_equity\n```"
        ]
    },
    {
        "tables": [
            "|                               |   C$   |\n|-------------------------------|--------|\n| Carrying value of equipment (net book value)   | 500,000|\n| Undiscounted expected future cash flows | 550,000|\n| Fair value | 480,000 |\n| Costs to sell | 50,000 |\n| Value in use | 440,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-352",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the impairment loss (in C$) associated with the printing equipment of a Canadian printing firm that complies with IFRS, given the drop in demand for its products during this fiscal year end?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_value = 500000\n    undiscounted_cash_flows = 550000\n    fair_value = 480000\n    costs_to_sell = 50000\n    value_in_use = 440000\n    \n    # Determine the recoverable amount, which is the higher of fair value less costs to sell and value in use\n    recoverable_amount = max(fair_value - costs_to_sell, value_in_use)\n    \n    # Calculate the impairment loss\n    impairment_loss = carrying_value - recoverable_amount\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-353",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond with a face value of $100 has a semiannual-pay interest rate of 5% over 10 years, what would be its price assuming that its YTM is 8%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    coupon_rate = 0.05\n    years = 10\n    ytm = 0.08\n    coupon_payment = face_value * coupon_rate / 2  # semiannual payment\n    periods = years * 2  # number of semiannual periods\n    discount_rate = ytm / 2  # semiannual YTM\n\n    # Do math calculation to get the answer\n    present_value_coupons = sum(coupon_payment / (1 + discount_rate) ** i for i in range(1, periods + 1))\n    present_value_face_value = face_value / (1 + discount_rate) ** periods\n    bond_price = present_value_coupons + present_value_face_value\n\n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [
            "| Valuation Screen | Probability of Passing |\n|------------------|------------------------|\n| 1                | 0.65                   |\n| 2                | 0.45                   |\n| 3                | 0.40                   |\n| 4                | 0.30                   |"
        ],
        "topic": "Accounting",
        "question_id": "test-354",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a researcher uses four separate assessment measures on a group of 1,200 possible investments, what is the estimated number that will successfully pass through all four assessments?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_investments = 1200\n    probability_screen_1 = 0.65\n    probability_screen_2 = 0.45\n    probability_screen_3 = 0.40\n    probability_screen_4 = 0.30\n    \n    # Do math calculation to get the answer\n    probability_passing_all_screens = probability_screen_1 * probability_screen_2 * probability_screen_3 * probability_screen_4\n    estimated_passing_investments = total_investments * probability_passing_all_screens\n    \n    # return answer\n    return estimated_passing_investments\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-355",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the fiscal multiplier of the administration with a 25% tax rate and a 70% marginal propensity to consume?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    tax_rate = 0.25\n    marginal_propensity_to_consume = 0.70\n    \n    # Do math calculation to get the answer\n    multiplier = 1 / (1 - (1 - tax_rate) * marginal_propensity_to_consume)\n    \n    # return answer\n    return multiplier\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-356",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher has collected the below stats: the chance of economic prosperity is 75%, while the possibility of recession stands at 25%. For a business, there's a 10% probability of its EPS being $2.0 and a 90% likelihood of having an EPS of $4.0 during prosperous times. However, during a recession, there is a 25% chance that the EPS might be $2.0 and a 75% possibility that the EPS might be $4.0. What is the variance of this business's EPS in an economic downturn?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    recession_probability = 0.25\n    eps_2_recession_probability = 0.25\n    eps_4_recession_probability = 0.75\n    \n    # Expected EPS during recession\n    expected_eps_recession = (eps_2_recession_probability * 2.0) + (eps_4_recession_probability * 4.0)\n    \n    # Variance calculation during recession\n    variance_recession = (eps_2_recession_probability * (2.0 - expected_eps_recession)**2) + \\\n                         (eps_4_recession_probability * (4.0 - expected_eps_recession)**2)\n    \n    # return answer\n    return variance_recession\n```"
        ]
    },
    {
        "tables": [
            "| Carrying amount of plant | 1,604 |\n|-------------------------|-------|\n| Undiscounted expected future net cash flows | 1,350 |\n| Present value of expected future net cash flows | 1,050 |\n| Fair value of plant | 1,225 |\n| Revised estimate of useful life | 4 years |\n| Depreciation method | Straight line |\n| Revised estimate of residual value | $200 |"
        ],
        "topic": "Accounting",
        "question_id": "test-357",
        "python_solution": "",
        "ground_truth": null,
        "question": "In early January 2015, a market researcher spotted a news report stating that a company he's tracking (which submits reports under US GAAP) would be compelled to cut production from a key product line at its highly specialized ceramics factory, due to a new technology launched by a main competitor. The table encapsulates data and predictions from different sources regarding the factory and its forthcoming possibilities. Assuming the chosen information associated with the Ceramics Production Plant by the close of 2014 (in $ thousands) is correct, what would be the depreciation expense to be accounted for in 2015 concerning the factory?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_amount_of_plant = 1604\n    revised_useful_life = 4\n    revised_residual_value = 200\n\n    # Do math calculation to get the answer\n    # Depreciation expense = (Carrying amount - Revised residual value) / Revised useful life\n    depreciation_expense = (carrying_amount_of_plant - revised_residual_value) / revised_useful_life\n\n    # return answer\n    return depreciation_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-358",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the price value of a basis point (PVBP) for the bonds that are presently valued at 108.50, issued by GTS Inc., considering that according to a portfolio manager's valuation model, a 1bp rise in interest rates will cause the bond price to drop to 108.40, and a 1bp fall in interest rates will cause the bond price to increase to 108.59?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 108.50\n    price_increase_1bp = 108.59\n    price_decrease_1bp = 108.40\n    \n    # Do math calculation to get the answer\n    # PVBP is calculated as the average change in price for a 1bp change in interest rates\n    pvbp = (abs(price_increase_1bp - initial_price) + abs(price_decrease_1bp - initial_price)) / 2\n    \n    # return answer\n    return pvbp\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-359",
        "python_solution": "",
        "ground_truth": null,
        "question": "Bergen Inc. commenced business operations in 2007 and implements the FIFO method. In its first year, it bought 45,000 units of inventory for \u20ac10 per unit and sold 40,000 units at \u20ac20 each. The following year, it acquired another 50,000 units at a cost of \u20ac11 each and made sales of 45,000 units priced at \u20ac22 each. Using a periodic inventory system, what was Bergen Inc.'s ending inventory balance in \u20ac thousands for 2008?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    units_bought_2007 = 45000\n    cost_per_unit_2007 = 10\n    units_sold_2007 = 40000\n    units_bought_2008 = 50000\n    cost_per_unit_2008 = 11\n    units_sold_2008 = 45000\n    \n    # Calculate ending inventory for 2007\n    ending_inventory_2007_units = units_bought_2007 - units_sold_2007\n    ending_inventory_2007_value = ending_inventory_2007_units * cost_per_unit_2007\n    \n    # Calculate total units available for sale in 2008\n    total_units_2008 = ending_inventory_2007_units + units_bought_2008\n    \n    # Calculate ending inventory for 2008 using FIFO method\n    ending_inventory_2008_units = total_units_2008 - units_sold_2008\n    ending_inventory_2008_value = (ending_inventory_2007_units * cost_per_unit_2007) + ((ending_inventory_2008_units - ending_inventory_2007_units) * cost_per_unit_2008)\n    \n    # Convert to thousands of euros\n    ending_inventory_2008_value_thousands = ending_inventory_2008_value / 1000\n    \n    # return answer\n    return ending_inventory_2008_value_thousands\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-360",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is looking to aid his friend Lisa in forecasting the revenue of her store in October 20X9, thus he uses the income from January 20X6 to September 20X9 as examples to create an AR(2) model and attains the following result: X ^ t+1 =1.3458+0.8912Xt+0.3372Xt-1. What would the forecasted revenue of Lisa's store be in October 20X9, provided the income for August 20X9 is $2746.72 and the income for September 20X9 is $2957.63?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    X_t = 2957.63  # Income for September 20X9\n    X_t_minus_1 = 2746.72  # Income for August 20X9\n    constant = 1.3458\n    coefficient_Xt = 0.8912\n    coefficient_Xt_minus_1 = 0.3372\n    \n    # Do math calculation to get the answer\n    forecasted_revenue = constant + (coefficient_Xt * X_t) + (coefficient_Xt_minus_1 * X_t_minus_1)\n    \n    # return answer\n    return forecasted_revenue\n```"
        ]
    },
    {
        "tables": [
            "| Borrowing date   | 1-Jan-09                                |\n|------------------|-----------------------------------------|\n| Amount borrowed  | 500 million Brazilian real (BRL)  |\n| Annual interest rate  | 14 percent                        |\n| Term of the loan | 3 years                                 |\n| Payment method   | Annual payment of interest only. Principal amortization is due at the end of the loan term. |"
        ],
        "topic": "Accounting",
        "question_id": "test-361",
        "python_solution": "",
        "ground_truth": null,
        "question": "A Brazilian firm, CRIXUS Inc., takes out a loan from a domestic bank to fund the building of its factory. The terms of the loan are as follows: It takes two years to construct the factory, during which CRIXUS made BRL 10 million by momentarily investing the loan amount. What is the value of interest pertaining to the factory construction (in BRL million) that can be capitalized on CRIXUS's balance sheet?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    amount_borrowed = 500  # in million BRL\n    annual_interest_rate = 0.14  # 14%\n    construction_period = 2  # in years\n\n    # Do math calculation to get the answer\n    # Interest for the construction period (2 years)\n    annual_interest = amount_borrowed * annual_interest_rate\n    total_interest_during_construction = annual_interest * construction_period\n\n    # return answer\n    return total_interest_during_construction\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-362",
        "python_solution": "",
        "ground_truth": null,
        "question": "In compliance with the rules of the trading platform, investing in wheat futures calls for an initial margin of $2000 and a maintenance margin of $1500. A trader shorts a wheat future contract at $216, with each contract incorporating 100 tons. The contract's value escalates to $222 after a day. What would the varying margin amount be at the conclusion of day one?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_margin = 2000\n    maintenance_margin = 1500\n    contract_price_initial = 216\n    contract_price_final = 222\n    contract_size = 100\n\n    # Do math calculation to get the answer\n    # Calculate the loss per ton\n    loss_per_ton = contract_price_final - contract_price_initial\n    # Calculate the total loss\n    total_loss = loss_per_ton * contract_size\n    # Calculate the new margin amount\n    new_margin_amount = initial_margin - total_loss\n\n    # return answer\n    return new_margin_amount\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-363",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose a hedge fund manager is aiming to build a protective put approach. If the stock's current price is $25.1, and the premium of 23 put is $1.8, what would be the maximum loss for this strategy?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_price = 25.1\n    put_premium = 1.8\n    put_strike_price = 23\n    \n    # Do math calculation to get the answer\n    # Maximum loss is the difference between the stock price and the put strike price plus the premium paid for the put\n    maximum_loss = (stock_price - put_strike_price) + put_premium\n    \n    # return answer\n    return maximum_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-364",
        "python_solution": "",
        "ground_truth": null,
        "question": "In March 2017, John purchased 500 pen units at a cost of $2 each. Then in April of the same year, he bought another 600 pen units at an expense of $3 each. John managed to sell 1000 units at $5 each during 2017. When employing the FIFO method, what would be the cost of goods he sold in 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    march_purchase_units = 500\n    march_purchase_cost_per_unit = 2\n    april_purchase_units = 600\n    april_purchase_cost_per_unit = 3\n    units_sold = 1000\n    \n    # Do math calculation to get the answer\n    # Using FIFO method, the first units purchased are sold first\n    # First, sell all units from March purchase\n    units_sold_from_march = min(units_sold, march_purchase_units)\n    cost_from_march = units_sold_from_march * march_purchase_cost_per_unit\n    \n    # Then, sell remaining units from April purchase\n    remaining_units_to_sell = units_sold - units_sold_from_march\n    cost_from_april = remaining_units_to_sell * april_purchase_cost_per_unit\n    \n    # Total cost of goods sold\n    total_cost_of_goods_sold = cost_from_march + cost_from_april\n    \n    # return answer\n    return total_cost_of_goods_sold\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| Fair value  | \u00a3 16,800,000  |\n| Costs to sell  | \u00a3800,000  |\n| Value in use  | \u00a314,500,000  |\n| Net carrying amount  | \u00a319,100,000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-365",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher is examining the degradation of the production machinery of Alpha Industries, a corporation based in the UK that abides by IFRS. What is the value of the impairment loss on Alpha Industries' income statement connected to its production machinery, based on the data collected about the machinery?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fair_value = 16800000\n    costs_to_sell = 800000\n    value_in_use = 14500000\n    net_carrying_amount = 19100000\n    \n    # Calculate the recoverable amount, which is the higher of fair value less costs to sell and value in use\n    recoverable_amount = max(fair_value - costs_to_sell, value_in_use)\n    \n    # Calculate the impairment loss\n    impairment_loss = net_carrying_amount - recoverable_amount\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-366",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a discrete uniform distribution with 20 potential results ranging from 1 to 20, what is the probability that X is not less than 3 but not exceeding 5, P(3 \u2264 X < 6)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_outcomes = 20\n    favorable_outcomes = 3  # Since X can be 3, 4, or 5\n    \n    # Do math calculation to get the answer\n    probability = favorable_outcomes / total_outcomes\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-367",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume an investment portfolio consists of 40% in property A and 60% in property B. The average and variance of the return on A are 0 and 25 respectively. The average and variance of the return on B are 1 and 121 correspondingly. The correlation coefficient between A and B is 0.3. What is the closest estimate for portfolio volatility?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_A = 0.4\n    weight_B = 0.6\n    variance_A = 25\n    variance_B = 121\n    correlation_AB = 0.3\n    \n    # Do math calculation to get the answer\n    # Calculate the covariance between A and B\n    covariance_AB = correlation_AB * (variance_A ** 0.5) * (variance_B ** 0.5)\n    \n    # Calculate the portfolio variance\n    portfolio_variance = (weight_A ** 2) * variance_A + (weight_B ** 2) * variance_B + 2 * weight_A * weight_B * covariance_AB\n    \n    # Calculate the portfolio volatility (standard deviation)\n    portfolio_volatility = portfolio_variance ** 0.5\n    \n    # return answer\n    return portfolio_volatility\n```"
        ]
    },
    {
        "tables": [
            "| Quarter                   | Income   |\n|---------------------------|----------|\n| The last quarter in 20X8 | $ 4257.63|\n| The third quarter in 20X8| $4153.98 |\n| The second quarter in 20X8| $4322.01 |\n| The first quarter in 20X8| $5763.42 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-368",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson is looking to forecast the earnings of his manufacturing plant in the first quarter of 20X9. To do this he utilizes earnings data from the first quarter of 20X8 to the last quarter of 20X8 as examples to create an AR(1) model. However, he discovers that the autocorrelations of the residuals indicate a significant, strong seasonal autocorrelation. Johnson then adjusts the model to obtain the new equation, which is Xt=126.7537+0.1387Xt\u22121+0.9324Xt\u22124X_t=126.7537+0.1387X_{t-1}+0.9324X_{t-4}Xt\u200b=126.7537+0.1387Xt\u22121\u200b+0.9324Xt\u22124\u200b. The income for each quarter in 20X8 is presented in the table below. Based on this new model, what is the",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    X_t_1 = 4257.63  # Last quarter in 20X8\n    X_t_4 = 5763.42  # First quarter in 20X8\n    \n    # Coefficients from the adjusted model\n    intercept = 126.7537\n    coefficient_t_1 = 0.1387\n    coefficient_t_4 = 0.9324\n    \n    # Do math calculation to get the answer\n    X_t = intercept + coefficient_t_1 * X_t_1 + coefficient_t_4 * X_t_4\n    \n    # return answer\n    return X_t\n```"
        ]
    },
    {
        "tables": [
            "|    | Borrowing date                             | 1 January 2009                          |\n|:--:|---------------------------------------|----------------------------------|\n|    | Amount borrowed                          | 500 million Brazilian real (BRL) |\n|    | Annual interest rate                 | 14 percent                             |\n|    | Term of the loan                       | 3 years                                   |\n| Payment method  |                                       | Annual payment of interest only. Principal amortization is due at the end of the loan term. |"
        ],
        "topic": "Accounting",
        "question_id": "test-369",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Brazilian corporation, RIO GRANDE, Inc., borrows money from a local financial institution to fund the building of its manufacturing facility. The loan conditions indicate that the facility build will take two years, during which RIO GRANDE generated BRL 10 million via temporary investment of the loan funds. What would be the sum of the interest associated with the plant's build (in BRL million) that RIO GRANDE could include in its financial statement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    amount_borrowed = 500  # in million BRL\n    annual_interest_rate = 0.14  # 14 percent\n    loan_term = 3  # in years\n    temporary_investment_income = 10  # in million BRL\n\n    # Calculate the total interest for the loan term\n    total_interest = amount_borrowed * annual_interest_rate * loan_term\n\n    # Subtract the temporary investment income from the total interest\n    # since the investment income is generated during the build period\n    interest_for_financial_statement = total_interest - temporary_investment_income\n\n    # return answer\n    return interest_for_financial_statement\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-370",
        "python_solution": "",
        "ground_truth": null,
        "question": "John, CFA, is assessing the value of Corporation X. With the present dividend and the necessary return rate of $0.5 per share and 10% respectively, he anticipates that the dividend will continue to grow at its current rate of 4.5% per year indefinitely. What is the intrinsic value of Corporation X shares according to the Gordon Growth Model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend = 0.5  # present dividend per share\n    required_return = 0.10  # necessary return rate\n    growth_rate = 0.045  # annual growth rate of dividends\n    \n    # Do math calculation to get the answer\n    intrinsic_value = dividend / (required_return - growth_rate)\n    \n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n| --- | --- | --- | --- | --- | --- |\n| 20% | 4%  | -5% | 12% | 3%  | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-371",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the provided table, can you compute the mean absolute deviation of the monthly stock returns for Ivy Corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_returns = [20, 4, -5, 12, 3, 12]\n    \n    # Calculate the mean of the monthly returns\n    mean_return = sum(monthly_returns) / len(monthly_returns)\n    \n    # Calculate the absolute deviations from the mean\n    absolute_deviations = [abs(return_value - mean_return) for return_value in monthly_returns]\n    \n    # Calculate the mean absolute deviation\n    mean_absolute_deviation = sum(absolute_deviations) / len(absolute_deviations)\n    \n    # return answer\n    return mean_absolute_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-372",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ Corporation has gone into a forward rate agreement (FRA) in which they will receive a continuous compounding rate of 3.75% on a principal amount of USD 1 million from the end of the first year to the end of the second year. The zero rates for one and two years are 3.25% and 3.50%, respectively. What is the value of the FRA at the inception of the agreement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 1000000  # USD 1 million\n    continuous_rate = 0.0375  # 3.75% continuous compounding rate\n    zero_rate_1year = 0.0325  # 3.25% zero rate for one year\n    zero_rate_2year = 0.0350  # 3.50% zero rate for two years\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the FRA\n    # First, calculate the future value of the principal at the end of the second year with the continuous compounding rate\n    future_value = principal * (1 + continuous_rate)\n    \n    # Second, discount the future value back to the present using the 2-year zero rate\n    present_value = future_value / ((1 + zero_rate_2year) ** 2)\n    \n    # return answer\n    return present_value\n```\n\nThis program calculates the value of the FRA at the inception of the agreement by first calculating the future value of the principal at the end of the second year with the continuous compounding rate and then discounting it back to the present using the 2-year zero rate."
        ]
    },
    {
        "tables": [
            "| Bond                         | Coupon Rate | Time-to-Maturity | Price  |\n|------------------------------|-------------|------------------|--------|\n| UK Government Benchmark Bond | 2%          | 3 years          | 100.25 |\n| UK Corporate Bond            | 5%          | 3 years          | 100.65 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-373",
        "python_solution": "",
        "ground_truth": null,
        "question": "The present three-year EUR interest rate benchmark for swap is 2.12% and both bonds annually yield interest. What is the G-spread measured in basis points (bps) on the corporate bond from the UK?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    corporate_bond_coupon_rate = 5  # in percentage\n    government_bond_coupon_rate = 2  # in percentage\n    swap_rate = 2.12  # in percentage\n\n    # Do math calculation to get the answer\n    g_spread = corporate_bond_coupon_rate - swap_rate\n    g_spread_bps = g_spread * 100  # convert percentage to basis points\n\n    # return answer\n    return g_spread_bps\n```"
        ]
    },
    {
        "tables": [
            "|Exhibit 1  Atlantic Preserves, Inc.                   |        |\n|Selected Information from Note F of the 2013 Annual Financial Statements|        |\n|Relating to the Company's Defined Benefit Pension Plan (in $ thousands) |        |\n|Start-of-year pension obligation                      |72,544  |\n|Start-of-year plan assets                             |60,096  |\n|End-of-year pension obligation                        |74,077  |\n|End-of-year plan assets                               |61,812  |\n|Current service cost                                  |1,151   |\n|Interest cost                                         |5,441   |\n|Actual return on plan assets                          |5,888   |\n|Expected return on plan assets                        |4,597   |\n|Benefits paid to retired employees                    |5,059   |\n|Employer's contributions                              |887     |\n|Amortization of past service costs                    |272     |"
        ],
        "topic": "Accounting",
        "question_id": "test-374",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering that the actual return on pension plan assets of Pacific Reserve surpasses its predicted return, what is the company's total periodical pension expense (in $ thousands) for 2013 as displayed in Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_service_cost = 1151\n    interest_cost = 5441\n    expected_return_on_plan_assets = 4597\n    amortization_of_past_service_costs = 272\n\n    # Do math calculation to get the answer\n    # Total periodical pension expense is calculated by adding current service cost, interest cost, and amortization of past service costs,\n    # then subtracting the expected return on plan assets.\n    total_periodical_pension_expense = current_service_cost + interest_cost + amortization_of_past_service_costs - expected_return_on_plan_assets\n\n    # return answer\n    return total_periodical_pension_expense\n```"
        ]
    },
    {
        "tables": [
            "| Shares outstanding before buyback | 3.1 million |\n| --- | --- |\n| Earnings per share before buyback | $4.00 |\n| Share price at time of buyback | $50 |\n| After-tax cost of borrowing | 6% |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-375",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will be the earnings per share for Blanchard Inc. after repurchasing 100,000 stocks, assuming they borrow precisely the required amount of money for this transaction?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_outstanding_before = 3100000  # 3.1 million shares\n    earnings_per_share_before = 4.00  # $4.00 EPS before buyback\n    share_price = 50  # $50 share price at time of buyback\n    after_tax_cost_of_borrowing = 0.06  # 6% after-tax cost of borrowing\n    shares_to_buyback = 100000  # 100,000 stocks to be repurchased\n\n    # Calculate the total amount of money needed to borrow for the buyback\n    total_borrowing = shares_to_buyback * share_price\n\n    # Calculate the new shares outstanding after the buyback\n    new_shares_outstanding = shares_outstanding_before - shares_to_buyback\n\n    # Calculate the total earnings before the buyback\n    total_earnings_before = earnings_per_share_before * shares_outstanding_before\n\n    # Calculate the additional interest expense due to borrowing\n    interest_expense = total_borrowing * after_tax_cost_of_borrowing\n\n    # Calculate the new total earnings after accounting for the interest expense\n    total_earnings_after = total_earnings_before - interest_expense\n\n    # Calculate the new earnings per share after the buyback\n    new_earnings_per_share = total_earnings_after / new_shares_outstanding\n\n    # return answer\n    return new_earnings_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-376",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the return of the perpetual annuity if its price is 870,000 and it pays annually $50,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_of_perpetual_annuity = 870000\n    annual_payment = 50000\n    \n    # Do math calculation to get the answer\n    return_of_perpetual_annuity = annual_payment / price_of_perpetual_annuity\n    \n    # return answer\n    return return_of_perpetual_annuity\n```"
        ]
    },
    {
        "tables": [
            "|        | Bid Size      | Offer Size     |\n|--------|---------------|----------------|\n| Buyer  |(Number of shares)| Limit price(\u00a3) | (Number of shares) | Seller|\n|-------|---------------|--------------|----------------|--------|\n| Keith  | 1,000         | 19.70        |                |       |\n| Paul   | 200          | 19.84        |                |       |\n| Ann    | 400          | 19.89        |                |       |\n| Mary   | 300          | 20.02        |                |       |\n|        |               | 20.03        | 800            | Jack  |\n|        |               | 20.11        | 1,100          | Margaret |\n|        |               | 20.16        | 400            | Jeff   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-377",
        "python_solution": "",
        "ground_truth": null,
        "question": "A marketplace has the following limit orders standing on its book for a specific share: John places a day order to sell 1,000 shares, limit \u00a319.83. Supposing that no further purchase orders are placed on that day after John's order, what would be John\u2019s average trade price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    john_sell_order = 1000\n    john_limit_price = 19.83\n    \n    # List of buyers with their bid sizes and prices\n    buyers = [\n        {\"name\": \"Keith\", \"bid_size\": 1000, \"limit_price\": 19.70},\n        {\"name\": \"Paul\", \"bid_size\": 200, \"limit_price\": 19.84},\n        {\"name\": \"Ann\", \"bid_size\": 400, \"limit_price\": 19.89},\n        {\"name\": \"Mary\", \"bid_size\": 300, \"limit_price\": 20.02}\n    ]\n    \n    # Initialize variables for calculation\n    total_shares_sold = 0\n    total_trade_value = 0\n    \n    # Iterate through buyers to match John's sell order\n    for buyer in buyers:\n        if buyer[\"limit_price\"] >= john_limit_price:\n            if total_shares_sold + buyer[\"bid_size\"] <= john_sell_order:\n                # If the buyer can take all remaining shares\n                total_shares_sold += buyer[\"bid_size\"]\n                total_trade_value += buyer[\"bid_size\"] * buyer[\"limit_price\"]\n            else:\n                # If the buyer can take only part of the remaining shares\n                shares_taken = john_sell_order - total_shares_sold\n                total_shares_sold += shares_taken\n                total_trade_value += shares_taken * buyer[\"limit_price\"]\n        \n        # Stop if John's order is fully matched\n        if total_shares_sold == john_sell_order:\n            break\n    \n    # Calculate the average trade price\n    average_trade_price = total_trade_value / total_shares_sold\n    \n    # Return the average trade price\n    return average_trade_price\n```\n\nThis Python program calculates the average trade price for John's sell order of 1,000 shares at a limit price of \u00a319.83, given the existing buyers' orders. It iterates"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-378",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the Break-even inflation rate for Microsoft is 5%, the real default-free interest rate is 4.5%, and the anticipated future inflation is 3.5%. Can you determine the uncertainty of future inflation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    break_even_inflation_rate = 5.0\n    real_default_free_interest_rate = 4.5\n    anticipated_future_inflation = 3.5\n    \n    # Do math calculation to get the answer\n    uncertainty_of_future_inflation = break_even_inflation_rate - anticipated_future_inflation\n    \n    # return answer\n    return uncertainty_of_future_inflation\n```"
        ]
    },
    {
        "tables": [
            "| Purchase price | $12,980 |\n|----------------|---------|\n| Freight and insurance | $1,200 |\n| Installation | $700 |\n| Testing | $100 |\n| Maintenance staff training costs | $500 |"
        ],
        "topic": "Accounting",
        "question_id": "test-379",
        "python_solution": "",
        "ground_truth": null,
        "question": "The corporation TechnoSphere recently acquired and set up a new apparatus for its production factory. What should be the cumulative expense of the apparatus displayed on TechnoSphere's financial statement, given the costs the company had to bear?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price = 12980\n    freight_and_insurance = 1200\n    installation = 700\n    testing = 100\n    maintenance_staff_training_costs = 500\n    \n    # Do math calculation to get the answer\n    cumulative_expense = (purchase_price + freight_and_insurance + installation + testing + maintenance_staff_training_costs)\n    \n    # return answer\n    return cumulative_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-380",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the discount rate if a 30-day Treasury bill is priced at 99.5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price = 99.5\n    face_value = 100\n    days_to_maturity = 30\n    \n    # Do math calculation to get the answer\n    discount_rate = ((face_value - price) / face_value) * (360 / days_to_maturity)\n    \n    # return answer\n    return discount_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-381",
        "python_solution": "",
        "ground_truth": null,
        "question": "For a one-year bond rated BBB, the spread over risk-free Treasuries of the same maturity is 2.5%. If all non-credit factors such as liquidity risk and taxes contribute to a 1% spread, what's the assumed default probability for this bond, if the loss given default rate is 60%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spread_over_risk_free = 0.025  # 2.5% spread over risk-free Treasuries\n    non_credit_factors_spread = 0.01  # 1% spread due to non-credit factors\n    loss_given_default = 0.60  # 60% loss given default rate\n    \n    # Do math calculation to get the answer\n    # Calculate the credit spread by subtracting the non-credit factors spread from the total spread\n    credit_spread = spread_over_risk_free - non_credit_factors_spread\n    \n    # Calculate the default probability using the formula: credit spread = default probability * loss given default\n    default_probability = credit_spread / loss_given_default\n    \n    # return answer\n    return default_probability\n```"
        ]
    },
    {
        "tables": [
            "|  | Bond A |\n| --- | --- |\n| Periodicity | semiannually |\n| Par | 100 |\n| Price | 105 |\n| YTM | 4% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-382",
        "python_solution": "",
        "ground_truth": null,
        "question": "The specific data of bond B is given below: What would be the YTM if it is transformed into a quarterly periodicity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    YTM_semiannually = 0.04  # 4% YTM given semiannually\n    periods_per_year_semiannually = 2  # semiannual payments\n    periods_per_year_quarterly = 4  # quarterly payments\n    \n    # Convert semiannual YTM to effective annual yield\n    effective_annual_yield = (1 + YTM_semiannually / periods_per_year_semiannually) ** periods_per_year_semiannually - 1\n    \n    # Convert effective annual yield to quarterly YTM\n    quarterly_YTM = ((1 + effective_annual_yield) ** (1 / periods_per_year_quarterly) - 1) * periods_per_year_quarterly\n    \n    # return answer\n    return quarterly_YTM\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-383",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a business purchased a client database for $300,000, foreseeing its usefulness for three years, along with a trademark worth $5,000,000 expecting it to be useful indefinitely but it's required to renew it every 10 years with the Patent and Trademark Bureau for a small fee or it will become void. Given that the business applies straight-line depreciation for all its non-physical properties, what would the yearly amortization cost for these two properties amount to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    client_database_cost = 300000\n    client_database_useful_life = 3\n    trademark_cost = 5000000\n    trademark_renewal_period = 10\n    \n    # Do math calculation to get the answer\n    # Calculate the yearly amortization for the client database\n    client_database_amortization = client_database_cost / client_database_useful_life\n    \n    # Calculate the yearly amortization for the trademark\n    # Since the trademark needs to be renewed every 10 years, we consider its cost over this period\n    trademark_amortization = trademark_cost / trademark_renewal_period\n    \n    # Sum the amortization costs for both properties\n    total_amortization = client_database_amortization + trademark_amortization\n    \n    # return answer\n    return total_amortization\n```"
        ]
    },
    {
        "tables": [
            "| Net income                           | $200,000 |\n|--------------------------------------|----------|\n| Decrease in accounts receivable      | 10,000   |\n| Depreciation                         | 36,000   |\n| Increase in inventory                | 12,000   |\n| Increase in accounts payable         | 17,000   |\n| Decrease in wages payable            | 8,000    |\n| Increase in deferred tax liabilities | 12,000   |\n| Profit from the sale of equipment    | 6,000    |"
        ],
        "topic": "Accounting",
        "question_id": "test-384",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the data provided, what is the company's cash flow generated from operations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 200000\n    decrease_in_accounts_receivable = 10000\n    depreciation = 36000\n    increase_in_inventory = 12000\n    increase_in_accounts_payable = 17000\n    decrease_in_wages_payable = 8000\n    increase_in_deferred_tax_liabilities = 12000\n    profit_from_sale_of_equipment = 6000\n    \n    # Do math calculation to get the answer\n    cash_flow_from_operations = (\n        net_income\n        + depreciation\n        + decrease_in_accounts_receivable\n        - increase_in_inventory\n        + increase_in_accounts_payable\n        - decrease_in_wages_payable\n        - increase_in_deferred_tax_liabilities\n        - profit_from_sale_of_equipment\n    )\n    \n    # return answer\n    return cash_flow_from_operations\n```"
        ]
    },
    {
        "tables": [
            "| Total asset | $5,000 million |\n| --- | --- |\n| ROE | 15% |\n| Cost of equity | 12.5% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-385",
        "python_solution": "",
        "ground_truth": null,
        "question": "Company N is financed with a 60% debt and 40% equity ratio. Using the RI model for valuation, John has gathered the necessary data in the provided chart. What is Company N's residual income?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_asset = 5000  # in million dollars\n    roe = 0.15\n    cost_of_equity = 0.125\n    equity_ratio = 0.40\n    debt_ratio = 0.60\n    \n    # Calculate equity value\n    equity_value = total_asset * equity_ratio\n    \n    # Calculate net income\n    net_income = equity_value * roe\n    \n    # Calculate residual income\n    residual_income = net_income - (equity_value * cost_of_equity)\n    \n    # return answer\n    return residual_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-386",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a customer buys a 6-year bond at a price of 109.83, with an 8% coupon rate where the interest is paid yearly. Supposing the consistent market rate during this time is 6%, what would be the horizon yield if the customer decides to offload the bond at the close of year 5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price = 109.83\n    coupon_rate = 0.08\n    market_rate = 0.06\n    years = 6\n    sell_year = 5\n    \n    # Calculate the annual coupon payment\n    coupon_payment = purchase_price * coupon_rate\n    \n    # Calculate the future value of the bond at the end of year 5\n    future_value = purchase_price * (1 + market_rate) ** sell_year\n    \n    # Calculate the total coupon payments received over 5 years\n    total_coupon_payments = coupon_payment * sell_year\n    \n    # Calculate the total return at the end of year 5\n    total_return = future_value + total_coupon_payments\n    \n    # Calculate the horizon yield\n    horizon_yield = (total_return / purchase_price) ** (1 / sell_year) - 1\n    \n    # return answer\n    return horizon_yield\n```\n\nThis program calculates the horizon yield for a bond purchased at a premium (109.83) with an 8% coupon rate, assuming it is sold at the end of year 5 when the market rate is consistently 6%. The horizon yield is calculated based on the total return from both the bond's future value and the coupon payments received over the holding period."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-387",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the preferred shares of Baxter corporation are anticipated to pay a perpetual annual dividend of $12 and the constant required rate of return is 15%, what should the value of the preferred stock be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_dividend = 12\n    required_rate_of_return = 0.15\n    \n    # Do math calculation to get the answer\n    value_of_preferred_stock = annual_dividend / required_rate_of_return\n    \n    # return answer\n    return value_of_preferred_stock\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-388",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood of a variable falling between 10 and 20 for a random variable adhering to a continuous uniform distribution within the span of 5 to 25?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lower_bound = 5\n    upper_bound = 25\n    target_lower_bound = 10\n    target_upper_bound = 20\n    \n    # Do math calculation to get the answer\n    probability = (target_upper_bound - target_lower_bound) / (upper_bound - lower_bound)\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-389",
        "python_solution": "",
        "ground_truth": null,
        "question": "Ultimately, in 2016, Henderson stated that BBBC bought 100% of SongBox (SB), a specific cable music channel in an all-stock transaction. At the point of acquisition, SB had intangible assets for broadcast licenses valued at $2,500. BBBC evaluated the fair market value of these licenses to be $5,500 at that date and estimated the SongBox brand name value to be $2,000, all values are in thousands. The acquisition did not create any goodwill. Prior to the amortization expense calculation, what is the rise in BBBC's intangible assets (in thousands) resulting from the 2016 purchase of SB?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_intangible_assets = 2500  # Initial value of intangible assets for broadcast licenses\n    fair_market_value_licenses = 5500  # Fair market value of the licenses\n    brand_name_value = 2000  # Estimated value of the SongBox brand name\n    \n    # Do math calculation to get the answer\n    # The rise in intangible assets is the difference between the fair market value of the licenses and the initial value, plus the brand name value\n    rise_in_intangible_assets = (fair_market_value_licenses - initial_intangible_assets) + brand_name_value\n    \n    # return answer\n    return rise_in_intangible_assets\n```"
        ]
    },
    {
        "tables": [
            "|                 | Coefficients | Standard Error | t- Statistic | p-Value |\n|-----------------|--------------|----------------|--------------|---------|\n| Intercept       | 0.5987       | 0.0561         | 10.6749      | 0.0000  |\n| FATO            | 0.2951       | 0.0077         | 38.5579      | 0.0000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-390",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the model lnNPMi=b0+b1FATOi, which is based on data collected from a sample of 35 companies in the most recent fiscal year, what is the projected net profit margin for a corporation that has a fixed asset turnover ratio of 2 times? This is what Sam Braxton is studying, focusing on the relationship between companies' net profit margins (in percent) and their fixed asset turnover (FATO).",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    b0 = 0.5987  # Intercept coefficient\n    b1 = 0.2951  # FATO coefficient\n    FATO = 2     # Fixed Asset Turnover ratio\n    \n    # Do math calculation to get the answer\n    lnNPM = b0 + b1 * FATO\n    NPM = math.exp(lnNPM) * 100  # Convert from natural log to percentage\n    \n    # return answer\n    return NPM\n\n# Note: Ensure math module is imported if not already done\nimport math\n```\n\nThis program calculates the projected net profit margin (NPM) for a corporation with a fixed asset turnover ratio (FATO) of 2 times, using the given coefficients from the regression model. The result is converted from a natural log scale to a percentage."
        ]
    },
    {
        "tables": [
            "| (all figures in $ thousands) | 2010 | 2009 |\n|-----------------------------|------|------|\n| Deferred tax assets        | 200  | 160  |\n| Deferred tax liabilities   | (450)| (360)|\n| Net deferred tax liabilities | (250)| (200)|\n|                             |      |      |\n| Earning before taxes         | 4000 | 3800 |\n| Income taxes at the statutory rate| 1200| 1140|\n| Income tax payable (Current income tax expense)| 1000 | 900 |"
        ],
        "topic": "Accounting",
        "question_id": "test-391",
        "python_solution": "",
        "ground_truth": null,
        "question": "What was the 2010 income tax expense (in thousands) for the business, based on the provided details about the business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    income_tax_payable_2010 = 1000  # in thousands\n    net_deferred_tax_liabilities_2010 = 250  # in thousands\n    \n    # Do math calculation to get the answer\n    income_tax_expense_2010 = income_tax_payable_2010 + net_deferred_tax_liabilities_2010\n    \n    # return answer\n    return income_tax_expense_2010\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-392",
        "python_solution": "",
        "ground_truth": null,
        "question": "A set of 25 data points has an average of 8 and a standard deviation of 15. What is the standard error of this average?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average = 8\n    standard_deviation = 15\n    number_of_data_points = 25\n    \n    # Do math calculation to get the answer\n    standard_error = standard_deviation / (number_of_data_points ** 0.5)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning($) | End($) | Shares |\n| -------- | ------------ | ------ | ------ |\n| G        | 15.00        | 17.00  | 500    |\n| H        | 35.00        | 33.00  | 300    |\n| 1        | 37.00        | 40.00  | 200    |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-393",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, an analyst named Benedict from a finance corporation collected data for a price-weighted index made up of securities G,H,I. What is the index's price return for that period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = [15.00, 35.00, 37.00]\n    ending_prices = [17.00, 33.00, 40.00]\n    shares = [500, 300, 200]\n    \n    # Calculate the sum of beginning and ending prices\n    sum_beginning_prices = sum(beginning_prices)\n    sum_ending_prices = sum(ending_prices)\n    \n    # Calculate the price-weighted index return\n    price_weighted_index_return = (sum_ending_prices - sum_beginning_prices) / sum_beginning_prices * 100\n    \n    # return answer\n    return price_weighted_index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-394",
        "python_solution": "",
        "ground_truth": null,
        "question": "Firm N adheres to U.S.GAAP, it expended $150 million on acquiring inventory, $10 million on transporting the goods to their existing location and an extra $10 million on their sale. What is the inventory cost of firm N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 150000000\n    transportation_cost = 10000000\n    sales_cost = 10000000\n    \n    # Do math calculation to get the answer\n    inventory_cost = acquisition_cost + transportation_cost\n    \n    # return answer\n    return inventory_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-395",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the $150 million distressed bond portfolio managed by Sarah Brown undergoes a 4-sigma daily event, can you estimate the change in the portfolio's value? Sarah, who conducts stress tests on the portfolio, has experienced numerous days over the past two years where the portfolio's daily value change was more than 3 standard deviations. This portfolio has an annualized return of 12% and an annualized return volatility of 25%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_value = 150000000  # $150 million\n    annual_return = 0.12  # 12% annualized return\n    annual_volatility = 0.25  # 25% annualized return volatility\n    sigma = 4  # 4-sigma event\n\n    # Convert annual volatility to daily volatility\n    daily_volatility = annual_volatility / (252 ** 0.5)  # Assuming 252 trading days in a year\n\n    # Calculate the daily change in value for a 4-sigma event\n    daily_change = sigma * daily_volatility * portfolio_value\n\n    # return answer\n    return daily_change\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-396",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a firm has total variable expenses of $4 million and set expenses of $3 million, what should be its minimal total income to remain in business over the long haul?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_variable_expenses = 4000000\n    fixed_expenses = 3000000\n    \n    # Do math calculation to get the answer\n    minimal_total_income = total_variable_expenses + fixed_expenses\n    \n    # return answer\n    return minimal_total_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-397",
        "python_solution": "",
        "ground_truth": null,
        "question": "Henry Miller and his team gather extensive statistical data on the automobile market. From the information, they deduce that the average cost of SUVs exceeds $46,435 in their nation. Subsequently, they randomly pick 64 SUVs with an average value of $46,760. Assuming that the population's standard deviation is 1370, Henry Miller performs a hypothesis test to verify their hypothesis. What is the figure for the calculated test statistic?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    population_mean = 46435\n    sample_mean = 46760\n    population_std_dev = 1370\n    sample_size = 64\n    \n    # Do math calculation to get the answer\n    test_statistic = (sample_mean - population_mean) / (population_std_dev / (sample_size ** 0.5))\n    \n    # return answer\n    return test_statistic\n```"
        ]
    },
    {
        "tables": [
            "|                               | 31 Dec 05 |  31 Dec 06  |\n| ----------------------------- | --------- | ----------- |\n| Inventory reported on balance sheet | $500,000  | $600,000 |\n| LIFO reserve                  | $50,000   | $70,000  |\n| Average tax rate              | 30%       | 30%       |"
        ],
        "topic": "Accounting",
        "question_id": "test-398",
        "python_solution": "",
        "ground_truth": null,
        "question": "What would be the inventory on 31 December 2006 for a US business that employs the last in, first out (LIFO) accounting system for inventory, according to the data reviewed by the analyst, once the values have been adjusted to adapt to the first in, first out (FIFO) method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inventory_LIFO_2006 = 600000\n    LIFO_reserve_2006 = 70000\n    \n    # Do math calculation to get the answer\n    inventory_FIFO_2006 = inventory_LIFO_2006 + LIFO_reserve_2006\n    \n    # return answer\n    return inventory_FIFO_2006\n```"
        ]
    },
    {
        "tables": [
            "| Maturity | Par Rate | Spot Rate |\n|----------|---------|---------|\n| 1        | 2.5000% | 2.5000% |\n| 2        | 3.5000% | 3.5177% |",
            "|          | Time 0   | Time 1                  |\n|----------|----------|-------------------------|\n|          |          | 5.8365%                 |\n|          | 2.500%   |                         |\n|          |          | Lower one-period forward rate |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-399",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the information in Displays 1 and 2, when aligning a binomial interest rate tree beginning with the computation of implied forward rates illustrated in Display 2, what is the worth of the inferior one-period forward rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lower_one_period_forward_rate = 5.8365 / 100  # Convert percentage to decimal\n\n    # Do math calculation to get the answer\n    # The worth of the inferior one-period forward rate is directly given in the table\n\n    # return answer\n    return lower_one_period_forward_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-400",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose the Smith account had a return of -5.3% in a specific month, during which the portfolio benchmark yielded a return of -5.5% and the market index returned -2.8%. What is the return of the Smith account attributing to the manager's style?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    smith_account_return = -5.3  # in percentage\n    benchmark_return = -5.5  # in percentage\n    market_index_return = -2.8  # in percentage\n    \n    # Do math calculation to get the answer\n    # The return attributing to the manager's style is calculated by subtracting the benchmark return from the Smith account return\n    manager_style_return = smith_account_return - benchmark_return\n    \n    # return answer\n    return manager_style_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-401",
        "python_solution": "",
        "ground_truth": null,
        "question": "A telecommunications company based in Europe adheres to International Financial Reporting Standards (IFRS) and capitalizes costs of new product development. In 2014, they invested \u20ac25 million into new product development and reported an amortization expense of \u20ac10 million from the previous year's new product development. The cash flow from operations for this company was reported as \u20ac290 million. An analyst is drawing a comparison between this European company and a telecommunications provider in the US, and has chosen to adjust his financial statements to the US GAAP. Considering US GAAP and not taking tax effects into account, what would be the operational cash flow for the European telecommunications provider?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cash_flow_operations = 290000000  # in euros\n    new_product_development_cost = 25000000  # in euros\n    amortization_expense = 10000000  # in euros\n    \n    # Do math calculation to get the answer\n    # Under US GAAP, the new product development cost would be expensed, not capitalized\n    # Therefore, we need to add back the amortization expense and subtract the new product development cost\n    adjusted_cash_flow_operations = initial_cash_flow_operations + amortization_expense - new_product_development_cost\n    \n    # return answer\n    return adjusted_cash_flow_operations\n```"
        ]
    },
    {
        "tables": [
            "| Time to Maturity | Spot Rate |\n|------------------|-----------|\n| 1 year           | 8.0%      |\n| 2 years          | 7.5%      |\n| 3 years          | 7.0%      |\n| 4 years          | 6.5%      |\n| 5 years          | 6.0%      |\n| 6 years          | 5.5%      |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-402",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given spot rates, what is the present value of the bond issued by Valencia Corp. that pays no coupon for the initial two years, and then commences to pay an annual coupon at a 9% rate until the bond matures after six years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rates = [0.08, 0.075, 0.07, 0.065, 0.06, 0.055]\n    coupon_rate = 0.09\n    face_value = 1000  # Assuming the face value of the bond is $1000\n    years_to_coupon = 2\n    total_years = 6\n\n    # Initialize present value\n    present_value = 0\n\n    # Calculate present value of the bond\n    for year in range(years_to_coupon, total_years):\n        # Calculate the coupon payment\n        coupon_payment = face_value * coupon_rate\n        # Discount the coupon payment to present value\n        present_value += coupon_payment / (1 + spot_rates[year]) ** (year + 1)\n\n    # Add the present value of the face value at maturity\n    present_value += face_value / (1 + spot_rates[total_years - 1]) ** total_years\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-403",
        "python_solution": "",
        "ground_truth": null,
        "question": "Utilizing a two-period binomial model, Emily is looking to compute the terminal value of a put option. Given the current price of the underlying asset is $150 and the strike price stands at $120, the extent of an upward move is 1.69 and a downward move is 0.59. The option will only hold a positive value if the price falls below the strike price, otherwise its value will remain zero. How many terminal nodes could potentially offer a positive return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_price = 150\n    strike_price = 120\n    up_move = 1.69\n    down_move = 0.59\n    \n    # Calculate the terminal prices after one up move and one down move\n    up_price = current_price * up_move\n    down_price = current_price * down_move\n    \n    # Calculate the terminal prices after two moves (up-up, up-down, down-up, down-down)\n    up_up_price = up_price * up_move\n    up_down_price = up_price * down_move\n    down_up_price = down_price * up_move\n    down_down_price = down_price * down_move\n    \n    # Initialize the count of terminal nodes with positive return\n    positive_return_nodes = 0\n    \n    # Check if each terminal node offers a positive return\n    if up_down_price < strike_price:\n        positive_return_nodes += 1\n    if down_up_price < strike_price:\n        positive_return_nodes += 1\n    if down_down_price < strike_price:\n        positive_return_nodes += 1\n    \n    # return answer\n    return positive_return_nodes\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-404",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the one-year spot rate r(1) equals 4%, the forward rate for a one-year loan commencing in one year is 6%, and the forward rate for a one-year loan starting in two years is 8%, which one is the three-year spot rate out of the given rates?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r1 = 0.04  # One-year spot rate\n    f1 = 0.06  # Forward rate for a one-year loan commencing in one year\n    f2 = 0.08  # Forward rate for a one-year loan starting in two years\n    \n    # Do math calculation to get the answer\n    # The three-year spot rate can be calculated using the formula for compounded interest\n    # (1 + r3)^3 = (1 + r1) * (1 + f1) * (1 + f2)\n    r3 = ((1 + r1) * (1 + f1) * (1 + f2)) ** (1/3) - 1\n    \n    # return answer\n    return r3\n```"
        ]
    },
    {
        "tables": [
            "|       | Time 0  | Time 1  | Time 2  |\n|-------|---------|---------|---------|\n|       |         |         | 2.7183% |\n|       |         | 2.8853% |         |\n|       | 1.500%  |         | 1.6487% |\n|       |         | 1.7500% |         |\n|       |         |         | 1.0000% |",
            "| Bond | Maturity | Coupon Rate |\n| --- | --- | --- |\n| Bond C | 2 years | 2.5% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-405",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of Bond Z at the upper node at Time 1, when valuing it using the binomial tree shown in Display 1 and the selected data for both bonds given in Display 2?",
        "output": [
            "To solve the problem of finding the value of Bond Z at the upper node at Time 1 using the binomial tree and the given data, we need to follow these steps:\n\n1. Identify the interest rates at Time 1 for the upper node and Time 2 for the upper node.\n2. Calculate the future cash flows of Bond Z at Time 2 for both the upper and middle nodes.\n3. Discount these future cash flows back to Time 1 using the appropriate interest rates.\n4. Sum these discounted values to get the value of Bond Z at the upper node at Time 1.\n\nGiven the table, we can extract the necessary interest rates and use them to perform the calculations. Here is the Python program to achieve this:\n\n```python\ndef solution():\n    # Define variables name and value\n    interest_rate_upper_time1 = 2.8853 / 100  # Convert percentage to decimal\n    interest_rate_upper_time2 = 2.7183 / 100  # Convert percentage to decimal\n    interest_rate_middle_time2 = 1.6487 / 100  # Convert percentage to decimal\n    \n    # Bond Z details (assuming similar to Bond C for illustration)\n    coupon_rate = 2.5 / 100  # Convert percentage to decimal\n    face_value = 1000  # Assuming a face value of $1000 for simplicity\n    \n    # Calculate future cash flows at Time 2 for both upper and middle nodes\n    cash_flow_upper_time2 = face_value + (face_value * coupon_rate)\n    cash_flow_middle_time2 = face_value + (face_value * coupon_rate)\n    \n    # Discount these future cash flows back to Time 1\n    value_upper_time1 = (cash_flow_upper_time2 / (1 + interest_rate_upper_time2)) + (cash_flow_middle_time2 / (1 + interest_rate_middle_time2))\n    \n    # Discount the value at Time 1 back to Time 0 using the interest rate at Time 1\n    value_bond_z_upper_time1 = value_upper_time1 / (1 + interest_rate_upper_"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-406",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert is looking to determine the comprehensive yield of an recent transaction carried out by an asset fund. The fund entered a completely secured long futures agreement in nearby soybean futures agreements at the listed futures cost of 755.0 (US cents/bushel). After three months, the entire futures agreement was shifted when the near-term futures cost was 768.0 and the further-term futures cost was 773.0. Throughout the three-month timeframe between the initiation of the initial long agreement and the adjustment of the contract, the security earned an yearly rate of 0.40%. What is the fund's three-month comprehensive yield on the soybean futures transaction?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_futures_cost = 755.0  # US cents/bushel\n    final_near_term_futures_cost = 768.0  # US cents/bushel\n    final_further_term_futures_cost = 773.0  # US cents/bushel\n    annual_interest_rate = 0.40  # percent per year\n    time_period = 3  # months\n\n    # Convert annual interest rate to three-month rate\n    three_month_interest_rate = (annual_interest_rate / 100) * (time_period / 12)\n\n    # Calculate the price change in the futures agreement\n    price_change = final_near_term_futures_cost - initial_futures_cost\n\n    # Calculate the yield from the price change\n    yield_from_price_change = (price_change / initial_futures_cost) * 100\n\n    # Calculate the total comprehensive yield\n    comprehensive_yield = yield_from_price_change + three_month_interest_rate\n\n    # return answer\n    return comprehensive_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-407",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the delta of a long forward contract on a property with a 10% annum dividend yield and six months to maturity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_yield = 0.10  # 10% annual dividend yield\n    time_to_maturity = 0.5  # Six months to maturity (0.5 years)\n    \n    # Do math calculation to get the answer\n    delta = 1 - dividend_yield * time_to_maturity\n    \n    # return answer\n    return delta\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-408",
        "python_solution": "",
        "ground_truth": null,
        "question": "In compliance with IFRS, ABC Corporation obtained a loan to fund the construction of new manufacturing lanes last year. The associated details are provided below: The loan was taken on: 1/1/2017, The borrowed sum was: $100 million, The yearly interest rate: 12%, The loan period: 4 years. The repayment method includes yearly interest payments only, with the principal due at loan maturity. The new manufacturing lanes will take one year to build, and during this time, ABC Corporation succeeded in generating $2 million by investing the loan funds. What would be the total capitalized interest over the loan period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    borrowed_sum = 100000000  # $100 million\n    yearly_interest_rate = 0.12  # 12%\n    loan_period = 4  # 4 years\n    investment_income = 2000000  # $2 million\n\n    # Do math calculation to get the answer\n    # Calculate the yearly interest payment\n    yearly_interest_payment = borrowed_sum * yearly_interest_rate\n\n    # Calculate the total interest over the loan period\n    total_interest = yearly_interest_payment * loan_period\n\n    # Subtract the investment income from the total interest to get the capitalized interest\n    capitalized_interest = total_interest - investment_income\n\n    # return answer\n    return capitalized_interest\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-409",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Cindy Corp. recently bought a manufacturing device for $60,000 that is anticipated to usher in an annual cash inflow of $25,000 for six years, how much tax will they have to pay in the first year, given that they will depreciate the equipment over six years for accounting purposes and taxation authorities will deem the machine useful for five years, with no salvage value and a 40% tax rate, assuming the straight-line method is used?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 60000\n    annual_cash_inflow = 25000\n    tax_rate = 0.40\n    accounting_depreciation_years = 6\n    tax_depreciation_years = 5\n    \n    # Calculate depreciation per year for accounting and tax purposes\n    accounting_depreciation = initial_cost / accounting_depreciation_years\n    tax_depreciation = initial_cost / tax_depreciation_years\n    \n    # Calculate taxable income for the first year\n    taxable_income = annual_cash_inflow - tax_depreciation\n    \n    # Calculate tax for the first year\n    tax = taxable_income * tax_rate\n    \n    # return answer\n    return tax\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-410",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier acquires a 6% annual payment bond that matures in three years. If the bond's yield-to-maturity stands at 8% and it's currently valued at 94.845806 per 100 of par, what would be the bond's Macaulay duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.06\n    yield_to_maturity = 0.08\n    current_price = 94.845806\n    par_value = 100\n    years_to_maturity = 3\n\n    # Calculate the coupon payment\n    coupon_payment = coupon_rate * par_value\n\n    # Calculate the present value of each cash flow\n    cash_flows = [coupon_payment] * years_to_maturity + [par_value]\n    discount_factors = [(1 + yield_to_maturity) ** -i for i in range(1, years_to_maturity + 2)]\n    present_values = [cash_flows[i] * discount_factors[i] for i in range(years_to_maturity + 1)]\n\n    # Calculate the Macaulay duration\n    weighted_present_values = [present_values[i] * (i + 1) for i in range(years_to_maturity + 1)]\n    macaulay_duration = sum(weighted_present_values) / current_price\n\n    # return answer\n    return macaulay_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-411",
        "python_solution": "",
        "ground_truth": null,
        "question": "In an economy, there are two firms, Firm X and Firm Y. The default rate for Firm X is 10%, and the default rate for Firm Y is 20%. Assuming defaults for the two firms transpire separately, what is the likelihood of both firms defaulting?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    default_rate_X = 0.10\n    default_rate_Y = 0.20\n    \n    # Do math calculation to get the answer\n    likelihood_both_defaulting = default_rate_X * default_rate_Y\n    \n    # return answer\n    return likelihood_both_defaulting\n```"
        ]
    },
    {
        "tables": [
            "|                   | 2018   | 2017   | 2016   |\n|------------------| ------- | ------- | ------- |\n| Revenue          | 56,455  | 45,882  | 27,265  |\n| EBIT              | 4,579   | 3,671   | 2,905   |\n| EBT               | 4,012   | 2,878   | 1,987   |\n| Net Income   | 3,560   | 2,071   | 1,295   |\n| Asset Turnover | 0.56     | 0.52     | 0.49     |\n| Asset/Equity  | 2.55     | 2.86     | 2.98     |",
            "|   | 2018 | 2017 | 2016 |\n|---|---|---|---|\n| **Net income** | 3,560 | 2,071 | 1,295 |\n| **Net cash flow provided by (used in) CFO** | 8,850 | 4,220 | 2,990 |\n| **Net cash flow provided by (used in) CFI** | (9,880) | (3,250) | (4,875) |\n| **Net cash flow provided by (used in) CFF** | (5,120) | 1,050 | (1,910) |\n| **Average net operating assets** | 42,000 | 40,530 | 41,600 |"
        ],
        "topic": "Accounting",
        "question_id": "test-412",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the ratio of operating cash flow before interest and taxes to operating income for XYZ Company for 2018, given the financial data and cash flow data gathered by the analyst, and considering that the CFF involves cash paid for interest of 1260 and the CFO involves taxes of 1850 in 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income_2018 = 3560\n    CFO_2018 = 8850\n    CFI_2018 = -9880\n    CFF_2018 = -5120\n    interest_paid_2018 = 1260\n    taxes_paid_2018 = 1850\n    EBIT_2018 = 4579\n\n    # Calculate operating cash flow before interest and taxes\n    operating_cash_flow_before_interest_and_taxes = CFO_2018 + interest_paid_2018 + taxes_paid_2018\n\n    # Do math calculation to get the answer\n    ratio_of_operating_cash_flow_to_operating_income = operating_cash_flow_before_interest_and_taxes / EBIT_2018\n\n    # return answer\n    return ratio_of_operating_cash_flow_to_operating_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-413",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the yield drops by 200 basis points on a bond that has an effective duration of 11 and a convexity of 120, what is the percentage change in the bond's price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_drop = 200 / 100  # Convert basis points to percentage\n    effective_duration = 11\n    convexity = 120\n    \n    # Do math calculation to get the answer\n    # First, calculate the percentage change due to duration\n    duration_change = -effective_duration * yield_drop\n    \n    # Then, calculate the percentage change due to convexity\n    convexity_change = 0.5 * convexity * (yield_drop ** 2)\n    \n    # Total percentage change in the bond's price\n    total_change = duration_change + convexity_change\n    \n    # return answer\n    return total_change\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-414",
        "python_solution": "",
        "ground_truth": null,
        "question": "Christopher is looking to calculate the foreign-currency return for Portfolio Z. The domestic currency is EUR while the foreign currency is GBP. The data shows that the domestic-currency return is 2% and GBP appreciated by 7% against the EUR. What is the return for the foreign-currency portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    domestic_currency_return = 0.02  # 2% in decimal form\n    foreign_currency_appreciation = 0.07  # 7% in decimal form\n    \n    # Do math calculation to get the answer\n    foreign_currency_return = domestic_currency_return + foreign_currency_appreciation + (domestic_currency_return * foreign_currency_appreciation)\n    \n    # return answer\n    return foreign_currency_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-415",
        "python_solution": "",
        "ground_truth": null,
        "question": "Following a six-month period, the growth portfolio managed by Mia Williams has surpassed its benchmark. Williams posits that her chances of outperforming the benchmark annually stand at 3 to 1. Assuming these odds hold true, what is the likelihood that Williams' portfolio will top the benchmark for the year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    odds_of_outperforming = 3  # Williams' chances of outperforming the benchmark annually are 3 to 1\n    total_odds = 4  # The total odds (3 chances of outperforming + 1 chance of not outperforming)\n    \n    # Do math calculation to get the answer\n    likelihood_of_outperforming = odds_of_outperforming / total_odds\n    \n    # return answer\n    return likelihood_of_outperforming\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-416",
        "python_solution": "",
        "ground_truth": null,
        "question": "A community has an average of 25 with an undetermined standard deviation. We choose 100 individuals from this community to create a sample whose mean is 22.5 and variance is 16. What is the standard error of the sample mean?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_mean = 22.5\n    sample_variance = 16\n    sample_size = 100\n    \n    # Do math calculation to get the answer\n    # Standard deviation of the sample is the square root of the variance\n    sample_std_dev = sample_variance ** 0.5\n    \n    # Standard error of the sample mean is the standard deviation divided by the square root of the sample size\n    standard_error = sample_std_dev / (sample_size ** 0.5)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-417",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the current annualized short-term rate is 3.2% and the annual basis point-volatility is 2.1%, a finance specialist constructs a binomial interest rate tree using the Ho-Lee model with an annualized drift of 80 bps in the first month and 120 bps in the second month using a monthly time step. What is the interest rate in the lowest node after two months?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    short_term_rate = 0.032  # Annualized short-term rate\n    volatility = 0.021  # Annual basis point-volatility\n    drift_first_month = 0.008  # Annualized drift in the first month (80 bps)\n    drift_second_month = 0.012  # Annualized drift in the second month (120 bps)\n    time_step = 1/12  # Monthly time step\n\n    # Convert annualized values to monthly\n    monthly_volatility = volatility * (time_step ** 0.5)\n    monthly_drift_first_month = drift_first_month * time_step\n    monthly_drift_second_month = drift_second_month * time_step\n\n    # Calculate the interest rate in the lowest node after two months\n    # Using the Ho-Lee model: r(t+1) = r(t) + drift + volatility * e\n    # Where e is a standard normal random variable (we consider the lowest node, so e = -1)\n\n    # First month interest rate adjustment\n    first_month_rate = short_term_rate + monthly_drift_first_month - monthly_volatility\n\n    # Second month interest rate adjustment from the lowest node of the first month\n    second_month_rate = first_month_rate + monthly_drift_second_month - monthly_volatility\n\n    # return answer\n    return second_month_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-418",
        "python_solution": "",
        "ground_truth": null,
        "question": "For a normally distributed random variable, what is the likelihood that the random variable exceeds the mean by more than three standard deviations\uff08F\uff083\uff09=0.9987\uff09?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    F_3 = 0.9987  # Cumulative distribution function value at 3 standard deviations\n    \n    # Do math calculation to get the answer\n    # The probability that the random variable exceeds the mean by more than three standard deviations\n    # is 1 - F(3)\n    probability = 1 - F_3\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-419",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the beginning of 2011, the spot exchange rate between the UK pound (GBP) and the New Zealand dollar (NZD) was pinned at 2.0979. The GBP interest rates, calculated on a 360-day year basis, were established as 1.6025% for the UK pound and 3.2875% for the NZD. What would the 180-day forward points (multiplied by four decimal points) in NZD/GBP look like?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 2.0979  # Spot exchange rate GBP/NZD\n    gbp_interest_rate = 0.016025  # GBP interest rate\n    nzd_interest_rate = 0.032875  # NZD interest rate\n    days = 180  # 180-day forward\n    days_in_year = 360  # 360-day year basis\n\n    # Do math calculation to get the answer\n    forward_points = (spot_rate * (nzd_interest_rate - gbp_interest_rate) * days) / days_in_year\n    forward_points_rounded = round(forward_points, 4)  # Multiply by four decimal points\n\n    # return answer\n    return forward_points_rounded\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-420",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the consistent sum that, when deposited every quarter, will increase to \u00a325,000 in 10 years at a yearly interest rate of 6% weighted quarterly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    future_value = 25000\n    annual_interest_rate = 0.06\n    years = 10\n    quarters = years * 4\n    quarterly_interest_rate = annual_interest_rate / 4\n    \n    # Do math calculation to get the answer\n    # Using the formula for the future value of an annuity due\n    # FV = P * [(1 + r)^n - 1] / r * (1 + r)\n    # Solving for P (the consistent sum deposited every quarter)\n    numerator = future_value * quarterly_interest_rate\n    denominator = (1 + quarterly_interest_rate)**quarters - 1\n    consistent_sum = numerator / (denominator * (1 + quarterly_interest_rate))\n    \n    # return answer\n    return consistent_sum\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-421",
        "python_solution": "",
        "ground_truth": null,
        "question": "In their next analysis, Tseng and Collin study a possible investment in the leveraged buyout of Peterson Enterprises. Specifically, they are considering buying all the preference shares and 90% of the common equity in the LBO. The specifics of the LBO are as follows: An initial investment of $10 million is required. The financing includes $6 million in debt, $3.6 million in preference shares with a 15% annual return paid out at exit, and $0.4 million in common equity. The projected exit value in six years is $15 million, with an expected decline in debt of $2.8 million in the six years before exit. What would be the multiple of anticipated proceeds at the time of exiting in relation to the funds invested for JRR\u2019s Peterson LBO investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 10000000\n    debt = 6000000\n    preference_shares = 3600000\n    common_equity = 400000\n    exit_value = 15000000\n    debt_decline = 2800000\n    preference_return_rate = 0.15\n\n    # Calculate the remaining debt at exit\n    remaining_debt = debt - debt_decline\n\n    # Calculate the total return from preference shares\n    preference_return = preference_shares * (1 + preference_return_rate)\n\n    # Calculate the total proceeds at exit\n    total_proceeds = exit_value - remaining_debt - preference_return\n\n    # Calculate the multiple of anticipated proceeds\n    multiple = total_proceeds / initial_investment\n\n    # return answer\n    return multiple\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-422",
        "python_solution": "",
        "ground_truth": null,
        "question": "A trader quotes the BRL/MXN spot rate at 0.1378. The 6-month forward rate is 0.14193. What are the 6-month forward points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 0.1378\n    forward_rate = 0.14193\n    \n    # Do math calculation to get the answer\n    forward_points = forward_rate - spot_rate\n    \n    # return answer\n    return forward_points\n```"
        ]
    },
    {
        "tables": [
            "|        | 2009 | 2008 |\n|--------|------|------|\n| COGS   | 1200 | 1430 |\n| LIFO Reserve | 800  | 820  |"
        ],
        "topic": "Accounting",
        "question_id": "test-423",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financier gathered inventory information from a business and the business utilized the FIFO technique for recognition, what would be the cost of goods sold?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    COGS_LIFO_2009 = 1200\n    LIFO_Reserve_2009 = 800\n    \n    # Do math calculation to get the answer\n    COGS_FIFO_2009 = COGS_LIFO_2009 - LIFO_Reserve_2009\n    \n    # return answer\n    return COGS_FIFO_2009\n```"
        ]
    },
    {
        "tables": [
            "|    Face value    |  \u00a350 million  |\n|------------------|---------------|\n| Coupon rate, paid annually |  4%  |\n|  Maturity  date  | December 31,2019 (10 years) |\n|  Issue  price  | 92.28|"
        ],
        "topic": "Accounting",
        "question_id": "test-424",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a business adopts IFRS and its bonds have a market interest rate of 5 percent as of January 1, 2010, what might be the interest expense (in millions) for 2010 based on those bond characteristics?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 50000000  # in pounds\n    coupon_rate = 0.04  # 4% paid annually\n    issue_price = 92.28  # in percentage of face value\n    market_interest_rate = 0.05  # 5% as of January 1, 2010\n    \n    # Calculate the effective interest expense for 2010\n    # The interest expense is based on the effective interest rate method, which considers the amortization of the bond discount\n    \n    # Calculate the bond discount\n    bond_discount = face_value * (1 - issue_price / 100)\n    \n    # Calculate the carrying amount of the bond at the beginning of 2010\n    carrying_amount = face_value - bond_discount\n    \n    # Calculate the interest expense for 2010\n    interest_expense = carrying_amount * market_interest_rate\n    \n    # Return the interest expense in millions\n    return interest_expense / 1000000\n\n# Example usage:\nprint(solution())\n```\n\nThis Python program calculates the interest expense for 2010 based on the bond characteristics provided, using the effective interest rate method under IFRS. The result is returned in millions of pounds."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-425",
        "python_solution": "",
        "ground_truth": null,
        "question": "If American and Spanish bonds have return standard deviations of 0.64 and 0.56, respectively, and the correlation between these two bonds is 0.24, what is the return covariance?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    std_dev_american = 0.64\n    std_dev_spanish = 0.56\n    correlation = 0.24\n    \n    # Do math calculation to get the answer\n    covariance = std_dev_american * std_dev_spanish * correlation\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-426",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the market price for a zero-coupon bond that matures in 18 years and has a maturity value of $1,000, if it's discounted at an annual interest rate of 12% with compounding happening twice a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    maturity_value = 1000\n    annual_interest_rate = 0.12\n    compounding_frequency = 2  # twice a year\n    years_to_maturity = 18\n    \n    # Do math calculation to get the answer\n    # Calculate the effective interest rate per compounding period\n    effective_rate = annual_interest_rate / compounding_frequency\n    \n    # Calculate the total number of compounding periods\n    total_periods = years_to_maturity * compounding_frequency\n    \n    # Calculate the market price of the zero-coupon bond using the formula:\n    # Market Price = Maturity Value / (1 + Effective Rate)^Total Periods\n    market_price = maturity_value / (1 + effective_rate) ** total_periods\n    \n    # return answer\n    return market_price\n```"
        ]
    },
    {
        "tables": [
            "| Accounting profit (earnings before taxes) | $250,000  |\n|-----------------------------------------|-------|\n| Taxable income                           | $215,000  |\n| Tax rate                                   | 30%   |\n| Income taxes paid in year                | $61,200  |\n| Deferred tax liability, start of year | $82,400  |\n| Deferred tax liability, end of year    | $90,650  |"
        ],
        "topic": "Accounting",
        "question_id": "test-427",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the available information, what is the reported income tax expense on this year's earnings statement for a corporation during its current financial year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    income_taxes_paid = 61200\n    deferred_tax_liability_start = 82400\n    deferred_tax_liability_end = 90650\n    \n    # Do math calculation to get the answer\n    # Income tax expense is calculated as follows:\n    # Income Tax Expense = Income Taxes Paid + Change in Deferred Tax Liability\n    change_in_deferred_tax_liability = deferred_tax_liability_end - deferred_tax_liability_start\n    income_tax_expense = income_taxes_paid + change_in_deferred_tax_liability\n    \n    # return answer\n    return income_tax_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-428",
        "python_solution": "",
        "ground_truth": null,
        "question": "The asset has a 9% rate of return and the debt costs 3%. A buyer purchased the asset with equity totaling 15 and a debt of 30. What is the equity return rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_return_rate = 0.09\n    debt_cost_rate = 0.03\n    equity = 15\n    debt = 30\n    \n    # Do math calculation to get the answer\n    total_investment = equity + debt\n    total_return = total_investment * asset_return_rate\n    debt_cost = debt * debt_cost_rate\n    equity_return = total_return - debt_cost\n    equity_return_rate = equity_return / equity\n    \n    # return answer\n    return equity_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-429",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine a piece of art is made and bought in 2010 for \u00a35,000. The costs for creating this piece of art came to \u00a32,000. Based on the sum-of-value-added technique for GDP calculation, what is the value added by the final process of making the artwork?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    final_sale_price = 5000\n    creation_costs = 2000\n    \n    # Do math calculation to get the answer\n    value_added = final_sale_price - creation_costs\n    \n    # return answer\n    return value_added\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-430",
        "python_solution": "",
        "ground_truth": null,
        "question": "If ten portfolio managers are in the running for the first, second, and third top portfolio manager award of 2012, determined by the individual assessments of a team of investment analysts, how many possible combinations can each analyst come up with for their rankings?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_managers = 10\n    num_positions = 3\n    \n    # Do math calculation to get the answer\n    # The number of possible combinations for the first, second, and third positions is a permutation of 10 managers taken 3 at a time\n    from math import perm\n    answer = perm(num_managers, num_positions)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Time-to-Maturity | Spot Rates |\n|----------------|-----------|\n| 1-year         | 7%        |\n| 2-year         | 8%        |\n| 3-year         | 9%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-431",
        "python_solution": "",
        "ground_truth": null,
        "question": "The maturity period of Bond A is 3 years, with annual interest payments and a coupon rate of 6%. Given the spot rates outlined below, what would be the price of Bond A?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.06  # 6% coupon rate\n    face_value = 1000  # Assuming a face value of $1000 for simplicity\n    spot_rates = [0.07, 0.08, 0.09]  # Spot rates for 1-year, 2-year, and 3-year maturities\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of each cash flow\n    pv_coupon1 = (coupon_rate * face_value) / (1 + spot_rates[0])\n    pv_coupon2 = (coupon_rate * face_value) / ((1 + spot_rates[1]) ** 2)\n    pv_coupon3 = (coupon_rate * face_value + face_value) / ((1 + spot_rates[2]) ** 3)\n    \n    # Sum the present values to get the bond price\n    bond_price = pv_coupon1 + pv_coupon2 + pv_coupon3\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-432",
        "python_solution": "",
        "ground_truth": null,
        "question": "Corporation X is a crude oil provider. As a researcher, you are tasked with assessing whether Corporation X will undergo new growth by predicting if Corporation X's biggest client, Corporation Y, will enhance their order quantity. You predict that the likelihood of Corporation Y augmenting the order quantity is 30%. If Corporation Y does amplify the order quantity, Corporation X will have a new growth probability of 80%. However, if Corporation Y does not augment the order quantity, then Corporation X will only have a new growth probability of 10%. Later on, you found out that crude oil provider Corporation X has initiated a new growth. Given this scenario, what is the probability that you estimate Corporation Y to enhance the order quantity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_y_enhances = 0.30  # Probability that Corporation Y enhances the order quantity\n    prob_growth_if_enhanced = 0.80  # Probability of new growth if Y enhances the order quantity\n    prob_growth_if_not_enhanced = 0.10  # Probability of new growth if Y does not enhance the order quantity\n    \n    # Do math calculation to get the answer\n    # Using Bayes' theorem to find the probability that Y enhanced given that X has new growth\n    # P(Y|G) = (P(G|Y) * P(Y)) / (P(G|Y) * P(Y) + P(G|~Y) * P(~Y))\n    prob_y_not_enhances = 1 - prob_y_enhances\n    prob_growth = (prob_growth_if_enhanced * prob_y_enhances) + (prob_growth_if_not_enhanced * prob_y_not_enhances)\n    prob_y_given_growth = (prob_growth_if_enhanced * prob_y_enhances) / prob_growth\n    \n    # return answer\n    return prob_y_given_growth\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n|-----|-----|-----|-----|-----|-----|\n| 20% | 4%  | -5% | 12% | 3%  | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-433",
        "python_solution": "",
        "ground_truth": null,
        "question": "The table underneath indicates the monthly stock returns for Ivy Corp. Based on the information provided in this table, can you compute the mode of the returns for Ivy Corp.?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [20, 4, -5, 12, 3, 12]\n    \n    # Do math calculation to get the answer\n    # The mode is the value that appears most frequently in the list\n    from collections import Counter\n    count = Counter(returns)\n    mode = count.most_common(1)[0][0]\n    \n    # return answer\n    return mode\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-434",
        "python_solution": "",
        "ground_truth": null,
        "question": "There are 6000 software developers in the population which is expected to have a normal distribution. A sample of 100 is taken from this population. Given a z-statistic, the 95% confidence interval of the sample mean for the yearly salary is 32.5 (in thousands) dollars, fluctuating between 22 (in thousands) dollars and 43 (in thousands) dollars. Compute the standard error of the mean yearly salary:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    confidence_interval = 43 - 22  # in thousands of dollars\n    z_statistic = 1.96  # z-value for 95% confidence interval\n    \n    # Do math calculation to get the answer\n    standard_error = confidence_interval / (2 * z_statistic)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-435",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert has been tasked with identifying potential arbitrage openings in the Treasury bond market by contrasting the cash flows of selected bonds with mixtures of other bonds. If a 1-year zero-coupon bond is valued at USD 98, and a 1-year bond which pays an 8% coupon semi-annually costs USD 103, utilizing a replication methodology, what should be the cost of a 1-year Treasury bond that offers a 6% semi-annual coupon?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_zero_coupon = 98\n    price_8_percent_bond = 103\n    coupon_rate_8_percent = 0.08\n    coupon_rate_6_percent = 0.06\n    periods_per_year = 2\n\n    # Calculate the yield of the 8% coupon bond\n    # Since the 8% bond pays semi-annually, we need to discount each cash flow\n    # The first cash flow is 4 (8% / 2) and the second cash flow is 104 (principal + 4)\n    # We solve for the semi-annual yield (y) using the price of the 8% bond\n    # 103 = 4 / (1 + y/2) + 104 / (1 + y/2)^2\n    # Using a simplified approach for this example, we assume the yield is close to the coupon rate\n    semi_annual_yield = coupon_rate_8_percent / periods_per_year\n\n    # Calculate the price of the 6% coupon bond using the same yield\n    # The first cash flow is 3 (6% / 2) and the second cash flow is 103 (principal + 3)\n    price_6_percent_bond = (3 / (1 + semi_annual_yield)) + (103 / (1 + semi_annual_yield)**2)\n\n    # return answer\n    return price_6_percent_bond\n```\n\nThis Python program calculates the cost of a 1-year Treasury bond that offers a 6% semi-annual coupon by replicating the methodology used for the 8% coupon bond, assuming the yield is close to the coupon rate for simplification purposes."
        ]
    },
    {
        "tables": [
            "| Items               | Times |\n|---------------------|-------|\n| Receivable turnover | 5     |\n| Inventory turnover  | 4     |\n| Payable turnover    | 10    |"
        ],
        "topic": "Accounting",
        "question_id": "test-436",
        "python_solution": "",
        "ground_truth": null,
        "question": "Can you compute the cash conversion cycle for the firm?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    receivable_turnover = 5\n    inventory_turnover = 4\n    payable_turnover = 10\n    \n    # Do math calculation to get the answer\n    days_receivable = 365 / receivable_turnover\n    days_inventory = 365 / inventory_turnover\n    days_payable = 365 / payable_turnover\n    \n    cash_conversion_cycle = days_inventory + days_receivable - days_payable\n    \n    # return answer\n    return cash_conversion_cycle\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $4,000,000 |\n| --- | --- |\n| Cost of goods sold | $3,000,000 |\n| Other operating expenses | $500,000 |\n| Interest expense | $100,000 |\n| Tax expense | $120,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-437",
        "python_solution": "",
        "ground_truth": null,
        "question": "The manufacturing company, Denali Limited, provided the following income statement data: What is the equivalent of Denali's gross profit?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 4000000\n    cost_of_goods_sold = 3000000\n    \n    # Do math calculation to get the answer\n    gross_profit = revenue - cost_of_goods_sold\n    \n    # return answer\n    return gross_profit\n```"
        ]
    },
    {
        "tables": [
            "|     | Portfolio return | Benchmark return | Portfolio weight | Benchmark weight |\n|-----|------------------|------------------|------------------|------------------|\n| Domestic | 25% | 15% | 50% | 35% |\n| Bond 9% | - | 5% | 30% | 35% |\n| International 15% | - | 18% | 20% | 30% |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-438",
        "python_solution": "",
        "ground_truth": null,
        "question": "Can you calculate the value added from asset allocation according to the given table?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    domestic_return = 0.25\n    domestic_benchmark_return = 0.15\n    domestic_weight = 0.50\n    domestic_benchmark_weight = 0.35\n\n    bond_benchmark_return = 0.05\n    bond_weight = 0.30\n    bond_benchmark_weight = 0.35\n\n    international_return = 0.15\n    international_benchmark_return = 0.18\n    international_weight = 0.20\n    international_benchmark_weight = 0.30\n\n    # Do math calculation to get the answer\n    value_added_domestic = (domestic_return - domestic_benchmark_return) * domestic_weight\n    value_added_bond = (0 - bond_benchmark_return) * bond_weight\n    value_added_international = (international_return - international_benchmark_return) * international_weight\n\n    total_value_added = value_added_domestic + value_added_bond + value_added_international\n\n    # return answer\n    return total_value_added\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-439",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering that the December 2010 annual report of Adidas AG indicates Depreciation and amortization: \u20ac249 million, Total assets: \u20ac10,618 million, Total debt: \u20ac1,613 million, Shareholders\u2019 equity: \u20ac4,616 million, what is the company's debt/capital ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt = 1613  # in million euros\n    shareholders_equity = 4616  # in million euros\n    \n    # Do math calculation to get the answer\n    total_capital = total_debt + shareholders_equity\n    debt_capital_ratio = total_debt / total_capital\n    \n    # return answer\n    return debt_capital_ratio\n```"
        ]
    },
    {
        "tables": [
            "|    |    |\n|---|---|\n| Net income | 45.8 |\n| Depreciation | 18.2 |\n| Loss on sale of equipment | 1.6 |\n| Decrease in accounts receivable | 4.2 |\n| Increase in inventories | 5.4 |\n| Increase in accounts payable | 4.5 |\n| Capital expenditures | 7.3 |\n| Proceeds from sale of stock | 8.5 |"
        ],
        "topic": "Accounting",
        "question_id": "test-440",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's take U.S. GAAP into account unless specified otherwise. What is the annual free cash flow to equity for the business, taking into account that it does not pay out any dividends, carries no debt, and this information was collected over one year by a market researcher?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 45.8\n    depreciation = 18.2\n    loss_on_sale_of_equipment = 1.6\n    decrease_in_accounts_receivable = 4.2\n    increase_in_inventories = 5.4\n    increase_in_accounts_payable = 4.5\n    capital_expenditures = 7.3\n    proceeds_from_sale_of_stock = 8.5\n    \n    # Do math calculation to get the answer\n    # Free Cash Flow to Equity (FCFE) = Net Income + Depreciation - Capital Expenditures + (Decrease in Non-Cash Working Capital) - (Increase in Non-Cash Working Capital) + Proceeds from Sale of Stock\n    # Non-Cash Working Capital Changes = Decrease in Accounts Receivable - Increase in Inventories + Increase in Accounts Payable\n    \n    non_cash_working_capital_changes = decrease_in_accounts_receivable - increase_in_inventories + increase_in_accounts_payable\n    fcfe = net_income + depreciation + loss_on_sale_of_equipment - capital_expenditures + non_cash_working_capital_changes + proceeds_from_sale_of_stock\n    \n    # return answer\n    return fcfe\n```"
        ]
    },
    {
        "tables": [
            "|                                   |                 |\n|-----------------------------------|-----------------|\n| Oakstar Timber Balance Sheet (Year Ended 31 December 2008) |        |\n|        **Assets**                    |                 |\n| Cash                                | $500,000        |\n| Inventory                           | $25,000         |\n| Accounts receivable                 | $50,000         |\n| Plant and equipment (cost less depreciation) | $750,000      |\n| Land                                | $10,000,000     |\n| **Total assets**                    | $11,325,000     |\n|       **Liabilities and Equity**   |                 |\n| Accounts payables                   | $75,000         |\n| Long-term bank loan                 | $1,500,000      |\n| Common stock                        | $9,750,000      |\n| **Total liabilities and equity**   | $11,325,000     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-441",
        "python_solution": "",
        "ground_truth": null,
        "question": "The primary asset of the company Cedarstar consists of 10,000 hectares of timberland in western Canada, containing both new and mature Douglas fir trees. As of December 31, 2008, Cedarstar's financial details are as follows with additional data collected by Johnson regarding the recent sales of similar timberland properties in western Canada. For pieces of land possessing the same characteristics as Cedarstar, the going rate is $8,750 per hectare. Using these details and an asset-based approach, what is the net worth (after deducting any liabilities) of Cedarstar?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_land_value = 10000 * 8750  # 10,000 hectares * $8,750 per hectare\n    liabilities = 75000 + 1500000  # Accounts payables + Long-term bank loan\n    \n    # Do math calculation to get the answer\n    net_worth = total_land_value - liabilities\n    \n    # return answer\n    return net_worth\n```"
        ]
    },
    {
        "tables": [
            "| 2012 | 2013 | 2014 | 2015 | 2016 | 2017 |\n|------|------|------|------|------|------|\n| 10%  | 15%  | -8%  | 12%  | -6%  | 8%   |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-442",
        "python_solution": "",
        "ground_truth": null,
        "question": "Calculate the arithmetic mean return for the stock of Boulder Corporation, according to the given table showcasing their annual stock returns.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [10, 15, -8, 12, -6, 8]\n    \n    # Do math calculation to get the answer\n    arithmetic_mean_return = sum(returns) / len(returns)\n    \n    # return answer\n    return arithmetic_mean_return\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Par Value Owned | Market Value Owned | Duration |\n|------|-----------------|-------------------|--------- |\n| A    | $8,000,000     | $12,000,000       | 3       |\n| B    | $8,000,000     | $6,000,000        | 7       |\n| C    | $4,000,000     | $6,000,000        | 6       |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-443",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio manager possesses the following three bonds, all of which are free of options and carry the specified durations. What is the duration of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_A_par_value = 8000000\n    bond_A_market_value = 12000000\n    bond_A_duration = 3\n    \n    bond_B_par_value = 8000000\n    bond_B_market_value = 6000000\n    bond_B_duration = 7\n    \n    bond_C_par_value = 4000000\n    bond_C_market_value = 6000000\n    bond_C_duration = 6\n    \n    # Calculate the weighted average duration\n    total_market_value = bond_A_market_value + bond_B_market_value + bond_C_market_value\n    \n    weighted_duration_A = (bond_A_market_value / total_market_value) * bond_A_duration\n    weighted_duration_B = (bond_B_market_value / total_market_value) * bond_B_duration\n    weighted_duration_C = (bond_C_market_value / total_market_value) * bond_C_duration\n    \n    portfolio_duration = weighted_duration_A + weighted_duration_B + weighted_duration_C\n    \n    # return answer\n    return portfolio_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-444",
        "python_solution": "",
        "ground_truth": null,
        "question": "Three years ago, Hamilton Insurance Company launched a fixed-rate perpetual preferred stock and it was privately distributed among institutional investors. The stock was dispensed at $25 per share with a dividend of $1.75. Today, if the firm were to issue preferred stock, the yield would be 6.5 percent. So, what is the present value of the stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 25\n    dividend = 1.75\n    current_yield = 0.065\n    \n    # Do math calculation to get the answer\n    present_value = dividend / current_yield\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "|  | Maturity (Years) |  |  |  |\n|---|---|---|---|---|\n|  | 1 | 2 | 3 | 4 |\n| Government spot rate | 2.25% | 2.70% | 3.30% | 4.05% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-445",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer purchases a lesser-quality, two-year corporate bond that has a coupon rate of 4.15%. The exhibit underneath displays the Government Spot Rates. The Z-Spreads for this corporate bond is at 0.65%. The bond is possibly trading at a price of:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 4.15 / 100  # Convert percentage to decimal\n    z_spread = 0.65 / 100  # Convert percentage to decimal\n    spot_rates = [2.25 / 100, 2.70 / 100, 3.30 / 100, 4.05 / 100]  # Convert percentages to decimals\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of each cash flow\n    pv_cash_flows = []\n    for i in range(1, 3):  # For years 1 and 2\n        cash_flow = coupon_rate * 100  # Coupon payment\n        if i == 2:\n            cash_flow += 100  # Add principal repayment\n        discount_rate = spot_rates[i-1] + z_spread\n        pv_cash_flow = cash_flow / (1 + discount_rate) ** i\n        pv_cash_flows.append(pv_cash_flow)\n    \n    # Sum the present values to get the bond price\n    bond_price = sum(pv_cash_flows)\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-446",
        "python_solution": "",
        "ground_truth": null,
        "question": "The formula: Qod = 3 - 0.05P0 + 0.009I - 0.16Pt represents a person's demand for onions: with Qod being the demanded quantity of onions, P0 represents the cost per pound of onions, I symbolizes the household income, and Pt indicates the price per pound of tomatoes. Considering a case where the cost of onions is $1.25 per pound, the income of the household is $2,500, and tomatoes are priced at $3.75 per pound, what would be the cross-price elasticity of demand concerning the price of tomatoes for this person's onion demand?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P0 = 1.25  # cost per pound of onions\n    I = 2500  # household income\n    Pt = 3.75  # price per pound of tomatoes\n    \n    # Calculate the demanded quantity of onions using the given formula\n    Qod = 3 - 0.05 * P0 + 0.009 * I - 0.16 * Pt\n    \n    # Calculate the change in quantity demanded due to a change in the price of tomatoes\n    dQod_dPt = -0.16  # partial derivative of Qod with respect to Pt\n    \n    # Calculate the cross-price elasticity of demand\n    cross_price_elasticity = (dQod_dPt * Pt) / Qod\n    \n    # return answer\n    return cross_price_elasticity\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-447",
        "python_solution": "",
        "ground_truth": null,
        "question": "After deciding to sell off its non-core assets, experts forecast that the standard deviation of returns for Dell Inc. will increase to 30% and its correlation with the market portfolio will stay the same at 0.8. The risk-free rate and the market risk premium are predicted to stay at 6% and 8% respectively. However, the market portfolio's standard deviation of returns is anticipated to drop to 15%. What is the projected return for the company after the restructuring?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.06\n    market_risk_premium = 0.08\n    beta_dell = 0.8 * (0.30 / 0.15)  # Beta = correlation * (std_dev_stock / std_dev_market)\n    \n    # Do math calculation to get the answer\n    projected_return = risk_free_rate + beta_dell * market_risk_premium\n    \n    # return answer\n    return projected_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-448",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the spot rate for 4 years is at 5% and for 2 years it's at 3.7%, what would be the forward rate for 2 years starting from 2 years in the future?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_4_years = 0.05  # 5%\n    spot_rate_2_years = 0.037  # 3.7%\n    \n    # Do math calculation to get the answer\n    # Formula for forward rate: (1 + spot_rate_long)^long_period / (1 + spot_rate_short)^short_period - 1\n    forward_rate = ((1 + spot_rate_4_years)**4 / (1 + spot_rate_2_years)**2)**(1/2) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [
            "|                       | Year 1 | Year 2 | Year 3 |\n|-----------------------|--------|--------|--------|\n| Bt-1                  | $28.25 |        |        |\n| EPS                   | $6.50  | $7.82  | $6.93  |\n| Dividends per share   | $1.75  | $2.63  | $1.97  |\n| Long-term ROE         | 14.5%  | 14.5%  | 14.5%  |\n| Constant long-term growth | 5.5%   | 5.5%   | 5.5%   |\n| Cost of equity        | 10.9%  | 10.9%  | 10.9%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-449",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is examining Company N utilizing the multistage residual income model. He has projected that the residual income per share will remain unchanged from year 3 onwards forever and the short-term ROE exceeds the long-term ROE. He has also calculated the profits and dividends for the upcoming three years as shown in the table below. What is the intrinsic value of Company N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Bt_1 = 28.25  # Book value per share at the end of Year 1\n    EPS_year1 = 6.50\n    EPS_year2 = 7.82\n    EPS_year3 = 6.93\n    DPS_year1 = 1.75\n    DPS_year2 = 2.63\n    DPS_year3 = 1.97\n    long_term_ROE = 0.145\n    constant_growth = 0.055\n    cost_of_equity = 0.109\n\n    # Calculate the book value per share at the end of each year\n    Bt_2 = Bt_1 + EPS_year1 - DPS_year1\n    Bt_3 = Bt_2 + EPS_year2 - DPS_year2\n    Bt_4 = Bt_3 + EPS_year3 - DPS_year3\n\n    # Calculate residual income for each year\n    RI_year1 = EPS_year1 - (cost_of_equity * Bt_1)\n    RI_year2 = EPS_year2 - (cost_of_equity * Bt_2)\n    RI_year3 = EPS_year3 - (cost_of_equity * Bt_3)\n\n    # Calculate the present value of residual income for each year\n    PV_RI_year1 = RI_year1 / (1 + cost_of_equity)\n    PV_RI_year2 = RI_year2 / (1 + cost_of_equity)**2\n    PV_RI_year3 = RI_year3 / (1 + cost_of_equity)**3\n\n    # Calculate the terminal value of residual income at the end of Year 3\n    terminal_value = RI_year3 / (cost_of_equity - constant_growth)\n\n    # Calculate the present value of the terminal value\n    PV_terminal_value = terminal_value / (1 + cost_of_equity)**3\n\n    # Calculate the intrinsic value of the company\n    intrinsic_value = Bt_1 + PV_RI_"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-450",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of the year, a large corporation acquired all 600,000 shares of a smaller corporation, priced at $25 per share. The smaller corporation had recognized net assets worth $6.5 million prior to being acquired. The larger corporation determined that the smaller corporation's fair value had appreciated by $3 million. What should be the 'goodwill' amount reported by the larger corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_acquired = 600000\n    price_per_share = 25\n    net_assets_value = 6500000\n    fair_value_appreciation = 3000000\n    \n    # Do math calculation to get the answer\n    total_purchase_price = shares_acquired * price_per_share\n    fair_value_of_net_assets = net_assets_value + fair_value_appreciation\n    goodwill = total_purchase_price - fair_value_of_net_assets\n    \n    # return answer\n    return goodwill\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-451",
        "python_solution": "",
        "ground_truth": null,
        "question": "Analyst Johnson is employing a GARCH(1,1) model to calculate daily variance on daily returns(rt) : ht:=\u03b10 + \u03b11r2t-1 + \u03b2ht-1 while \u03b10 = 0.000003 \u03b11 = 0.03 \u03b2 = 0.94. Can you provide the estimate for the long-run annualized volatility (taking into consideration that volatility increases by the square root of time and there are 252 trading days in a year)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    alpha0 = 0.000003\n    alpha1 = 0.03\n    beta = 0.94\n    trading_days = 252\n    \n    # Calculate the long-run variance\n    long_run_variance = alpha0 / (1 - alpha1 - beta)\n    \n    # Calculate the long-run daily volatility\n    long_run_daily_volatility = long_run_variance ** 0.5\n    \n    # Calculate the long-run annualized volatility\n    long_run_annualized_volatility = long_run_daily_volatility * (trading_days ** 0.5)\n    \n    # return answer\n    return long_run_annualized_volatility\n```"
        ]
    },
    {
        "tables": [
            "| Year | Investment | Return |\n|------|------------|--------|\n| 1    | $500       | 12%    |\n| 2    | $600       | 5%     |\n| 3    | $1000      | 1%     |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-452",
        "python_solution": "",
        "ground_truth": null,
        "question": "The arithmetic mean annual return for a fund managed by John for year 1,2,3 will be:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [12, 5, 1]  # List of returns in percentage for each year\n    \n    # Do math calculation to get the answer\n    arithmetic_mean_return = sum(returns) / len(returns)\n    \n    # return answer\n    return arithmetic_mean_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-453",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data that Roberts Inc. (RI) announced an accounts receivable of $66 million at the end of its second fiscal quarter, and $55 million at the conclusion of its third fiscal quarter, with revenues reported to be $72 million during that quarter. What is the amount of cash RI received from clients during the third fiscal quarter?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    accounts_receivable_end_q2 = 66000000\n    accounts_receivable_end_q3 = 55000000\n    revenue_q3 = 72000000\n    \n    # Do math calculation to get the answer\n    # The change in accounts receivable is the difference between the end of Q2 and Q3\n    change_in_accounts_receivable = accounts_receivable_end_q2 - accounts_receivable_end_q3\n    \n    # Cash received from clients is the revenue during Q3 minus the change in accounts receivable\n    cash_received = revenue_q3 - change_in_accounts_receivable\n    \n    # return answer\n    return cash_received\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-454",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financial institution has total interest costs of 65 million, total raised funds of 1000 million with 750 million of it being earning assets, and other operating costs of 10 million, and the current tax rate is 35%, taking into account that shareholders have invested 100 million with an expected return rate of 12%, what is the weighted average total cost of capital according to the historical average cost methodology?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    interest_costs = 65e6  # 65 million\n    total_raised_funds = 1000e6  # 1000 million\n    earning_assets = 750e6  # 750 million\n    other_operating_costs = 10e6  # 10 million\n    tax_rate = 0.35  # 35%\n    shareholder_investment = 100e6  # 100 million\n    expected_return_rate = 0.12  # 12%\n\n    # Calculate the cost of debt after tax\n    cost_of_debt = interest_costs / earning_assets * (1 - tax_rate)\n\n    # Calculate the cost of equity\n    cost_of_equity = expected_return_rate\n\n    # Calculate the weights of debt and equity\n    weight_of_debt = earning_assets / total_raised_funds\n    weight_of_equity = shareholder_investment / total_raised_funds\n\n    # Calculate the weighted average cost of capital (WACC)\n    WACC = (cost_of_debt * weight_of_debt) + (cost_of_equity * weight_of_equity)\n\n    # return answer\n    return WACC\n```"
        ]
    },
    {
        "tables": [
            "|                                                 |         |\n|-------------------------------------------------|---------|\n| Exhibit 3. Selected Financial Data for Topmaker, Inc. ,Estimated Year Ending 31 December 2017 ($ millions) |         |\n| Carrying value of cash-generating unit/reporting unit  | 15,200 |\n| Recoverable amount of cash-generating unit/reporting unit  | 14,900 |\n| Fair value of reporting unit       | 14,800 |\n| Identifiable net assets            | 14,400 |\n| Goodwill                           | 520    |"
        ],
        "topic": "Accounting",
        "question_id": "test-455",
        "python_solution": "",
        "ground_truth": null,
        "question": "Thomas Brooks, a research analyst in a global securities firm, is crafting a research summary on Megacreator, Inc., a company that adheres to IFRS and is publicly traded. On 1 January 2016, Megacreator bought a 15% stake in Brewster Co., holding voting rights, for $300 million. Megacreator maintains a seat at the Brewster board of directors table and has a say in policy decisions. Brooks is anxious about the potential impact of goodwill impairment due to anticipated industry shifts set to take place late in 2017. He computes the impairment loss using the predicted consolidated balance sheet data depicted in Exhibit 3, assuming that Megacreator's cash-generating unit and reporting unit are identical. According to Exhibit 3, the IFRS impairment loss for Megacreator is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_value = 15200  # in millions\n    recoverable_amount = 14900  # in millions\n    \n    # Do math calculation to get the answer\n    # The impairment loss is calculated as the difference between the carrying value and the recoverable amount\n    impairment_loss = carrying_value - recoverable_amount\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-456",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the total revenue generated by the hedge fund company, Bearing, this year, considering it had $288 million in assets under management (AUM) at the end of the previous year, a 2% management fee (based on year-end AUM), 20% incentive fee calculated after the management fee, a 5% soft hurdle rate, and a high-water mark of $357 million, and its fund return for the current year is 25%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    AUM_previous_year_end = 288000000  # in dollars\n    management_fee_rate = 0.02\n    incentive_fee_rate = 0.20\n    soft_hurdle_rate = 0.05\n    high_water_mark = 357000000  # in dollars\n    current_year_return_rate = 0.25\n\n    # Calculate the management fee\n    management_fee = AUM_previous_year_end * management_fee_rate\n\n    # Calculate the AUM at the end of the current year before fees\n    AUM_current_year_end_before_fees = AUM_previous_year_end * (1 + current_year_return_rate)\n\n    # Calculate the net performance above the high-water mark and soft hurdle rate\n    net_performance = AUM_current_year_end_before_fees - high_water_mark\n    if net_performance > 0:\n        performance_above_hurdle = max(0, net_performance - (AUM_previous_year_end * soft_hurdle_rate))\n        incentive_fee = performance_above_hurdle * incentive_fee_rate\n    else:\n        incentive_fee = 0\n\n    # Calculate the total revenue generated by the hedge fund company\n    total_revenue = management_fee + incentive_fee\n\n    # return answer\n    return total_revenue\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Maturity | Market Value Price | Coupon | Yield-to-Maturity | Modified Duration |\n|------|----------|--------------------|--------|-------------------|-------------------|\n| A    | 6 years  | 170,000            | 2.00%  | 4.95%             | 5.42              |\n| B    | 10 years | 120,000            | 2.40%  | 4.99%             | 8.44              |\n| C    | 15 years | 100,000            | 5.00%  | 5.00%             | 10.38             |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-457",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming annual coupon payments and no accrued interest, a collection of bonds includes the following three fixed-rate bonds. Prices are given per 100 of par value. What is the modified duration of this bond portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_value_A = 170000\n    modified_duration_A = 5.42\n    market_value_B = 120000\n    modified_duration_B = 8.44\n    market_value_C = 100000\n    modified_duration_C = 10.38\n    \n    # Do math calculation to get the answer\n    total_market_value = market_value_A + market_value_B + market_value_C\n    weighted_duration_A = (market_value_A / total_market_value) * modified_duration_A\n    weighted_duration_B = (market_value_B / total_market_value) * modified_duration_B\n    weighted_duration_C = (market_value_C / total_market_value) * modified_duration_C\n    \n    portfolio_modified_duration = weighted_duration_A + weighted_duration_B + weighted_duration_C\n    \n    # return answer\n    return portfolio_modified_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-458",
        "python_solution": "",
        "ground_truth": null,
        "question": "How many shares should be accounted for when calculating the diluted EPS under these circumstances? There are 500,000 shares in circulation. Plus, there are 200,000 exercisable warrants at $42 per share. The average share price stands at $45 while the share price at the end of the year is $50.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_in_circulation = 500000\n    exercisable_warrants = 200000\n    warrant_exercise_price = 42\n    average_share_price = 45\n    end_of_year_share_price = 50\n    \n    # Do math calculation to get the answer\n    # Calculate the additional shares from the warrants\n    additional_shares_from_warrants = exercisable_warrants * (average_share_price - warrant_exercise_price) / average_share_price\n    \n    # Total shares to be accounted for in diluted EPS\n    total_shares = shares_in_circulation + additional_shares_from_warrants\n    \n    # return answer\n    return total_shares\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-459",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, Corporation A announced: Net earnings $50,000, Weighted average of ordinary shares 6,000, Convertible privileged shares 1,000 (Each of these privileged shares can be converted into 3 ordinary shares) preferred dividends are $0.2 per share. What will be the diluted EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_earnings = 50000\n    weighted_avg_ordinary_shares = 6000\n    convertible_privileged_shares = 1000\n    conversion_ratio = 3\n    preferred_dividends_per_share = 0.2\n\n    # Calculate the total number of shares if all convertible privileged shares are converted\n    additional_ordinary_shares = convertible_privileged_shares * conversion_ratio\n    total_shares_diluted = weighted_avg_ordinary_shares + additional_ordinary_shares\n\n    # Calculate the total preferred dividends\n    total_preferred_dividends = convertible_privileged_shares * preferred_dividends_per_share\n\n    # Adjust net earnings by subtracting the total preferred dividends\n    adjusted_net_earnings = net_earnings - total_preferred_dividends\n\n    # Calculate diluted EPS\n    diluted_eps = adjusted_net_earnings / total_shares_diluted\n\n    # return answer\n    return diluted_eps\n```"
        ]
    },
    {
        "tables": [
            "| Stock price per share | $60.75 |\n|-----------------------|--------|\n| Comprehensive income (millions) | $193.0 |\n| Other comprehensive income (millions) | $87.6 |\n| Common shares outstanding (millions) | 46.5 |"
        ],
        "topic": "Accounting",
        "question_id": "test-460",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the existing data on the corporation, what is its P/E on a net income basis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_price_per_share = 60.75\n    comprehensive_income_millions = 193.0\n    other_comprehensive_income_millions = 87.6\n    common_shares_outstanding_millions = 46.5\n    \n    # Calculate net income\n    net_income_millions = comprehensive_income_millions + other_comprehensive_income_millions\n    \n    # Calculate earnings per share (EPS)\n    eps = net_income_millions / common_shares_outstanding_millions\n    \n    # Calculate P/E ratio\n    pe_ratio = stock_price_per_share / eps\n    \n    # return answer\n    return pe_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-461",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there are 250 trading days in a year and the portfolio returns are independent and follow the same normal distribution with zero mean, what is the estimated yearly VaR at the 95% confidence level for a local credit union's investment securities portfolio that has a current market value of USD 3,700,000 with a daily variance of 0.0004?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_market_value = 3700000\n    daily_variance = 0.0004\n    confidence_level = 0.95\n    trading_days = 250\n    \n    # Calculate daily standard deviation from daily variance\n    daily_std_dev = daily_variance ** 0.5\n    \n    # Calculate yearly standard deviation (assuming independence and same distribution)\n    yearly_std_dev = daily_std_dev * (trading_days ** 0.5)\n    \n    # Calculate the z-score for the 95% confidence level (from standard normal distribution)\n    z_score = 1.645  # Approximately the z-score for 95% confidence level\n    \n    # Calculate the yearly VaR\n    yearly_var = current_market_value * z_score * yearly_std_dev\n    \n    # return answer\n    return yearly_var\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-462",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current worth of a portfolio is $89.32, and its anticipated value after 1 year is $100. What is the rate of return for this portfolio when compounded continuously?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_worth = 89.32\n    future_value = 100\n    time_period = 1  # in years\n    \n    # Do math calculation to get the answer\n    # The formula for continuous compounding is FV = PV * e^(rt), where FV is future value, PV is present value, r is rate of return, and t is time period.\n    # Solving for r, we get r = ln(FV/PV) / t\n    import math\n    rate_of_return = math.log(future_value / current_worth) / time_period\n    \n    # return answer\n    return rate_of_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-463",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the annual spot rate r(1) equals to 4% and the forward price for a one-year zero coupon bond starting in one year equals to 0.9434, then what is the present cost of a two-year zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r1 = 0.04  # Annual spot rate for one year\n    forward_price_one_year = 0.9434  # Forward price for a one-year zero coupon bond starting in one year\n    \n    # Do math calculation to get the answer\n    # The present cost of a two-year zero-coupon bond can be calculated using the formula:\n    # Present cost = Forward price / (1 + r1)\n    present_cost = forward_price_one_year / (1 + r1)\n    \n    # return answer\n    return present_cost\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|---|---|---|\n| 1 | 16 | 20 |\n| 2 | 12 | 20 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-464",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the anticipated standard deviation of an equal-weighted portfolio made by an investment analyst, if the correlation of returns between the two securities is -0.15?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_security_1 = 0.5\n    weight_security_2 = 0.5\n    std_dev_security_1 = 20  # in percentage\n    std_dev_security_2 = 20  # in percentage\n    correlation = -0.15\n    \n    # Do math calculation to get the answer\n    # Formula for portfolio standard deviation when there are two assets:\n    # \u03c3_p = sqrt(w1^2 * \u03c31^2 + w2^2 * \u03c32^2 + 2 * w1 * w2 * \u03c31 * \u03c32 * \u03c1)\n    portfolio_std_dev = ((weight_security_1**2 * std_dev_security_1**2) +\n                         (weight_security_2**2 * std_dev_security_2**2) +\n                         (2 * weight_security_1 * weight_security_2 * std_dev_security_1 * std_dev_security_2 * correlation)) ** 0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [
            "| Comparable Companies | Tax Rate (%) | Debt/Equity | Equity Beta |\n| -------------------- | ------------ | ----------- | ----------- |\n| Private company      | 30.0         | 1.00        | N.A.        |\n| Public company       | 35.0         | 0.90        | 1.75        |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-465",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the projected equity beta for a private firm using the pure-play approach and the data obtained from its publicly traded rival?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    tax_rate_private = 30.0\n    debt_equity_private = 1.00\n    equity_beta_public = 1.75\n    tax_rate_public = 35.0\n    debt_equity_public = 0.90\n    \n    # Do math calculation to get the answer\n    # Calculate unlevered beta for the public company\n    unlevered_beta_public = equity_beta_public / (1 + (1 - tax_rate_public / 100) * debt_equity_public)\n    \n    # Calculate levered beta (equity beta) for the private company using the unlevered beta of the public company\n    equity_beta_private = unlevered_beta_public * (1 + (1 - tax_rate_private / 100) * debt_equity_private)\n    \n    # return answer\n    return equity_beta_private\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-466",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment manager is looking to build a bull spread utilizing call options. A strike price of $50 costs $8 and a strike price of $60 costs $2. Both these calls mature in a month and have the same underlying, currently valued at $55. What is the breakeven underlying price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    strike_price_low = 50\n    strike_price_high = 60\n    cost_low = 8\n    cost_high = 2\n    current_underlying_price = 55\n    \n    # Do math calculation to get the answer\n    # The breakeven underlying price is calculated by adding the net cost of the spread to the lower strike price\n    net_cost = cost_low - cost_high\n    breakeven_price = strike_price_low + net_cost\n    \n    # return answer\n    return breakeven_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-467",
        "python_solution": "",
        "ground_truth": null,
        "question": "Last year, Corporation Z issued a dividend of $0.5. Earnings for this year are estimated to be $3.0. Assuming the desired payout ratio is 30%, and the dividend is adjusted over a 4-year term. What is the anticipated dividend for the current year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    last_year_dividend = 0.5\n    current_year_earnings = 3.0\n    desired_payout_ratio = 0.30\n    adjustment_term = 4\n\n    # Do math calculation to get the answer\n    # Calculate the anticipated dividend for the current year\n    anticipated_dividend = current_year_earnings * desired_payout_ratio\n\n    # return answer\n    return anticipated_dividend\n```"
        ]
    },
    {
        "tables": [
            "| Product | Quantity Produced in 2012 | Quantity Produced in 2013 | Product Unit Prices in 2012 | Product Unit Prices in 2013 |\n|-------|-------------------------|-------------------------|---------------------------|---------------------------|\n| X     | 351.0                   | 352.0                   | 13.3                          | 13.8                          |\n| Y     | 179.0                   | 182.5                   | unknown                    | 11.1                          |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-468",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we take 2012 as the reference year for calculating GDP and the GDP deflator for the economic climate in 2013 is 102.4, what would be the unit cost of item B in 2012 in an economy consisting of two items, A and B, given the details below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    quantity_produced_2012_A = 351.0\n    quantity_produced_2012_B = 179.0\n    unit_price_2012_A = 13.3\n    unit_price_2013_B = 11.1\n    gdp_deflator_2013 = 102.4\n\n    # Calculate total GDP in 2012\n    gdp_2012 = (quantity_produced_2012_A * unit_price_2012_A) + (quantity_produced_2012_B * unit_price_2012_B)\n\n    # Calculate total GDP in 2013 using the deflator\n    gdp_2013 = gdp_2012 * (gdp_deflator_2013 / 100)\n\n    # Calculate the unit price of B in 2012\n    # We know the total GDP in 2013 and the unit price of B in 2013, so we can solve for the unit price of B in 2012\n    # GDP_2013 = (quantity_produced_2012_A * unit_price_2012_A) + (quantity_produced_2012_B * unit_price_2013_B)\n    # Solving for unit_price_2012_B:\n    unit_price_2012_B = (gdp_2013 - (quantity_produced_2012_A * unit_price_2012_A)) / quantity_produced_2012_B\n\n    # return answer\n    return unit_price_2012_B\n```\n\nThis program calculates the unit cost of item B in 2012 by using the given GDP deflator and the known unit prices and quantities from the table. It assumes that the total GDP in 2013 can be calculated using the deflator and then solves for the unknown unit price of B in 2012."
        ]
    },
    {
        "tables": [
            "|                             | 5-Year T-Note | 10-Year T-Note |\n|-----------------------------|---------------|----------------|\n| Yield to maturity           | 6.02%         | 6.41%          |\n| Modified duration           | 4.8           | 9.1            |\n| BPV per 100,000 in par value| 47.22         | 88.41          |\n| Conversion factor for cheapest-to-deliver | 0.88          | 0.90           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-469",
        "python_solution": "",
        "ground_truth": null,
        "question": "In addition to contemplating the implementation of financial instruments to control interest rate risk, Sullivan is also contemplating a fresh approach for Shoreline. Sullivan calculates how many bond futures are required to shield the company's total exposure to interest rate risk. The asset portfolio has a basis point value (BPV) of 96,000, while the liability portfolio's BPV is 44,000. Based on the extra data about bond futures that Sullivan has gathered in Exhibit 1, how many five-year note futures contracts need to be sold to readjust the immunizing portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_bpv = 96000\n    liability_bpv = 44000\n    five_year_note_bpv = 47.22 * 1000  # Convert BPV per 100,000 in par value to per contract\n    \n    # Do math calculation to get the answer\n    net_bpv_exposure = asset_bpv - liability_bpv\n    number_of_contracts = net_bpv_exposure / five_year_note_bpv\n    \n    # return answer\n    return number_of_contracts\n```"
        ]
    },
    {
        "tables": [
            "|                               |                               |                                           |                        |\n|-------------------------------|-------------------------------|-------------------------------------------|------------------------|\n| An individual consumer's demand for tea |                                               | Qdt=1, 800-40Pt+0.5/+150Pc                |                        |\n| Seller's supply of tea        |                                               | QSt=-516+350Pt-120W                        |                        |\n|                               |                               |                                           |                        |\n|                               |                               | **Legend and Initial Values**              | **Assumed Values**     |\n| ad t                          |               Quantity of tea |                                           |                        |\n| Pt                            | Price of tea per 100 grams    |                                           |                        |\n| I                             |       Household income        |                                           | \u00a32,400                 |\n| W                             | Hourly wage rate for labor    |                                           |                        |\n| Pc                            | Price of coffee per 100 grams |                                           | \u00a322.4                  |\n|                               | Equilibrium price of tea      |                                           | \u00a330.6                  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-470",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there is a 2.5% rise in the income of the family while G and T remain constant, what would be the adjusted equilibrium quantity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Pt = 30.6  # Equilibrium price of tea\n    I = 2400  # Initial household income\n    I_new = I * 1.025  # New household income after 2.5% rise\n    Pc = 22.4  # Price of coffee per 100 grams\n    W = 0  # Assuming W remains constant as not specified in the question\n\n    # Demand function for tea\n    Qdt = 1800 - 40 * Pt + 0.5 * I_new + 150 * Pc\n\n    # Supply function for tea\n    QSt = -516 + 350 * Pt - 120 * W\n\n    # Equilibrium condition: Qdt = QSt\n    # Since Pt is given and we are to find the new equilibrium quantity, we use the new income value\n    # in the demand function to get the new equilibrium quantity\n\n    # Calculate the new equilibrium quantity\n    Q_equilibrium = Qdt\n\n    # return answer\n    return Q_equilibrium\n```\n\nThis Python program calculates the new equilibrium quantity of tea after a 2.5% rise in the household income, assuming the price of tea and other factors remain constant. The equilibrium quantity is determined by the demand function, which is recalculated with the new income value."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-471",
        "python_solution": "",
        "ground_truth": null,
        "question": "If you were to invest 1 million dollars in a financial product today with a stated annual interest rate of 6%, what would its value be three years from now considering it is compounded monthly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 1000000  # Initial investment amount in dollars\n    annual_interest_rate = 0.06  # Annual interest rate in decimal\n    compounding_periods_per_year = 12  # Monthly compounding\n    years = 3  # Number of years\n    \n    # Do math calculation to get the answer\n    # Formula for compound interest: A = P(1 + r/n)^(nt)\n    # A = future value, P = principal, r = annual interest rate, n = number of times interest is compounded per year, t = number of years\n    future_value = principal * (1 + annual_interest_rate / compounding_periods_per_year) ** (compounding_periods_per_year * years)\n    \n    # return answer\n    return future_value\n```"
        ]
    },
    {
        "tables": [
            "| Stock | Shares Outstanding | % Shares in Market Float | Beginning of Period Price | End of Period Price | Dividends Per Share |\n|-------|-------------------|--------------------------|---------------------------|---------------------|---------------------|\n| A     | 5,000             | 90                       | 40                        | 45                  | 1.00                |\n| B     | 2,000             | 100                      | 68                        | 60                  | 0.50                |\n| C     | 6,000             | 70                       | 60                        | 70                  | 1.50                |\n| D     | 4,000             | 40                       | 20                        | 24                  | 0.80                |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-472",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we consider the initial value of the float-adjusted market-capitalization-weighted equity index to be 100, what would be the final value considering the data for four stocks in the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stocks = [\n        {\"name\": \"A\", \"shares_outstanding\": 5000, \"market_float_percent\": 90, \"beginning_price\": 40, \"end_price\": 45, \"dividends_per_share\": 1.00},\n        {\"name\": \"B\", \"shares_outstanding\": 2000, \"market_float_percent\": 100, \"beginning_price\": 68, \"end_price\": 60, \"dividends_per_share\": 0.50},\n        {\"name\": \"C\", \"shares_outstanding\": 6000, \"market_float_percent\": 70, \"beginning_price\": 60, \"end_price\": 70, \"dividends_per_share\": 1.50},\n        {\"name\": \"D\", \"shares_outstanding\": 4000, \"market_float_percent\": 40, \"beginning_price\": 20, \"end_price\": 24, \"dividends_per_share\": 0.80}\n    ]\n    \n    initial_index_value = 100\n    \n    # Calculate initial float-adjusted market capitalization for each stock\n    initial_market_caps = [stock[\"shares_outstanding\"] * (stock[\"market_float_percent\"] / 100) * stock[\"beginning_price\"] for stock in stocks]\n    total_initial_market_cap = sum(initial_market_caps)\n    \n    # Calculate final float-adjusted market capitalization for each stock\n    final_market_caps = [stock[\"shares_outstanding\"] * (stock[\"market_float_percent\"] / 100) * (stock[\"end_price\"] + stock[\"dividends_per_share\"]) for stock in stocks]\n    total_final_market_cap = sum(final_market_caps)\n    \n    # Calculate the final value of the index\n    final_index_value = (total_final_market_cap / total_initial_market_cap) * initial_index_value\n    \n    # return answer"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-473",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the price elasticity of demand at the neighborhood fitness center if the membership fee is $35, given that their membership demand is dictated by the equation: Qdfc = 400 - 5 Pfc, with Qdfc representing the number of gym members and Pfc being the membership cost?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Pfc = 35  # Membership fee\n    Qdfc = 400 - 5 * Pfc  # Number of gym members based on the given equation\n    \n    # Do math calculation to get the answer\n    # Price elasticity of demand (PED) formula: (\u0394Q/\u0394P) * (P/Q)\n    # From the equation Qdfc = 400 - 5 * Pfc, we can derive \u0394Q/\u0394P = -5\n    delta_Q_delta_P = -5\n    PED = delta_Q_delta_P * (Pfc / Qdfc)\n    \n    # return answer\n    return PED\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-474",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the true risk-free return rate is 3%, the anticipated inflation premium is 5% and the interest rate determined by the market for a certain investment is 12%, what is the total of the default risk premium, the liquidity premium, and the maturity premium for the investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.03\n    inflation_premium = 0.05\n    market_interest_rate = 0.12\n    \n    # Do math calculation to get the answer\n    total_premium = market_interest_rate - risk_free_rate - inflation_premium\n    \n    # return answer\n    return total_premium\n```"
        ]
    },
    {
        "tables": [
            "| Buyer   | Bid Size (Number of shares) | Limit price($) | Offer size (Number of shares) | Seller   |\n|---------|-----------------------------|----------------|-------------------------------|----------|\n| Liam    | 7,000                       | 20.70          |                               |          |\n| Debbie  | 200                         | 20.88          |                               |          |\n| Philips | 400                         | 21.02          |                               |          |\n| Fiona   | 300                         | 21.89          |                               |          |\n|         |                             | 21.90          | 300                           | Kevin    |\n|         |                             | 22.01          | 1,300                         | Veronica |\n|         |                             | 22.06          | 1,500                         | Ethel    |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-475",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine that a limit order is listed in the stock's order book. Let's say Alex placed a day order with a limit price of $20.87 and sold 1,000 shares, with no other investors placing a buy order after his was submitted. What would be the average price for Alex's transaction?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bids = [\n        {\"buyer\": \"Liam\", \"bid_size\": 7000, \"limit_price\": 20.70},\n        {\"buyer\": \"Debbie\", \"bid_size\": 200, \"limit_price\": 20.88},\n        {\"buyer\": \"Philips\", \"bid_size\": 400, \"limit_price\": 21.02},\n        {\"buyer\": \"Fiona\", \"bid_size\": 300, \"limit_price\": 21.89}\n    ]\n    \n    total_shares_sold = 1000\n    total_price = 0\n    shares_sold = 0\n    \n    # Do math calculation to get the answer\n    for bid in bids:\n        if shares_sold < total_shares_sold:\n            if bid[\"limit_price\"] >= 20.87:\n                if shares_sold + bid[\"bid_size\"] <= total_shares_sold:\n                    total_price += bid[\"bid_size\"] * bid[\"limit_price\"]\n                    shares_sold += bid[\"bid_size\"]\n                else:\n                    shares_to_sell = total_shares_sold - shares_sold\n                    total_price += shares_to_sell * bid[\"limit_price\"]\n                    shares_sold += shares_to_sell\n    \n    average_price = total_price / total_shares_sold\n    \n    # return answer\n    return average_price\n```\n\nThis program calculates the average price for Alex's transaction by iterating through the bids and summing up the total price for the shares sold at or above Alex's limit price of $20.87. It then divides the total price by the number of shares sold to get the average price."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-476",
        "python_solution": "",
        "ground_truth": null,
        "question": "The investment portfolio is worth $10,000,000. The retirement fund intends to employ a futures contract valued at $125,000 to reduce the beta from 1.2 to 0.9 over a span of two months. The futures contract has a beta of 0.95. How many futures contracts should be sold?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_value = 10000000\n    target_beta = 0.9\n    current_beta = 1.2\n    futures_contract_value = 125000\n    futures_beta = 0.95\n    \n    # Do math calculation to get the answer\n    # Calculate the required change in beta\n    beta_change_required = current_beta - target_beta\n    \n    # Calculate the number of futures contracts needed\n    number_of_contracts = (beta_change_required * portfolio_value) / (futures_beta * futures_contract_value)\n    \n    # return answer\n    return number_of_contracts\n```"
        ]
    },
    {
        "tables": [
            "|  |  |  | Year 3 | Year 2 | Year 1 |\n| --- | --- | --- | --- | --- | --- |\n| Earnings before income taxes: | | United States | $88,157 | $75,658 | $59,973 |\n|  | | Foreign | $116,704 | $113,509 | $94,760 |\n|  |  | Total | $204,861 | $189,167 | $154,733 |\n| The components of the provision for income taxes are as follows ($ thousands): | | |  | | |\n| Income taxes: | Current: | Federal | $30,632 | $22,031 | $18,959  |\n|  | | Foreign | $28,140 | $27,961 | $22,263  |\n|  | | | $58,772 | $49,992 | $41,222 |\n| | Deferred: | Federal | ($4,752) | $5,138 | $2,336 |\n|  | | Foreign | $124 | $1,730 | $621 |\n|  | | | ($4,628) | $6,868 | $2,957 |\n|  |  | Total | $54,144 | $56,860 | $44,179 |"
        ],
        "topic": "Accounting",
        "question_id": "test-477",
        "python_solution": "",
        "ground_truth": null,
        "question": "What was the provision for income taxes recorded in the US GAAP income statement of the firm in Year 3, given the elements of earnings before income taxes (in $ thousands)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_federal_tax = 30632\n    current_foreign_tax = 28140\n    deferred_federal_tax = -4752\n    deferred_foreign_tax = 124\n    \n    # Do math calculation to get the answer\n    total_provision_for_income_taxes = current_federal_tax + current_foreign_tax + deferred_federal_tax + deferred_foreign_tax\n    \n    # return answer\n    return total_provision_for_income_taxes\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-478",
        "python_solution": "",
        "ground_truth": null,
        "question": "A takeover private equity fund intends to invest in all of Business A's preferred shares and 70% of the ordinary shares. Business A's present valuation stands at $10 million, comprising $6.5 million in debt, $2.8 million in preferred shares and $0.7 million in ordinary shares. The projected exit value in five years time is $15 million, with a predicted decrease in debt by $2.5 million and a 15% yearly return on preferred shares. What is the ratio of anticipated proceeds at exit to the funds invested?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_valuation = 10000000\n    debt = 6500000\n    preferred_shares = 2800000\n    ordinary_shares = 700000\n    exit_value = 15000000\n    debt_decrease = 2500000\n    yearly_return_rate = 0.15\n    years = 5\n    investment_percentage_ordinary = 0.7\n\n    # Calculate the funds invested\n    funds_invested_preferred = preferred_shares\n    funds_invested_ordinary = ordinary_shares * investment_percentage_ordinary\n    funds_invested = funds_invested_preferred + funds_invested_ordinary\n\n    # Calculate the anticipated proceeds at exit\n    exit_debt = debt - debt_decrease\n    exit_preferred_shares = preferred_shares * (1 + yearly_return_rate) ** years\n    exit_ordinary_shares = (exit_value - exit_debt - exit_preferred_shares) * investment_percentage_ordinary\n    anticipated_proceeds = exit_preferred_shares + exit_ordinary_shares\n\n    # Calculate the ratio of anticipated proceeds at exit to the funds invested\n    ratio = anticipated_proceeds / funds_invested\n\n    # return answer\n    return ratio\n```"
        ]
    },
    {
        "tables": [
            "|         |           |                   |      |\n|---------|-----------|-------------------|------|\n|         |           | Underlying Bond   |      |\n| Futures Contract |   |                   |      |\n| Quoted futures price | 125.00 | Quoted bond price | 112.00 |\n| Conversion factor | 0.90 | Accrued interest since last coup on payment | 0.08 |\n| Time remaining to contract expiration | Three months | Accrued interest at futures contract expiration |0.20 |\n| Accrued interest over life of futures contract | 0.00 |   |   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-479",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Minstrel identifies an arbitrage opportunity involving a fixed-income futures contract and its related bond, and the current details on the futures contract and related bond are displayed in Exhibit 1, what would be the arbitrage profit on the bond futures contract given that the existing yearly compounded risk-free rate is 0.30%, assuming annual compounding?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    futures_price = 125.00\n    bond_price = 112.00\n    conversion_factor = 0.90\n    accrued_interest_last_coupon = 0.08\n    accrued_interest_futures_expiration = 0.20\n    risk_free_rate = 0.30 / 100  # Convert percentage to decimal\n    time_to_expiration = 3 / 12  # Convert months to years\n\n    # Calculate the theoretical futures price\n    theoretical_futures_price = (bond_price + accrued_interest_last_coupon - accrued_interest_futures_expiration) * conversion_factor\n\n    # Calculate the present value of the theoretical futures price\n    present_value_theoretical_futures_price = theoretical_futures_price / (1 + risk_free_rate) ** time_to_expiration\n\n    # Calculate the arbitrage profit\n    arbitrage_profit = futures_price - present_value_theoretical_futures_price\n\n    # return answer\n    return arbitrage_profit\n```"
        ]
    },
    {
        "tables": [
            "|                     | $ millions |\n|---------------------|------------|\n| Sales               | 4,800      |\n| Cost of goods sold  | 2,880      |\n| Purchases           | 2,940      |\n| Average receivables | 625        |\n| Average inventory   | 710        |\n| Average payables    | 145        |"
        ],
        "topic": "Accounting",
        "question_id": "test-480",
        "python_solution": "",
        "ground_truth": null,
        "question": "The details for a certain business are given below. How many days does it take for that business to complete its cash conversion cycle?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales = 4800  # in millions\n    cost_of_goods_sold = 2880  # in millions\n    purchases = 2940  # in millions\n    average_receivables = 625  # in millions\n    average_inventory = 710  # in millions\n    average_payables = 145  # in millions\n\n    # Do math calculation to get the answer\n    # Days Sales Outstanding (DSO)\n    receivables_turnover = sales / average_receivables\n    days_sales_outstanding = 365 / receivables_turnover\n\n    # Days Inventory Outstanding (DIO)\n    inventory_turnover = cost_of_goods_sold / average_inventory\n    days_inventory_outstanding = 365 / inventory_turnover\n\n    # Days Payables Outstanding (DPO)\n    payables_turnover = purchases / average_payables\n    days_payables_outstanding = 365 / payables_turnover\n\n    # Cash Conversion Cycle (CCC)\n    cash_conversion_cycle = days_sales_outstanding + days_inventory_outstanding - days_payables_outstanding\n\n    # return answer\n    return cash_conversion_cycle\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Maturity | Market Value Price | Coupon | Yield-to-Maturity | Modified Duration |\n| --- | --- | --- | --- | --- | --- |\n| A | 3 years | 150,000 95.0000 | 3.00% | 5.67% | 4.98 |\n| B | 5 years | 110,000 90.0000 | 4.00% | 5.97% | 7.86 |\n| C | 10 years | 100,000 100.0000 | 6.00% | 6.00% | 9.27 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-481",
        "python_solution": "",
        "ground_truth": null,
        "question": "The modified duration of a bond collection, which consists of three fixed-rate bonds that pay annual coupons without any accrued interest, is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_A_market_value = 150000 * 95.0000 / 100  # Convert market value price to actual value\n    bond_B_market_value = 110000 * 90.0000 / 100  # Convert market value price to actual value\n    bond_C_market_value = 100000 * 100.0000 / 100  # Convert market value price to actual value\n    \n    bond_A_modified_duration = 4.98\n    bond_B_modified_duration = 7.86\n    bond_C_modified_duration = 9.27\n    \n    total_market_value = bond_A_market_value + bond_B_market_value + bond_C_market_value\n    \n    # Do math calculation to get the answer\n    weighted_average_modified_duration = (\n        (bond_A_market_value * bond_A_modified_duration) +\n        (bond_B_market_value * bond_B_modified_duration) +\n        (bond_C_market_value * bond_C_modified_duration)\n    ) / total_market_value\n    \n    # return answer\n    return weighted_average_modified_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-482",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Bull Corporation anticipates growth rates of 10% and 20% for the initial two years, after which it will drop to 6%. If we consider that the return rate is 10% and Bull's recent dividend was $1, what is the value of Bull's ordinary shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_dividend = 1\n    growth_rate_year1 = 0.10\n    growth_rate_year2 = 0.20\n    growth_rate_after_year2 = 0.06\n    return_rate = 0.10\n\n    # Calculate dividends for the first two years\n    dividend_year1 = initial_dividend * (1 + growth_rate_year1)\n    dividend_year2 = dividend_year1 * (1 + growth_rate_year2)\n\n    # Calculate the dividend from year 3 onwards using the constant growth model\n    dividend_year3 = dividend_year2 * (1 + growth_rate_after_year2)\n    constant_growth_value = dividend_year3 / (return_rate - growth_rate_after_year2)\n\n    # Discount the dividends of the first two years and the constant growth value to present value\n    present_value_year1 = dividend_year1 / (1 + return_rate)\n    present_value_year2 = dividend_year2 / (1 + return_rate)**2\n    present_value_constant_growth = constant_growth_value / (1 + return_rate)**2\n\n    # Sum up the present values to get the total value of the shares\n    total_value = present_value_year1 + present_value_year2 + present_value_constant_growth\n\n    # return answer\n    return total_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-483",
        "python_solution": "",
        "ground_truth": null,
        "question": "The financial institution, TK Bank, gains arbitrage profit from the money market. They utilize a money market tool, a certificate of deposit, that has a maturity period of 300 days under the assumption that a year comprises 360 days. Given that the present value of this instrument is 93.2 and the maturity price is 100, can you determine the bond equivalent yield?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value = 93.2\n    maturity_price = 100\n    days_to_maturity = 300\n    days_in_year = 360\n    \n    # Do math calculation to get the answer\n    bond_equivalent_yield = ((maturity_price - present_value) / present_value) * (days_in_year / days_to_maturity)\n    \n    # return answer\n    return bond_equivalent_yield\n```"
        ]
    },
    {
        "tables": [
            "| Equity | Asset Allocation (%) | Asset Class Return (%) |\n|--------|----------------------|------------------------|\n| Equity A | 10.0 | 3.0 |\n| Equity B | 20.0 | 19.0 |\n| Equity C | 55.0 | -1.0 |\n| Equity D | 15.0 | 6.0 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-484",
        "python_solution": "",
        "ground_truth": null,
        "question": "The yield of a portfolio with four stocks is equivalent to:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equity_a_allocation = 10.0\n    equity_a_return = 3.0\n    equity_b_allocation = 20.0\n    equity_b_return = 19.0\n    equity_c_allocation = 55.0\n    equity_c_return = -1.0\n    equity_d_allocation = 15.0\n    equity_d_return = 6.0\n    \n    # Do math calculation to get the answer\n    portfolio_yield = (equity_a_allocation * equity_a_return +\n                       equity_b_allocation * equity_b_return +\n                       equity_c_allocation * equity_c_return +\n                       equity_d_allocation * equity_d_return) / 100\n    \n    # return answer\n    return portfolio_yield\n```"
        ]
    },
    {
        "tables": [
            "| Trades | Execution  Price | Shares Executed |\n|--------|------------------|-----------------|\n| Trade 1 | $40.75 | 10,000 |\n| Trade 2 | $41.25 | 30,000 |\n| Trade 3 | $41.50 | 20,000 |\n| Trade 4 | $41.75 | 30,000 |\n| Total |  | 90,000 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-485",
        "python_solution": "",
        "ground_truth": null,
        "question": "On the following day, Roberts advises Green to take another look at her analysis on XYZ Corp. Green's study leads her to conclude that the company's shares are underpriced. She communicates her findings to Roberts, who directs her to buy 120,000 shares at $40.00 using a limit order of $42.00 at 10 a.m. The buy-side dealer implements the order for market execution as the price hits $40.50. The exclusive fee is a commission of $0.02 per share. By market close, 90,000 shares of the order were bought, with XYZ Corp ending at $42.50. The transaction was discharged at an average cost of $41.42. Information about the completed deals is given in Exhibit 1. Based on the information provided in Exhibit 1, what is the opportunity cost of buying the 90,000 shares of XYZ Corp?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_bought = 90000\n    average_cost = 41.42\n    closing_price = 42.50\n    commission_per_share = 0.02\n    \n    # Calculate total cost including commission\n    total_cost = shares_bought * (average_cost + commission_per_share)\n    \n    # Calculate potential earnings if bought at closing price\n    potential_earnings = shares_bought * (closing_price - commission_per_share)\n    \n    # Calculate opportunity cost\n    opportunity_cost = potential_earnings - total_cost\n    \n    # return answer\n    return opportunity_cost\n```"
        ]
    },
    {
        "tables": [
            "| Dealer | Time   Entered | Price  | Size | Dealer | Time   Entered | Price  | Size |\n|--------|---------------|--------|------|--------|---------------|--------|------|\n| B      | 10.10 a.m.    | $17.15 | 900  | C      | 10.11 a.m.    | $17.19 | 1,200|\n| C      | 10.11 a.m.    | $17.14 | 1,500| B      | 10.10 a.m.    | $17.20 | 800  |\n| A      | 10.11 a.m.    | $17.12 | 1,100| A      | 10.12 a.m.    | $17.22 | 1,100|"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-486",
        "python_solution": "",
        "ground_truth": null,
        "question": "Three brokers are involved in making the market for the stocks of Bright Systems. Using these rates, YNSM's trading desk carries out a market sell order for 1,100 stocks of Bright Systems. Based on Exhibit 1, what is the inside bid\u2013ask spread for the limit order book for Bright Systems?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bids = [\n        {\"dealer\": \"B\", \"time\": \"10.10 a.m.\", \"price\": 17.15, \"size\": 900},\n        {\"dealer\": \"C\", \"time\": \"10.11 a.m.\", \"price\": 17.14, \"size\": 1500},\n        {\"dealer\": \"A\", \"time\": \"10.11 a.m.\", \"price\": 17.12, \"size\": 1100}\n    ]\n    asks = [\n        {\"dealer\": \"C\", \"time\": \"10.11 a.m.\", \"price\": 17.19, \"size\": 1200},\n        {\"dealer\": \"B\", \"time\": \"10.10 a.m.\", \"price\": 17.20, \"size\": 800},\n        {\"dealer\": \"A\", \"time\": \"10.12 a.m.\", \"price\": 17.22, \"size\": 1100}\n    ]\n    \n    # Sort bids and asks by price, highest bid first and lowest ask first\n    bids.sort(key=lambda x: x[\"price\"], reverse=True)\n    asks.sort(key=lambda x: x[\"price\"])\n    \n    # Get the highest bid and lowest ask\n    highest_bid = bids[0][\"price\"]\n    lowest_ask = asks[0][\"price\"]\n    \n    # Calculate the inside bid-ask spread\n    inside_bid_ask_spread = lowest_ask - highest_bid\n    \n    # return answer\n    return inside_bid_ask_spread\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-487",
        "python_solution": "",
        "ground_truth": null,
        "question": "Enterprise Z announced a COGS of $75 million. Over the year, there was a decrease of $12 million in inventory and an increase of $8 million in accounts payable. What is the total cash given to suppliers?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    COGS = 75000000  # in dollars\n    decrease_in_inventory = 12000000  # in dollars\n    increase_in_accounts_payable = 8000000  # in dollars\n    \n    # Do math calculation to get the answer\n    # Cash given to suppliers = COGS - Decrease in Inventory + Increase in Accounts Payable\n    cash_given_to_suppliers = COGS - decrease_in_inventory + increase_in_accounts_payable\n    \n    # return answer\n    return cash_given_to_suppliers\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-488",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the covariance of returns for Stock X and Stock Y, given the correlation of their historical returns is 0.75, and the variances for Stock X and Stock Y are 0.16 and 0.09, respectively?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.75\n    variance_X = 0.16\n    variance_Y = 0.09\n    \n    # Do math calculation to get the answer\n    std_dev_X = variance_X ** 0.5\n    std_dev_Y = variance_Y ** 0.5\n    covariance = correlation * std_dev_X * std_dev_Y\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-489",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the worth of a preferred share if the necessary return is 10% and the yearly dividend is $5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    necessary_return = 0.10  # 10% necessary return\n    yearly_dividend = 5  # $5 yearly dividend\n    \n    # Do math calculation to get the answer\n    worth_of_preferred_share = yearly_dividend / necessary_return\n    \n    # return answer\n    return worth_of_preferred_share\n```"
        ]
    },
    {
        "tables": [
            "| Fiscal year end (USD  millions) | December 2018 |\n|---------------------------------|---------------|\n| Revenue                         | $31,218.00    |\n| Cost of goods sold              | $25,454.00    |\n| Sales, general, and administrative| $1,638.00    |\n| Depreciation and amortization   | $441.00       |\n| Operating income                | $3,685.00     |\n| Interest expense                | $103.00       |\n| Income before taxes             | $3,582.00     |\n| Provision for income taxes      | $1,121.00     |\n| Net income                      | $2,461.00     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-490",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the interest coverage ratio of the operating statement, if calculated by the more conservative interest coverage ratio method, for the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_income = 3685.00  # in millions\n    depreciation_and_amortization = 441.00  # in millions\n    interest_expense = 103.00  # in millions\n    \n    # Do math calculation to get the answer\n    # The conservative interest coverage ratio is calculated using Operating Income + Depreciation & Amortization / Interest Expense\n    interest_coverage_ratio = (operating_income + depreciation_and_amortization) / interest_expense\n    \n    # return answer\n    return interest_coverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Expected inflation | 1.9% |\n|---|---|\n| Expected growth in the P/E | -1.2% |\n| Expected income component | 1.8% |\n| Expected growth in real earnings per share | 2.7% |\n| Expected change in shares outstanding | 0.0% |\n| Current three-month government bond yield | 0.96% |\n| Long-term geometric average return of market equity index | 9.96% |\n| Long-term geometric average return of short-term government bond | 3.15% |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-491",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher is determining a historical ERP for a market based on the same data. What is the historical ERP?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    long_term_market_return = 9.96\n    long_term_bond_return = 3.15\n    \n    # Do math calculation to get the answer\n    historical_ERP = long_term_market_return - long_term_bond_return\n    \n    # return answer\n    return historical_ERP\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-492",
        "python_solution": "",
        "ground_truth": null,
        "question": "If r stands for 4% and E(MR) equals 10%, then what would be the expected yield for a security with a beta of 1.3?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r = 0.04  # Risk-free rate (4%)\n    E_MR = 0.10  # Expected market return (10%)\n    beta = 1.3  # Beta of the security\n    \n    # Do math calculation to get the answer\n    # Using the Capital Asset Pricing Model (CAPM) formula: E(R) = r + beta * (E(MR) - r)\n    expected_yield = r + beta * (E_MR - r)\n    \n    # return answer\n    return expected_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-493",
        "python_solution": "",
        "ground_truth": null,
        "question": "A yearly coupon bond is valued at par value, with a coupon rate of 5%, and it will mature in 10 years. If one plans to invest for five years and the approximate modified duration of the bond is 6.872, what should the duration gap be at the point of buying?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 6.872\n    investment_horizon = 5\n    \n    # Do math calculation to get the answer\n    duration_gap = modified_duration - investment_horizon\n    \n    # return answer\n    return duration_gap\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-494",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an investment analyst is looking into buying a bond that has a 5.5% annual interest rate and matures in three years, and if the anticipated rate of return on the bond is 5%, what should be the bond's price per 100 of par value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_interest_rate = 0.055  # 5.5% annual interest rate\n    maturity_years = 3  # bond matures in three years\n    anticipated_rate_of_return = 0.05  # 5% anticipated rate of return\n    par_value = 100  # bond's price per 100 of par value\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the bond's future cash flows\n    # Cash flows include the annual interest payments and the principal at maturity\n    \n    # Present value of the interest payments\n    present_value_interest = 0\n    for year in range(1, maturity_years + 1):\n        present_value_interest += (par_value * annual_interest_rate) / (1 + anticipated_rate_of_return) ** year\n    \n    # Present value of the principal payment at maturity\n    present_value_principal = par_value / (1 + anticipated_rate_of_return) ** maturity_years\n    \n    # Total present value of the bond\n    bond_price = present_value_interest + present_value_principal\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [
            "|                                         | Emillions   |\n|-----------------------------------------|-------------|\n| Revenues for the year                   | 12,500      |\n| Total expenses for the year             | 10,000      |\n| Unrealized gains from available-for-sale securities | 1,475       |\n| Loss on foreign currency translation adjustments on a foreign subsidiary | 325         |\n| Dividends paid                          | 500         |"
        ],
        "topic": "Accounting",
        "question_id": "test-495",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the total comprehensive income (in millions) of the firm as per the data available from the firm's financial documents?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenues = 12500  # in millions\n    total_expenses = 10000  # in millions\n    unrealized_gains = 1475  # in millions\n    foreign_currency_loss = 325  # in millions\n    dividends_paid = 500  # in millions\n    \n    # Do math calculation to get the answer\n    net_income = revenues - total_expenses\n    comprehensive_income = net_income + unrealized_gains - foreign_currency_loss\n    \n    # return answer\n    return comprehensive_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-496",
        "python_solution": "",
        "ground_truth": null,
        "question": "John just got $30 million. His blueprint is to put this money at a risk-free rate of 3% and subsequently switch them into euros after six months. To safeguard against the currency risk, John opts to buy forward contracts. The rate for six-month forward is 1.10 USD/EUR, with the spot rate currently at 1.13 USD/EUR. The day-count convention being used is 30/360. If John utilizes a six-month forward contract as his risk hedge, what will his calculated annualized return in euros be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_amount_usd = 30000000\n    risk_free_rate = 0.03\n    forward_rate = 1.10  # USD/EUR\n    spot_rate = 1.13  # USD/EUR\n    day_count_convention = 30/360\n    period_in_years = 0.5  # six months\n\n    # Calculate the amount in USD after six months with the risk-free rate\n    amount_usd_after_six_months = initial_amount_usd * (1 + risk_free_rate * period_in_years)\n\n    # Convert the amount to euros using the forward rate\n    amount_eur_after_six_months = amount_usd_after_six_months / forward_rate\n\n    # Calculate the annualized return in euros\n    annualized_return_eur = ((amount_eur_after_six_months / initial_amount_usd) ** (1 / period_in_years) - 1) * 100\n\n    # return answer\n    return annualized_return_eur\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-497",
        "python_solution": "",
        "ground_truth": null,
        "question": "A supervisor is interested in implementing a collar strategy. The existing price of shares is $20, a put option with a strike price of $15 is sold at $2.0, and a call option with a strike price of $30 is going for $2.0. What is the profit of this strategy if the price of the base share at the end is $35?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    share_price_initial = 20\n    share_price_final = 35\n    put_option_strike_price = 15\n    put_option_price = 2.0\n    call_option_strike_price = 30\n    call_option_price = 2.0\n    \n    # Do math calculation to get the answer\n    # Calculate profit from the put option\n    if share_price_final < put_option_strike_price:\n        put_option_profit = (put_option_strike_price - share_price_final) - put_option_price\n    else:\n        put_option_profit = -put_option_price\n    \n    # Calculate profit from the call option\n    if share_price_final > call_option_strike_price:\n        call_option_profit = (share_price_final - call_option_strike_price) - call_option_price\n    else:\n        call_option_profit = -call_option_price\n    \n    # Total profit from the collar strategy\n    total_profit = put_option_profit + call_option_profit\n    \n    # return answer\n    return total_profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-498",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the price of a Treasury bond quoted at 97-19+ as a percentage of par?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_quote_whole = 97\n    bond_quote_fraction = 19\n    fraction_increment = 1/32\n    adjustment = 1/2\n    \n    # Do math calculation to get the answer\n    bond_price_fraction = bond_quote_fraction * fraction_increment\n    bond_price_adjusted = bond_price_fraction + adjustment * fraction_increment\n    bond_price_percentage = bond_quote_whole + bond_price_adjusted\n    \n    # return answer\n    return bond_price_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-499",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher predicts that 20% of high-risk bonds will become insolvent. If he uses an insolvency prediction model, he discovers that 70% of the bonds will be given a \"good\" rating, suggesting they are less likely to become insolvent. Of the bonds that became insolvent, only 50% had a \"good\" rating. Use Bayes' theorem to determine the probability of insolvency given a \"good\" rating. (Hint, let P(A) be the probability of insolvency, P(B) be the probability of a \"good\" rating, P(B | A) be the likelihood of a \"good\" rating given insolvency, and P(A | B) be the likelihood of insolvency given a \"good\" rating.)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_A = 0.20  # Probability of insolvency\n    P_B = 0.70  # Probability of a \"good\" rating\n    P_B_given_A = 0.50  # Probability of a \"good\" rating given insolvency\n\n    # Do math calculation to get the answer\n    # Bayes' theorem: P(A | B) = (P(B | A) * P(A)) / P(B)\n    P_A_given_B = (P_B_given_A * P_A) / P_B\n\n    # return answer\n    return P_A_given_B\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-500",
        "python_solution": "",
        "ground_truth": null,
        "question": "If f(0,1)=0.75%, f(1,1)=0.98%, f(2,1)=1.75%, f(2,2)=2.21%, what is the worth of a three-year bond from XYZ Corp. that pays a 6% coupon on a yearly basis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    f_0_1 = 0.0075  # f(0,1) = 0.75%\n    f_1_1 = 0.0098  # f(1,1) = 0.98%\n    f_2_1 = 0.0175  # f(2,1) = 1.75%\n    f_2_2 = 0.0221  # f(2,2) = 2.21%\n    coupon_rate = 0.06  # 6% coupon rate\n    face_value = 1000  # Assuming face value of the bond is $1000\n\n    # Do math calculation to get the answer\n    # Calculate the present value of each cash flow\n    pv_coupon1 = (coupon_rate * face_value) / (1 + f_0_1)\n    pv_coupon2 = (coupon_rate * face_value) / ((1 + f_1_1) * (1 + f_0_1))\n    pv_coupon3 = (coupon_rate * face_value + face_value) / ((1 + f_2_1) * (1 + f_1_1) * (1 + f_0_1))\n\n    # Sum the present values to get the total worth of the bond\n    bond_worth = pv_coupon1 + pv_coupon2 + pv_coupon3\n\n    # return answer\n    return bond_worth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-501",
        "python_solution": "",
        "ground_truth": null,
        "question": "By the conclusion of 2016, Corporation A had an accounts receivable totaling $50 million. By the conclusion of 2017, Corporation A had generated revenues of $60 million, with the year's accounts receivable amounting to $30. What should be the sum of cash collected from the clientele?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    accounts_receivable_2016 = 50000000\n    revenue_2017 = 60000000\n    accounts_receivable_2017 = 30000000\n    \n    # Do math calculation to get the answer\n    # The sum of cash collected from the clientele can be calculated by subtracting the ending accounts receivable in 2017 from the beginning accounts receivable in 2016 plus the revenue generated in 2017\n    cash_collected = accounts_receivable_2016 + revenue_2017 - accounts_receivable_2017\n    \n    # return answer\n    return cash_collected\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-502",
        "python_solution": "",
        "ground_truth": null,
        "question": "Two years earlier, a corporation released $20 million in long-term bonds at face value with a 9 percent coupon rate. The firm plans to release another $20 million in bonds and anticipates that the new issue will be priced at face value with a 7 percent coupon rate. The firm has no other outstanding liabilities and is taxed at a rate of 40 percent. What is the proper after-tax debt cost to calculate the firm's weighted average cost of capital?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    old_bond_coupon_rate = 0.09  # 9% coupon rate for the old bonds\n    new_bond_coupon_rate = 0.07  # 7% coupon rate for the new bonds\n    tax_rate = 0.40  # 40% tax rate\n\n    # Calculate the average coupon rate\n    average_coupon_rate = (old_bond_coupon_rate + new_bond_coupon_rate) / 2\n\n    # Calculate the after-tax cost of debt\n    after_tax_cost_of_debt = average_coupon_rate * (1 - tax_rate)\n\n    # return answer\n    return after_tax_cost_of_debt\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-503",
        "python_solution": "",
        "ground_truth": null,
        "question": "Two years prior, Johnson Industries bought equipment for $800,000. By the close of last year, the equipment was worth $720,000. If Johnson Industries uses the revaluation model, how much, if any, is recorded in Johnson's net income this year if the equipment's fair value has risen to $810,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 800000\n    value_last_year = 720000\n    current_fair_value = 810000\n    \n    # Do math calculation to get the answer\n    # Calculate the change in fair value since last year\n    change_in_value = current_fair_value - value_last_year\n    \n    # Since Johnson Industries uses the revaluation model, any increase in fair value is recognized in net income\n    net_income_impact = change_in_value\n    \n    # return answer\n    return net_income_impact\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-504",
        "python_solution": "",
        "ground_truth": null,
        "question": "Sagittarius Portfolio of Portfolios invests GBP 100 million in each of Gamma Hedge Fund and XYZ Hedge Fund. Sagittarius POP has a \"1 and 10\" fee structure. Management fees and incentive fees are calculated separately at the end of each year. After one year, net of their respective management and incentive fees, the investment in Gamma is valued at GBP80 million and the investment in XYZ is valued at GBP140 million. What is the yearly return to a shareholder in Sagittarius, after deducting fees at the portfolio of portfolios level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 100000000  # GBP 100 million for each fund\n    total_initial_investment = 2 * initial_investment  # Total initial investment in both funds\n    gamma_value_after_fees = 80000000  # GBP 80 million\n    xyz_value_after_fees = 140000000  # GBP 140 million\n    management_fee_rate = 0.01  # 1% management fee\n    incentive_fee_rate = 0.10  # 10% incentive fee\n\n    # Calculate total value after fees for both funds\n    total_value_after_fees = gamma_value_after_fees + xyz_value_after_fees\n\n    # Calculate management fees at the portfolio of portfolios level\n    management_fees = total_initial_investment * management_fee_rate\n\n    # Calculate incentive fees at the portfolio of portfolios level\n    # Incentive fee is calculated on the gain above the initial investment\n    total_gain = total_value_after_fees - total_initial_investment\n    incentive_fees = total_gain * incentive_fee_rate if total_gain > 0 else 0\n\n    # Calculate total fees at the portfolio of portfolios level\n    total_fees = management_fees + incentive_fees\n\n    # Calculate the yearly return to a shareholder after deducting fees\n    shareholder_return = total_value_after_fees - total_fees\n\n    # Calculate the yearly return percentage\n    yearly_return_percentage = (shareholder_return - total_initial_investment) / total_initial_investment * 100\n\n    # return answer\n    return yearly_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "|      | Beginning of Period Price(\u20ac) | End of Period Price(\u6bdb) | Total Dividends(\u20ac) |\n|------|-------------------------------|-------------------------|---------------------|\n| A    | 8.00                          | 10.00                   | 0.50                |\n| B    | 22.00                         | 19.00                   | 1.20                |\n| C    | 25.00                         | 25.00                   | 1.50                |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-505",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial analyst named Ahern from a certain investment firm recently compiled data for an equal-weighted index which includes assets A, B, and C: What is the combined return of this index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = {'A': 8.00, 'B': 22.00, 'C': 25.00}\n    end_prices = {'A': 10.00, 'B': 19.00, 'C': 25.00}\n    dividends = {'A': 0.50, 'B': 1.20, 'C': 1.50}\n    \n    # Calculate individual returns\n    returns = {}\n    for asset in ['A', 'B', 'C']:\n        capital_gain = end_prices[asset] - beginning_prices[asset]\n        total_return = capital_gain + dividends[asset]\n        returns[asset] = total_return / beginning_prices[asset]\n    \n    # Calculate the equal-weighted combined return\n    combined_return = sum(returns.values()) / len(returns)\n    \n    # return answer\n    return combined_return\n```"
        ]
    },
    {
        "tables": [
            "| Financial Statement for Company M | $ millions |\n| --- | --- |\n| Net Income | 212 |\n| Depreciation expense | 88 |\n| Increase in inventories | 50 |\n| Increase in accounts payable | 25 |\n| Purchase of fixed assets | 100 |\n| Increase in notes payable | 60 |\n| Decrease in long-term debt | 50 |\n| Interest expense | 100 |\n\n| Additional information | |\n| --- | --- |\n| Tax rate | 30% |\n| Beta | 0.8 |\n| Before-tax cost of debt | 5% |\n| D/A ratio | 40% |\n| Risk-free rate | 2.4% |\n| Market risk premium | 7% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-506",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is getting ready to compute the intrinsic value of Company N's equity utilizing the FCFF model with an infinite growth rate of 5%. The pertinent information can be found in the table below. What's the value of Company N's equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 212\n    depreciation_expense = 88\n    increase_in_inventories = 50\n    increase_in_accounts_payable = 25\n    purchase_of_fixed_assets = 100\n    increase_in_notes_payable = 60\n    decrease_in_long_term_debt = 50\n    interest_expense = 100\n    tax_rate = 0.3\n    beta = 0.8\n    before_tax_cost_of_debt = 0.05\n    d_a_ratio = 0.4\n    risk_free_rate = 0.024\n    market_risk_premium = 0.07\n    growth_rate = 0.05\n\n    # Calculate FCFF (Free Cash Flow to the Firm)\n    fcff = net_income + depreciation_expense - increase_in_inventories + increase_in_accounts_payable - purchase_of_fixed_assets + increase_in_notes_payable - decrease_in_long_term_debt - (interest_expense * (1 - tax_rate))\n\n    # Calculate WACC (Weighted Average Cost of Capital)\n    cost_of_equity = risk_free_rate + beta * market_risk_premium\n    cost_of_debt = before_tax_cost_of_debt * (1 - tax_rate)\n    equity_ratio = 1 - d_a_ratio\n    wacc = (equity_ratio * cost_of_equity) + (d_a_ratio * cost_of_debt)\n\n    # Calculate the intrinsic value of Company N's equity using the FCFF model with infinite growth rate\n    intrinsic_value_equity = fcff * (1 + growth_rate) / (wacc - growth_rate)\n\n    # return answer\n    return intrinsic_value_equity\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-507",
        "python_solution": "",
        "ground_truth": null,
        "question": "By the conclusion of 2016, XYZ Corporation possessed assets worth $10 million and shareholders' equity of $3 million. What are the liabilities of XYZ Corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    assets = 10000000\n    shareholders_equity = 3000000\n    \n    # Do math calculation to get the answer\n    liabilities = assets - shareholders_equity\n    \n    # return answer\n    return liabilities\n```"
        ]
    },
    {
        "tables": [
            "| Issuer             | Coupon Rate | Price   | Bond Description        |\n|--------------------|-------------|---------|-------------------------|\n| Ayrault, Inc. (Al) | 5.25%       | 100.200 | Callable at par in one  |\n|                    |             |         | year and two years from |\n|                    |             |         | today                   |",
            "| Exhibit 2. Binomial Interest Rate Trees | |\n| --- | --- |\n| Panel A Interest Rates Shift Down by 30 bps | | | | | |\n| Year 0, Year 1, Year 2 | | | | | |\n| | |5.1968% | |7.0037% | |\n| 3.7000% | | | |5.7342% | |\n| | |4.2548% | | | |\n| | | | |4.6947% | |\n\n| Panel B Interest Rates Shift Up by 30 bps | | | | | |\n| Year 0, Year 1, Year 2 | | | | | |\n| | |5.8605% | |7.7432% | |\n| 4.3000% | | | |6.3396% | |\n| | |4.7982% | | | |\n| | | | |5.1904% | |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-508",
        "python_solution": "",
        "ground_truth": null,
        "question": "Keeping in mind that each bond has three years left in its maturity, makes annual coupon payments, and has a BBB credit rating, when Jones constructs a binomial interest rate tree based on a 10% interest rate volatility assumption, with the present one-year rate being 1%, Panel A of Exhibit 2 gives an interest rate tree under the assumption that the benchmark yield curve drops by 30 bps. Panel B offers an interest rate tree presuming an increase in the benchmark yield curve by 30 bps. Jones concludes that the SM bond is currently being traded at an option-adjusted spread (OAS) of 13.95 bps in relation to the benchmark yield curve. Based on the data present in Exhibits 1 and 2, can you determine the effective duration for the SM bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.0525  # 5.25% coupon rate for Ayrault, Inc. (Al)\n    price = 100.200  # Price of the bond\n    OAS = 0.001395  # Option-Adjusted Spread of 13.95 bps\n    \n    # Interest rates from Panel A and Panel B\n    rates_panel_A = [0.037000, 0.051968, 0.070037, 0.057342, 0.042548, 0.046947]\n    rates_panel_B = [0.043000, 0.058605, 0.077432, 0.063396, 0.047982, 0.051904]\n    \n    # Calculate the present value of cash flows under each scenario\n    def present_value(rates, coupon, price, OAS):\n        pv = 0\n        for i, rate in enumerate(rates):\n            discount_rate = rate + OAS\n            if i < len(rates) - 1:  # Coupon payments\n                pv += coupon / (1 + discount_rate) ** (i + 1)\n            else:  # Principal repayment at maturity\n                pv += (coupon + 100) / (1 + discount_rate) ** (i + 1)\n        return pv\n    \n    pv_A = present_value(rates_panel_A, coupon_rate, price, OAS)\n    pv_B = present_value(rates_panel_B, coupon_rate, price, OAS)\n    \n    # Calculate effective duration\n    effective_duration = (pv_A - pv_B) / (2 * price * 0.003)  # 0.003 is the shift in yield curve (30 bps)\n    \n    # return answer\n    return effective_duration\n\n# Example usage\nprint(solution"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-509",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the year 2009, PlayJoy Ltd, a company that started operating in October of that year, bought 10,000 units of a toy costing \u20a410 each in October. The toy had a good sale in October. Expecting high sales in December, PlayJoy acquired another 5,000 units at \u20a411 each in November. During 2009, PlayJoy managed to sell 12,000 units each at a price of \u20a415. What would be the cost of goods sold by PlayJoy under the weighted average cost method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    units_october = 10000\n    cost_per_unit_october = 10\n    units_november = 5000\n    cost_per_unit_november = 11\n    units_sold = 12000\n    \n    # Calculate total cost and total units for weighted average\n    total_cost = (units_october * cost_per_unit_october) + (units_november * cost_per_unit_november)\n    total_units = units_october + units_november\n    \n    # Calculate weighted average cost per unit\n    weighted_avg_cost_per_unit = total_cost / total_units\n    \n    # Calculate cost of goods sold\n    cost_of_goods_sold = weighted_avg_cost_per_unit * units_sold\n    \n    # return answer\n    return cost_of_goods_sold\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-510",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the annual amortization expense for the third year if firm N employs the double-declining balance method to amortize an $80,000 patent with a useful life of 4 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 80000\n    useful_life = 4\n    depreciation_rate = 2 / useful_life\n    \n    # Calculate the book value at the end of each year\n    book_value = initial_cost\n    for year in range(1, 3):  # Calculate up to the second year\n        depreciation_expense = book_value * depreciation_rate\n        book_value -= depreciation_expense\n    \n    # Calculate the amortization expense for the third year\n    amortization_expense_third_year = book_value * depreciation_rate\n    \n    # return answer\n    return amortization_expense_third_year\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-511",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood that a portfolio with a projected return of 7% and a standard deviation of 13%, won't meet the minimum annual return target of 4%, set by an investor?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    projected_return = 7  # in percentage\n    standard_deviation = 13  # in percentage\n    minimum_return_target = 4  # in percentage\n\n    # Do math calculation to get the answer\n    # Using the normal distribution properties, we calculate the z-score\n    z_score = (minimum_return_target - projected_return) / standard_deviation\n\n    # Using the cumulative distribution function (CDF) of the standard normal distribution\n    # to find the probability that the return is less than the minimum target\n    import scipy.stats as stats\n    probability = stats.norm.cdf(z_score)\n\n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|----------|---------------------------|--------------------------------|\n| 1        | 25                        | 30                             |\n| 2        | 20                        | 30                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-512",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio intends to build a portfolio with the following two securities. If the portfolio's return is 21.5%, what is the weighting in Security 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_security1 = 25  # Expected annual return for Security 1 (%)\n    expected_return_security2 = 20  # Expected annual return for Security 2 (%)\n    portfolio_return = 21.5  # Portfolio's expected return (%)\n    \n    # Do math calculation to get the answer\n    # Let x be the weighting of Security 1, then (1 - x) is the weighting of Security 2\n    # The equation for the portfolio return is: x * expected_return_security1 + (1 - x) * expected_return_security2 = portfolio_return\n    \n    # Solving for x:\n    x = (portfolio_return - expected_return_security2) / (expected_return_security1 - expected_return_security2)\n    \n    # return answer\n    return x\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-513",
        "python_solution": "",
        "ground_truth": null,
        "question": "XY Corporation has established a defined benefit pension plan with $150m in assets and $135m in commitments. It is predicted that: The expected annual income of the pension plan is 7.5percent, with a volatility of 10percent. The liabilities are expected to increase yearly at a rate of 5 percent and have a variation of 4.5 percent. The correlation coefficient between income from assets and liability growth is 0.7. Determine the 95% risk of surplus of the pension.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    assets = 150000000  # in dollars\n    liabilities = 135000000  # in dollars\n    expected_income_rate = 0.075  # 7.5%\n    income_volatility = 0.10  # 10%\n    liability_growth_rate = 0.05  # 5%\n    liability_volatility = 0.045  # 4.5%\n    correlation = 0.7\n\n    # Calculate expected surplus\n    expected_surplus = assets * (1 + expected_income_rate) - liabilities * (1 + liability_growth_rate)\n\n    # Calculate variance of surplus\n    variance_assets = (assets * income_volatility) ** 2\n    variance_liabilities = (liabilities * liability_volatility) ** 2\n    covariance = 2 * correlation * assets * income_volatility * liabilities * liability_volatility\n    variance_surplus = variance_assets + variance_liabilities + covariance\n\n    # Calculate standard deviation of surplus\n    std_dev_surplus = variance_surplus ** 0.5\n\n    # Calculate 95% risk of surplus using the normal distribution (Z-score for 95% is approximately 1.645)\n    risk_of_surplus = expected_surplus - 1.645 * std_dev_surplus\n\n    # return answer\n    return risk_of_surplus\n```\n\nThis Python program calculates the 95% risk of surplus for the defined benefit pension plan by considering the expected income and liability growth rates, their volatilities, and the correlation between them. It uses the normal distribution to estimate the 95% risk level."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-514",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is thinking about incorporating ABC Corp. into his investment portfolio. The latest dividend payment by the company is 1.45 per share. He observes that ABC Corp.'s dividends have risen at a standard pace of 6 percent. John concluded that the required return on equity for ABC Corp. is 12%. Can you estimate the value of ABC Corp.'s stock based on this information?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_payment = 1.45\n    growth_rate = 0.06\n    required_return = 0.12\n    \n    # Do math calculation to get the answer\n    stock_value = dividend_payment / (required_return - growth_rate)\n    \n    # return answer\n    return stock_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-515",
        "python_solution": "",
        "ground_truth": null,
        "question": "A banker's acceptance with a term of 150 days has a quoted discount rate of 5.62% based on a 360-day year. What is the bond equivalent yield?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    discount_rate = 0.0562\n    term_days = 150\n    days_in_year = 360\n\n    # Do math calculation to get the answer\n    bond_equivalent_yield = (discount_rate * days_in_year) / (days_in_year - discount_rate * term_days)\n\n    # return answer\n    return bond_equivalent_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-516",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine the following 6x9 FRA, where the purchaser of the FRA consents to a contract rate of 6.35% on a notional value of 10 million USD. Assume a 30/360 day count basis. What would be the settlement sum for the vendor if the settlement rate is 6.85%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    contract_rate = 0.0635\n    settlement_rate = 0.0685\n    notional_value = 10000000  # 10 million USD\n    day_count_basis = 360\n    days = 180  # 6x9 FRA means 6 months (180 days)\n\n    # Do math calculation to get the answer\n    interest_difference = (settlement_rate - contract_rate) * notional_value\n    settlement_sum = interest_difference * (days / day_count_basis)\n\n    # return answer\n    return settlement_sum\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-517",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Orion Enterprises recently released deferred coupon bonds of $100 par value that will not make any coupon payments for the following four years, and will then offer regular yearly coupon payments at an 8% rate until the end of their 10-year maturity period, and these bonds are currently valued at $87.00, what is the yield to maturity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    current_price = 87\n    coupon_rate = 0.08\n    years_to_first_coupon = 4\n    total_maturity_years = 10\n    coupon_payments = [0] * years_to_first_coupon + [par_value * coupon_rate] * (total_maturity_years - years_to_first_coupon)\n    coupon_payments[-1] += par_value  # Add the par value to the last coupon payment for the maturity\n\n    # Function to calculate the yield to maturity using the Newton-Raphson method\n    def calculate_ytm(coupons, price, par, guess=0.1):\n        MAX_ITERATIONS = 1000\n        TOLERANCE = 1e-6\n        ytm = guess\n\n        for i in range(MAX_ITERATIONS):\n            ytm_old = ytm\n            npv = sum([coupon / (1 + ytm) ** (t + 1) for t, coupon in enumerate(coupons)]) + par / (1 + ytm) ** len(coupons)\n            npv -= price\n            derivative = sum([- (t + 1) * coupon / (1 + ytm) ** (t + 2) for t, coupon in enumerate(coupons)]) - (len(coupons) * par / (1 + ytm) ** (len(coupons) + 1))\n            ytm = ytm_old - npv / derivative\n\n            if abs(ytm - ytm_old) < TOLERANCE:\n                return ytm\n\n        return ytm\n\n    # Do math calculation to get the answer\n    yield_to_maturity = calculate_ytm(coupon_payments, current_price, par_value)\n\n    # return answer\n    return yield_to_maturity\n```\n\nThis Python program defines a function `solution` that calculates the yield to maturity (YTM) for the deferred coupon bonds of Orion Enterprises. The YTM is calculated using the Newton-Raphson method, which iteratively approximates the yield by adjusting the guess based on the net present"
        ]
    },
    {
        "tables": [
            "| Year | EPS  | DPS  | ROE |\n|------|------|------|-----|\n| 2009 | $3.20| $1.92| 12% |\n| 2008 | $3.60| $1.85| 17% |\n| 2007 | $2.44| $1.74| 13% |\n| 2006 | $2.08| $1.62| 15% |\n| 2005 | $2.76| $1.35| 11% |\n| 2004 | $2.25| $1.25| 9%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-518",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the identical information below and the same perpetual growth model, if a trader uses the mean value of the dividend growth rate between 2004 and 2009, along with the sustainable growth rate for 2009 to predict growth, and if the trader's required return is at 15 percent, what would be the anticipated value of the enterprise's common shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    eps_2009 = 3.20\n    dps_2009 = 1.92\n    roe_2009 = 0.12\n    required_return = 0.15\n    \n    # Calculate dividend growth rates for each year\n    dps_2004 = 1.25\n    dps_2005 = 1.35\n    dps_2006 = 1.62\n    dps_2007 = 1.74\n    dps_2008 = 1.85\n    dps_2009 = 1.92\n    \n    dividend_growth_rates = [\n        (dps_2005 - dps_2004) / dps_2004,\n        (dps_2006 - dps_2005) / dps_2005,\n        (dps_2007 - dps_2006) / dps_2006,\n        (dps_2008 - dps_2007) / dps_2007,\n        (dps_2009 - dps_2008) / dps_2008\n    ]\n    \n    # Calculate the mean dividend growth rate\n    mean_dividend_growth_rate = sum(dividend_growth_rates) / len(dividend_growth_rates)\n    \n    # Calculate the sustainable growth rate for 2009\n    payout_ratio_2009 = dps_2009 / eps_2009\n    sustainable_growth_rate_2009 = roe_2009 * (1 - payout_ratio_2009)\n    \n    # Use the mean dividend growth rate and sustainable growth rate to predict growth\n    growth_rate = (mean_dividend_growth_rate + sustainable_growth_rate_2009) / 2\n    \n    # Calculate the anticipated value of the enterprise's common shares using the perpetual growth model\n    share"
        ]
    },
    {
        "tables": [
            "|  |  |\n|---|---|\n| Acquisition cost | $60,000,000 |\n| Acquisition date | 1 January 2012 |\n| Patent expiration date | 31 December 2017 |\n| Total plant capacity of patented product | 60,000 units per year |\n| Production of patented product in fiscal year ended 31 December 2012 | 25,000 units |\n| Expected production of patented product during life of the patent | 225,000 units |"
        ],
        "topic": "Accounting",
        "question_id": "test-519",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following information pertains to a patent owned by TDC Corporation. If we use the units-of-production depreciation method, what will be the first year's amortization cost?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 60000000\n    total_expected_production = 225000\n    first_year_production = 25000\n    \n    # Do math calculation to get the answer\n    depreciation_per_unit = acquisition_cost / total_expected_production\n    first_year_amortization = depreciation_per_unit * first_year_production\n    \n    # return answer\n    return first_year_amortization\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-520",
        "python_solution": "",
        "ground_truth": null,
        "question": "Marie, the portfolio manager of BC pension, is currently contemplating on incorporating NY Inc. (New York Stock Exchange: NY) into her portfolio. After a thorough evaluation of the company and its competition, she discerns that the company's growth rate steadily decreases from 12 percent in the initial year to 6 percent in year five. The total dividends paid by NY in 2017 amounted to $0.22. The required return is calculated to be at 9 percent. What is the stock's inherent worth?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_growth_rate = 0.12  # 12% growth rate in the initial year\n    final_growth_rate = 0.06  # 6% growth rate in year five\n    dividends_2017 = 0.22  # Total dividends paid in 2017\n    required_return = 0.09  # Required return is 9%\n    \n    # Calculate the terminal growth rate (g) as the average of initial and final growth rates\n    g = (initial_growth_rate + final_growth_rate) / 2\n    \n    # Calculate the stock's inherent worth using the Gordon Growth Model (P = D1 / (r - g))\n    # D1 is the expected dividend in the next year, which is D0 * (1 + g)\n    D1 = dividends_2017 * (1 + g)\n    stock_worth = D1 / (required_return - g)\n    \n    # return answer\n    return stock_worth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-521",
        "python_solution": "",
        "ground_truth": null,
        "question": "The expected return for Portfolio C is 9% with a volatility of 20%. Meanwhile, the expected return for the market index is forecasted to be 7% with a volatility of 15%, and the correlation between Portfolio C and the market is anticipated to be 0.9. Given that the risk-free rate is observed to be 3%, can you calculate the Jensen's alpha for Portfolio C?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_portfolio_c = 0.09\n    expected_return_market = 0.07\n    risk_free_rate = 0.03\n    beta_portfolio_c = (0.20 * 0.15 * 0.9) / (0.15 ** 2)\n    \n    # Do math calculation to get the answer\n    jensens_alpha = expected_return_portfolio_c - (risk_free_rate + beta_portfolio_c * (expected_return_market - risk_free_rate))\n    \n    # return answer\n    return jensens_alpha\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-522",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ is a firm that trades in derivatives. This firm offloaded a five-year CDS protection on Firm E worth $10 million. The duration of this CDS contract is 3.5 years. After a quarter of a year, the credit spread on Firm E diminished from 225bps to 165 bps. Based on the details provided, how much profit can be expected if XYZ establishes a counterbalancing position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_amount = 10000000  # $10 million\n    initial_spread = 225 / 10000  # 225 bps in decimal form\n    final_spread = 165 / 10000  # 165 bps in decimal form\n    time_elapsed = 0.25  # one quarter of a year\n    duration = 3.5  # years\n\n    # Do math calculation to get the answer\n    # Calculate the profit from the change in spread\n    profit = notional_amount * (initial_spread - final_spread) * time_elapsed * duration\n\n    # return answer\n    return profit\n```\n\nThis program calculates the expected profit for XYZ firm from establishing a counterbalancing position after the credit spread on Firm E diminishes. The profit is calculated based on the change in spread, the notional amount of the CDS, the time elapsed since the inception of the CDS, and the duration of the CDS contract."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-523",
        "python_solution": "",
        "ground_truth": null,
        "question": "Due to marketing consumer staples, Bayside Essentials (BE) is capable of utilizing significant debt in its capital structure; in particular, 90 percent of the company's total assets of $450,000,000 are financed with debt capital. Its debt costs are 8 percent before taxes, and its equity capital costs are 12 percent. BE attained a pretax income of $5.1 million in 2006 and was taxed at a rate of 40 percent. What was BE's residual income?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 450000000\n    debt_ratio = 0.90\n    debt_cost = 0.08\n    equity_cost = 0.12\n    pretax_income = 5100000\n    tax_rate = 0.40\n    \n    # Calculate debt and equity amounts\n    debt_amount = total_assets * debt_ratio\n    equity_amount = total_assets - debt_amount\n    \n    # Calculate after-tax cost of debt\n    after_tax_debt_cost = debt_cost * (1 - tax_rate)\n    \n    # Calculate total cost of capital\n    total_cost_of_capital = (debt_amount * after_tax_debt_cost) + (equity_amount * equity_cost)\n    \n    # Calculate net income\n    net_income = pretax_income * (1 - tax_rate)\n    \n    # Calculate residual income\n    residual_income = net_income - total_cost_of_capital\n    \n    # return answer\n    return residual_income\n```"
        ]
    },
    {
        "tables": [
            "| Interest Rate Assumption | Present Value of Liabilities |\n|-------------------------|-------------------------------|\n| 6%                      | CAD 510.1 million           |\n| 7%                      | CAD 455.4 million           |\n| 8%                      | CAD 373.6 million           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-524",
        "python_solution": "",
        "ground_truth": null,
        "question": "A pension fund manager from Canada is trying to gauge the impact of changes in market interest rates on his pension obligations. He calculates the present value of these obligations under three potential interest rate circumstances: a foundational rate of 7%, a rate boosted by 100 basis points to 8%, and a rate lowered by 100 basis points to 6%. Based on the analysis outcomes provided below, what is the effective duration of the liabilities of the pension fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    PV_at_7_percent = 455.4  # Present Value of Liabilities at 7% interest rate in millions CAD\n    PV_at_8_percent = 373.6  # Present Value of Liabilities at 8% interest rate in millions CAD\n    PV_at_6_percent = 510.1  # Present Value of Liabilities at 6% interest rate in millions CAD\n    delta_rate = 0.01  # 100 basis points change in interest rate\n\n    # Do math calculation to get the answer\n    # Effective Duration formula: (PV_minus - PV_plus) / (2 * PV_at_base * delta_rate)\n    effective_duration = (PV_at_6_percent - PV_at_8_percent) / (2 * PV_at_7_percent * delta_rate)\n\n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [
            "| Path | Time 0 | Time 1 | Time 2 |\n|------|--------|--------|--------|\n| 1    | 1.500% | 2.8853%| 2.7183%|\n| 2    | 1.500  | 2.8853 | 1.6487 |\n| 3    | 1.500  | 1.7500 | 1.6487 |\n| 4    | 1.500  | 1.7500 | 1.0000 |",
            "| Bond   | Maturity | Coupon Rate |\n|--------|----------|-------------|\n| Bond C | 2 years  | 2.5%        |\n| Bond D | 3 years  | 3.0%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-525",
        "python_solution": "",
        "ground_truth": null,
        "question": "In his discussion about pathwise valuations being an alternative way of valuing bonds through a binomial interest rate tree, Thompson describes how Peterson uses the binomial interest rate tree to predict the potential interest rate paths for Bond M shown in Exhibit 9. Referencing Exhibits 6 and 9, what's the current value of Bond M's cash flows along Path 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    time_0_rate = 1.500 / 100  # Convert percentage to decimal\n    time_1_rate = 2.8853 / 100  # Convert percentage to decimal\n    time_2_rate = 1.6487 / 100  # Convert percentage to decimal\n    \n    coupon_rate = 2.5 / 100  # Convert percentage to decimal (assuming Bond M has the same coupon rate as Bond C)\n    face_value = 1000  # Assuming a standard face value for the bond\n    \n    # Cash flows along Path 2\n    cash_flow_year_1 = face_value * coupon_rate\n    cash_flow_year_2 = face_value * (1 + coupon_rate)\n    \n    # Discounting the cash flows along Path 2\n    discounted_cash_flow_year_1 = cash_flow_year_1 / (1 + time_0_rate)\n    discounted_cash_flow_year_2 = cash_flow_year_2 / ((1 + time_1_rate) * (1 + time_2_rate))\n    \n    # Sum of discounted cash flows\n    current_value = discounted_cash_flow_year_1 + discounted_cash_flow_year_2\n    \n    # return answer\n    return current_value\n```"
        ]
    },
    {
        "tables": [
            "\n| Year | Net Return (%) |\n|------|----------------|\n| 2008 | -34.8          |\n| 2009 | 32.2           |\n| 2010 | 11.1           |\n| 2011 | -1.4           |\n"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-526",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the 2012 return required to realize a trailing five-year geometric mean annualized return of 5% at the conclusion of 2012 for a wealth management company that produced the following annual returns in their US large-cap equity portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [-0.348, 0.322, 0.111, -0.014]\n    target_geometric_mean = 1.05  # 5% geometric mean annualized return\n\n    # Do math calculation to get the answer\n    # Calculate the product of the first four years' returns\n    product_first_four_years = 1\n    for ret in returns:\n        product_first_four_years *= (1 + ret)\n\n    # Calculate the required return for 2012\n    required_return_2012 = (target_geometric_mean ** 5 / product_first_four_years) - 1\n\n    # return answer\n    return required_return_2012\n```"
        ]
    },
    {
        "tables": [
            "|                        | Income Statement | Balance Sheet Changes                               |\n|------------------------|------------------|-----------------------------------------------------|\n| Revenue                | $22,100          | accounts receivable +$550<br> inventory -131<br> prepaid expense +6<br> accounts payable +1,230   |\n| Cost of goods sold     | $16,230          |                                                     |\n| Other operating expense| $508             |                                                     |\n| Depreciation expense   | $1,500           |                                                     |"
        ],
        "topic": "Accounting",
        "question_id": "test-527",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the financial records of Corporation X provided, what is the quantity of cash disbursed to vendors in 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold = 16230\n    accounts_payable_increase = 1230\n    \n    # Do math calculation to get the answer\n    cash_disbursed_to_vendors = cost_of_goods_sold - accounts_payable_increase\n    \n    # return answer\n    return cash_disbursed_to_vendors\n```"
        ]
    },
    {
        "tables": [
            "| Assets                           | 31 Dec 2017 | 31 Dec 2016 |\n|----------------------------------|-------------|-------------|\n| Total current assets             | 11,930      | 11,564      |\n| Total non-current assets         | 30,567      | 32,713      |\n| Total assets                     | 42,497      | 44,277      |\n| Total current liabilities        | 10,210      | 9,674       |\n| Total non-current liabilities    | 6,747       | 8,205       |\n| Total liabilities                | 16,958      | 17,880      |\n| Issued capital                   | 1,229       | 1,229       |\n| Share premium                    | 570         | 599         |\n| Retained earnings                | 24,794      | 22,302      |\n| Other components of equity       | 508         | 3,346       |\n| Treasury shares                  | (1,591)     | (1,099)     |\n| Equity attributable to owners of parent | 25,509  | 26,376  |\n| Non-controlling interests        | 31          | 21          |\n| Total equity                     | 25,540      | 26,397      |\n| Total equity and liabilities     | \u00a342,497     | \u00a344,277     |"
        ],
        "topic": "Accounting",
        "question_id": "test-528",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the financial leverage ratio for SAP Group on December 31, 2017, based on the data provided in the Exhibit?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets_2017 = 42497\n    total_equity_2017 = 25540\n    \n    # Do math calculation to get the answer\n    financial_leverage_ratio = total_assets_2017 / total_equity_2017\n    \n    # return answer\n    return financial_leverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-529",
        "python_solution": "",
        "ground_truth": null,
        "question": "Currently, XYZ is rated A in terms of credit and has issued two-year zero-coupon bonds. The market anticipates that the company will either maintain its A rating, be downgraded to BBB, or upgraded to AA in the span of a year with chances of 85%, 10%, and 5%, respectively. Presuming a flat risk-free yield curve with a 1% value, and credit spreads of 70, 100 and 300 basis points for the AA, A, and BBB ratings respectively, with all interest rates compounding annually, what is the predicted worth of a zero-coupon bond after a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.01  # 1% risk-free rate\n    probability_AA = 0.05  # 5% chance of being upgraded to AA\n    probability_A = 0.85  # 85% chance of maintaining A rating\n    probability_BBB = 0.10  # 10% chance of being downgraded to BBB\n    spread_AA = 0.07  # 70 basis points for AA rating\n    spread_A = 0.10  # 100 basis points for A rating\n    spread_BBB = 0.30  # 300 basis points for BBB rating\n    face_value = 1000  # Assuming the face value of the bond is $1000\n    years_to_maturity = 1  # The bond matures in 1 year from now\n\n    # Do math calculation to get the answer\n    # Calculate the yield for each scenario\n    yield_AA = risk_free_rate + spread_AA\n    yield_A = risk_free_rate + spread_A\n    yield_BBB = risk_free_rate + spread_BBB\n\n    # Calculate the present value of the bond for each scenario\n    present_value_AA = face_value / (1 + yield_AA)\n    present_value_A = face_value / (1 + yield_A)\n    present_value_BBB = face_value / (1 + yield_BBB)\n\n    # Calculate the expected present value of the bond\n    expected_present_value = (probability_AA * present_value_AA +\n                              probability_A * present_value_A +\n                              probability_BBB * present_value_BBB)\n\n    # return answer\n    return expected_present_value\n```\n\nThis program calculates the expected present value of a zero-coupon bond after one year, considering the probabilities of the bond being rated AA, A, or BBB and the corresponding credit spreads."
        ]
    },
    {
        "tables": [
            "| Asset Class     | Geometric Return(%) |\n| --------------  | ------------------- |\n| Equities        | 8.0                 |\n| Corporate Bonds | 6.5                 |\n| Treasury bills  | 2.5                 |\n| Inflation       | 2.1                 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-530",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the reported historical geometric returns for the real rate of return for equities according to the expert?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equities_return = 8.0\n    inflation_rate = 2.1\n    \n    # Do math calculation to get the answer\n    real_rate_of_return = (1 + equities_return / 100) / (1 + inflation_rate / 100) - 1\n    real_rate_of_return_percent = real_rate_of_return * 100\n    \n    # return answer\n    return real_rate_of_return_percent\n```"
        ]
    },
    {
        "tables": [
            "| | Roil =30% | Roil=15% | Roil=10% |\n| - | - | - | - |\n| RMkt=25% | 30% | 0 | 0 |\n| RMkt=20% | 0 | 40% | 0 |\n| RMkt=0% | 0 | 0 | 30% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-531",
        "python_solution": "",
        "ground_truth": null,
        "question": "Analyst John has compiled the following data for the return on the market and the return on Crude Oil. Can you compute the covariance of returns between the market and Crude Oil? Probability Matrix",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = [\n        [0.30, 0.00, 0.00],\n        [0.00, 0.40, 0.00],\n        [0.00, 0.00, 0.30]\n    ]\n    \n    returns_market = [0.25, 0.20, 0.00]\n    returns_oil = [0.30, 0.15, 0.10]\n    \n    mean_market = sum(probabilities[i][j] * returns_market[i] for i in range(3) for j in range(3))\n    mean_oil = sum(probabilities[i][j] * returns_oil[j] for i in range(3) for j in range(3))\n    \n    # Do math calculation to get the answer\n    covariance = sum(probabilities[i][j] * (returns_market[i] - mean_market) * (returns_oil[j] - mean_oil) for i in range(3) for j in range(3))\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-532",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond with a Macaulay duration of 6.0, modified duration of 6.5, and convexity of 50.25 experiences a decrease in yield to maturity by 50 bps, what will be the anticipated percentage change in its price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    macaulay_duration = 6.0\n    modified_duration = 6.5\n    convexity = 50.25\n    yield_change_bps = 50  # 50 basis points\n    \n    # Convert basis points to decimal\n    yield_change_decimal = yield_change_bps / 10000\n    \n    # Do math calculation to get the answer\n    # Calculate the percentage change in price using modified duration and convexity\n    percentage_change_due_to_duration = -modified_duration * yield_change_decimal\n    percentage_change_due_to_convexity = 0.5 * convexity * (yield_change_decimal ** 2)\n    \n    # Total anticipated percentage change in price\n    total_percentage_change = percentage_change_due_to_duration + percentage_change_due_to_convexity\n    \n    # return answer\n    return total_percentage_change\n```"
        ]
    },
    {
        "tables": [
            "| Hi | P(Hi|Good) | P(Hi|Poor) |\n|---|------------|------------|\n| 0 | 0.1           | 0.5            |\n| 10 | 0.3           | 0.3            |\n| 20 | 0.6           | 0.2            |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-533",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that there's a 0.4 chance of a strong economy and a 0.6 chance of a weak economy. The table below shows the conditional probabilities of product Z's profit. What will be the anticipated profit of product Z?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_strong_economy = 0.4\n    P_weak_economy = 0.6\n    \n    # Conditional probabilities of profit given economy status\n    P_profit_given_strong = {0: 0.1, 10: 0.3, 20: 0.6}\n    P_profit_given_weak = {0: 0.5, 10: 0.3, 20: 0.2}\n    \n    # Possible profit values\n    profits = [0, 10, 20]\n    \n    # Calculate expected profit\n    expected_profit = 0\n    for profit in profits:\n        P_profit = (P_profit_given_strong[profit] * P_strong_economy) + (P_profit_given_weak[profit] * P_weak_economy)\n        expected_profit += profit * P_profit\n    \n    # return answer\n    return expected_profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-534",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that ABC Corporation saw a rise in operating income by 16%, and a 10% increase in units sold. If the financial leverage degree (DFL) of ABC Corporation is 1.5, what is most likely the degree of total leverage (DTL) for ABC Corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_income_change = 16  # Percentage increase in operating income\n    units_sold_change = 10  # Percentage increase in units sold\n    DFL = 1.5  # Degree of Financial Leverage\n    \n    # Do math calculation to get the answer\n    DOL = operating_income_change / units_sold_change  # Degree of Operating Leverage\n    DTL = DOL * DFL  # Degree of Total Leverage\n    \n    # return answer\n    return DTL\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-535",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio is made up of options on Apple and Verizon. The Apple options have a delta of 1000, while the Verizon options have a delta of 20000. The share price of Apple is $120, and Verizon's share price is $30. If we assume that the daily volatility of Apple is 2% and the daily volatility of Verizon is 1%, and the correlation between the daily changes is 0.3, what is the 5-day 95% VaR?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    delta_apple = 1000\n    delta_verizon = 20000\n    price_apple = 120\n    price_verizon = 30\n    volatility_apple = 0.02\n    volatility_verizon = 0.01\n    correlation = 0.3\n    days = 5\n    confidence_level = 1.645  # 95% confidence level for standard normal distribution\n\n    # Calculate the value of the portfolio in terms of the underlying stocks\n    value_apple = delta_apple * price_apple\n    value_verizon = delta_verizon * price_verizon\n    portfolio_value = value_apple + value_verizon\n\n    # Calculate the variance and standard deviation of the portfolio\n    variance_apple = (value_apple * volatility_apple) ** 2\n    variance_verizon = (value_verizon * volatility_verizon) ** 2\n    covariance = 2 * correlation * value_apple * volatility_apple * value_verizon * volatility_verizon\n    portfolio_variance = variance_apple + variance_verizon + covariance\n    portfolio_std_dev = portfolio_variance ** 0.5\n\n    # Calculate the 5-day 95% VaR\n    var_5day = portfolio_value * confidence_level * (portfolio_std_dev / portfolio_value) * (days ** 0.5)\n\n    # return answer\n    return var_5day\n```"
        ]
    },
    {
        "tables": [
            "| CompanyM            | $(millions) |\n|---------------------|-------------|\n| Operating income (EBIT) | 2,000       |\n| Depreciation expense     | 750         |\n| Interest expense         | 300         |\n| Increase in accounts receivable | 1,000   |\n| Increase in inventories  | 100         |\n| Increase in accounts payable | 500     |\n| Purchases of PP&E        | 600         |\n| Borrowing (repayment)    | 400         |\n| Tax rate                 | 30%         |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-536",
        "python_solution": "",
        "ground_truth": null,
        "question": "As per the financial report, what is the FCFE for Company N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_income_EBIT = 2000  # in millions\n    depreciation_expense = 750  # in millions\n    interest_expense = 300  # in millions\n    increase_in_accounts_receivable = 1000  # in millions\n    increase_in_inventories = 100  # in millions\n    increase_in_accounts_payable = 500  # in millions\n    purchases_of_PP_E = 600  # in millions\n    borrowing_repayment = 400  # in millions\n    tax_rate = 0.30\n\n    # Do math calculation to get the answer\n    # Calculate Net Income\n    net_income = operating_income_EBIT - interest_expense * (1 - tax_rate)\n\n    # Calculate FCFE\n    fcfe = net_income + depreciation_expense - increase_in_accounts_receivable - increase_in_inventories + increase_in_accounts_payable - purchases_of_PP_E + borrowing_repayment\n\n    # return answer\n    return fcfe\n```"
        ]
    },
    {
        "tables": [
            "|         |     |\n| ------- | --- |\n| ROE     | 10% |\n| Growth rate (first three years) | 6.0% |\n| Growth rate (after first three years) | 4.0% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-537",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is assessing the sustainable growth rate of Firm M and has gathered the following data in the provided table. What is the dividend payout ratio of Firm M?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ROE = 0.10\n    growth_rate_first_three_years = 0.06\n    growth_rate_after_first_three_years = 0.04\n    \n    # Do math calculation to get the answer\n    # Sustainable Growth Rate (SGR) = ROE * (1 - Dividend Payout Ratio)\n    # For the first three years:\n    SGR_first_three_years = growth_rate_first_three_years\n    # For the years after the first three years:\n    SGR_after_first_three_years = growth_rate_after_first_three_years\n    \n    # Since the growth rate changes after the first three years, we use the average SGR for simplicity\n    average_SGR = (SGR_first_three_years + SGR_after_first_three_years) / 2\n    \n    # Solving for Dividend Payout Ratio (DPR)\n    # SGR = ROE * (1 - DPR)\n    # DPR = 1 - (SGR / ROE)\n    DPR = 1 - (average_SGR / ROE)\n    \n    # return answer\n    return DPR\n```"
        ]
    },
    {
        "tables": [
            "| Maturity | Coupon | Price |\n|---|---|---|\n| 6 months | 4.5% | 101.47 |\n| 1 year | 6.0% | 102.75 |\n| 2 years | 7.0% | 100.32 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-538",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the data table providing details about three bonds with twice-yearly coupon payments, what is the discount factor for d(1)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_6_months = 0.045 / 2  # Convert annual coupon to semi-annual\n    price_6_months = 101.47\n    face_value = 100  # Assuming face value of the bond is 100\n    \n    # Calculate the cash flows for the 6-month bond\n    cash_flow_6_months = face_value * coupon_6_months + face_value\n    \n    # Do math calculation to get the discount factor d(1)\n    discount_factor_d1 = price_6_months / cash_flow_6_months\n    \n    # return answer\n    return discount_factor_d1\n```"
        ]
    },
    {
        "tables": [
            "|                    | Maturity (Years) |     |     |     |\n|--------------------|------------------|-----|-----|-----|\n|                    | 1                | 2   | 3   | 4   |\n| Government spot rate | 2.25%           | 2.70% | 3.30% | 4.05% |\n| Swap spread        | 0.25%           | 0.30% | 0.45% | 0.70% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-539",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Johnson collects data on spot rates for current annual-coupon government bonds and swap spreads, as shown in the Exhibit below, and purchased a government bond, he would receive an almost risk-free annualized return. According to the no-arbitrage principle, what could Johnson demonstrate the forward price of a one-year government bond, set to be issued in one year, to be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_1yr = 0.0225\n    spot_rate_2yr = 0.0270\n    swap_spread_1yr = 0.0025\n    swap_spread_2yr = 0.0030\n    \n    # Calculate the forward rate using the no-arbitrage principle\n    # Formula: (1 + spot_rate_2yr + swap_spread_2yr)^2 / (1 + spot_rate_1yr + swap_spread_1yr) - 1\n    forward_rate = ((1 + spot_rate_2yr + swap_spread_2yr)**2 / (1 + spot_rate_1yr + swap_spread_1yr)) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-540",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming equal financing from each source and a marginal tax rate of 30%, what is the weighted average cost of capital (%) if a company's pre-tax costs of debt, preferred stock, and equity are 12%, 14%, and 16%, respectively?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_debt_pre_tax = 0.12\n    cost_of_preferred_stock = 0.14\n    cost_of_equity = 0.16\n    marginal_tax_rate = 0.30\n    weight_of_debt = 1/3\n    weight_of_preferred_stock = 1/3\n    weight_of_equity = 1/3\n    \n    # Do math calculation to get the answer\n    # After-tax cost of debt\n    cost_of_debt_after_tax = cost_of_debt_pre_tax * (1 - marginal_tax_rate)\n    \n    # Weighted average cost of capital (WACC)\n    wacc = (weight_of_debt * cost_of_debt_after_tax) + (weight_of_preferred_stock * cost_of_preferred_stock) + (weight_of_equity * cost_of_equity)\n    \n    # Convert to percentage\n    wacc_percentage = wacc * 100\n    \n    # return answer\n    return wacc_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-541",
        "python_solution": "",
        "ground_truth": null,
        "question": "Several months down the line, Jordan gets a phone call from Fatimah. She has now become a board member of the Polar Foundation for Medical Advancements (PFMA). PFMA was created to fund a range of medical research endeavors. Fatimah is thrilled and requests Jordan to work out the return objective of PFMA's portfolio. Kyoto points out the following:\u2022 PFMA\u2019s main investment goal is to preserve the real purchasing power of its portfolio after distributions.\u2022 The risk-free rate is 4.0%.\u2022 An expected inflation rate is 3.5%.\u2022 The portfolio\u2019s standard deviation is 15.0%.\u2022 The cost of earning investment returns is 50 bp.\u2022 PFMA aims for a 5.5% annual distribution of assets. What is PFMA\u2019s return objective?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 4.0  # in percent\n    expected_inflation_rate = 3.5  # in percent\n    cost_of_earning_returns = 0.5  # in percent (50 basis points)\n    annual_distribution_rate = 5.5  # in percent\n\n    # Do math calculation to get the answer\n    # The return objective is calculated by adding the risk-free rate, expected inflation rate, cost of earning returns, and the annual distribution rate\n    return_objective = risk_free_rate + expected_inflation_rate + cost_of_earning_returns + annual_distribution_rate\n\n    # return answer\n    return return_objective\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-542",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the second model, given that the present short-term rate stands at 5%, the annual drift is 80bps, and the standard deviation of the short-term rate is 3%. Moreover, consider the ex-post realization of the dw random variable being 0.3. What would the interest rate be in the central node after building a 2-period interest rate tree with yearly periods by the conclusion of the second year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_rate = 0.05  # 5%\n    annual_drift = 0.008  # 80bps\n    std_dev = 0.03  # 3%\n    dw_realization = 0.3\n    \n    # Do math calculation to get the answer\n    # Calculate the rate after one year\n    rate_after_one_year = initial_rate + annual_drift + std_dev * dw_realization\n    \n    # Calculate the rate after two years at the central node\n    # Assuming the central node has the same drift and standard deviation applied again\n    rate_after_two_years = rate_after_one_year + annual_drift + std_dev * dw_realization\n    \n    # return answer\n    return rate_after_two_years\n```\n\nThis Python program calculates the interest rate at the central node after two years in a 2-period interest rate tree, given the initial short-term rate, annual drift, standard deviation, and the ex-post realization of the dw random variable."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-543",
        "python_solution": "",
        "ground_truth": null,
        "question": "The joint probability distribution of random variables A and B is presented by f{(a,b)}=k * a * b where a = 1,2,3, b = 1,2,3, and k is a positive constant. What is the likelihood that A+B will go beyond 5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    k = 1  # Assuming k is 1 for simplicity, as it does not affect the relative probabilities\n    count_beyond_5 = 0\n    total_combinations = 0\n    \n    # Iterate over all possible values of A and B\n    for a in range(1, 4):  # a = 1, 2, 3\n        for b in range(1, 4):  # b = 1, 2, 3\n            total_combinations += 1\n            if a + b > 5:\n                count_beyond_5 += 1\n    \n    # Calculate the probability\n    probability_beyond_5 = count_beyond_5 / total_combinations\n    \n    # return answer\n    return probability_beyond_5\n```\n\nThis program calculates the probability that the sum of A and B exceeds 5 by iterating over all possible combinations of A and B, counting the number of combinations where A + B > 5, and then dividing by the total number of combinations."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-544",
        "python_solution": "",
        "ground_truth": null,
        "question": "If each futures contract is for 100 shares and the company undergoes a 2-for-1 split, how many shares does each futures contract now cover?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_shares_per_contract = 100\n    split_ratio = 2\n    \n    # Do math calculation to get the answer\n    new_shares_per_contract = initial_shares_per_contract * split_ratio\n    \n    # return answer\n    return new_shares_per_contract\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-545",
        "python_solution": "",
        "ground_truth": null,
        "question": "We have a bond assortment containing two bonds, namely bond X and bond Y. The worth of bond X is $60 million, while bond Y is worth $40 million. The one-year default probability for bond X is 5% with a recovery rate of 60%, whereas bond Y has a default probability of 7% and a recovery rate of 50%. Determine the anticipated credit loss for this collection over one year, given that the likelihood of both bonds defaulting is 0.7% and the default relationship is observed to be 20%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_X_value = 60000000\n    bond_Y_value = 40000000\n    bond_X_default_prob = 0.05\n    bond_Y_default_prob = 0.07\n    bond_X_recovery_rate = 0.60\n    bond_Y_recovery_rate = 0.50\n    joint_default_prob = 0.007\n    correlation = 0.20\n\n    # Calculate individual expected credit losses\n    bond_X_expected_loss = bond_X_value * bond_X_default_prob * (1 - bond_X_recovery_rate)\n    bond_Y_expected_loss = bond_Y_value * bond_Y_default_prob * (1 - bond_Y_recovery_rate)\n\n    # Calculate joint expected credit loss\n    joint_expected_loss = (bond_X_value + bond_Y_value) * joint_default_prob * (1 - (bond_X_recovery_rate + bond_Y_recovery_rate) / 2)\n\n    # Total expected credit loss\n    total_expected_loss = bond_X_expected_loss + bond_Y_expected_loss - joint_expected_loss\n\n    # return answer\n    return total_expected_loss\n```"
        ]
    },
    {
        "tables": [
            "|                                               | REIT A        |\n|-----------------------------------------------|---------------|\n| Estimated 12 months cash net operating income (NOI) | $ 280,000    |\n| Cash and equivalents                          | $ 335,000    |\n| Accounts receivable                           | $ 230,000    |\n| Debt and other liabilities                    | $ 1,680,000  |\n|                                               |               |\n| Shares outstanding                            | 82,000       |\n| Assumed cap rate                              | 8.00%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-546",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share value of REIT B when the net asset value valuation method is applied?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    NOI = 280000\n    cash_and_equivalents = 335000\n    accounts_receivable = 230000\n    debt_and_other_liabilities = 1680000\n    shares_outstanding = 82000\n    cap_rate = 0.08\n\n    # Calculate the total assets\n    total_assets = NOI / cap_rate\n\n    # Calculate the net asset value (NAV)\n    NAV = total_assets + cash_and_equivalents + accounts_receivable - debt_and_other_liabilities\n\n    # Calculate the per share value\n    per_share_value = NAV / shares_outstanding\n\n    # return answer\n    return per_share_value\n```"
        ]
    },
    {
        "tables": [
            "|                      | 2018 | 2019 |\n|----------------------|------|------|\n| Revenue              | 5000 | 7000 |\n| Cost                 | 2000 | 2300 |\n| Operating income     | 3000 | 4700 |\n| Net profit           | 1650 | 2300 |\n| Total assets         | 4000 | 6000 |\n| Total liabilities    | 1200 | 900  |\n| Equity               | 2800 | 5100 |",
            "|                        | 2018  | 2019  |\n| ---------------------- | ----  | ----  |\n| Revenue                | 2000  | 2500  |\n| Cost                   | 1200  | 1300  |\n| Operating income       | 800   | 1200  |\n| Net profit             | 460   | 820   |\n| Dividends paid         | 230   | 410   |\n| Total assets           | 1000  | 1100  |\n| Total liabilities      | 600   | 650   |\n| Equity                 | 400   | 450   |"
        ],
        "topic": "Accounting",
        "question_id": "test-547",
        "python_solution": "",
        "ground_truth": null,
        "question": "The educational firm based in China, company PZ, operates under IFRS. In 2018, it had a passive equity ownership interest of 15% in the T-internet company. By the close of 2018, PZ decided to increase its ownership to 50% as of 1st January 2019, via a cash purchase. There have been no transactions between companies. In the table containing financial statements for both companies that follows: Could you determine the total liabilities for company PZ under the proportionate consolidation method for 2019?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    PZ_liabilities_2019 = 650\n    T_internet_liabilities_2019 = 900\n    PZ_ownership_percentage_2019 = 0.50  # 50% ownership\n    \n    # Do math calculation to get the answer\n    proportionate_consolidated_liabilities = PZ_liabilities_2019 + (T_internet_liabilities_2019 * PZ_ownership_percentage_2019)\n    \n    # return answer\n    return proportionate_consolidated_liabilities\n```"
        ]
    },
    {
        "tables": [
            "|     |             |\n|-----|-------------|\n| Revenue | $5,000,000 |\n| Cost of goods sold | $3,000,000 |\n| SG&A | $100,000 |\n| Interest expense | $200,000 |\n| Tax expense | $100,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-548",
        "python_solution": "",
        "ground_truth": null,
        "question": "In this document, it is revealed that the operating income amounts to:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 5000000\n    cost_of_goods_sold = 3000000\n    sg_and_a = 100000\n    interest_expense = 200000\n    tax_expense = 100000\n    \n    # Do math calculation to get the answer\n    # Operating income is calculated by subtracting Cost of goods sold and SG&A from Revenue\n    operating_income = revenue - cost_of_goods_sold - sg_and_a\n    \n    # return answer\n    return operating_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-549",
        "python_solution": "",
        "ground_truth": null,
        "question": "A risk analyst calculates daily variance hth_tht\u200b using a GARCH method on daily yield rt:ht=\u03b10\u2004+\u03b11rt\u221212+\u03b2ht\u22121,\u2004with\u2004\u03b10=0.005,\u03b11\u2004=0.04,\u03b2=0.94r_t:h_t=\\alpha_0\\;+\\alpha_1r_{t-1}^2+\\beta h_{t-1},\\;with\\;\\alpha_0=0.005,\u03b11\\;=0.04,\\beta=0.94rt\u200b:ht\u200b=\u03b10\u200b+\u03b11\u200brt\u221212\u200b+\u03b2ht\u22121\u200b,with\u03b10\u200b=0.005,\u03b11\u200b=0.04,\u03b2=0.94. The long-term annual volatility is roughly.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    alpha0 = 0.005\n    alpha1 = 0.04\n    beta = 0.94\n    \n    # Calculate the long-term variance\n    long_term_variance = alpha0 / (1 - alpha1 - beta)\n    \n    # Convert daily variance to annual variance\n    annual_variance = long_term_variance * 252  # Assuming 252 trading days in a year\n    \n    # Calculate annual volatility (standard deviation)\n    annual_volatility = annual_variance ** 0.5\n    \n    # return answer\n    return annual_volatility\n```"
        ]
    },
    {
        "tables": [
            "| Year ending 31 December | 2012 |\n|-------------------------|------|\n| Revenue                | 2,230|\n| Operating income       | 322  |\n| Net income             | 102  |\n| Total assets           | 2,100|\n| Shareholders' equity   | 950  |"
        ],
        "topic": "Accounting",
        "question_id": "test-550",
        "python_solution": "",
        "ground_truth": null,
        "question": "P-tech Corporation, adheres to US GAAP and has been growing by purchasing other web-based businesses, the biggest of which is Surge web business. Currently, P-tech Corporation is establishing a 50/50 joint venture with Bravo company where they will together govern Surge web business. P-tech's accounting strategy for the joint venture will employ the equity method. Bravo company, complying with IFRS, will apply the proportionate consolidation method for their joint venture accounting. Joseph, a CFA, is an employee at Investment Equity Corp, and he has predicted the financial specifics for the joint venture in 2012. Joseph is making his approximations regarding each company\u2019s profits and overall financial performance. In light of Joseph's projections, what will the Surge web business's total asset (in \uffe5 millions) be at the end of 2012, as noted in the chart below, that Bravo company will include in their consolidated financial statements?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets_surge = 2100  # Total assets of Surge web business in \uffe5 millions\n    joint_venture_share = 0.5  # 50/50 joint venture\n    \n    # Do math calculation to get the answer\n    # Bravo company will apply the proportionate consolidation method, so they will include 50% of Surge's total assets\n    assets_included_by_bravo = total_assets_surge * joint_venture_share\n    \n    # return answer\n    return assets_included_by_bravo\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-551",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a property generates an annual yield of 19.9%, shows a standard deviation of returns of 18.5%, and has a market correlation of 0.9, with the market's standard deviation of returns being 15.9% and a risk-free rate of 1%, what is the beta for this property?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    property_std_dev = 18.5  # Standard deviation of property returns in percentage\n    market_std_dev = 15.9    # Standard deviation of market returns in percentage\n    correlation = 0.9        # Correlation between property and market returns\n\n    # Do math calculation to get the answer\n    beta = (property_std_dev / market_std_dev) * correlation\n\n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-552",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following calculations have been derived for XYZ Inc.: Demand curve: P = 150 \u2013 5 \u00d7 Q Total revenue curve: TR = 150 \u00d7 Q \u2013 5 \u00d7 Q2 Marginal revenue curve: MR = 150 \u2013 10 \u00d7 Q Total cost curve: TC = Q3 \u2013 10 \u00d7 Q2 + 73 \u00d7 Q + 120 Average cost curve: AC = Q2 \u2013 10 \u00d7 Q + 73 + 120/Q Marginal cost curve: MC = 3 \u00d7 Q2 \u2013 20 \u00d7 Q + 73 P stands for price per unit, and Q stands for cost per unit. What output (in units) will maximize the profit for XYZ Inc.?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    # We need to find the output Q that maximizes profit, which is where MR = MC\n    \n    # Define the functions for MR and MC\n    def MR(Q):\n        return 150 - 10 * Q\n    \n    def MC(Q):\n        return 3 * Q**2 - 20 * Q + 73\n    \n    # Do math calculation to get the answer\n    # We need to solve for Q where MR = MC\n    # This involves solving a cubic equation, which can be complex, so we'll use a numerical method (e.g., Newton's method)\n    \n    # Initial guess for Q\n    Q = 5  # Starting with an arbitrary guess\n    \n    # Newton's method to find the root\n    def f(Q):\n        return MR(Q) - MC(Q)\n    \n    def f_prime(Q):\n        return -10 - (6 * Q - 20)\n    \n    # Iterate to find the root\n    for _ in range(100):  # Limit iterations to prevent infinite loop\n        Q = Q - f(Q) / f_prime(Q)\n    \n    # return answer\n    return Q\n\n# Example usage\nprint(solution())\n```\n\nThis Python program defines the marginal revenue (MR) and marginal cost (MC) functions based on the given equations. It then uses Newton's method to find the value of Q where MR equals MC, which is the output that maximizes profit for XYZ Inc. The initial guess for Q is set to 5, and the program iterates to find the root of the equation MR(Q) - MC(Q) = 0."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-553",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher is analyzing a collection that includes 2,500 non-prime mortgages and 800 prime home loans. Out of the non-prime mortgages, 500 are delayed in their payments. Out of the prime home loans, 64 are delayed in their payments. If the researcher randomly picks a home loan from the collection and it is presently delayed on its payments, what is the likelihood that it is a non-prime mortgage?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    non_prime_mortgages = 2500\n    prime_home_loans = 800\n    delayed_non_prime_mortgages = 500\n    delayed_prime_home_loans = 64\n    \n    # Do math calculation to get the answer\n    total_delayed_loans = delayed_non_prime_mortgages + delayed_prime_home_loans\n    probability_non_prime_given_delayed = delayed_non_prime_mortgages / total_delayed_loans\n    \n    # return answer\n    return probability_non_prime_given_delayed\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-554",
        "python_solution": "",
        "ground_truth": null,
        "question": "There were no additions to or subtractions from the portfolio during the year. Fees for administration are determined by the value at the end of the period. The fees for administration and incentive are computed separately. What's the return after deductions for the client given the following details: Starting portfolio assets valued at $100M, portfolio assets at the period's close (prior to fee deductions) amounting to $110M, a management fee pegged to the assets under management at 2%, an incentive fee based on the gains of 20%, and a soft hurdle rate of 8%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    starting_assets = 100000000  # $100M\n    ending_assets_before_fees = 110000000  # $110M\n    management_fee_rate = 0.02  # 2%\n    incentive_fee_rate = 0.20  # 20%\n    soft_hurdle_rate = 0.08  # 8%\n\n    # Calculate the management fee\n    management_fee = ending_assets_before_fees * management_fee_rate\n\n    # Calculate the gain\n    gain = ending_assets_before_fees - starting_assets\n\n    # Calculate the incentive fee if the gain exceeds the soft hurdle rate\n    if gain > (starting_assets * soft_hurdle_rate):\n        incentive_fee = (gain - starting_assets * soft_hurdle_rate) * incentive_fee_rate\n    else:\n        incentive_fee = 0\n\n    # Calculate the total fees\n    total_fees = management_fee + incentive_fee\n\n    # Calculate the return after fees\n    return_after_fees = ending_assets_before_fees - total_fees\n\n    # Calculate the return after deductions for the client\n    return_after_deductions = return_after_fees - starting_assets\n\n    # return answer\n    return return_after_deductions\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-555",
        "python_solution": "",
        "ground_truth": null,
        "question": "If two stocks have identical volatility and a correlation of -0.5, what is their minimum variance hedge ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = -0.5\n    volatility = 1  # Assuming identical volatility, so both stocks have a volatility of 1 for simplicity\n\n    # Do math calculation to get the answer\n    # The minimum variance hedge ratio (h) is given by the formula: h = -\u03c1 * \u03c31 / \u03c32\n    # Since \u03c31 = \u03c32 (identical volatility), the formula simplifies to: h = -\u03c1\n    minimum_variance_hedge_ratio = -correlation\n\n    # return answer\n    return minimum_variance_hedge_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-556",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Thompson plans to secure a three-month loan using an interest-rate futures contract and decides to sell the interest rate futures contract at 98.00. Then, after six months, he gets a loan directly from the market at 2.4%, and undoes the hedge at 97.00. What would be the overall borrowing rate throughout this procedure?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_futures_price = 98.00\n    final_futures_price = 97.00\n    direct_loan_rate = 2.4\n    loan_duration_months = 3\n    hedge_duration_months = 6\n\n    # Calculate the effective rate from the futures contract\n    futures_rate_change = (initial_futures_price - final_futures_price) / 100\n    effective_futures_rate = futures_rate_change * (loan_duration_months / hedge_duration_months)\n\n    # Combine the direct loan rate with the effective futures rate\n    overall_borrowing_rate = direct_loan_rate + effective_futures_rate\n\n    # return answer\n    return overall_borrowing_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-557",
        "python_solution": "",
        "ground_truth": null,
        "question": "Conservative Fund that has USD 50 million in assets has been performing poorly recently, prompting the institutional sales team to suggest a merger with Assertive Fund, a larger fund valued at USD 200 million. Conservative Fund's returns are usually distributed with an average of 3% and a standard deviation of 7%. As for Assertive Fund, its returns follow a normal distribution with an average of 7% and a standard deviation of 15%. The top executives have tasked a financial analyst to calculate the possibility that the returns on the merged portfolio might surpass 26%. Given that the returns on both funds don't influence each other, how would the analyst estimate the chances of the returns on the merged fund exceeding 26%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    conservative_fund_assets = 50000000\n    assertive_fund_assets = 200000000\n    \n    conservative_fund_mean = 0.03\n    conservative_fund_stddev = 0.07\n    \n    assertive_fund_mean = 0.07\n    assertive_fund_stddev = 0.15\n    \n    threshold_return = 0.26\n    \n    # Calculate the weighted mean and standard deviation of the merged fund\n    total_assets = conservative_fund_assets + assertive_fund_assets\n    merged_fund_mean = (conservative_fund_mean * conservative_fund_assets + assertive_fund_mean * assertive_fund_assets) / total_assets\n    merged_fund_stddev = ((conservative_fund_stddev ** 2 * conservative_fund_assets + assertive_fund_stddev ** 2 * assertive_fund_assets) / total_assets) ** 0.5\n    \n    # Use the cumulative distribution function (CDF) to find the probability of exceeding the threshold return\n    from scipy.stats import norm\n    z_score = (threshold_return - merged_fund_mean) / merged_fund_stddev\n    probability_exceeding_threshold = 1 - norm.cdf(z_score)\n    \n    # return answer\n    return probability_exceeding_threshold\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-558",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment manager achieved a return rate of 15.5% on a portfolio with a beta of 1.2. If the risk-less return rate is 2.5% and the market return stands at 11.8%, what does Jensen's alpha for the portfolio amount to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_return = 0.155\n    beta = 1.2\n    risk_free_rate = 0.025\n    market_return = 0.118\n    \n    # Do math calculation to get the answer\n    jensens_alpha = portfolio_return - (risk_free_rate + beta * (market_return - risk_free_rate))\n    \n    # return answer\n    return jensens_alpha\n```"
        ]
    },
    {
        "tables": [
            "|     | Financial Statement of Company M ($ million) |\n| --- | -------------------------------------------- |\n| Net income | 4,500 |\n| Sales | 40,000 |\n| Total assets, average during year | 50,020 |\n| Shareholders' equity, beginning of year | 39,080 |\n| Dividends paid | 200 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-559",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided in the subsequent table, what is the sustainable growth of Company N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 4500  # in million dollars\n    sales = 40000  # in million dollars\n    total_assets_avg = 50020  # in million dollars\n    shareholders_equity_beginning = 39080  # in million dollars\n    dividends_paid = 200  # in million dollars\n    \n    # Calculate key financial ratios\n    return_on_equity = net_income / shareholders_equity_beginning\n    payout_ratio = dividends_paid / net_income\n    \n    # Calculate sustainable growth rate\n    sustainable_growth_rate = return_on_equity * (1 - payout_ratio)\n    \n    # return answer\n    return sustainable_growth_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-560",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a corporation has 1 million shares in circulation and earnings of \u00a32 million, and decides to use \u00a310 million of unused cash to buy back shares on the open market at a trading price of \u00a350 per share, what would be the corporation's earnings per share after the entire \u00a310 million of unused cash is used to buy back shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_shares_in_circulation = 1000000\n    earnings = 2000000\n    buyback_amount = 10000000\n    share_price = 50\n    \n    # Calculate the number of shares bought back\n    shares_bought_back = buyback_amount / share_price\n    \n    # Calculate the new number of shares in circulation after the buyback\n    new_shares_in_circulation = initial_shares_in_circulation - shares_bought_back\n    \n    # Calculate the new earnings per share\n    earnings_per_share = earnings / new_shares_in_circulation\n    \n    # return answer\n    return earnings_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-561",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we presume that the market interest rate abides by the mean reversion law, with the long-term average interest rate at 4%, the current interest rate at 3.5%, and a mean reverting rate of 0.3, what will be the forecasted market interest rate for the subsequent period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    long_term_avg_interest_rate = 0.04\n    current_interest_rate = 0.035\n    mean_reverting_rate = 0.3\n    \n    # Do math calculation to get the answer\n    forecasted_interest_rate = current_interest_rate + mean_reverting_rate * (long_term_avg_interest_rate - current_interest_rate)\n    \n    # return answer\n    return forecasted_interest_rate\n```"
        ]
    },
    {
        "tables": [
            "|         | Beginning of the Year (C thousands) | End of the Year ( thousands) |\n|---------|------------------------------------|------------------------------|\n| Investment property | 1,000                            | 1,100                        |\n| Plant    | 1,000                            | 1,200                        |"
        ],
        "topic": "Accounting",
        "question_id": "test-562",
        "python_solution": "",
        "ground_truth": null,
        "question": "A firm adhering to International Financial Reporting Standards (IFRS) doesn't apply the cost model when valuing its investment properties and property, plant, and equipment. Data regarding an investment property and a plant are provided below: The firm will probably record a profit (in thousands) on its income statement for the year of:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_investment_property = 1000  # in thousands\n    end_investment_property = 1100  # in thousands\n    beginning_plant = 1000  # in thousands\n    end_plant = 1200  # in thousands\n    \n    # Do math calculation to get the answer\n    # Since the firm doesn't apply the cost model, it likely uses the fair value model.\n    # Therefore, the profit is the difference between the end of the year value and the beginning of the year value.\n    profit_investment_property = end_investment_property - beginning_investment_property\n    profit_plant = end_plant - beginning_plant\n    \n    # Total profit for the year\n    total_profit = profit_investment_property + profit_plant\n    \n    # return answer\n    return total_profit\n```"
        ]
    },
    {
        "tables": [
            "| 10-Year Historical | | Current | Capital Market Expectations |\n| :---: | :---: | :---: | :---: |\n| **Average government bond yield:** 2.8% | | 10-year government bond yield: 2.3% |  |\n| **Average annual equity return:** 4.6% | | Year-over-year equity return: -9.4% |  |\n| **Average annual inflation rate:** 2.3% | | Year-over-year inflation rate:  2.1% | Expected annual inflation: 2.3% |\n| **Equity market P/E (beginning of period):** 15x | | Current equity market P/E: 14.5x | Expected equity market P / E: 14.0x |\n| **Average annual dividend income return:** 2.6% | |  | Expected annual income return: 2.4% |\n| **Average annual real earnings growth:** 6.0% | | |Expected annual real earnings growth:  5.0% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-563",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier from Australia presently owns an equity portfolio worth A$240 million. He's contemplating adjusting the portfolio depending on the evaluation of the risk and return potential concerning the Australian economy. The details associated with the Australian investment markets and economy have all been compiled in this table: Utilizing the data in the table and the Grinold-Kroner model, what is the anticipated yearly equity risk premium?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_equity_market_PE = 14.5\n    expected_equity_market_PE = 14.0\n    expected_annual_income_return = 2.4\n    expected_annual_real_earnings_growth = 5.0\n    current_10_year_government_bond_yield = 2.3\n\n    # Do math calculation to get the answer\n    # Grinold-Kroner model: E(r) = D/P + i + g - \u0394PE\n    # E(r) = Expected return\n    # D/P = Dividend yield\n    # i = Inflation\n    # g = Real earnings growth\n    # \u0394PE = Change in P/E ratio\n\n    # Calculate the change in P/E ratio\n    change_in_PE = (expected_equity_market_PE - current_equity_market_PE) / current_equity_market_PE\n\n    # Calculate the expected return using the Grinold-Kroner model\n    expected_return = expected_annual_income_return + expected_annual_real_earnings_growth - change_in_PE\n\n    # Calculate the equity risk premium\n    equity_risk_premium = expected_return - current_10_year_government_bond_yield\n\n    # return answer\n    return equity_risk_premium\n```"
        ]
    },
    {
        "tables": [
            "|                            |   2018 |   2019 |\n|----------------------------|--------|--------|\n| Revenue                    | 5,000  | 7,000  |\n| Cost                       | 2,000  | 2,300  |\n| Operating income           | 3,000  | 4,700  |\n| Net profit                 | 1,650  | 2,300  |\n| Total assets               | 4,000  | 6,000  |\n| Total liabilities          | 1,200  | 900    |\n| Equity                     | 2,800  | 5,100  |",
            "|                       | 2018 | 2019 |\n|-----------------------|------|------|\n| Revenue               | 2000 | 2500 |\n| Cost                  | 1200 | 1300 |\n| Operating income      | 800  | 1200 |\n| Net profit            | 460  | 820  |\n| Dividends paid        | 230  | 410  |\n| Total assets          | 1000 | 1100 |\n| Total liabilities     | 600  | 650  |\n| Equity                | 400  | 450  |"
        ],
        "topic": "Accounting",
        "question_id": "test-564",
        "python_solution": "",
        "ground_truth": null,
        "question": "The education company ZP, which is based in China and follows IFRS, had a passive equity interest of 15% in U-web company in 2018. ZP decided to bump up its ownership interest to 50% at the beginning of 2019 through a cash purchase. Both companies have no intercompany transactions. The financial data for ZP and U-web companies are provided in the table below. Could you compute the net income of ZP company for 2019 assuming a significant influence over U-web company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_profit_ZP_2019 = 2300  # Net profit of ZP company in 2019\n    net_profit_U_web_2019 = 820  # Net profit of U-web company in 2019\n    ownership_interest_2019 = 0.50  # Ownership interest of ZP in U-web in 2019\n    \n    # Do math calculation to get the answer\n    net_income_ZP_2019 = net_profit_ZP_2019 + (net_profit_U_web_2019 * ownership_interest_2019)\n    \n    # return answer\n    return net_income_ZP_2019\n```"
        ]
    },
    {
        "tables": [
            "|                                         |            |\n|-----------------------------------------|------------|\n| Exhibit 1. Company A Excerpt from Consolidated Income Statement Year|            |       \n| Ending 31 December 2013 ($ in millions) |            |       \n| Gross profit                            |6,290       |     \n| Royalty and commission income            |130         |      \n| Other operating income                   |140         |      \n| Other operating expenses                 |4,985       |      \n| Operating profit                         |906         |      \n| Interest income                          |37          |      \n| Interest expense                         |135         |      \n| Income before taxes                      |988         |      \n| Income taxes                             |257         |      \n| Net income                               |692         |      \n| Additional Information:                  |            |\n| Depreciation and amortization:  $264 million |264     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-565",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided information, what is the EBITDA interest coverage ratio of company B?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_profit = 906  # in millions\n    depreciation_and_amortization = 264  # in millions\n    interest_expense = 135  # in millions\n    \n    # Do math calculation to get the answer\n    ebitda = operating_profit + depreciation_and_amortization\n    ebitda_interest_coverage_ratio = ebitda / interest_expense\n    \n    # return answer\n    return ebitda_interest_coverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-566",
        "python_solution": "",
        "ground_truth": null,
        "question": "Finally, David concentrates on predicting the anticipated returns from direct real estate investments. He reviews a decade's worth of data on returns from multifamily residential real estate. David doubts whether the fluctuations in the observed returns indicate smoothing. He applies a publicly available REIT index to eliminate the smoothing effect on the return flow and accurately represent the risk (gauge by standard deviation) related to multifamily residential real estate investment (the REIT index's variance for the measurement duration is 16; \u03bb is 0.8). What is David\u2019s adjusted standard deviation for multifamily properties for the investment duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    variance = 16\n    lambda_value = 0.8\n    \n    # Do math calculation to get the answer\n    adjusted_variance = variance / (1 - lambda_value)\n    adjusted_standard_deviation = adjusted_variance ** 0.5\n    \n    # return answer\n    return adjusted_standard_deviation\n```"
        ]
    },
    {
        "tables": [
            "| Current industrial sector capitalization rate (\"cap\" rate) | 5.7% |\n|-----------------------------------------------------------|-----|\n| Expected cap rate at the end of the period                | 5.5% |\n| NOI growth rate (real)                                    | 1%   |\n| Inflation expectation                                     | 1.5% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-567",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher at a property investment company is trying to set predictions for the return rate of industrial properties for the upcoming year. He has gathered the following information: Calculate the anticipated return from the industrial sector properties based on the data presented.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_cap_rate = 0.057\n    expected_cap_rate = 0.055\n    noi_growth_rate = 0.01\n    inflation_expectation = 0.015\n    \n    # Do math calculation to get the answer\n    # The anticipated return is calculated by adding the expected cap rate, NOI growth rate, and inflation expectation\n    anticipated_return = expected_cap_rate + noi_growth_rate + inflation_expectation\n    \n    # return answer\n    return anticipated_return\n```"
        ]
    },
    {
        "tables": [
            "|          | March 31,20X7                        | April 30,20X7                         |\n|----------|-----------------|---------------------------------|---------------|---------------------------------|\n|          | Share Price     | Number of Shares Outstanding(thousands) | Share Price   | Number of Shares Outstanding(thousands) |\n| Stock X  | $15             | 100                             | $20           | 100                             |\n| Stock Y  | $20             | 1,000                           | $30           | 1,000                           |\n| Stock Z  | $30             | 2,000                           | $25           | 2,000                           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-568",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided for the trio of shares listed in the chart, determine the return on the price-weighted index over a month's span.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    share_price_march = [15, 20, 30]\n    share_price_april = [20, 30, 25]\n    \n    # Calculate the sum of share prices for each month\n    sum_march = sum(share_price_march)\n    sum_april = sum(share_price_april)\n    \n    # Calculate the price-weighted index for each month\n    index_march = sum_march / len(share_price_march)\n    index_april = sum_april / len(share_price_april)\n    \n    # Calculate the return on the price-weighted index over a month's span\n    return_on_index = (index_april - index_march) / index_march\n    \n    # return answer\n    return return_on_index\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Coupon Rate | Time-to-Maturity | Spot Rates |\n|------|-------------|------------------|------------|\n| X    | 8%          | 3 years          | 8%         |\n| Y    | 7%          | 3 years          | 9%         |\n| Z    | 6%          | 3 years          | 10%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-569",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based upon the presented series of spot rates, what is the price of Bond Y if all three bonds pay their interest yearly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate_Y = 0.07\n    time_to_maturity = 3\n    spot_rates = [0.08, 0.09, 0.10]\n    face_value = 1000  # Assuming face value of the bond is 1000 for simplicity\n    \n    # Calculate the present value of each coupon payment and the face value at maturity\n    present_values = []\n    for i in range(time_to_maturity):\n        coupon_payment = face_value * coupon_rate_Y\n        present_value = coupon_payment / (1 + spot_rates[i]) ** (i + 1)\n        present_values.append(present_value)\n    \n    # Present value of the face value at maturity\n    present_value_face_value = face_value / (1 + spot_rates[time_to_maturity - 1]) ** time_to_maturity\n    present_values.append(present_value_face_value)\n    \n    # Sum all present values to get the bond price\n    bond_price = sum(present_values)\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-570",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher compiled the following details about a business: The business has a taxable income of $40,000 and a pretax income of $50,000. The prevailing tax rate is 50% and the tax rate when the reversal happens will be 40%. What is the business's deferred tax liability at the close of the first year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    taxable_income = 40000\n    pretax_income = 50000\n    current_tax_rate = 0.50\n    future_tax_rate = 0.40\n    \n    # Do math calculation to get the answer\n    # Calculate current tax liability\n    current_tax_liability = taxable_income * current_tax_rate\n    \n    # Calculate the temporary difference\n    temporary_difference = pretax_income - taxable_income\n    \n    # Calculate deferred tax liability\n    deferred_tax_liability = temporary_difference * (future_tax_rate - current_tax_rate)\n    \n    # return answer\n    return deferred_tax_liability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-571",
        "python_solution": "",
        "ground_truth": null,
        "question": "Summit Resale operates through internet for people on an agreed basis. Summit gets the items from the owners, puts them up for sale online, and earns a 25 percent commission for any items sold. Summit collects the entire amount from the buyer and pays the gross amount after commission to the owner. If items remain unsold, they are returned to the owner after 90 days. During 2019, Summit had these details: \u2022 Total sales price of items sold on agreed basis during 2019 was \u20ac2,000,000. \u2022 Total commissions that Summit retained during 2019 for these items totalled \u20ac500,000. How much revenue should Summit report on its 2019 income statement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_sales_price = 2000000\n    total_commissions = 500000\n    \n    # Do math calculation to get the answer\n    # Summit's revenue is the total commissions it retained\n    revenue = total_commissions\n    \n    # return answer\n    return revenue\n```"
        ]
    },
    {
        "tables": [
            "|                   | Asset A, Asset B | A and B |\n|-------------------|------------------|---------|\n| Standard deviation| 4.7%, 7.7%       |         |\n| Portfolio weight  | 0.4, 0.6         |         |\n| Correlation       |                  | 0.3     |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-572",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the historical data presented, what is the standard deviation for the two-asset portfolio displayed in the chart?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    std_dev_A = 0.047\n    std_dev_B = 0.077\n    weight_A = 0.4\n    weight_B = 0.6\n    correlation = 0.3\n    \n    # Do math calculation to get the answer\n    # Formula for portfolio standard deviation: sqrt(wA^2 * stdA^2 + wB^2 * stdB^2 + 2 * wA * wB * stdA * stdB * correlation)\n    portfolio_std_dev = ((weight_A ** 2) * (std_dev_A ** 2) + \n                         (weight_B ** 2) * (std_dev_B ** 2) + \n                         2 * weight_A * weight_B * std_dev_A * std_dev_B * correlation) ** 0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-573",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2017, Company B had an inventory on hand of 30 days and aimed to reach the standard industry average of 28 days in 2018. The recent year's cost of goods sold was $1.2 million in 2017, and it was projected to lower to $0.35 million in 2018. What was the inventory change?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inventory_days_2017 = 30\n    inventory_days_2018 = 28\n    cost_of_goods_sold_2017 = 1200000\n    cost_of_goods_sold_2018 = 350000\n    \n    # Calculate inventory levels for 2017 and 2018\n    inventory_2017 = (cost_of_goods_sold_2017 / 365) * inventory_days_2017\n    inventory_2018 = (cost_of_goods_sold_2018 / 365) * inventory_days_2018\n    \n    # Calculate the inventory change\n    inventory_change = inventory_2018 - inventory_2017\n    \n    # return answer\n    return inventory_change\n```"
        ]
    },
    {
        "tables": [
            "| Year | Investment Return |\n|------|-------------------|\n| 1    | $600 13%          |\n| 2    | $700 5%           |\n| 3    | $1,000 -1%        |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-574",
        "python_solution": "",
        "ground_truth": null,
        "question": "The fund managed by John displays the following returns for the first three years: What will the time-weighted rate of return be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [1.13, 1.05, 0.99]  # Convert percentages to multipliers\n    \n    # Do math calculation to get the answer\n    time_weighted_rate_of_return = 1\n    for r in returns:\n        time_weighted_rate_of_return *= r\n    time_weighted_rate_of_return = (time_weighted_rate_of_return - 1) * 100\n    \n    # return answer\n    return time_weighted_rate_of_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-575",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming 260 days a year, an option on the Nikkei stock index has a strike price at 3,000 Brazilian reais (BRL) with a delta of 0.6 and an annual volatility on the index of 24%. What is the 10-day VaR at 95% confidence level, under the delta-normal assumptions?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    strike_price = 3000  # in BRL\n    delta = 0.6\n    annual_volatility = 0.24  # 24%\n    confidence_level = 1.645  # 95% confidence level z-score\n    days = 10\n    trading_days_per_year = 260\n\n    # Convert annual volatility to daily volatility\n    daily_volatility = annual_volatility / (trading_days_per_year ** 0.5)\n\n    # Calculate 10-day volatility\n    ten_day_volatility = daily_volatility * (days ** 0.5)\n\n    # Calculate 10-day VaR using delta-normal method\n    VaR = strike_price * delta * confidence_level * ten_day_volatility\n\n    # return answer\n    return VaR\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-576",
        "python_solution": "",
        "ground_truth": null,
        "question": "The preferred stock of Alpha Enterprises is traded in the financial market for $88 per share. The annual dividend per share is always $6.60. What is the required rate of return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_price_per_share = 88\n    annual_dividend_per_share = 6.60\n    \n    # Do math calculation to get the answer\n    required_rate_of_return = annual_dividend_per_share / market_price_per_share\n    \n    # return answer\n    return required_rate_of_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-577",
        "python_solution": "",
        "ground_truth": null,
        "question": "For a portfolio that consists of four investments, what is the number of unique covariance terms required to calculate the portfolio's return variance?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    number_of_investments = 4\n    \n    # Do math calculation to get the answer\n    # The number of unique covariance terms in a covariance matrix is given by n*(n-1)/2, where n is the number of investments\n    number_of_unique_covariance_terms = number_of_investments * (number_of_investments - 1) // 2\n    \n    # return answer\n    return number_of_unique_covariance_terms\n```"
        ]
    },
    {
        "tables": [
            "| Acquisition cost | \u00a35,800,000 |\n| --- | --- |\n| Acquisition date | 1 January 2009 |\n| Patent expiration date | 31 December 2015 |\n| Total plant capacity of patented product | 40,000 units per year |\n| Production of patented product in fiscal year ended 31 December 2009 | 20,000 units |\n| Expected production of patented product during life of the patent | 175,000 units |"
        ],
        "topic": "Accounting",
        "question_id": "test-578",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financial expert is examining the amortization of a product patent purchased by the Italian firm, MAKETTI S.p.A., what would be the 2009 fiscal year's amortization expense on the patent using the units-of-production approach, based on the patent information he has collected?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 5800000\n    total_production_expected = 175000\n    production_2009 = 20000\n    \n    # Do math calculation to get the answer\n    amortization_per_unit = acquisition_cost / total_production_expected\n    amortization_expense_2009 = amortization_per_unit * production_2009\n    \n    # return answer\n    return amortization_expense_2009\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-579",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the justified trailing P/E of the stock, considering that the firm's present intrinsic value and EPS stand at $25.62 and $4 respectively?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intrinsic_value = 25.62\n    eps = 4\n    \n    # Do math calculation to get the answer\n    justified_trailing_PE = intrinsic_value / eps\n    \n    # return answer\n    return justified_trailing_PE\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-580",
        "python_solution": "",
        "ground_truth": null,
        "question": "A shareholder buys 100 stocks at a price of $40 for each. After exactly one year, this shareholder sells all of them for $41.50 per stock. On the same day of the sale, the shareholder gets dividends amounting to $200. What is the HPR on the investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price_per_stock = 40\n    num_stocks = 100\n    final_price_per_stock = 41.50\n    dividends = 200\n    \n    # Calculate initial and final investment values\n    initial_investment = initial_price_per_stock * num_stocks\n    final_investment = final_price_per_stock * num_stocks + dividends\n    \n    # Do math calculation to get the answer\n    hpr = (final_investment - initial_investment) / initial_investment\n    \n    # return answer\n    return hpr\n```"
        ]
    },
    {
        "tables": [
            "|                        | 2018 | 2017 |\n|------------------------|------|------|\n| Cost of goods sold (COGS) | 50,800 | 48,500 |\n| Ending inventories | 10,550 | 10,000 |\n| LIFO reserve | 4,320 | 2,600 |"
        ],
        "topic": "Accounting",
        "question_id": "test-581",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the FIFO method's reported Cost of Goods Sold in 2018 by a firm adopting the LIFO method in \u00a3?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    COGS_LIFO_2018 = 50800\n    LIFO_reserve_2018 = 4320\n    \n    # Do math calculation to get the answer\n    COGS_FIFO_2018 = COGS_LIFO_2018 + LIFO_reserve_2018\n    \n    # return answer\n    return COGS_FIFO_2018\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-582",
        "python_solution": "",
        "ground_truth": null,
        "question": "How many exceptions in backtesting a VAR would we anticipate over a 250-day trading year if we hold a 90% confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    confidence_level = 0.90\n    trading_days = 250\n    \n    # Do math calculation to get the answer\n    # The number of exceptions is calculated by (1 - confidence_level) * trading_days\n    exceptions = (1 - confidence_level) * trading_days\n    \n    # return answer\n    return exceptions\n```"
        ]
    },
    {
        "tables": [
            "| Investment | Expected Return(%) | Expected Standard Deviation(%) |\n|------------|-------------------|--------------------------------|\n| 1          | 19                | 3                              |\n| 2          | 21                | 9                              |\n| 3          | 24                | 20                             |\n| 4          | 19                | 35                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-583",
        "python_solution": "",
        "ground_truth": null,
        "question": "As a risk-neutral investor, John Smith will use utility theory to select his investment portfolio. Given several investments with their expected return and expected standard deviation on the table, which one would he most probably invest in?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investments = {\n        1: {'expected_return': 19, 'expected_std_dev': 3},\n        2: {'expected_return': 21, 'expected_std_dev': 9},\n        3: {'expected_return': 24, 'expected_std_dev': 20},\n        4: {'expected_return': 19, 'expected_std_dev': 35}\n    }\n    \n    # Do math calculation to get the answer\n    # For a risk-neutral investor, the decision would be based solely on the expected return\n    # since risk-neutral investors do not consider the risk (standard deviation) in their decision-making process.\n    # Therefore, we will select the investment with the highest expected return.\n    \n    max_return = -1\n    best_investment = None\n    \n    for investment, details in investments.items():\n        if details['expected_return'] > max_return:\n            max_return = details['expected_return']\n            best_investment = investment\n    \n    # return answer\n    return best_investment\n```"
        ]
    },
    {
        "tables": [
            "| Buyer | Bid Size (# of shares) | Limit Price ($) | Seller | Offer Size (# of shares) | Limit Price ($) |\n|-------|------------------------|-----------------|--------|--------------------------|-----------------|\n| 1     | 500                    | 18.50           | 1      | 200                      | 20.20           |\n| 2     | 300                    | 18.90           | 2      | 300                      | 20.35           |\n| 3     | 400                    | 19.20           | 3      | 400                      | 20.50           |\n| 4     | 200                    | 20.10           | 4      | 100                      | 20.65           |\n| 5     | 100                    | 20.15           | 5      | 200                      | 20.70           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-584",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an investor places an immediate-or-cancel limit purchase order for 700 shares at a price of $20.50 in a market, what would probably be the average price the investor would be required to pay, considering the existing limit orders on its book for a specific stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bids = [\n        {\"size\": 500, \"price\": 18.50},\n        {\"size\": 300, \"price\": 18.90},\n        {\"size\": 400, \"price\": 19.20},\n        {\"size\": 200, \"price\": 20.10},\n        {\"size\": 100, \"price\": 20.15}\n    ]\n    \n    offers = [\n        {\"size\": 200, \"price\": 20.20},\n        {\"size\": 300, \"price\": 20.35},\n        {\"size\": 400, \"price\": 20.50},\n        {\"size\": 100, \"price\": 20.65},\n        {\"size\": 200, \"price\": 20.70}\n    ]\n    \n    total_shares_needed = 700\n    total_cost = 0\n    shares_filled = 0\n    \n    # Do math calculation to get the answer\n    for offer in offers:\n        if shares_filled < total_shares_needed:\n            if offer[\"size\"] <= (total_shares_needed - shares_filled):\n                shares_filled += offer[\"size\"]\n                total_cost += offer[\"size\"] * offer[\"price\"]\n            else:\n                shares_to_fill = total_shares_needed - shares_filled\n                shares_filled += shares_to_fill\n                total_cost += shares_to_fill * offer[\"price\"]\n    \n    average_price = total_cost / shares_filled\n    \n    # return answer\n    return average_price\n```\n\nThis program calculates the average price an investor would pay for 700 shares at a limit price of $20.50 by considering the existing limit orders on the book. It iterates through the offers and fills the order until the required number of shares is reached, then calculates the average price based on the total cost and the number of shares filled."
        ]
    },
    {
        "tables": [
            "| 2015 | | 2014 |\n| --- | --- | --- |\n| Deferred tax assets $1,000,000 | | $800,000 |\n| Deferred tax liabilities $600,000 | | $700,000 |\n| Valuation allowance $500,000 | | $400,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-585",
        "python_solution": "",
        "ground_truth": null,
        "question": "How did the alterations in the firm's deferred tax accounts impact the net income of 2015 according to US GAAP?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    deferred_tax_assets_2015 = 1000000\n    deferred_tax_assets_2014 = 800000\n    deferred_tax_liabilities_2015 = 600000\n    deferred_tax_liabilities_2014 = 700000\n    valuation_allowance_2015 = 500000\n    valuation_allowance_2014 = 400000\n    \n    # Calculate the change in deferred tax assets\n    change_in_deferred_tax_assets = deferred_tax_assets_2015 - deferred_tax_assets_2014\n    \n    # Calculate the change in deferred tax liabilities\n    change_in_deferred_tax_liabilities = deferred_tax_liabilities_2015 - deferred_tax_liabilities_2014\n    \n    # Calculate the change in valuation allowance\n    change_in_valuation_allowance = valuation_allowance_2015 - valuation_allowance_2014\n    \n    # Calculate the net impact on net income\n    net_impact_on_net_income = change_in_deferred_tax_assets - change_in_deferred_tax_liabilities - change_in_valuation_allowance\n    \n    # return answer\n    return net_impact_on_net_income\n```\n\nThis Python program calculates the net impact on net income for 2015 due to changes in deferred tax assets, deferred tax liabilities, and valuation allowance according to US GAAP. The net impact is determined by subtracting the changes in deferred tax liabilities and valuation allowance from the change in deferred tax assets."
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n|-----|-----|-----|-----|-----|-----|\n| 20% | 4%  | -5% | 12% | 3%  | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-586",
        "python_solution": "",
        "ground_truth": null,
        "question": "The table underneath displays the monthly stock returns for Oak Inc. Based on the provided table, can you compute the standard deviation for Oak Inc.'s returns, considering that there are 6 observations in the population?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [0.20, 0.04, -0.05, 0.12, 0.03, 0.12]\n    \n    # Calculate the mean of the returns\n    mean_return = sum(returns) / len(returns)\n    \n    # Calculate the variance\n    variance = sum((r - mean_return) ** 2 for r in returns) / len(returns)\n    \n    # Calculate the standard deviation\n    std_deviation = variance ** 0.5\n    \n    # return answer\n    return std_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-587",
        "python_solution": "",
        "ground_truth": null,
        "question": "Smith is a tax consultant who offers tax consciousness guidance to individual patrons. One of Smith's patrons is Emma. Emma requests Smith to assess Mutual Fund B, which has an inherent gain of 10% of the concluding portfolio value. Emma requests Smith to determine a post-disposal yield over the latest three-year duration. Mutual Fund B showed after-tax yields of 9.0% in the first year, 5% in the second year, and 8% in the third year, and capital profits are taxed at a 25% pace. What is the yearly after-tax post-disposal yield measured by Smith?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inherent_gain = 0.10\n    after_tax_yield_year1 = 0.09\n    after_tax_yield_year2 = 0.05\n    after_tax_yield_year3 = 0.08\n    capital_gains_tax_rate = 0.25\n    \n    # Calculate the total after-tax yield over the three years\n    total_after_tax_yield = (1 + after_tax_yield_year1) * (1 + after_tax_yield_year2) * (1 + after_tax_yield_year3) - 1\n    \n    # Calculate the total inherent gain over the three years\n    total_inherent_gain = inherent_gain * (1 - capital_gains_tax_rate)\n    \n    # Calculate the total post-disposal yield\n    total_post_disposal_yield = total_after_tax_yield + total_inherent_gain\n    \n    # Calculate the yearly average post-disposal yield\n    yearly_post_disposal_yield = (1 + total_post_disposal_yield) ** (1/3) - 1\n    \n    # return answer\n    return yearly_post_disposal_yield\n```"
        ]
    },
    {
        "tables": [
            "| Quantity (unit) | Total Fixed Cost ($) | Total Variable Cost ($) |\n| --------------- | -------------------- | ---------------------- |\n| 0               | 400                  | 0                       |\n| 1               | 400                  | 100                    |\n| 2               | 400                  | 190                    |\n| 3               | 400                  | 275                    |\n| 4               | 400                  | 360                    |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-588",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company that makes machines is examining its cost structure, and here lays out the meticulous data as specified in the table: If the company fabricates 3 machines, what is the average fixed cost?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    quantity = 3\n    total_fixed_cost = 400\n    \n    # Do math calculation to get the answer\n    average_fixed_cost = total_fixed_cost / quantity\n    \n    # return answer\n    return average_fixed_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-589",
        "python_solution": "",
        "ground_truth": null,
        "question": "Amelia, as a fund manager, trades off a $50,000 vega notional of a one-year variance swap on the S&P 500 at a strike of 20% (annual volatility mentioned). As half a year has gone by, the S&P 500 has seen a realized volatility of 16% (annualized). The same day, the fair strike of a new six-month variance swap on the S&P 500 stands at 19%. The present value of the variance swap that Amelia sold (taking into account the annual interest rate is 2.5%) is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_vega_notional = 50000\n    initial_strike_volatility = 0.20  # 20% annual volatility\n    realized_volatility_half_year = 0.16  # 16% annualized for half a year\n    new_swap_fair_strike = 0.19  # 19% for the new six-month swap\n    annual_interest_rate = 0.025  # 2.5% annual interest rate\n    time_elapsed = 0.5  # half a year has gone by\n\n    # Calculate the variance for the realized period\n    realized_variance = realized_volatility_half_year ** 2\n\n    # Calculate the variance for the remaining period\n    remaining_variance = new_swap_fair_strike ** 2\n\n    # Total variance for the original swap (since variance is additive)\n    total_variance = realized_variance + remaining_variance\n\n    # Calculate the difference in variance from the initial strike\n    variance_difference = total_variance - (initial_strike_volatility ** 2)\n\n    # Calculate the present value of the variance swap\n    present_value = initial_vega_notional * variance_difference / (1 + annual_interest_rate * time_elapsed)\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-590",
        "python_solution": "",
        "ground_truth": null,
        "question": "The yield-to-maturity of a bond, which is stated on a semiannual basis, is at 4.769%. What would this yield-to-maturity be if a financial expert were to adjust it to a monthly basis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    semiannual_yield = 0.04769\n    periods_per_year = 12  # Monthly basis\n    semiannual_periods_per_year = 2  # Semiannual basis\n    \n    # Do math calculation to get the answer\n    # Convert semiannual yield to effective annual yield\n    effective_annual_yield = (1 + semiannual_yield / semiannual_periods_per_year) ** semiannual_periods_per_year - 1\n    \n    # Convert effective annual yield to monthly yield\n    monthly_yield = (1 + effective_annual_yield) ** (1 / periods_per_year) - 1\n    \n    # return answer\n    return monthly_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-591",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business released bonds worth $2,000,000 having a maturity of 20 years at 96. The business redeemed these bonds seven years down the line at 103, at a time when the unamortized discount stood at $39,000. What would probably be the loss reported by the business in the year these bonds were redeemed?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_bond_value = 2000000\n    initial_price = 96\n    redemption_price = 103\n    unamortized_discount = 39000\n    years_to_maturity = 20\n    years_held = 7\n\n    # Calculate the initial issue price\n    initial_issue_price = initial_bond_value * (initial_price / 100)\n\n    # Calculate the redemption amount\n    redemption_amount = initial_bond_value * (redemption_price / 100)\n\n    # Calculate the loss\n    loss = redemption_amount - initial_issue_price - unamortized_discount\n\n    # return answer\n    return loss\n```"
        ]
    },
    {
        "tables": [
            "| Risk-free rate | 3% |\n| -- | -- |\n| Market risk premium | 7% |\n| Company A's beta | 1.1 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-592",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jessica has projected that corporation B will disburse dividends of $1.5 and $2.5 respectively at the close of the first and second year. After the second year, dividends are anticipated to increase at a rate of 5%. Other relevant details can be found in the table below. What is the inherent value of the corporation's stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.03\n    market_risk_premium = 0.07\n    beta = 1.1\n    dividend_year1 = 1.5\n    dividend_year2 = 2.5\n    growth_rate = 0.05\n\n    # Calculate the required rate of return using the Capital Asset Pricing Model (CAPM)\n    required_rate_of_return = risk_free_rate + beta * market_risk_premium\n\n    # Calculate the present value of dividends for the first two years\n    present_value_dividend_year1 = dividend_year1 / (1 + required_rate_of_return)\n    present_value_dividend_year2 = dividend_year2 / (1 + required_rate_of_return)**2\n\n    # Calculate the terminal value at the end of the second year\n    terminal_value = (dividend_year2 * (1 + growth_rate)) / (required_rate_of_return - growth_rate)\n\n    # Calculate the present value of the terminal value\n    present_value_terminal_value = terminal_value / (1 + required_rate_of_return)**2\n\n    # Calculate the inherent value of the stock\n    inherent_value = present_value_dividend_year1 + present_value_dividend_year2 + present_value_terminal_value\n\n    # return answer\n    return inherent_value\n```"
        ]
    },
    {
        "tables": [
            "|                                     |      |\n|-------------------------------------|------|\n| Cost of the equipment $5,000,000    |      |\n| Estimated residual value $500,000   |      |\n| Expected useful life 9 years        |      |\n| Total productive capacity 950,000 units |      |\n| Production in FY2015 150,000 units  |      |\n| Expected production for the next 9 years 100,000 units each year |      |"
        ],
        "topic": "Accounting",
        "question_id": "test-593",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the straight-line method, what is the annual depreciation expense for a machine purchased in Jan. 2015, according to the applicable information?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_equipment = 5000000\n    estimated_residual_value = 500000\n    expected_useful_life = 9\n    \n    # Do math calculation to get the answer\n    annual_depreciation_expense = (cost_of_equipment - estimated_residual_value) / expected_useful_life\n    \n    # return answer\n    return annual_depreciation_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-594",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood of drawing one of the 3 marked balls if 600 ping pong balls are stored in a dark container?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_balls = 600\n    marked_balls = 3\n    \n    # Do math calculation to get the answer\n    likelihood = marked_balls / total_balls\n    \n    # return answer\n    return likelihood\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-595",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a share costs $100.00 and it follows a single-stage binomial system with an increase of 1.05 and a decrease of 0.97, and if 1 million Bernoulli tests are done, and the mean final share price is $102.00, what is the likelihood of an increase (p)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 100.00\n    increase_factor = 1.05\n    decrease_factor = 0.97\n    mean_final_price = 102.00\n    num_trials = 1000000\n    \n    # Do math calculation to get the answer\n    # The mean final price is given by: mean_final_price = initial_price * (p * increase_factor + (1 - p) * decrease_factor)\n    # Solving for p:\n    p = (mean_final_price / initial_price - decrease_factor) / (increase_factor - decrease_factor)\n    \n    # return answer\n    return p\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-596",
        "python_solution": "",
        "ground_truth": null,
        "question": "A yearly annuity of $2,000 is expected to be received for a span of twenty years, with the initial payment anticipated to arrive at the conclusion of year thirteen. If we presume a 7% discount rate for the upcoming years, can you work out the present value of the annuity today?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annuity_payment = 2000\n    years_to_receive = 20\n    initial_year = 13\n    discount_rate = 0.07\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of each annuity payment\n    present_value = 0\n    for year in range(initial_year, initial_year + years_to_receive):\n        present_value += annuity_payment / (1 + discount_rate) ** year\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-597",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the spot market, the exchange rate for AUD/USD is 0.50248. If we consider that the yearly interest rate is 3% for USD and 4% for AUD, what would be the one-year forward exchange rate for USD/AUD?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_AUD_USD = 0.50248\n    interest_rate_USD = 0.03\n    interest_rate_AUD = 0.04\n    \n    # Do math calculation to get the answer\n    # Using the interest rate parity formula for forward rates\n    forward_rate_USD_AUD = spot_rate_AUD_USD * (1 + interest_rate_USD) / (1 + interest_rate_AUD)\n    \n    # Convert the forward rate from AUD/USD to USD/AUD\n    forward_rate_USD_AUD = 1 / forward_rate_USD_AUD\n    \n    # return answer\n    return forward_rate_USD_AUD\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-598",
        "python_solution": "",
        "ground_truth": null,
        "question": "An eternal bond is a financial instrument that delivers the same sum of money indefinitely. Suppose it provides a payment of $60 every month, and it has a yearly discount rate of 4% compounded on a monthly basis. What would be the current value of this bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_payment = 60\n    yearly_discount_rate = 0.04\n    monthly_discount_rate = yearly_discount_rate / 12\n    \n    # Do math calculation to get the answer\n    # The formula for the present value of a perpetuity is: PV = PMT / r\n    # where PV is the present value, PMT is the monthly payment, and r is the monthly discount rate\n    present_value = monthly_payment / monthly_discount_rate\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-599",
        "python_solution": "",
        "ground_truth": null,
        "question": "Our projection is that 15% of secondary school pupils will participate in employment next year. If we randomly choose 5 secondary school pupils, what is the likelihood that precisely two of them will participate in employment next year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p = 0.15  # probability of a pupil participating in employment\n    n = 5  # number of pupils\n    k = 2  # number of pupils participating in employment\n    \n    # Do math calculation to get the answer\n    from math import comb\n    probability = comb(n, k) * (p ** k) * ((1 - p) ** (n - k))\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-600",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Sunshine Primary School provides its staff members with a defined benefit retirement plan. The school is in accordance with IFRS. The chosen details related to the pension plan in 2018 are this: the benefit obligations at the onset of the year being $3,000,000, the plan assets' fair value at the start of the year being $3,100,000 and the plan assets' book value equalling $2,800,000 at the beginning of 2018. So, what is the funded status of the scheme at the start of 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    benefit_obligations_start = 3000000\n    plan_assets_fair_value_start = 3100000\n    plan_assets_book_value_start = 2800000\n    \n    # Do math calculation to get the answer\n    funded_status = plan_assets_fair_value_start - benefit_obligations_start\n    \n    # return answer\n    return funded_status\n```"
        ]
    },
    {
        "tables": [
            "| Year | Paid-In Capital | Mgmt Fees | Operating Results | NAV before Distributions | Carried Interest | Distributions | NAV after Distributions |\n|------|-----------------|-----------|-------------------|--------------------------|------------------|---------------|-------------------------|\n| 2005 | 40             | 0.8       | -3                | 36.2                     |                  |               | 36.2                    |\n| 2006 | 55             | 1.1       | 4                 | 54.1                     |                  |               | 54.1                    |\n| 2007 | 80             | 1.6       | 11                | 88.5                     |                  |               | 88.5                    |\n| 2008 | 100            | 2         | 27                | 133.5                    | 4.2              | 19            | 110.3                   |\n| 2009 | 125            | 2         | 34                | 167.3                    | 6.6              | 38            | 122.7                   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-601",
        "python_solution": "",
        "ground_truth": null,
        "question": "The pamphlet ends with the backstory of another private equity fund known as Pocatello Fund. As per the cash flows and distributions shown in Exhibit 1 for the initial five years of this fund, what was the total value paid into the Pocatello Fund in 2009?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    paid_in_capital_2005 = 40\n    paid_in_capital_2006 = 55\n    paid_in_capital_2007 = 80\n    paid_in_capital_2008 = 100\n    paid_in_capital_2009 = 125\n    \n    # Do math calculation to get the answer\n    total_paid_in_capital_2009 = paid_in_capital_2005 + paid_in_capital_2006 + paid_in_capital_2007 + paid_in_capital_2008 + paid_in_capital_2009\n    \n    # return answer\n    return total_paid_in_capital_2009\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-602",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the spot market, the conversion rate from Canadian dollar to Euro stands at CAD/EUR 1.4808, while the rate for Japanese yen to Euro is JPY/EUR 132.3894. What is the JPY/CAD cross rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    CAD_to_EUR = 1.4808\n    JPY_to_EUR = 132.3894\n    \n    # Do math calculation to get the answer\n    JPY_to_CAD = JPY_to_EUR / CAD_to_EUR\n    \n    # return answer\n    return JPY_to_CAD\n```"
        ]
    },
    {
        "tables": [
            "| Market risk premium | 7.0% |\n|---|---|\n| Risk-free rate | 2.0% |\n| Comparable firm return | 10.4% |\n| Comparable firm debt-to-equity ratio | 1.0 |\n| Comparable firm tax rate | 40.0% |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-603",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given data, what is the company's unleveraged beta?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_risk_premium = 0.07\n    risk_free_rate = 0.02\n    comparable_firm_return = 0.104\n    comparable_firm_debt_to_equity_ratio = 1.0\n    comparable_firm_tax_rate = 0.40\n    \n    # Calculate the comparable firm's beta (leveraged beta)\n    comparable_firm_beta = (comparable_firm_return - risk_free_rate) / market_risk_premium\n    \n    # Calculate the unleveraged beta using the Hamada formula\n    unleveraged_beta = comparable_firm_beta / (1 + (1 - comparable_firm_tax_rate) * comparable_firm_debt_to_equity_ratio)\n    \n    # return answer\n    return unleveraged_beta\n```"
        ]
    },
    {
        "tables": [
            "|  |  | Units Purchased and Sold (first quarter) |  |  |  |  |\n|---|---|---|---|---|---|---|\n|  |  | Date |  |  |  |  |\n|  |  | Units Purchased | Purchase Price | Units Sold | Selling Price | Inventory Units on Hand |\n|  | 2 Jan | 1,000 | $20.00 |  |  | 1,000 |\n|  | 17 Jan |  |  | 500 |  | $50.00, 500 |\n|  | 16 Feb | 1,000 | $18.00 |  |  | 1,500 |\n|  | 3 Mar |  |  | 1,200 |  | $50.00, 300 |\n|  | 13 Mar | 1,000 | $17.00 |  |  | 1,300 |\n|  | 23 Mar |  |  | 500 |  | $50.00, 800 |\n|  | End of quarter totals: | 3,000 | $55,000 | 2,200 |  | $110,000 |\n| Identifying Header | Exhibit 2: | Comparison of Inventory Methods and Models |  |  |  |  |\n|  | End of Quarter Valuations |  |  |  |  |  |\n| 31 March |  | Perpetual LIFO,Periodic LIFO, Perpetual FIFO |  |  |  |  |\n| Sales |  | $110,000 | $110,000 | $110,000 |  |  |\n|  | Ending inventory |  | $16,000 | $13,600 |  |  |\n|  | Cost of goods sold |  | $39,000 | $41,400 |  |  |\n|  | Gross profit |  | $71,000 | $68,600 |  |  |\n|  | Inventory turnover ratio | 279% |  |  |  |  |\n|  | Note: LIFO is last in, first out and FIFO is first in, first out. |  |  |  |  |  |"
        ],
        "topic": "Accounting",
        "question_id": "test-604",
        "python_solution": "",
        "ground_truth": null,
        "question": "A merchant is analyzing various methods for assessing inventory worth. The merchant has a single product that they trade for $50. What is the final inventory's value for the first quarter if the merchant employs a continuous LIFO inventory evaluation technique?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    # Units Purchased and Sold (first quarter)\n    units_purchased = [1000, 1000, 1000]  # on 2 Jan, 16 Feb, 13 Mar\n    purchase_prices = [20.00, 18.00, 17.00]  # on 2 Jan, 16 Feb, 13 Mar\n    units_sold = [500, 1200, 500]  # on 17 Jan, 3 Mar, 23 Mar\n    selling_price = 50.00\n\n    # Inventory Units on Hand\n    inventory_units = [1000, 1500, 1300, 800]  # on 2 Jan, 16 Feb, 13 Mar, 23 Mar\n\n    # LIFO Inventory Calculation\n    # Start with the latest purchases and work backwards\n    remaining_units = inventory_units[-1]  # 800 units at the end of the quarter\n    remaining_value = 0\n\n    # Calculate the value of the remaining inventory using LIFO\n    for i in range(len(units_purchased) - 1, -1, -1):\n        if remaining_units > 0:\n            if remaining_units >= units_purchased[i]:\n                remaining_value += units_purchased[i] * purchase_prices[i]\n                remaining_units -= units_purchased[i]\n            else:\n                remaining_value += remaining_units * purchase_prices[i]\n                remaining_units = 0\n\n    # return answer\n    return remaining_value\n```"
        ]
    },
    {
        "tables": [
            "| Most recent year's net income | $8.0 million | Cost of equity capital | 12.40% |\n|---|---|---|---|\n| Interest expense | $1.2 million | WACC | 10.60% |\n| Equity capital book value | $20.97 million | Tax rate | 40% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-605",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the multistage RI model for estimating the value of PBRI, John gathers extra data. He predicts a yearly growth rate for residual income of 15% over a prediction range of 5 years (Years 1 to 5) and decides to discount the final year\u2019s residual income as perpetuity. Considering the information in Exhibit 3, what is John's approximation of the contribution that the terminal value of the income stream will make to the present value of equity after five years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 8.0  # in million dollars\n    cost_of_equity = 0.124\n    equity_capital_book_value = 20.97  # in million dollars\n    growth_rate = 0.15\n    wacc = 0.106\n    tax_rate = 0.40\n    interest_expense = 1.2  # in million dollars\n    prediction_years = 5\n\n    # Calculate residual income for the final year\n    residual_income_final_year = net_income * (1 + growth_rate) ** prediction_years - (equity_capital_book_value * cost_of_equity)\n\n    # Calculate the terminal value of the residual income stream as a perpetuity\n    terminal_value = residual_income_final_year / (wacc - growth_rate)\n\n    # Discount the terminal value back to present value\n    present_value_terminal_value = terminal_value / ((1 + wacc) ** prediction_years)\n\n    # return answer\n    return present_value_terminal_value\n```\n\nThis Python program calculates the contribution of the terminal value of the income stream to the present value of equity after five years using the multistage Residual Income (RI) model. It first calculates the residual income for the final year, then computes the terminal value as a perpetuity, and finally discounts this terminal value back to its present value."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-606",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the previous year, the total worth of end products and services in nation B escalated from $200 billion to $400 billion, with the GDP deflator surging from 120 to 170. Given this situation, by how much did the actual GDP of nation B increase?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    nominal_GDP_previous = 200  # in billion dollars\n    nominal_GDP_current = 400   # in billion dollars\n    GDP_deflator_previous = 120\n    GDP_deflator_current = 170\n    \n    # Do math calculation to get the actual GDP\n    real_GDP_previous = nominal_GDP_previous * (100 / GDP_deflator_previous)\n    real_GDP_current = nominal_GDP_current * (100 / GDP_deflator_current)\n    \n    # Calculate the increase in actual GDP\n    actual_GDP_increase = real_GDP_current - real_GDP_previous\n    \n    # return answer\n    return actual_GDP_increase\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-607",
        "python_solution": "",
        "ground_truth": null,
        "question": "What would the YTM be on a zero-coupon, semiannual compound, 10-year bond with a par value of $1,000 that's currently being traded at $366.21?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 1000\n    current_price = 366.21\n    years_to_maturity = 10\n    compounding_frequency = 2  # semiannual compounding\n\n    # Do math calculation to get the answer\n    # The formula for YTM in this context is:\n    # current_price = par_value / (1 + YTM/compounding_frequency) ** (years_to_maturity * compounding_frequency)\n    # To solve for YTM, we use the logarithmic approach\n\n    import math\n\n    YTM = compounding_frequency * ((par_value / current_price) ** (1 / (years_to_maturity * compounding_frequency)) - 1)\n\n    # return answer\n    return YTM\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-608",
        "python_solution": "",
        "ground_truth": null,
        "question": "The S&P 500 index currently stands at 1,457, with each futures contract representing 250 times the index. An equity portfolio only long with a market value of USD 300,100,000 has a beta of 1.1. In order to lower the portfolio beta to 0.75, how many S&P futures contracts should be sold?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_index_value = 1457\n    contract_multiplier = 250\n    portfolio_value = 300100000\n    current_beta = 1.1\n    target_beta = 0.75\n    \n    # Calculate the value of one futures contract\n    contract_value = current_index_value * contract_multiplier\n    \n    # Calculate the number of contracts needed to change the beta\n    # Formula: (Target Beta - Current Beta) * Portfolio Value / Contract Value\n    number_of_contracts = (target_beta - current_beta) * portfolio_value / contract_value\n    \n    # Return the absolute value since we are selling contracts\n    return abs(number_of_contracts)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-609",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert is aiming to determine the worth of a 1-year European call option using the BSM model. He has gathered the following data: the present stock price is $90, the strike price is $75, the risk-free rate calculated through continuous compounding is 4%, and the yearly volatility rate is 20%. What would be the call option's value? N(-1.21) =0.1131; N(-1.01) =0.1562.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 90  # present stock price\n    K = 75  # strike price\n    r = 0.04  # risk-free rate (continuous compounding)\n    sigma = 0.20  # yearly volatility rate\n    T = 1  # time to maturity (1 year)\n    \n    # Calculate d1 and d2\n    d1 = (math.log(S / K) + (r + 0.5 * sigma ** 2) * T) / (sigma * math.sqrt(T))\n    d2 = d1 - sigma * math.sqrt(T)\n    \n    # Use the given values of N(-d1) and N(-d2)\n    N_d1 = 1 - 0.1131  # N(-1.21) = 0.1131, so N(1.21) = 1 - 0.1131\n    N_d2 = 1 - 0.1562  # N(-1.01) = 0.1562, so N(1.01) = 1 - 0.1562\n    \n    # Calculate the call option value using the BSM formula\n    call_option_value = S * N_d1 - K * math.exp(-r * T) * N_d2\n    \n    # return answer\n    return call_option_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-610",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given that a chart from a credit reporting agency indicates that the count of A-ranked entities that upgraded to AAA is 1, those which advanced to AA were 6, those who maintained at A were 41, those who were demoted to BBB were 2, and those that defaulted were 3. Assuming a fresh entity with an A grade credit score, what is the chance that it will experience a reduction in rating or end up defaulting after one year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    upgraded_to_AAA = 1\n    advanced_to_AA = 6\n    maintained_at_A = 41\n    demoted_to_BBB = 2\n    defaulted = 3\n    \n    # Total number of A-ranked entities\n    total_A_ranked = upgraded_to_AAA + advanced_to_AA + maintained_at_A + demoted_to_BBB + defaulted\n    \n    # Number of entities that experienced a reduction in rating or defaulted\n    reduced_or_defaulted = demoted_to_BBB + defaulted\n    \n    # Do math calculation to get the answer\n    chance_of_reduction_or_default = reduced_or_defaulted / total_A_ranked\n    \n    # return answer\n    return chance_of_reduction_or_default\n```"
        ]
    },
    {
        "tables": [
            "| Date | November 2010 Quantity | November 2010 Price | December 2010 Quantity | December 2010 Price |\n|------|-----------------|-----------------|------------------|------------------|\n| Sugar| 70kg           | \u00a30.90/kg        | 120kg            | \u00a31.00/kg         |\n| Cotton| 60kg           | \u00a30.60/kg        | 50kg             | \u00a30.80/kg         |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-611",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of the Paasche index for the consumption basket of December displayed in Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    november_quantity_sugar = 70\n    november_price_sugar = 0.90\n    december_quantity_sugar = 120\n    december_price_sugar = 1.00\n    \n    november_quantity_cotton = 60\n    november_price_cotton = 0.60\n    december_quantity_cotton = 50\n    december_price_cotton = 0.80\n    \n    # Do math calculation to get the answer\n    # Paasche index formula: \u03a3(p_d * q_d) / \u03a3(p_n * q_d)\n    numerator = (december_price_sugar * december_quantity_sugar) + (december_price_cotton * december_quantity_cotton)\n    denominator = (november_price_sugar * december_quantity_sugar) + (november_price_cotton * december_quantity_cotton)\n    \n    paasche_index = numerator / denominator\n    \n    # return answer\n    return paasche_index\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-612",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the business boosts its dividend payout proportion to 40% and employs a necessary return of 12.4%, what would be the justified forward P/E ratio based on the compiled information on the business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_payout_ratio = 0.40\n    required_return = 0.124\n    \n    # Do math calculation to get the answer\n    justified_forward_P_E_ratio = dividend_payout_ratio / (required_return - dividend_payout_ratio)\n    \n    # return answer\n    return justified_forward_P_E_ratio\n```"
        ]
    },
    {
        "tables": [
            "|                   | Fund X | Fund Y | Fund Z | Benchmark |\n|-------------------|--------|--------|--------|-----------|\n| Sharpe ratio (SR) | 0.45   | 0.50   | 0.49   | 0.44      |\nNote: Data are based on a risk-free rate of 2.3%."
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-613",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson requests his research team to generate risk and anticipated return predictions for Funds X, Y, and Z as well as the benchmark, shown in Exhibit 1. Johnson opts to introduce a fourth fund to his group, Fund W, that will utilize the same benchmark embedded in Exhibit 1. Given the information from Exhibit 1, what would be the Sharpe ratio if Fund W, which Johnson estimates to have an information ratio of 0.35, is merged with a fund that mimics the benchmark?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 2.3 / 100  # Convert percentage to decimal\n    information_ratio_W = 0.35\n    sharpe_ratio_benchmark = 0.44\n    \n    # Do math calculation to get the answer\n    # The Sharpe ratio of Fund W combined with a benchmark-mimicking fund can be calculated as follows:\n    # Sharpe Ratio (Fund W + Benchmark) = Sharpe Ratio (Benchmark) + Information Ratio (Fund W)\n    sharpe_ratio_W_combined = sharpe_ratio_benchmark + information_ratio_W\n    \n    # return answer\n    return sharpe_ratio_W_combined\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-614",
        "python_solution": "",
        "ground_truth": null,
        "question": "The debt-to-asset ratio is: total liabilities: $200 short term debt: $10 long-term debt: $100 total equity: $300.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_liabilities = 200\n    short_term_debt = 10\n    long_term_debt = 100\n    total_equity = 300\n    \n    # Calculate total assets\n    total_assets = total_liabilities + total_equity\n    \n    # Do math calculation to get the answer\n    debt_to_asset_ratio = total_liabilities / total_assets\n    \n    # return answer\n    return debt_to_asset_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-615",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial advisor is determining the beta of a collection of large-cap industrial firm shares. The advisor establishes that the correlation between the returns from the collection and the returns from its reference point is 0.8, the fluctuation of collection returns is 5%, and the fluctuation of the reference point is 4%. What is the beta of the collection in relation to the reference point?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.8\n    collection_volatility = 0.05\n    reference_volatility = 0.04\n    \n    # Do math calculation to get the answer\n    beta = (correlation * collection_volatility) / reference_volatility\n    \n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [
            "| Balances as of Year Ended 31 December | 2009 | 2010 |\n| ------------------------------------- | ---- | ---- |\n| Retained earnings                     | 120  | 145  |\n| Accounts receivable                   | 38   | 43   |\n| Inventory                             | 45   | 48   |\n| Accounts payable                      | 36   | 29   |"
        ],
        "topic": "Accounting",
        "question_id": "test-616",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collected the following data from a corporation's 2010 financial reports (in $ millions): In 2010, the corporation declared and dispersed cash dividends of $10 million, and logged a depreciation expense of $25 million. The corporation classifies dividends paid as a financing activity. What was the corporation\u2019s 2010 operational cash flow (in $ millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    retained_earnings_2009 = 120  # in $ millions\n    retained_earnings_2010 = 145  # in $ millions\n    cash_dividends_paid = 10  # in $ millions\n    depreciation_expense = 25  # in $ millions\n    \n    # Do math calculation to get the answer\n    # Calculate the change in retained earnings\n    change_in_retained_earnings = retained_earnings_2010 - retained_earnings_2009\n    \n    # Calculate the net income (since dividends are paid out of retained earnings)\n    net_income = change_in_retained_earnings + cash_dividends_paid\n    \n    # Calculate the operational cash flow using the indirect method\n    # Operational Cash Flow = Net Income + Depreciation Expense - Change in Accounts Receivable - Change in Inventory + Change in Accounts Payable\n    accounts_receivable_2009 = 38  # in $ millions\n    accounts_receivable_2010 = 43  # in $ millions\n    inventory_2009 = 45  # in $ millions\n    inventory_2010 = 48  # in $ millions\n    accounts_payable_2009 = 36  # in $ millions\n    accounts_payable_2010 = 29  # in $ millions\n    \n    change_in_accounts_receivable = accounts_receivable_2010 - accounts_receivable_2009\n    change_in_inventory = inventory_2010 - inventory_2009\n    change_in_accounts_payable = accounts_payable_2010 - accounts_payable_2009\n    \n    operational_cash_flow = net_income + depreciation_expense - change_in_accounts_receivable - change_in_inventory + change_in_accounts_payable\n    \n    # return answer\n    return operational_cash_flow\n```"
        ]
    },
    {
        "tables": [
            "| - |  Time=0 | Time=1 | Time=2 |\n|---|:---:|:---:|:---:|\n| - | S0=100 | Su=110 | Suu=121 |\n| - |-| Sd=92 | Sud,du=101.20 |\n| - |-| - | Sdd=84.64 |"
        ],
        "topic": "Accounting",
        "question_id": "test-617",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that the price of a bond over the next two periods is detailed below. The starting value of the bond is $100. The likelihood of a rise in any given period is 40% and the chance of a fall in any given period is 60%. If we apply the binomial model, what is the likelihood that the bond's price will reach $101.20 after two periods?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_up = 0.4  # Probability of the price going up in a period\n    p_down = 0.6  # Probability of the price going down in a period\n    \n    # The bond can reach $101.20 in two ways:\n    # 1. It goes up in the first period and then down in the second period (Su -> Sud)\n    # 2. It goes down in the first period and then up in the second period (Sd -> Sud)\n    \n    # Calculate the probability for each path\n    prob_Su_Sud = p_up * p_down  # Probability of path Su -> Sud\n    prob_Sd_Sud = p_down * p_up  # Probability of path Sd -> Sud\n    \n    # The total probability is the sum of the probabilities of both paths\n    total_probability = prob_Su_Sud + prob_Sd_Sud\n    \n    # return answer\n    return total_probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-618",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ is a wealth management firm based in France. They have made an investment of $10 million in E Corporation's senior unsecured bond with a term of 10 years. Due to concerns of a potential default by E Corp, XYZ purchased a credit default swap (CDS) on E corp valued at $10 million with a designated coupon rate of 5%. After three months, E Corp goes bankrupt, resulting in a variety of activated CDS contracts. Consequently, XYZ examines the credit quality of the corporate bond they invested and the CDS's value on that bond. Here's some information on the current market status of E Corporation's bonds: Bond 1 is a 5-year senior unsecured bond trading at 40% of par, Bond 2 is a 10-year senior unsecured bond trading at 50% of par. Bond 3 is a 6-year subordinated unsecured bond trading at 30% of par. Based on these details, what is the cheapest",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond1_price = 0.40  # 40% of par value for 5-year senior unsecured bond\n    bond2_price = 0.50  # 50% of par value for 10-year senior unsecured bond\n    bond3_price = 0.30  # 30% of par value for 6-year subordinated unsecured bond\n    \n    # Do math calculation to get the answer\n    # The cheapest bond is the one with the lowest price as a percentage of par value\n    cheapest_bond_price = min(bond1_price, bond2_price, bond3_price)\n    \n    # return answer\n    return cheapest_bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-619",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of the year, XYZ Inc. bought a new machinery for its production process. The machine was priced at $25,000. It is anticipated to have a 4-year lifespan and then be resold for $4,000. Using the double-declining-balance method, what's the depreciation cost to be accounted for in the second year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 25000\n    salvage_value = 4000\n    useful_life = 4\n    \n    # Calculate the double-declining-balance rate\n    straight_line_rate = 1 / useful_life\n    double_declining_rate = 2 * straight_line_rate\n    \n    # Calculate the depreciation for the first year\n    first_year_depreciation = initial_cost * double_declining_rate\n    book_value_end_first_year = initial_cost - first_year_depreciation\n    \n    # Calculate the depreciation for the second year\n    second_year_depreciation = book_value_end_first_year * double_declining_rate\n    \n    # return answer\n    return second_year_depreciation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-620",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the yearly return for a trader who has managed a return of 5% over a six-week span?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    six_week_return = 0.05  # 5% return over six weeks\n    weeks_in_year = 52\n    six_weeks = 6\n    \n    # Do math calculation to get the answer\n    yearly_return = (1 + six_week_return) ** (weeks_in_year / six_weeks) - 1\n    \n    # return answer\n    return yearly_return\n```"
        ]
    },
    {
        "tables": [
            "| Measure     | 2007   | 2006   | 2005  | 2004  | 2003  |\n|-------------|--------|--------|-------|-------|-------|\n| EPS         | $3.03  | $1.45  | $0.23 | $2.13 | $2.55 |\n| BV per share| $19.20 | $16.21 | $14.52| $13.17| $11.84|\n| ROE         | 16.0%  | 8.9%   | 1.6%  | 16.3% | 21.8% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-621",
        "python_solution": "",
        "ground_truth": null,
        "question": "In February 2007, you are investigating a theoretical company called Davis Global that experiences seasonal demand for its offerings. On 2 February 2007, Davis shares ended at $57.98. You believe that the period from 2003 through 2006 provides a fair representation of average earnings. When determining normalized EPS, we can consider the approach of historical average EPS or the average ROE method, so what is the difference in PE calculated using these two methods?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    eps_2007 = 3.03\n    eps_2006 = 1.45\n    eps_2005 = 0.23\n    eps_2004 = 2.13\n    eps_2003 = 2.55\n    \n    bv_per_share_2007 = 19.20\n    bv_per_share_2006 = 16.21\n    bv_per_share_2005 = 14.52\n    bv_per_share_2004 = 13.17\n    bv_per_share_2003 = 11.84\n    \n    roe_2007 = 0.16\n    roe_2006 = 0.089\n    roe_2005 = 0.016\n    roe_2004 = 0.163\n    roe_2003 = 0.218\n    \n    share_price = 57.98\n    \n    # Calculate historical average EPS\n    average_eps = (eps_2007 + eps_2006 + eps_2005 + eps_2004 + eps_2003) / 5\n    \n    # Calculate average ROE\n    average_roe = (roe_2007 + roe_2006 + roe_2005 + roe_2004 + roe_2003) / 5\n    \n    # Calculate average BV per share\n    average_bv_per_share = (bv_per_share_2007 + bv_per_share_2006 + bv_per_share_2005 + bv_per_share_2004 + bv_per_share_2003) / 5\n    \n    # Calculate EPS using average ROE method\n    eps_roe_method = average_roe * average_bv_per_share"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-622",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive agreed to sell an equity forward contract four weeks ago. The contract is set to mature in three months. A profit of $1 will be provided one month prior to the expiry of the contract. The risk-free rate is 3% and is compounded yearly. The existing spot price of the underlying is $56, while the initial forward price was set at $60. What is the value of the executive\u2019s position?\n",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_forward_price = 60\n    spot_price = 56\n    risk_free_rate = 0.03  # 3%\n    time_to_maturity = 3/12  # 3 months in years\n\n    # Do math calculation to get the answer\n    # The value of the forward contract is given by the formula:\n    # Value = (Spot Price - Initial Forward Price) / (1 + Risk-Free Rate)^Time to Maturity\n    value = (spot_price - initial_forward_price) / ((1 + risk_free_rate) ** time_to_maturity)\n\n    # return answer\n    return value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-623",
        "python_solution": "",
        "ground_truth": null,
        "question": "A 12-month zero-coupon bond offers a return of 4.0%. The yields for the 24-month and 36-month zero-coupon bonds are 5.0% and 6.0% respectively. What would be the interest rate for a 12-month loan starting in a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_12_month = 0.04\n    yield_24_month = 0.05\n    yield_36_month = 0.06\n    \n    # Do math calculation to get the answer\n    # Calculate the forward rate for the 12-month loan starting in a year\n    # Using the formula: (1 + yield_24_month)^2 / (1 + yield_12_month) - 1\n    forward_rate_12_month = ((1 + yield_24_month)**2 / (1 + yield_12_month)) - 1\n    \n    # return answer\n    return forward_rate_12_month\n```"
        ]
    },
    {
        "tables": [
            "|                    | S&P 500 | Indigo Fund |\n|--------------------|---------|-------------|\n| Expected annual return | 9.0%    | 10.5%      |\n| Return standard deviation | 18.0%  | 25.0%      |\n| Sharpe ratio | 0.333   | 0.30       |\n| Active return |         | 1.2%       |\n| Active risk |           | 8.0%       |\n| Information ratio |     | 0.15       |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-624",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the highest Sharpe ratio achievable by a fund manager when merging the S&P 500 benchmark portfolio and the Indigo Fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_sp500 = 0.09\n    std_deviation_sp500 = 0.18\n    sharpe_ratio_sp500 = 0.333\n    \n    expected_return_indigo = 0.105\n    std_deviation_indigo = 0.25\n    sharpe_ratio_indigo = 0.30\n    \n    # Do math calculation to get the answer\n    # The highest Sharpe ratio achievable by merging the two portfolios can be calculated by considering the weighted average of their Sharpe ratios.\n    # However, since the Sharpe ratio is a measure of risk-adjusted return, the highest achievable Sharpe ratio would be the maximum of the two individual Sharpe ratios.\n    \n    highest_sharpe_ratio = max(sharpe_ratio_sp500, sharpe_ratio_indigo)\n    \n    # return answer\n    return highest_sharpe_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-625",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of an account that a shareholder has deposited \uffe12,000 into if it pays 6% per annum compounded continuously after four years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 2000  # Initial deposit in pounds\n    rate = 0.06  # Annual interest rate\n    time = 4  # Time in years\n    \n    # Do math calculation to get the answer\n    import math\n    final_value = principal * math.exp(rate * time)\n    \n    # return answer\n    return final_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-626",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the consultancy firm, Blue Street Inc, announced total revenues of $100 million, total expenses of $80 million, and net income of $20 million in the last year, and if accounts receivable rose by $10 million, what amount of cash was received by the firm from clients?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_revenues = 100000000  # in dollars\n    total_expenses = 80000000  # in dollars\n    net_income = 20000000  # in dollars\n    accounts_receivable_increase = 10000000  # in dollars\n    \n    # Do math calculation to get the answer\n    # Cash received from clients is calculated by adjusting the total revenues by the increase in accounts receivable\n    cash_received = total_revenues - accounts_receivable_increase\n    \n    # return answer\n    return cash_received\n```"
        ]
    },
    {
        "tables": [
            "|                         | 2018 | 2019 |\n|-------------------------|------|------|\n| Revenue                 | 5,000| 7,000|\n| Cost                    | 2,000| 2,300|\n| Operating income        | 3,000| 4,700|\n| Net profit              | 1,650| 2,300|\n| Total assets            | 4,000| 6,000|\n| Total liabilities       | 1,200| 900  |\n| Equity                  | 2,800| 5,100|",
            "|                        | 2018  | 2019  |\n| ---------------------- |:-----:| -----:|\n| Revenue                | 2,000 | 2,500 |\n| Cost                   | 1,200 | 1,300 |\n| Operating income       | 800   | 1,200 |\n| Net profit             | 460   | 820   |\n| Dividends paid         | 230   | 410   |\n| Total assets           | 1,000 | 1,100 |\n| Total liabilities      | 600   | 650   |\n| Equity                 | 400   | 450   |"
        ],
        "topic": "Accounting",
        "question_id": "test-627",
        "python_solution": "",
        "ground_truth": null,
        "question": "In China, there's an education business known as PZ Corporation which adheres to IFRS. As of 2018, the corporation had a 15% non-controlling equity stake in T-web Corporation. The executives at PZ decided to boost the company\u2019s stake in T-web to 50% through a straight cash buy on 1st January 2019, with no transactions between the companies. The table provided includes the financial statement details of both PZ and T-web corporations. Could you please compute the consolidated sales for 2019 for PZ corporation, after gaining control over T-web company:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    pz_revenue_2019 = 7000\n    t_web_revenue_2019 = 2500\n    \n    # Do math calculation to get the answer\n    # Since PZ gained control over T-web in 2019, we need to consolidate the revenues for 2019\n    consolidated_sales_2019 = pz_revenue_2019 + t_web_revenue_2019\n    \n    # return answer\n    return consolidated_sales_2019\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-628",
        "python_solution": "",
        "ground_truth": null,
        "question": "A private equity fund employs the individual transaction approach to allot carried interest (20% of profit) to its managing partner. The managing partner put in $10 million in an enterprise three years back and exited with $23 million. What is the share available for the passive investors of the said investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 10000000\n    exit_amount = 23000000\n    carried_interest_rate = 0.20\n\n    # Calculate the profit\n    profit = exit_amount - initial_investment\n\n    # Calculate the carried interest for the managing partner\n    carried_interest = profit * carried_interest_rate\n\n    # Calculate the remaining amount for the passive investors\n    remaining_amount = exit_amount - carried_interest\n\n    # return answer\n    return remaining_amount\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-629",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will be the fourth quintile number of the series 1-10?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    series = list(range(1, 11))  # Series from 1 to 10\n    quintile_size = len(series) // 5  # Size of each quintile\n\n    # Do math calculation to get the answer\n    fourth_quintile_start = quintile_size * 3\n    fourth_quintile_end = quintile_size * 4\n    fourth_quintile_numbers = series[fourth_quintile_start:fourth_quintile_end]\n\n    # return answer\n    return fourth_quintile_numbers\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-630",
        "python_solution": "",
        "ground_truth": null,
        "question": "In early 2013, corporation X released 5-year bonds with a face value of $2,000,000. Given a market interest rate of 6%, these bonds are set to pay a 7% coupon every 31st of December. What would the bonds payable amount to at the time they were issued?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 2000000\n    market_interest_rate = 0.06\n    coupon_rate = 0.07\n    years = 5\n    \n    # Do math calculation to get the answer\n    # Since the coupon rate is higher than the market interest rate, the bonds will be issued at a premium\n    # The bonds payable amount is the present value of the future cash flows (coupon payments and face value)\n    \n    # Calculate the present value of the face value\n    present_value_face_value = face_value / (1 + market_interest_rate) ** years\n    \n    # Calculate the present value of the coupon payments\n    coupon_payment = face_value * coupon_rate\n    present_value_coupon_payments = 0\n    for i in range(1, years + 1):\n        present_value_coupon_payments += coupon_payment / (1 + market_interest_rate) ** i\n    \n    # The bonds payable amount is the sum of the present value of the face value and the coupon payments\n    bonds_payable = present_value_face_value + present_value_coupon_payments\n    \n    # return answer\n    return bonds_payable\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-631",
        "python_solution": "",
        "ground_truth": null,
        "question": "The private equity portfolio had a net asset value of $120m at the close of 2019 with all capital called upon. The portfolio predicts a distribution payment of 20% by the conclusion of 2020. The portfolio's net asset value is projected to grow 10% before distribution. What is the projected net asset value after distribution at the end of 2020?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_nav = 120000000  # Net asset value at the close of 2019 in dollars\n    growth_rate = 0.10  # Projected growth rate before distribution\n    distribution_percentage = 0.20  # Distribution payment percentage by the conclusion of 2020\n\n    # Do math calculation to get the answer\n    # Calculate the net asset value after growth before distribution\n    nav_after_growth = initial_nav * (1 + growth_rate)\n    # Calculate the amount to be distributed\n    distribution_amount = nav_after_growth * distribution_percentage\n    # Calculate the net asset value after distribution\n    nav_after_distribution = nav_after_growth - distribution_amount\n\n    # return answer\n    return nav_after_distribution\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-632",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the spot market, the present exchange rate for EUR/USD is 0.8615. In the forward market, the EUR/USD rate for the next 90 days is indicated as +13.5 points. Can you tell me the forward rate for EUR/USD over the next 90 days?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 0.8615\n    forward_points = 13.5 / 10000  # Convert points to rate\n    \n    # Do math calculation to get the answer\n    forward_rate = spot_rate + forward_points\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-633",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jacob, a US-based financier, is thinking about purchasing a common stock with a yearly dividend of $2.5. This dividend is predicted to increase at a yearly rate of 5%. If the expected return rate of investors is 8%, what would be the inherent worth of the stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yearly_dividend = 2.5\n    dividend_growth_rate = 0.05\n    expected_return_rate = 0.08\n    \n    # Do math calculation to get the answer\n    inherent_worth = yearly_dividend / (expected_return_rate - dividend_growth_rate)\n    \n    # return answer\n    return inherent_worth\n```"
        ]
    },
    {
        "tables": [
            "| | Truck* | Land** |\n| --- | --- | --- | \n| Original cost | $57,000 | $18,000 |\n| Estimated  life | 8 years | |\n| Estimated salvage value at purchase | $15,000 | |\n| Depreciation method | Declining balance, 20% per year | |\n| Current fair value of item | $27,000 | $21,000 |\n\n\\* The last sale of a similar truck by the company occurred more than six months ago.\n\n\\*\\* The land is one of four identical parcels of land recently sold by the company."
        ],
        "topic": "Accounting",
        "question_id": "test-634",
        "python_solution": "",
        "ground_truth": null,
        "question": "A corporation decided to trade a truck that it had bought three years prior for a piece of land owned by a different corporation. The following chart includes details about both items: The financial statement for the corporation that is getting rid of the truck is most likely going to report a loss of:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_cost_truck = 57000\n    estimated_salvage_value_truck = 15000\n    depreciation_rate = 0.20  # 20% per year\n    current_fair_value_truck = 27000\n    years_used = 3\n\n    # Calculate the book value of the truck after 3 years using declining balance method\n    book_value_truck = original_cost_truck\n    for _ in range(years_used):\n        book_value_truck -= book_value_truck * depreciation_rate\n\n    # Ensure the book value does not go below the estimated salvage value\n    book_value_truck = max(book_value_truck, estimated_salvage_value_truck)\n\n    # Calculate the loss on disposal\n    loss_on_disposal = book_value_truck - current_fair_value_truck\n\n    # return answer\n    return loss_on_disposal\n```"
        ]
    },
    {
        "tables": [
            "| Security | Security Weight(%) | Expected Standard Deviation(%) |\n| ---      | ---                | ---                           |\n| 1        | 30                 | 20                            |\n| 2        | 70                 | 12                            |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-635",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming an investment manager constructs this portfolio, and the covariance of returns for the two securities involved is -0.0240, what is the projected standard deviation of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight1 = 0.30\n    weight2 = 0.70\n    std_dev1 = 0.20\n    std_dev2 = 0.12\n    covariance = -0.0240\n    \n    # Do math calculation to get the answer\n    # Formula for portfolio standard deviation: sqrt(w1^2 * std_dev1^2 + w2^2 * std_dev2^2 + 2 * w1 * w2 * cov)\n    portfolio_std_dev = (weight1**2 * std_dev1**2 + weight2**2 * std_dev2**2 + 2 * weight1 * weight2 * covariance) ** 0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-636",
        "python_solution": "",
        "ground_truth": null,
        "question": "A specialist working on the stable-income trade desk noticed that the annual number of defaults in the bond portfolio adheres to a Poisson process. The mean number of defaults is four every year. Given that defaults are independent, what are the odds that there will be a maximum of one default in the coming year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lambda_value = 4  # Mean number of defaults per year\n    \n    # Import necessary library for Poisson distribution\n    from scipy.stats import poisson\n    \n    # Calculate the probability of 0 and 1 defaults\n    prob_0 = poisson.pmf(0, lambda_value)\n    prob_1 = poisson.pmf(1, lambda_value)\n    \n    # Sum the probabilities to get the probability of at most 1 default\n    prob_at_most_1 = prob_0 + prob_1\n    \n    # return answer\n    return prob_at_most_1\n```"
        ]
    },
    {
        "tables": [
            "| Years to maturity | Present Value Factor |\n|------------------|---------------------|\n| 0.25                 | 0.997506               |\n| 0.5                  | 0.992556               |\n| 0.75                | 0.985222               |\n| 1                     | 0.975610               |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-637",
        "python_solution": "",
        "ground_truth": null,
        "question": "Three months ago, a supervisor agreed to a receive-fixed and pay-equity swap. The yearly fixed rate was set at 3% and the equity index was 100 at the time the swap was made. The swap will mature in one year and has a quarterly reset, and nominal amount of $100 million. The value of the swap is up for evaluation, assuming the equity index is now 101 and the current spot rates are provided:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fixed_rate = 0.03\n    equity_index_initial = 100\n    equity_index_current = 101\n    nominal_amount = 100000000\n    present_value_factors = {0.25: 0.997506, 0.5: 0.992556, 0.75: 0.985222, 1: 0.975610}\n    \n    # Calculate the fixed leg payments\n    fixed_payments = [nominal_amount * fixed_rate / 4] * 4\n    \n    # Calculate the present value of the fixed leg payments\n    pv_fixed_leg = sum(fixed_payments[i] * present_value_factors[i * 0.25] for i in range(4))\n    \n    # Calculate the equity leg payments\n    equity_return = (equity_index_current - equity_index_initial) / equity_index_initial\n    equity_payment = nominal_amount * equity_return\n    \n    # Calculate the present value of the equity leg payment\n    pv_equity_leg = equity_payment * present_value_factors[1]\n    \n    # Calculate the value of the swap\n    swap_value = pv_equity_leg - pv_fixed_leg\n    \n    # return answer\n    return swap_value\n```\n\nThis Python program calculates the value of a receive-fixed and pay-equity swap given the parameters provided. It computes the present value of both the fixed leg and the equity leg of the swap and then finds the difference to determine the swap's value."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-638",
        "python_solution": "",
        "ground_truth": null,
        "question": "A study reveals that in this structure, 30% of workspaces are equipped with printers. Given a binomial probability distribution, what is the chance that just three companies will possess a printer in a casual selection of five firms?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p = 0.3  # Probability of a company having a printer\n    n = 5    # Number of firms selected\n    k = 3    # Number of firms with a printer\n    \n    # Import necessary library for binomial coefficient calculation\n    from math import comb\n    \n    # Do math calculation to get the answer\n    # Calculate the binomial probability\n    probability = comb(n, k) * (p ** k) * ((1 - p) ** (n - k))\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-639",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the width of a 90% confidence interval using the appropriate t-distribution for a sample size of 37, having a mean of 116.23 and a variance of 245.55?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 37\n    mean = 116.23\n    variance = 245.55\n    confidence_level = 0.90\n    \n    # Calculate the standard deviation from the variance\n    standard_deviation = variance ** 0.5\n    \n    # Calculate the standard error of the mean\n    standard_error = standard_deviation / (sample_size ** 0.5)\n    \n    # Find the t-value for a 90% confidence interval with 36 degrees of freedom (n-1)\n    from scipy.stats import t\n    alpha = 1 - confidence_level\n    t_value = t.ppf(1 - alpha / 2, sample_size - 1)\n    \n    # Calculate the margin of error\n    margin_of_error = t_value * standard_error\n    \n    # Calculate the width of the confidence interval\n    confidence_interval_width = 2 * margin_of_error\n    \n    # return answer\n    return confidence_interval_width\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-640",
        "python_solution": "",
        "ground_truth": null,
        "question": "If, in a basic economy without a foreign sector, the ensuing formulas are valid: Consumption formula: C = 2,500 + 0.80 \u00d7 (Y \u2013 T), Investment formula: I = 500 + 0.30 \u00d7 Y \u2013 25 \u00d7 r, State expenditure: G = 1,000, Tax formula: T = \u2013250 + 0.30 \u00d7 Y, where Y signifies total income and r symbolizes real interest rate as a percentage, how much will the total income grow if the actual interest rate is 3% and state expenditure rises to 2,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r = 3  # real interest rate as a percentage\n    G_initial = 1000  # initial state expenditure\n    G_new = 2000  # new state expenditure\n    delta_G = G_new - G_initial  # change in state expenditure\n\n    # Consumption function coefficients\n    C_0 = 2500\n    C_y = 0.80\n\n    # Investment function coefficients\n    I_0 = 500\n    I_y = 0.30\n    I_r = 25\n\n    # Tax function coefficients\n    T_0 = -250\n    T_y = 0.30\n\n    # Calculate the multiplier\n    # The multiplier is calculated as 1 / (1 - (C_y * (1 - T_y) + I_y))\n    multiplier = 1 / (1 - (C_y * (1 - T_y) + I_y))\n\n    # Calculate the change in total income due to the change in state expenditure\n    delta_Y = multiplier * delta_G\n\n    # return answer\n    return delta_Y\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-641",
        "python_solution": "",
        "ground_truth": null,
        "question": "The details provided are related to a hedge fund named Trident Consultancy, which has:     AUM valued at $300 million as per the end of last year     A management fee set at 2% (calculated based on the AUM at year-end)     An incentive fee of 20% factored in: after deducting the management fee, considering a 5% soft hurdle rate, and utilizing a high-water mark (the high-water mark is $357 million)     The gross return for the current year for the fund stands at 20%. Could you calculate the total fee that Trident has earned this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    AUM_last_year = 300000000  # AUM valued at $300 million\n    management_fee_rate = 0.02  # Management fee set at 2%\n    incentive_fee_rate = 0.20  # Incentive fee of 20%\n    soft_hurdle_rate = 0.05  # Soft hurdle rate of 5%\n    high_water_mark = 357000000  # High-water mark is $357 million\n    gross_return_rate = 0.20  # Gross return for the current year is 20%\n\n    # Calculate the current AUM after the gross return\n    current_AUM = AUM_last_year * (1 + gross_return_rate)\n\n    # Calculate the management fee\n    management_fee = AUM_last_year * management_fee_rate\n\n    # Calculate the net return after the management fee\n    net_return = (current_AUM - AUM_last_year) - management_fee\n\n    # Check if the net return exceeds the soft hurdle rate\n    if net_return > (AUM_last_year * soft_hurdle_rate):\n        # Calculate the incentive fee after the soft hurdle rate\n        incentive_fee = (net_return - (AUM_last_year * soft_hurdle_rate)) * incentive_fee_rate\n    else:\n        incentive_fee = 0\n\n    # Calculate the total fee\n    total_fee = management_fee + incentive_fee\n\n    # return the total fee\n    return total_fee\n```\n\nThis Python program calculates the total fee earned by Trident Consultancy for the current year, considering both the management fee and the incentive fee, taking into account the soft hurdle rate and the high-water mark."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-642",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Aquarius Pool of Funds puts GBP150 million into each of Beta Hedge Fund and XYZ Hedge Fund. Aquarius Pool of Funds operates a \"1 and 10\" fee system. Both management and incentive fees are evaluated separately at the end of each calendar year. After one year, factoring in their individual management and incentive fees, the value of Aquarius's investment in Beta stands at GBP 80 million and it's worth GBP240 million in XYZ. What is the yearly return for a investor in the Aquarius Pool of Funds, after taking into account the fees charged at the fund-of-funds level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 150 * 2  # GBP 150 million in each fund\n    final_value_beta = 80  # GBP 80 million\n    final_value_xyz = 240  # GBP 240 million\n    management_fee_rate = 0.01  # 1% management fee\n    incentive_fee_rate = 0.10  # 10% incentive fee\n\n    # Calculate management fees\n    management_fee_beta = final_value_beta * management_fee_rate\n    management_fee_xyz = final_value_xyz * management_fee_rate\n\n    # Calculate incentive fees\n    incentive_fee_beta = (final_value_beta - 150) * incentive_fee_rate if final_value_beta > 150 else 0\n    incentive_fee_xyz = (final_value_xyz - 150) * incentive_fee_rate if final_value_xyz > 150 else 0\n\n    # Calculate total fees\n    total_fees_beta = management_fee_beta + incentive_fee_beta\n    total_fees_xyz = management_fee_xyz + incentive_fee_xyz\n\n    # Calculate net final values after fees\n    net_final_value_beta = final_value_beta - total_fees_beta\n    net_final_value_xyz = final_value_xyz - total_fees_xyz\n\n    # Calculate total net final value\n    total_net_final_value = net_final_value_beta + net_final_value_xyz\n\n    # Calculate yearly return\n    yearly_return = (total_net_final_value - initial_investment) / initial_investment\n\n    # return answer\n    return yearly_return\n```"
        ]
    },
    {
        "tables": [
            "|                                | 2016 ($US millions) |\n|--------------------------------|---------------------|\n| Cost: Total property, plant, and equipment (PP&E) | 30,815                 |\n| Accumulated depreciation | 16,465                 |\n| Net PP&E                         | 14,350                 |\n| Average net PP&E                 | 12,200                 |\n| Net sales                        | 21,670                 |\n| Net income                       | 2,705                   |"
        ],
        "topic": "Accounting",
        "question_id": "test-643",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering the available selected fixed asset details for a firm, what is the firm's fixed asset turnover ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_sales = 21670  # in $US millions\n    average_net_ppe = 12200  # in $US millions\n    \n    # Do math calculation to get the answer\n    fixed_asset_turnover_ratio = net_sales / average_net_ppe\n    \n    # return answer\n    return fixed_asset_turnover_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-644",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the historical returns of Company 1's shares and Company 2's shares have a correlation of 0.75, and the variance of Company 1's shares is 0.16 while the variance of Company 2's shares is 0.09, what is the covariance of returns of Company 1's shares and Company 2's shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.75\n    variance_company1 = 0.16\n    variance_company2 = 0.09\n    \n    # Do math calculation to get the answer\n    covariance = correlation * (variance_company1 ** 0.5) * (variance_company2 ** 0.5)\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-645",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine a call option that is sold for $4 and has an exercise price of $50. Calculate the value upon expiry and the profit for a purchaser if the price of the underlying asset at expiry is $55.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    call_option_price = 4\n    exercise_price = 50\n    underlying_asset_price_at_expiry = 55\n    \n    # Do math calculation to get the answer\n    if underlying_asset_price_at_expiry > exercise_price:\n        value_upon_expiry = underlying_asset_price_at_expiry - exercise_price\n    else:\n        value_upon_expiry = 0\n    \n    profit = value_upon_expiry - call_option_price\n    \n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-646",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a consistent interest rate of 8.87%, how much does a shareholder need to invest now if they aim to have $100 in their account in three years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    future_value = 100\n    interest_rate = 0.0887\n    years = 3\n    \n    # Do math calculation to get the answer\n    present_value = future_value / (1 + interest_rate) ** years\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-647",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose a call option is priced at $4 with an exercise price of $50. Calculate the value at expiration and the profit for the vendor if the price of the underlying asset at expiration is $52.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    option_price = 4\n    exercise_price = 50\n    asset_price_at_expiration = 52\n    \n    # Do math calculation to get the answer\n    value_at_expiration = max(0, asset_price_at_expiration - exercise_price)\n    profit_for_vendor = option_price - value_at_expiration\n    \n    # return answer\n    return value_at_expiration, profit_for_vendor\n```"
        ]
    },
    {
        "tables": [
            "| Source | Sum of Squares (SS) |\n|--------|---------------------|\n| Explained | 957 |\n| Total | 1580 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-648",
        "python_solution": "",
        "ground_truth": null,
        "question": "What does the term Sum of Squares Residuals (SSR) refer to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    SS_explained = 957\n    SS_total = 1580\n    \n    # Do math calculation to get the answer\n    SS_residuals = SS_total - SS_explained\n    \n    # return answer\n    return SS_residuals\n```"
        ]
    },
    {
        "tables": [
            "|                                               | \u6bdb millions |\n|-----------------------------------------------|------------:|\n| Revenues for the year                         |      12,500 |\n| Total expenses for the year                   |      10,000 |\n| Gains from available-for-sale securities      |       1,475 |\n| Loss on foreign currency translation adjustments on a foreign subsidiary |         325 |\n| Dividends paid                                |         500 |"
        ],
        "topic": "Accounting",
        "question_id": "test-649",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the total comprehensive income of the business (in \u20ac millions) based on the information from the business's financial records?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenues = 12500  # in millions\n    total_expenses = 10000  # in millions\n    gains_from_securities = 1475  # in millions\n    loss_on_translation = 325  # in millions\n    dividends_paid = 500  # in millions\n    \n    # Do math calculation to get the answer\n    net_income = revenues - total_expenses\n    comprehensive_income = net_income + gains_from_securities - loss_on_translation\n    \n    # return answer\n    return comprehensive_income\n```"
        ]
    },
    {
        "tables": [
            "| Capital component | Book Value (000) | Market Value(000) | Component cost |\n|------------------|-----------------|-----------------|---------------|\n| Debt             | $100            | $80             | 8%            |\n| Preferred stock  | $20             | $20             | 10%           |\n| Common stock     | $100            | $200            | 12%           |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-650",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collected the subsequent data pertaining to a business's capital structure and pre-tax component costs. What would be the weighted average cost of capital (WACC) of the business, given that the marginal tax rate of the business is 40%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    debt_book_value = 100000\n    debt_market_value = 80000\n    debt_cost = 0.08\n    \n    preferred_stock_book_value = 20000\n    preferred_stock_market_value = 20000\n    preferred_stock_cost = 0.10\n    \n    common_stock_book_value = 100000\n    common_stock_market_value = 200000\n    common_stock_cost = 0.12\n    \n    tax_rate = 0.40\n    \n    # Calculate the total market value of all components\n    total_market_value = debt_market_value + preferred_stock_market_value + common_stock_market_value\n    \n    # Calculate the weights of each component based on market value\n    debt_weight = debt_market_value / total_market_value\n    preferred_stock_weight = preferred_stock_market_value / total_market_value\n    common_stock_weight = common_stock_market_value / total_market_value\n    \n    # Calculate the after-tax cost of debt\n    after_tax_debt_cost = debt_cost * (1 - tax_rate)\n    \n    # Calculate the WACC\n    wacc = (debt_weight * after_tax_debt_cost) + (preferred_stock_weight * preferred_stock_cost) + (common_stock_weight * common_stock_cost)\n    \n    # return answer\n    return wacc\n```"
        ]
    },
    {
        "tables": [
            "| EV/EBITDA | 9 |\n| --- | --- |\n| EBITDA | $25,000,000 |\n| Market value of debt | $65,000,000 |\n| Cash | $1,300,000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-651",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the projected equity value for the Umbrella Corporation as per the data gathered by Paul?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ev_ebitda_ratio = 9\n    ebitda = 25000000\n    market_value_of_debt = 65000000\n    cash = 1300000\n    \n    # Do math calculation to get the answer\n    enterprise_value = ev_ebitda_ratio * ebitda\n    equity_value = enterprise_value - market_value_of_debt + cash\n    \n    # return answer\n    return equity_value\n```"
        ]
    },
    {
        "tables": [
            "|                                         |      |\n|-----------------------------------------|------|\n| ABC LA retirement plan information 2018 |      |\n| Current service costs                   | 320  |\n| Past service costs                      | 150  |\n| Employer contributions                  | 1,200|\n| Benefit obligation at beginning of year | 45,000|\n| Benefit obligation at end of year       | 48,395|\n| Plan assets at beginning of year        | 40,800|\n| Plan assets at end of year              | 44,300|\n| Actuarial loss                          | 350  |\n| Actual return on plan assets            | 3,100|\n| Discount rate on plan liabilities       | 7.5% |\n| Expected rate of return on plan assets  | 8.2% |"
        ],
        "topic": "Accounting",
        "question_id": "test-652",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ Chicago, a home decor shopping company, provides its employees a defined benefit pension plan. Based on the data provided in the next table, could you compute the regular pension expense to be reported in I/S following IFRS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_service_costs = 320\n    past_service_costs = 150\n    employer_contributions = 1200\n    benefit_obligation_beginning = 45000\n    benefit_obligation_end = 48395\n    plan_assets_beginning = 40800\n    plan_assets_end = 44300\n    actuarial_loss = 350\n    actual_return_on_plan_assets = 3100\n    discount_rate = 0.075\n    expected_rate_of_return = 0.082\n\n    # Do math calculation to get the answer\n    # Interest cost on the benefit obligation\n    interest_cost = benefit_obligation_beginning * discount_rate\n    # Expected return on plan assets\n    expected_return = plan_assets_beginning * expected_rate_of_return\n    # Net interest expense\n    net_interest_expense = interest_cost - expected_return\n    # Total pension expense\n    total_pension_expense = current_service_costs + past_service_costs + net_interest_expense + actuarial_loss\n\n    # return answer\n    return total_pension_expense\n```"
        ]
    },
    {
        "tables": [
            "| Net income | $120 |\n|---|---|\n| Decrease in accounts receivable | 20 |\n| Depreciation | 25 |\n| Increase in inventory | 10 |\n| Increase in accounts payable | 7 |\n| Decrease in wages payable | 5 |\n| Increase in deferred tax liabilities | 15 |\n| Profit from the sale of land | 2 |"
        ],
        "topic": "Accounting",
        "question_id": "test-653",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided data, what is the company's cash flow from operations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 120\n    decrease_in_accounts_receivable = 20\n    depreciation = 25\n    increase_in_inventory = 10\n    increase_in_accounts_payable = 7\n    decrease_in_wages_payable = 5\n    increase_in_deferred_tax_liabilities = 15\n    profit_from_sale_of_land = 2\n    \n    # Do math calculation to get the answer\n    # Cash flow from operations is calculated by adjusting net income for non-cash items and changes in working capital\n    cash_flow_from_operations = (\n        net_income +\n        depreciation +\n        decrease_in_accounts_receivable -\n        increase_in_inventory +\n        increase_in_accounts_payable -\n        decrease_in_wages_payable +\n        increase_in_deferred_tax_liabilities -\n        profit_from_sale_of_land\n    )\n    \n    # return answer\n    return cash_flow_from_operations\n```"
        ]
    },
    {
        "tables": [
            "|                   | 2013  | 2012  |\n|-------------------|-------|-------|\n| Sales revenue     | 100,000| 95,000|\n| Cost of goods sold| 47,000 | 47,500|\n| Depreciation expense | 4,000 | 3,500 |\n| Net Income        | 11,122  | 4,556|\n|                   |      |     |\n| **Selected Balance Sheet Data as of 31 August ($ thousands)** |   \n|                   | 2013  | 2012  |\n| Current Assets    ||\n| Cash and investments | 21,122| 25,000|\n| Accounts receivable | 25,000| 13,500|\n| Inventories        | 13,000  | 8,500|\n| Total current assets | 59,122|47,000|\n| Current liabilities |      |     |\n| Accounts payable   | 15,000 |15,000|\n| Other current liabilities | 7,000 |9,000 |\n| Total current liabilities|  22,000|24,000|"
        ],
        "topic": "Accounting",
        "question_id": "test-654",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the amount of money received from clients in the year 2013 based on the chosen data from a corporation's comparative income statement and balance sheet?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales_revenue_2013 = 100000\n    accounts_receivable_2013 = 25000\n    accounts_receivable_2012 = 13500\n    \n    # Do math calculation to get the answer\n    # The amount of money received from clients can be calculated using the formula:\n    # Cash received from clients = Sales revenue - Change in accounts receivable\n    change_in_accounts_receivable = accounts_receivable_2013 - accounts_receivable_2012\n    cash_received_from_clients = sales_revenue_2013 - change_in_accounts_receivable\n    \n    # return answer\n    return cash_received_from_clients\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-655",
        "python_solution": "",
        "ground_truth": null,
        "question": "You choose to short sell 100 shares of Monticello Equestrian Centers when it's at its annual peak of 56. Your broker informs you that your margin requirement is 45% and the commission on the acquisition is $155. During the term you are shorting the stock, Monticello pays a dividend of $2.50 per share. At the conclusion of a year, you purchase 100 shares of Monticello at 45 to settle your position and are hit with a commission of $145. What is your investment's rate of return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    short_sell_price = 56\n    shares_shorted = 100\n    margin_requirement = 0.45\n    acquisition_commission = 155\n    dividend_per_share = 2.50\n    buy_back_price = 45\n    settlement_commission = 145\n\n    # Calculate initial margin required\n    initial_margin = short_sell_price * shares_shorted * margin_requirement\n\n    # Calculate total acquisition cost\n    total_acquisition_cost = initial_margin + acquisition_commission\n\n    # Calculate total dividend paid\n    total_dividend_paid = dividend_per_share * shares_shorted\n\n    # Calculate total settlement cost\n    total_settlement_cost = buy_back_price * shares_shorted + settlement_commission\n\n    # Calculate net profit or loss\n    net_profit_or_loss = (short_sell_price * shares_shorted) - total_settlement_cost - total_dividend_paid\n\n    # Calculate rate of return\n    rate_of_return = (net_profit_or_loss / total_acquisition_cost) * 100\n\n    # return answer\n    return rate_of_return\n```"
        ]
    },
    {
        "tables": [
            "| Discount rate | 11% |\n| --- | --- |\n| Growth rate | 2% |\n| Terminal cap rate | 8% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-656",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the initial capitalization rate of the property based on the following details?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    discount_rate = 0.11\n    growth_rate = 0.02\n    terminal_cap_rate = 0.08\n    \n    # Do math calculation to get the answer\n    initial_cap_rate = (discount_rate - growth_rate) / (1 + growth_rate)\n    \n    # return answer\n    return initial_cap_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-657",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager of fixed income wishes to decrease the duration from 5.5 to 4.5 using a 3-year interest rate swap with quarterly payments. If the portfolio's market value is $10,000,000 and the modified duration of the payer swap is -2.125, what is the notional principle of the swap?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_duration = 5.5\n    target_duration = 4.5\n    portfolio_value = 10000000\n    swap_duration = -2.125\n\n    # Do math calculation to get the answer\n    # The change in duration needed is the difference between initial and target duration\n    duration_change_needed = initial_duration - target_duration\n\n    # The notional principle of the swap can be calculated using the formula:\n    # Notional Principle = (Change in Duration Needed * Portfolio Value) / Swap Duration\n    notional_principle = (duration_change_needed * portfolio_value) / swap_duration\n\n    # return answer\n    return notional_principle\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-658",
        "python_solution": "",
        "ground_truth": null,
        "question": "On January 1st, 20X5, Vega Holdings Corporation distributed 55,000 shares to employees as stock options. The exercise price for 24,000 of these shares is $32, while the remaining shares have an exercise price of $35. By the end of 20X5, the company's stock price had reached $42, with 1,800,000 common shares in outstanding circulation overall. The mean stock price for 20X5 was $34. Could you calculate the denominator for the diluted earnings per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_exercise_price_32 = 24000\n    shares_exercise_price_35 = 55000 - 24000\n    exercise_price_32 = 32\n    exercise_price_35 = 35\n    current_stock_price = 42\n    mean_stock_price = 34\n    outstanding_common_shares = 1800000\n\n    # Calculate the additional shares that could be issued at the lower of the exercise price or the mean market price\n    additional_shares_32 = shares_exercise_price_32 * (mean_stock_price - exercise_price_32) / mean_stock_price\n    additional_shares_35 = shares_exercise_price_35 * (mean_stock_price - exercise_price_35) / mean_stock_price\n\n    # Total additional shares from stock options\n    total_additional_shares = additional_shares_32 + additional_shares_35\n\n    # Calculate the diluted earnings per share denominator\n    diluted_eps_denominator = outstanding_common_shares + total_additional_shares\n\n    # return answer\n    return diluted_eps_denominator\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-659",
        "python_solution": "",
        "ground_truth": null,
        "question": "A firm purchases a license for $6,500, planning to use it for a duration of four years. However, the firm's management anticipates deriving advantages from the license for three years, applying the straight-line amortization technique. What would be the accumulated amortization at the close of the second year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    license_cost = 6500\n    useful_life_years = 3\n    \n    # Do math calculation to get the answer\n    annual_amortization = license_cost / useful_life_years\n    accumulated_amortization_second_year = annual_amortization * 2\n    \n    # return answer\n    return accumulated_amortization_second_year\n```"
        ]
    },
    {
        "tables": [
            "| Years to maturity | MRR   |\n|------------------ |-------|\n| 1                 | 1%    |\n| 2                 | 1.5%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-660",
        "python_solution": "",
        "ground_truth": null,
        "question": "One year ago, a merchant entered into a three-year interest rate swap in which he receives floating payments. Currently, the established fixed swap rate is 1.4853% (a year after the swap was initially made). The starting swap rate was set at 1.82% and the notional principle stands at $100 million. What is the value of this swap?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_principle = 100000000  # $100 million\n    fixed_rate_initial = 0.0182  # 1.82%\n    fixed_rate_current = 0.014853  # 1.4853%\n    mrr_year1 = 0.01  # 1%\n    mrr_year2 = 0.015  # 1.5%\n    \n    # Calculate the present value of the remaining fixed payments\n    pv_fixed_year2 = notional_principle * fixed_rate_current / (1 + mrr_year1)\n    pv_fixed_year3 = notional_principle * fixed_rate_current / (1 + mrr_year2)**2\n    \n    # Calculate the present value of the floating payments\n    pv_floating_year2 = notional_principle * mrr_year1 / (1 + mrr_year1)\n    pv_floating_year3 = notional_principle * mrr_year2 / (1 + mrr_year2)**2\n    \n    # Calculate the value of the swap\n    value_of_swap = (pv_fixed_year2 + pv_fixed_year3) - (pv_floating_year2 + pv_floating_year3)\n    \n    # return answer\n    return value_of_swap\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-661",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the yield-to-maturity of Bond B increases by 20 basis points, and given that the bond's annual modified duration is 6.932 and the annual convexity is 59.270, what should be the anticipated percentage price change?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_change_basis_points = 20\n    modified_duration = 6.932\n    convexity = 59.270\n    \n    # Convert basis points to percentage\n    yield_change_percentage = yield_change_basis_points / 100\n    \n    # Calculate the percentage price change due to duration\n    price_change_duration = -modified_duration * yield_change_percentage\n    \n    # Calculate the percentage price change due to convexity\n    price_change_convexity = 0.5 * convexity * (yield_change_percentage ** 2)\n    \n    # Calculate the total anticipated percentage price change\n    total_price_change = price_change_duration + price_change_convexity\n    \n    # return answer\n    return total_price_change\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-662",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the constant maturity mortality if the assumed annual conditional prepayment rate (CPR) for a cluster of mortgages is 5% and the weighted average maturity of the respective mortgages is 15 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cpr = 0.05  # Assumed annual conditional prepayment rate\n    weighted_avg_maturity = 15  # Weighted average maturity of the mortgages in years\n    \n    # Do math calculation to get the answer\n    # Convert CPR to Single Monthly Mortality Rate (SMM)\n    smm = 1 - (1 - cpr) ** (1/12)\n    \n    # Calculate the constant maturity mortality (CMM)\n    cmm = 1 - (1 - smm) ** weighted_avg_maturity\n    \n    # return answer\n    return cmm\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-663",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the anticipated rate of return for a share with CAPM, given a beta of 1.5, a risk-free rate of 5%, and a market return of 8%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beta = 1.5\n    risk_free_rate = 0.05\n    market_return = 0.08\n    \n    # Do math calculation to get the answer\n    anticipated_rate_of_return = risk_free_rate + beta * (market_return - risk_free_rate)\n    \n    # return answer\n    return anticipated_rate_of_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-664",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the five-year Treasury bond in the US has a yield of 2% and the swap spread is reported at 50 bps, what is the interest rate paid by the fixed payer in a five-year interest rate swap?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    treasury_bond_yield = 2  # in percent\n    swap_spread = 50  # in basis points\n    \n    # Do math calculation to get the answer\n    # Convert basis points to percent\n    swap_spread_percent = swap_spread / 100\n    \n    # Calculate the interest rate paid by the fixed payer\n    fixed_payer_rate = treasury_bond_yield + swap_spread_percent\n    \n    # return answer\n    return fixed_payer_rate\n```"
        ]
    },
    {
        "tables": [
            "| Convertible Bond Issued by Pro Star, Inc |      |\n|--------------------------------|------|\n| Issue Date                     | 6 December 20X0 |\n| Maturity Date                  | 6 December 20X4 |\n| Coupon Rate                    | 2%  |\n| Issue Price                    | $1,000 |\n| Conversion Ratio               | 31   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-665",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the conversion price of the bond in Exhibit 3, which was issued by Pro Star as a convertible bond, according to the exhibit below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    issue_price = 1000\n    conversion_ratio = 31\n    \n    # Do math calculation to get the answer\n    conversion_price = issue_price / conversion_ratio\n    \n    # return answer\n    return conversion_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-666",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, Parker Inc. acquired a production machine for $60,000 that is anticipated to produce an annual cash inflow of $25,000 for six years. The company will depreciate the machine over six years for accounting reasons, but the tax authority assumes a useful lifespan of five years for the machine. If the tax rate is 40% and the machine has no residual value, what would be the taxable income for Parker Inc. in the first year if the straight-line method is applied?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 60000\n    annual_cash_inflow = 25000\n    useful_life_company = 6\n    useful_life_tax_authority = 5\n    tax_rate = 0.40\n    residual_value = 0\n\n    # Calculate depreciation per year for both company and tax authority using straight-line method\n    depreciation_per_year_company = (initial_cost - residual_value) / useful_life_company\n    depreciation_per_year_tax_authority = (initial_cost - residual_value) / useful_life_tax_authority\n\n    # Calculate taxable income for the first year\n    # Taxable income is calculated based on the tax authority's depreciation schedule\n    taxable_income = annual_cash_inflow - depreciation_per_year_tax_authority\n\n    # return answer\n    return taxable_income\n```"
        ]
    },
    {
        "tables": [
            "|                                             | 2010 | 2011 | 2012 |\n|---------------------------------------------|------|------|------|\n| **Net sales**                               | 46.8 | 50.5 | 53.9 |\n| **Cost of sales**                           | 18.2 | 18.4 | 18.8 |\n| **Gross profit**                            | 28.6 | 32.1 | 35.1 |\n| **Selling, general, and administrative (SG&A) expenses** | 19.3 | 22.5 | 25.1 |\n| **Operating income**                        | 9.3  | 9.6  | 10.0 |\n| **Interest expense**                        | 0.5  | 0.7  | 0.6  |\n| **Income before provision for income tax**  | 8.8  | 8.9  | 9.4  |\n| **Provision for income taxes**              | 2.8  | 2.8  | 3.1  |\n| **Net income**                              | 6.0  | 6.1  | 6.3  |"
        ],
        "topic": "Accounting",
        "question_id": "test-667",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on Exhibits 1, what is Applicant B's prediction for selling, general, and administrative costs in 2013, considering that his forecast states the following: net sales will increase at the average yearly growth rate in net sales for the years 2010-2012 and the 2013 SG&A/net sales ratio will remain consistent with the average ratio during 2010-2012?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_sales_2010 = 46.8\n    net_sales_2011 = 50.5\n    net_sales_2012 = 53.9\n    \n    sg_a_2010 = 19.3\n    sg_a_2011 = 22.5\n    sg_a_2012 = 25.1\n    \n    # Calculate the average yearly growth rate in net sales\n    growth_rate_2011 = (net_sales_2011 - net_sales_2010) / net_sales_2010\n    growth_rate_2012 = (net_sales_2012 - net_sales_2011) / net_sales_2011\n    avg_growth_rate = (growth_rate_2011 + growth_rate_2012) / 2\n    \n    # Predict net sales for 2013\n    net_sales_2013 = net_sales_2012 * (1 + avg_growth_rate)\n    \n    # Calculate the average SG&A/net sales ratio for 2010-2012\n    sg_a_ratio_2010 = sg_a_2010 / net_sales_2010\n    sg_a_ratio_2011 = sg_a_2011 / net_sales_2011\n    sg_a_ratio_2012 = sg_a_2012 / net_sales_2012\n    avg_sg_a_ratio = (sg_a_ratio_2010 + sg_a_ratio_2011 + sg_a_ratio_2012) / 3\n    \n    # Predict SG&A costs for 2013\n    sg_a_2013 = net_sales_2013 * avg_sg_a_ratio\n    \n    # return answer\n    return sg_a_2013\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class    | Geometric Return (%) |\n| -------------- | -------------------- |\n| Equities       | 8.0                  |\n| Corporate Bonds| 6.5                  |\n| Treasury bills | 2.5                  |\n| Inflation      | 2.1                  |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-668",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the recorded historical geometric actual return rate for company bonds as per the researcher?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    corporate_bonds_return = 6.5\n    \n    # Do math calculation to get the answer\n    # No calculation is needed as the value is directly provided in the table\n    \n    # return answer\n    return corporate_bonds_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-669",
        "python_solution": "",
        "ground_truth": null,
        "question": "Firm N, which uses the IFRS system, allocated $22 million for inventory acquisition last year. Following a natural calamity, the inventory's value was reduced to $19 million. However, by the end of the year, certain equipment was still functional, raising the actual inventory value to $25 million. What should be the reported inventory value for Firm N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_inventory_value = 22000000\n    reduced_inventory_value = 19000000\n    final_inventory_value = 25000000\n    \n    # Do math calculation to get the answer\n    # According to IFRS, the inventory should be reported at the lower of cost or net realizable value.\n    # Here, the cost is $22 million, and the net realizable value is $25 million.\n    # Since the cost is lower than the net realizable value, the inventory should be reported at the cost.\n    # However, due to the natural calamity, the inventory value was reduced to $19 million.\n    # This reduced value is now the lower of cost or net realizable value.\n    reported_inventory_value = reduced_inventory_value\n    \n    # return answer\n    return reported_inventory_value\n```"
        ]
    },
    {
        "tables": [
            "|                      | Portfolio W    | Futures Contract and CTD Bond |\n|----------------------|----------------|------------------------------|\n| Market value         | $120,349,000   | Price                        | 143.20                        |\n| Modified duration    | 9.30           | Modified duration            | 9.00                          |\n| Basis point value    | $111,924.57    | Basis point value            | 128.88                        |\n|                      |                | Conversion factor            | 0.75                          |\n|                      |                | Contract size                | $100,000                      |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-670",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on Exhibit 1, to meet the goal of junior analyst, Benjamin, to lower the modified duration of his fully invested US Treasuries portfolio, Portfolio B, to 3.00, how many Treasury futures contracts does Benjamin need to sell?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_market_value = 120349000\n    portfolio_modified_duration = 9.30\n    portfolio_basis_point_value = 111924.57\n    \n    futures_modified_duration = 9.00\n    futures_basis_point_value = 128.88\n    conversion_factor = 0.75\n    contract_size = 100000\n    \n    target_modified_duration = 3.00\n    \n    # Do math calculation to get the answer\n    # Calculate the basis point value of the futures contract in terms of the portfolio currency\n    futures_bpv_adjusted = futures_basis_point_value * conversion_factor\n    \n    # Calculate the number of contracts needed to adjust the portfolio's duration\n    number_of_contracts = (portfolio_modified_duration - target_modified_duration) * (portfolio_market_value / portfolio_basis_point_value) / (futures_modified_duration * (contract_size / futures_bpv_adjusted))\n    \n    # return answer\n    return round(number_of_contracts)\n\n# Example usage:\n# print(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-671",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial institution has recently received loan applications amounting to $210 million; it plans to acquire $95M in novel Treasury bonds releasing this week and foresees that its top corporate client's credit line withdrawals will reach $115M. The total funds from deposits and other client funds obtained today amount to $210 million, and the expected funds to be garnered next week amounts to an additional $150M. Based on the provided information, what is the discrepancy in available funds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_applications = 210000000\n    treasury_bonds = 95000000\n    credit_line_withdrawals = 115000000\n    current_funds = 210000000\n    expected_funds_next_week = 150000000\n    \n    # Do math calculation to get the answer\n    total_required_funds = loan_applications + credit_line_withdrawals\n    total_available_funds = current_funds + expected_funds_next_week - treasury_bonds\n    discrepancy = total_available_funds - total_required_funds\n    \n    # return answer\n    return discrepancy\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-672",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a foreign exchange broker determined the correlation between the spot and futures to be 0.875, the yearly standard deviation of the spot price to be $1.10, and the yearly standard deviation of the futures price to be $1.3. What would be the hedge ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.875\n    std_dev_spot = 1.10\n    std_dev_futures = 1.3\n    \n    # Do math calculation to get the answer\n    hedge_ratio = correlation * (std_dev_spot / std_dev_futures)\n    \n    # return answer\n    return hedge_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Book value per share, beginning of 2015 | 5.0 |\n| --------------------------------------- | --- |\n| Cost of equity                          | 8%  |\n| Persistence factor                      | 0.85|",
            "|                       | 2015 | 2016 | 2017 |\n|-----------------------|------|------|------|\n| Expected earnings per share | 2.0  | 2.2  | 2.45 |\n| Expected dividend per share | 1.2  | 0.9  | 1.11 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-673",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided in the table below, Henry is getting ready to reassess the worth of XYZ Corp. The business anticipates a return on equity (ROE) of 34.5% in 2017, but it's expected to gradually decrease towards the cost of equity afterward. From the start of 2015, utilizing the multi-stage residual income (RI) model, determine the fundamental value of XYZ Corp's equity. Can you calculate the fundamental price per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    book_value_2015 = 5.0\n    cost_of_equity = 0.08\n    persistence_factor = 0.85\n    expected_earnings_2015 = 2.0\n    expected_earnings_2016 = 2.2\n    expected_earnings_2017 = 2.45\n    expected_dividend_2015 = 1.2\n    expected_dividend_2016 = 0.9\n    expected_dividend_2017 = 1.11\n    ROE_2017 = 0.345\n\n    # Calculate book values for each year\n    book_value_2016 = book_value_2015 + expected_earnings_2015 - expected_dividend_2015\n    book_value_2017 = book_value_2016 + expected_earnings_2016 - expected_dividend_2016\n\n    # Calculate residual income for each year\n    RI_2015 = expected_earnings_2015 - (cost_of_equity * book_value_2015)\n    RI_2016 = expected_earnings_2016 - (cost_of_equity * book_value_2016)\n    RI_2017 = expected_earnings_2017 - (cost_of_equity * book_value_2017)\n\n    # Calculate the terminal value of residual income\n    terminal_RI = (RI_2017 * persistence_factor) / (cost_of_equity - (ROE_2017 - cost_of_equity) * persistence_factor)\n\n    # Calculate the present value of residual income\n    PV_RI_2015 = RI_2015 / (1 + cost_of_equity)\n    PV_RI_2016 = RI_2016 / ((1 + cost_of_equity) ** 2)\n    PV_RI_2"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-674",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood that a stock B from the stock market, with an average return of 18 percent and a standard deviation of the estimate return of 25 percent annually, exceeds a return of 22 percent, assuming the returns are normally distributed? A market researcher is currently investigating this.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    avg_return = 18\n    std_dev = 25\n    target_return = 22\n\n    # Import necessary library\n    from scipy.stats import norm\n\n    # Calculate the z-score\n    z_score = (target_return - avg_return) / std_dev\n\n    # Calculate the probability using the cumulative distribution function (CDF)\n    probability = 1 - norm.cdf(z_score)\n\n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-675",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine in 2017, a USD/EUR spot exchange rate hits 1.2865 at a certain period. The one-year forward rate then is 1.28485. What would be the one-year forward points quoted as?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 1.2865\n    forward_rate = 1.28485\n    \n    # Do math calculation to get the answer\n    forward_points = forward_rate - spot_rate\n    \n    # return answer\n    return forward_points\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-676",
        "python_solution": "",
        "ground_truth": null,
        "question": "Fortune Corporation has a tax burden of 70%, interest burden of 0.8 times, current ratio of 1.5 times, EBIT margin of 20%, asset turnover of 3 times, leverage ratio of 1.6 times. Can you compute the corporation's return on equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    tax_burden = 0.7\n    interest_burden = 0.8\n    ebit_margin = 0.2\n    asset_turnover = 3\n    leverage_ratio = 1.6\n    \n    # Do math calculation to get the answer\n    # Calculate EBT (Earnings Before Tax) margin\n    ebt_margin = ebit_margin * interest_burden\n    \n    # Calculate Net Income margin\n    net_income_margin = ebt_margin * (1 - tax_burden)\n    \n    # Calculate Return on Assets (ROA)\n    roa = net_income_margin * asset_turnover\n    \n    # Calculate Return on Equity (ROE)\n    roe = roa * leverage_ratio\n    \n    # return answer\n    return roe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-677",
        "python_solution": "",
        "ground_truth": null,
        "question": "The value of the stocks portfolio stands at $10,000,000. The company intends to utilize futures contracts valued at $125,000 to bring down the beta from 1.2 to zero over a span of two months. The beta value of these futures contracts is 0.95. How many futures contracts should the company sell?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_value = 10000000\n    target_beta = 0\n    current_beta = 1.2\n    futures_contract_value = 125000\n    futures_beta = 0.95\n    \n    # Do math calculation to get the answer\n    # Calculate the required change in beta\n    beta_change_required = target_beta - current_beta\n    \n    # Calculate the number of futures contracts needed\n    number_of_contracts = (beta_change_required * portfolio_value) / (futures_beta * futures_contract_value)\n    \n    # return answer\n    return abs(number_of_contracts)\n```"
        ]
    },
    {
        "tables": [
            "| Accounting profit (earnings before taxes) | $250,000 |\n|---|---|\n| Taxable income | $215,000 |\n| Tax rate | 30% |\n| Income taxes paid in year | $61,200 |\n| Deferred tax liability, start of year | $82,400 |\n| Deferred tax liability, end of year | $90,650 |"
        ],
        "topic": "Accounting",
        "question_id": "test-678",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the income tax expense listed on this year's earnings statement for a corporation for the current fiscal year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    income_taxes_paid = 61200\n    deferred_tax_liability_start = 82400\n    deferred_tax_liability_end = 90650\n    \n    # Do math calculation to get the answer\n    # Income tax expense is calculated as the sum of current tax expense and the change in deferred tax liability\n    current_tax_expense = income_taxes_paid\n    change_in_deferred_tax_liability = deferred_tax_liability_end - deferred_tax_liability_start\n    income_tax_expense = current_tax_expense + change_in_deferred_tax_liability\n    \n    # return answer\n    return income_tax_expense\n```"
        ]
    },
    {
        "tables": [
            "| Option        | W     | X     | Y     | z     |\n|---------------|-------|-------|-------|-------|\n| Type of Option| Call  | Call  | Put   | Put   |\n| Exercise Price| $38.00| $46.00| $38.00| $36.00|\n| N (d1)        | 0.56  | 0.30  | 0.56  | 0.64  |\n| N (d2)        | 0.45  | 0.21  | 0.45  | 0.553 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-679",
        "python_solution": "",
        "ground_truth": null,
        "question": "If she chooses to temporarily hedge the 100,000 shares of Apoth she possesses until the FDA's review concludes, how many option X contracts would Smith need to sell to effectuate the hedge plan, based on the information in Exhibit 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_owned = 100000\n    exercise_price_X = 46.00\n    N_d1_X = 0.30\n    N_d2_X = 0.21\n    current_stock_price = 40.00  # Assuming current stock price is $40.00 as per typical hedging scenario\n    risk_free_rate = 0.02  # Assuming a risk-free rate of 2%\n    time_to_maturity = 0.5  # Assuming time to maturity is 6 months (0.5 years)\n    volatility = 0.25  # Assuming a volatility of 25%\n\n    # Calculate the Black-Scholes value for the call option X\n    from math import log, sqrt, exp\n    from scipy.stats import norm\n\n    d1 = (log(current_stock_price / exercise_price_X) + (risk_free_rate + 0.5 * volatility ** 2) * time_to_maturity) / (volatility * sqrt(time_to_maturity))\n    d2 = d1 - volatility * sqrt(time_to_maturity)\n\n    call_price_X = current_stock_price * norm.cdf(d1) - exercise_price_X * exp(-risk_free_rate * time_to_maturity) * norm.cdf(d2)\n\n    # Calculate the number of option contracts needed\n    options_needed = shares_owned / 100  # Each contract covers 100 shares\n\n    # return answer\n    return options_needed\n```\n\nThis Python program calculates the number of option X contracts Smith needs to sell to hedge her 100,000 shares of Apoth stock. It uses the Black-Scholes formula to determine the value of the call option X and then calculates the number of contracts needed based on the assumption that each contract covers 100 shares."
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-680",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's assume there's an $80 million exposure to a certain business partner that's backed by $70 million worth of collateral. This collateral is made up of bonds from a company with an A-level rating. The business partner holds a B+ rating. With a 150% risk weight for the business partner and a 50% risk weight for the collateral, what would the risk-weighted assets be for the exposure using a straightforward approach?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    exposure = 80000000  # $80 million exposure\n    collateral = 70000000  # $70 million worth of collateral\n    risk_weight_partner = 1.5  # 150% risk weight for the business partner\n    risk_weight_collateral = 0.5  # 50% risk weight for the collateral\n    \n    # Do math calculation to get the answer\n    # Calculate risk-weighted assets for the exposure\n    risk_weighted_assets_partner = exposure * risk_weight_partner\n    risk_weighted_assets_collateral = collateral * risk_weight_collateral\n    \n    # Total risk-weighted assets\n    total_risk_weighted_assets = risk_weighted_assets_partner + risk_weighted_assets_collateral\n    \n    # return answer\n    return total_risk_weighted_assets\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-681",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Thompson, a credit analyst, is planning to use the data from a 5-year corporate bond labeled Bond E that is presently yielding a return of 7.5%, with a comparable government bond offering 2.5%, and a suitable CDS contract bearing a credit spread of 4.5% to carry out a basis trade, what will be the accrued profit if there's a convergence in the bond and CDS market?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    corporate_bond_yield = 7.5  # Yield of the corporate bond in percent\n    government_bond_yield = 2.5  # Yield of the comparable government bond in percent\n    cds_credit_spread = 4.5  # Credit spread of the CDS contract in percent\n\n    # Do math calculation to get the answer\n    # The profit accrued from the basis trade is the difference between the corporate bond yield and the sum of the government bond yield and the CDS credit spread\n    profit = corporate_bond_yield - (government_bond_yield + cds_credit_spread)\n\n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-682",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that Corporation N's pretax profits are taxed at the business level of 35%, and the individual tax rate on dividends is at 15%. All the pretax income are dedicated to dividends. What is the effective tax rate on the dividend?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    business_tax_rate = 0.35\n    individual_tax_rate = 0.15\n    \n    # Do math calculation to get the answer\n    # Calculate the effective tax rate on the dividend\n    effective_tax_rate = business_tax_rate + (1 - business_tax_rate) * individual_tax_rate\n    \n    # return answer\n    return effective_tax_rate\n```"
        ]
    },
    {
        "tables": [
            "|       | Classification | Cost   | Market value 2018 | Market value 2019 |\n|-------|----------------|--------|-------------------|-------------------|\n| Shoes Corp | FVOCI   | 12,000 | 15,000  | 16,000  |\n| Angle PD   | Amortized cost  | 35,000 | 32,000  | 33,000  |\n| T-vision   | FVPL   | 42,000 | 45,000  | 56,000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-683",
        "python_solution": "",
        "ground_truth": null,
        "question": "In her role at the Equity investment company, Fabian, a CFA, is preparing a research report on a company known as PZ, which is listed in HK and follows IFRS 9. She pulled information from PZ's year-end 2019 financial report regarding three fixed income investments (assuming cost equals par value). Had Shoes Corp been classified as a Fair Value through P/L in 2019, what would the earnings before taxes have been?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_shoes_corp = 12000\n    market_value_2018_shoes_corp = 15000\n    market_value_2019_shoes_corp = 16000\n    \n    # Do math calculation to get the answer\n    # Calculate the unrealized gain if Shoes Corp was classified as FVPL\n    unrealized_gain_2019 = market_value_2019_shoes_corp - cost_shoes_corp\n    \n    # Assuming the earnings before taxes would include this unrealized gain\n    earnings_before_taxes = unrealized_gain_2019\n    \n    # return answer\n    return earnings_before_taxes\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-684",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current value of a European-style put option is set to be determined by a CEO using a two-period binomial model. The present stock price is $32, with the put option's exercise price also at $32. The up and down factors are 1.12 and 0.92 respectively, with a risk-free rate of 5%. What is the value of this put option?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 32  # current stock price\n    K = 32  # exercise price of the put option\n    u = 1.12  # up factor\n    d = 0.92  # down factor\n    r = 0.05  # risk-free rate\n    N = 2  # number of periods\n\n    # Calculate the stock prices at the end of two periods\n    S_uu = S * u * u\n    S_ud = S * u * d\n    S_dd = S * d * d\n\n    # Calculate the put option values at the end of two periods\n    P_uu = max(K - S_uu, 0)\n    P_ud = max(K - S_ud, 0)\n    P_dd = max(K - S_dd, 0)\n\n    # Calculate the risk-neutral probabilities\n    p = (1 + r - d) / (u - d)\n    q = 1 - p\n\n    # Calculate the present value of the put option using the risk-neutral probabilities\n    P_u = (p * P_uu + q * P_ud) / (1 + r)\n    P_d = (p * P_ud + q * P_dd) / (1 + r)\n\n    # Calculate the present value of the put option today\n    P = (p * P_u + q * P_d) / (1 + r)\n\n    # return answer\n    return P\n```\n\nThis Python program calculates the value of a European-style put option using a two-period binomial model. It defines the necessary variables, calculates the stock prices and put option values at the end of the two periods, and then uses the risk-neutral probabilities to find the present value of the put option."
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-685",
        "python_solution": "",
        "ground_truth": null,
        "question": "The 15-month investment duration for a bond yielded a 12% return. What is the annualized yield?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investment_duration_months = 15\n    return_rate = 0.12  # 12% return\n    \n    # Do math calculation to get the answer\n    # Convert months to years\n    investment_duration_years = investment_duration_months / 12\n    \n    # Calculate annualized yield\n    annualized_yield = (1 + return_rate) ** (1 / investment_duration_years) - 1\n    \n    # return answer\n    return annualized_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-686",
        "python_solution": "",
        "ground_truth": null,
        "question": "A manager of an endowment fund is assessing the market risk of Omega Manufacturing Fund. The fund projects an annual return of 7.1% and a volatility of 7.9%, and it is compared against the Russell 2000 Index. It is assumed by the manager that the anticipated annual return of the Russell 2000 Index is 7.8%, with a yearly volatility of 9.8%. In accordance with the Capital Asset Pricing Model, if the risk-free rate per year is 3.2%, what would be the beta of Omega Manufacturing Fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 3.2  # Risk-free rate in percentage\n    omega_return = 7.1  # Annual return of Omega Manufacturing Fund in percentage\n    omega_volatility = 7.9  # Volatility of Omega Manufacturing Fund in percentage\n    russell_return = 7.8  # Annual return of Russell 2000 Index in percentage\n    russell_volatility = 9.8  # Volatility of Russell 2000 Index in percentage\n    \n    # Do math calculation to get the answer\n    # Using the Capital Asset Pricing Model (CAPM) formula: E(R) = Rf + \u03b2(Rm - Rf)\n    # Rearrange to solve for beta: \u03b2 = (E(R) - Rf) / (Rm - Rf)\n    beta = (omega_return - risk_free_rate) / (russell_return - risk_free_rate)\n    \n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [
            "| Year | Hazard Rate |\n|------|-------------|\n| 1    | 0.15%       |\n| 2    | 0.25%       |\n| 3    | 0.35%       |\n| 4    | 0.50%       |\n| 5    | 0.65%       |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-687",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood of the firm failing to fulfill its obligations on Bond C, a five-year investment-grade bond, within the initial 4 years, as per the given information?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    hazard_rates = [0.0015, 0.0025, 0.0035, 0.0050]\n    \n    # Do math calculation to get the answer\n    # The likelihood of the firm failing in any given year is the hazard rate for that year.\n    # The likelihood of not failing in any given year is (1 - hazard rate).\n    # The likelihood of not failing over all the years is the product of (1 - hazard rate) for each year.\n    # The likelihood of failing within the initial 4 years is 1 minus the likelihood of not failing over all the years.\n    \n    not_failing_probability = 1\n    for rate in hazard_rates:\n        not_failing_probability *= (1 - rate)\n    \n    failing_probability = 1 - not_failing_probability\n    \n    # return answer\n    return failing_probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-688",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the neckline is positioned at \u20ac100, the shoulders at \u20ac90, and the head at \u20ac75 in a reversed head and shoulders pattern, what is the target value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    neckline = 100\n    shoulders = 90\n    head = 75\n    \n    # Calculate the difference between the head and the neckline\n    difference = neckline - head\n    \n    # Calculate the target value by adding the difference to the neckline\n    target_value = neckline + difference\n    \n    # return answer\n    return target_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-689",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the monthly repayment for a customer who buys a car with a loan of \u20ac30,000 that is set to be paid off in five years with fixed monthly installments, an annual nominal interest of 8% and interest compounded monthly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 30000  # Loan amount in euros\n    annual_interest_rate = 0.08  # Annual nominal interest rate\n    years = 5  # Loan term in years\n    months_per_year = 12  # Number of months in a year\n\n    # Convert annual interest rate to monthly and calculate total number of payments\n    monthly_interest_rate = annual_interest_rate / months_per_year\n    total_payments = years * months_per_year\n\n    # Do math calculation to get the monthly repayment\n    # Using the formula for the monthly payment of a fixed-rate mortgage:\n    # M = P [i(1 + i)^n] / [(1 + i)^n - 1]\n    # where M is the monthly payment, P is the principal, i is the monthly interest rate, and n is the total number of payments\n    monthly_payment = principal * (monthly_interest_rate * (1 + monthly_interest_rate) ** total_payments) / ((1 + monthly_interest_rate) ** total_payments - 1)\n\n    # return answer\n    return round(monthly_payment, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-690",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming we select 20 students to sit for the university admission test, how many may potentially suffer from anxiety neurosis if it's believed that 45% of all examinees experience it?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    number_of_students = 20\n    anxiety_rate = 0.45\n    \n    # Do math calculation to get the answer\n    students_with_anxiety = number_of_students * anxiety_rate\n    \n    # return answer\n    return students_with_anxiety\n```"
        ]
    },
    {
        "tables": [
            "| Spot rate (USD/AUD) | 0.9062/0.9066 |\n| --- | --- |\n| Three-month points | -36.8/-36.4 |\n| Three-month Libor (AUD) | 2.88% |\n| Three-month Libor (USD) | 0.23% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-691",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the beginning of the year, Brighton offset a major exposure to the Australian dollar (AUD) by selling AUD 5 million forward against the US dollar (USD) at the all-in forward price of 0.8940 (USD/AUD). Currently, it's three months away from the settlement date and Sanderson wants to mark the forward position to market. Exhibit 1 provides data on the current rates in foreign exchange markets. What is the mark-to-market value for Brighton's forward position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_sale_amount_aud = 5000000  # AUD 5 million sold forward\n    forward_price_agreed = 0.8940  # Agreed forward price (USD/AUD)\n    spot_rate_bid = 0.9062  # Current spot rate bid (USD/AUD)\n    spot_rate_ask = 0.9066  # Current spot rate ask (USD/AUD)\n    three_month_points_bid = -36.8  # Three-month points bid\n    three_month_points_ask = -36.4  # Three-month points ask\n    libor_aud = 0.0288  # Three-month Libor (AUD)\n    libor_usd = 0.0023  # Three-month Libor (USD)\n    days_in_year = 360  # Typically used for money market calculations\n    days_to_settlement = 90  # Three months to settlement\n\n    # Calculate the current forward rates\n    forward_rate_bid = spot_rate_bid + (three_month_points_bid / 10000)\n    forward_rate_ask = spot_rate_ask + (three_month_points_ask / 10000)\n\n    # Calculate the discount factors\n    discount_factor_aud = 1 / (1 + libor_aud * (days_to_settlement / days_in_year))\n    discount_factor_usd = 1 / (1 + libor_usd * (days_to_settlement / days_in_year))\n\n    # Calculate the mark-to-market value\n    mark_to_market_value = (forward_rate_bid - forward_price_agreed) * forward_sale_amount_aud * discount_factor_aud / discount_factor_usd\n\n    # return answer\n    return mark_to_market_value\n```\n\nThis Python program calculates the mark-to-market value for Brighton's forward position by considering the current spot rates, forward points, and interest rates. It uses the discount factors to adjust for the time"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-692",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the worth of a share which is projected to pay a $3 dividend in the subsequent year, with a consistent growth rate of 3% and a needed return rate of 8%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_next_year = 3  # Dividend expected in the next year\n    growth_rate = 0.03  # Annual growth rate of dividends\n    required_return = 0.08  # Required rate of return\n    \n    # Do math calculation to get the answer\n    # Using the Gordon Growth Model (Dividend Discount Model)\n    # P = D1 / (r - g)\n    # where P is the present value of the stock, D1 is the dividend next year, r is the required return, and g is the growth rate\n    stock_price = dividend_next_year / (required_return - growth_rate)\n    \n    # return answer\n    return stock_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-693",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a perfectly competitive market where the demand schedule is P = 165 - 3Q (for Q \u2264 55), how is the entry price for new players determined given that the long-term total cost for every business is 125 + Q + 5Q2, the average cost is 125/Q + 1 + 5Q, and the marginal cost is 1 + 10Q?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Q = 55  # Since Q \u2264 55, we use the maximum value for Q\n    long_term_total_cost = 125 + Q + 5 * Q**2\n    average_cost = 125 / Q + 1 + 5 * Q\n    marginal_cost = 1 + 10 * Q\n    \n    # Do math calculation to get the answer\n    # In a perfectly competitive market, the entry price for new players is determined by the minimum of the average cost\n    # We need to find the quantity Q that minimizes the average cost\n    \n    # To find the minimum average cost, we set the derivative of the average cost with respect to Q to zero\n    # The derivative of the average cost function 125/Q + 1 + 5Q is -125/Q^2 + 5\n    # Setting this equal to zero and solving for Q gives us the quantity that minimizes the average cost\n    \n    # Solving -125/Q^2 + 5 = 0\n    Q_min = (125 / 5)**0.5\n    \n    # Now we calculate the average cost at this Q_min\n    average_cost_min = 125 / Q_min + 1 + 5 * Q_min\n    \n    # return answer\n    return average_cost_min\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-694",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer acquires a five-year bond with a 4% annual coupon for 104.58 and sells it precisely three years subsequent to the purchase. Right after the bond is bought and prior to receiving the first coupon, interest rates drop to 2.25%, and they stay at this rate for the following three years. Assuming that the coupon payments are collected and re-invested at 2.25%, what is the buyer's actualized horizon yield?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 104.58\n    coupon_rate = 0.04\n    face_value = 100  # Assuming the face value is 100 for simplicity\n    reinvestment_rate = 0.0225\n    years_held = 3\n    years_total = 5\n\n    # Calculate the total coupon payments and reinvestment income\n    coupon_payments = face_value * coupon_rate * years_held\n    reinvestment_income = coupon_payments * (reinvestment_rate / coupon_rate)\n\n    # Calculate the future value of the bond at the time of sale\n    future_value = face_value + reinvestment_income\n\n    # Calculate the sale price of the bond at the time of sale\n    # Assuming the bond is sold at par value since the interest rate drop affects the price\n    sale_price = face_value\n\n    # Calculate the total return\n    total_return = sale_price + coupon_payments + reinvestment_income - initial_price\n\n    # Calculate the actualized horizon yield\n    actualized_horizon_yield = (total_return / initial_price) ** (1 / years_held) - 1\n\n    # return answer\n    return actualized_horizon_yield\n```\n\nThis Python program calculates the actualized horizon yield for the buyer of the bond, taking into account the initial purchase price, coupon payments, reinvestment of those payments at a new rate, and the sale price of the bond after three years."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-695",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering the factors below, calculate the accrued interest for every 100 of par value for Bond H on the settlement day of 16 June 2014. The factors are: Annual Coupon - 5%, Coupon Payment Frequency - Semiannual, Interest Payment Dates - 10 April and 10 October, Maturity Date - 10 October 2016, Day Count Convention - 30/360, Annual Yield-to-Maturity - 4%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_coupon = 0.05\n    coupon_payment_frequency = 2  # Semiannual\n    day_count_convention = '30/360'\n    settlement_date = '16 June 2014'\n    next_coupon_date = '10 October 2014'\n    par_value = 100\n\n    # Calculate the number of days between settlement date and next coupon date using 30/360 convention\n    # Assume each month has 30 days and the year has 360 days\n    from datetime import datetime\n    settlement_date_obj = datetime.strptime(settlement_date, '%d %B %Y')\n    next_coupon_date_obj = datetime.strptime(next_coupon_date, '%d %B %Y')\n    \n    days_in_settlement_month = 30 - settlement_date_obj.day\n    days_in_next_coupon_month = next_coupon_date_obj.day\n    months_difference = (next_coupon_date_obj.year - settlement_date_obj.year) * 12 + (next_coupon_date_obj.month - settlement_date_obj.month)\n    total_days = days_in_settlement_month + days_in_next_coupon_month + (months_difference - 1) * 30\n\n    # Calculate the accrued interest\n    accrued_interest = (annual_coupon / coupon_payment_frequency) * (total_days / 360) * par_value\n\n    # return answer\n    return accrued_interest\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-696",
        "python_solution": "",
        "ground_truth": null,
        "question": "The corporation Successful Inc. has an operating profit margin of 10%, an asset turnover ratio of 1.5, a financial leverage multiplier of 1.6 times, and an interest burden of 0.8. The firm's ROE is 0.144, can you compute the firm's average tax rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_profit_margin = 0.10\n    asset_turnover_ratio = 1.5\n    financial_leverage_multiplier = 1.6\n    interest_burden = 0.8\n    roe = 0.144\n    \n    # Do math calculation to get the answer\n    # ROE = (Operating Profit Margin * Asset Turnover Ratio * Financial Leverage Multiplier * Interest Burden) * (1 - Tax Rate)\n    # Rearrange to solve for Tax Rate\n    tax_rate = 1 - (roe / (operating_profit_margin * asset_turnover_ratio * financial_leverage_multiplier * interest_burden))\n    \n    # return answer\n    return tax_rate\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price (\u20ac) | End of Period Price (\u00a3) | Total Dividends (\u20ac) |\n|----------|-------------------------------|-------------------------|----------------------|\n| Able     | 10.00                          | 12.00                   | 0.75                 |\n| Baker    | 20.00                          | 19.00                   | 1.00                 |\n| Charlie  | 30.00                          | 30.00                   | 2.00                 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-697",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert collects the following data for an equal-weighted index made up of assets Alpha, Beta, and Gamma: What is the total return of the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = {'Alpha': 10.00, 'Beta': 20.00, 'Gamma': 30.00}\n    end_prices = {'Alpha': 12.00, 'Beta': 19.00, 'Gamma': 30.00}\n    dividends = {'Alpha': 0.75, 'Beta': 1.00, 'Gamma': 2.00}\n    \n    # Calculate individual returns\n    returns = {}\n    for security in ['Alpha', 'Beta', 'Gamma']:\n        capital_gain = end_prices[security] - beginning_prices[security]\n        total_return = capital_gain + dividends[security]\n        returns[security] = total_return\n    \n    # Calculate the equal-weighted index return\n    index_return = sum(returns.values()) / len(returns)\n    \n    # return answer\n    return index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-698",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we take 2016 as the base period, and the GDP in Nation Y for that year and the following year was $200 billion and $220 billion respectively, what would the GDP deflator be for 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    gdp_base_year = 200  # GDP in 2016 in billion dollars\n    gdp_current_year = 220  # GDP in 2017 in billion dollars\n    gdp_deflator_base_year = 100  # GDP deflator for the base year (2016) is typically set to 100\n\n    # Do math calculation to get the answer\n    gdp_deflator_current_year = (gdp_current_year / gdp_base_year) * gdp_deflator_base_year\n\n    # return answer\n    return gdp_deflator_current_year\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-699",
        "python_solution": "",
        "ground_truth": null,
        "question": "If every yearly trial is independent of each other, what's the probability that BBB company's stock, which has a 30% chance to increase annually, will go up more than once in the coming three years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_increase = 0.3\n    years = 3\n    \n    # Calculate the probability of the stock not increasing in any given year\n    probability_no_increase = 1 - probability_increase\n    \n    # Calculate the probability of the stock increasing exactly once in three years\n    probability_increase_once = years * (probability_increase * (probability_no_increase ** 2))\n    \n    # Calculate the probability of the stock increasing more than once in three years\n    probability_increase_more_than_once = 1 - ((probability_no_increase ** years) + probability_increase_once)\n    \n    # return answer\n    return probability_increase_more_than_once\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|----------|---------------------------|-------------------------------|\n| A        | 20                        | 16                            |\n| B        | 20                        | 12                            |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-700",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an manager named Laurel from a finance firm recently built a portfolio with two unrelated assets, what would be the estimated standard deviation assuming equal weightage for both assets?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    std_dev_A = 16  # Standard deviation for asset A\n    std_dev_B = 12  # Standard deviation for asset B\n    weight_A = 0.5  # Weightage for asset A (equal weightage)\n    weight_B = 0.5  # Weightage for asset B (equal weightage)\n    correlation = 0  # Correlation between asset A and B (unrelated assets)\n    \n    # Do math calculation to get the answer\n    # Formula for portfolio standard deviation with two assets:\n    # \u03c3_p = sqrt(w_A^2 * \u03c3_A^2 + w_B^2 * \u03c3_B^2 + 2 * w_A * w_B * \u03c3_A * \u03c3_B * \u03c1)\n    # where \u03c3_p is the portfolio standard deviation, w_A and w_B are the weights of assets A and B,\n    # \u03c3_A and \u03c3_B are the standard deviations of assets A and B, and \u03c1 is the correlation coefficient.\n    \n    portfolio_std_dev = ((weight_A**2 * std_dev_A**2) + (weight_B**2 * std_dev_B**2) + (2 * weight_A * weight_B * std_dev_A * std_dev_B * correlation))**0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $4,000,000 |\n|---------|------------|\n| Cost of goods sold | $3,000,000 |\n| Other operating expenses | $500,000 |\n| Interest expense | $100,000 |\n| Tax expense | $120,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-701",
        "python_solution": "",
        "ground_truth": null,
        "question": "The gross profit of the manufacturing company, Denali Limited, is equal to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 4000000\n    cost_of_goods_sold = 3000000\n    \n    # Do math calculation to get the answer\n    gross_profit = revenue - cost_of_goods_sold\n    \n    # return answer\n    return gross_profit\n```"
        ]
    },
    {
        "tables": [
            "| Labor(L) | Total Product(TP) | Average Product(AP) |\n|----------|-------------------|---------------------|\n| 1        | 100               | 100                 |\n| 2        | 210               | 105                 |\n| 3        | 300               | 100                 |\n| 4        | 360               | 90                  |\n| 5        | 400               | 80                  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-702",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided data chart, what is the marginal product when the labor (L) equals 3?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    TP_at_L2 = 210\n    TP_at_L3 = 300\n    \n    # Do math calculation to get the answer\n    marginal_product_at_L3 = TP_at_L3 - TP_at_L2\n    \n    # return answer\n    return marginal_product_at_L3\n```"
        ]
    },
    {
        "tables": [
            "|                  |   Prior Year    |        |   Current Year   |        |\n|------------------|-----------------|--------|------------------|--------|\n|      Goods       |    Quantity     | Price  |    Quantity      | Price  |\n| 5 lb.bag sugar   |     150 bags    |  $3.12 |    180 bags      |  $2.92 |\n| 5 lb.bag flour   |     800 bags    |  $2.18 |    750 bags      |  $3.12 |\n| Frozen pizza(each)|    250          |  $2.90 |    250           |  $3.00 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-703",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the Paasche Index if we utilize the consumption basket for this year alongside the subsequent data from a three-item consumption goods basket, which we use to calculate inflation rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_quantities = [180, 750, 250]\n    current_prices = [2.92, 3.12, 3.00]\n    prior_prices = [3.12, 2.18, 2.90]\n    \n    # Do math calculation to get the answer\n    numerator = sum([current_quantities[i] * current_prices[i] for i in range(3)])\n    denominator = sum([current_quantities[i] * prior_prices[i] for i in range(3)])\n    paasche_index = (numerator / denominator) * 100\n    \n    # return answer\n    return paasche_index\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-704",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming the heights of trees in a woodland area are normally distributed and the total number of trees exceeds 10,000. If a z-statistic was calculated using a sample of 200 trees and a 95% confidence interval for the sample mean height ranged from 11 to 35 meters, what would be the standard error of the mean height?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lower_bound = 11\n    upper_bound = 35\n    confidence_level = 0.95\n    z_score = 1.96  # z-score for 95% confidence interval\n    \n    # Do math calculation to get the answer\n    # The confidence interval is given by: mean \u00b1 z * SE\n    # Here, we use the formula for the standard error (SE): SE = (upper_bound - lower_bound) / (2 * z_score)\n    standard_error = (upper_bound - lower_bound) / (2 * z_score)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price(E) | End of Period Price(E) | Total Dividends(E) |\n| --- | --- | --- | --- |\n| Able | 10.00 | 12.00 | 0.75 |\n| Baker | 20.00 | 19.00 | 1.00 |\n| Charlie | 30.00 | 30.00 | 2.00 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-705",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the following data for an equal-weighted index composed of assets X, Y, and Z: The total return of the index is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = [10.00, 20.00, 30.00]  # Beginning of period prices for Able, Baker, Charlie\n    end_prices = [12.00, 19.00, 30.00]  # End of period prices for Able, Baker, Charlie\n    dividends = [0.75, 1.00, 2.00]  # Total dividends for Able, Baker, Charlie\n\n    # Calculate individual total returns\n    total_returns = [(end_prices[i] - beginning_prices[i] + dividends[i]) / beginning_prices[i] for i in range(3)]\n\n    # Calculate the equal-weighted index total return\n    equal_weighted_index_return = sum(total_returns) / len(total_returns)\n\n    # return answer\n    return equal_weighted_index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-706",
        "python_solution": "",
        "ground_truth": null,
        "question": "Smith is a tax consultant who offers tax enlightenment counsel to individual customers. One of Smith's client, Rose, is a U.S. citizen and resides in America. Rose recently came into ownership of AAPL shares from a family member who passed on. This departed family member was a resident of the U.S., which applies a \"step-up\" in basis at death. The deceased family member bought AAPL shares at a cost of $15,000 (inclusive of commissions and other spendings) two decades ago. When the family member passed away, the market value of the AAPL stock owned by them was $220,000, and recently Rose sold these shares for $190,000. Rose's capital gains tax rate sits at 20%. The tax obligation on the sale of the AAPL shares is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_cost_basis = 15000\n    stepped_up_basis = 220000\n    sale_price = 190000\n    capital_gains_tax_rate = 0.20\n    \n    # Do math calculation to get the answer\n    # Since the stepped-up basis is higher than the sale price, there is no capital gain\n    capital_gain = sale_price - stepped_up_basis\n    tax_obligation = capital_gain * capital_gains_tax_rate\n    \n    # return answer\n    return tax_obligation\n```"
        ]
    },
    {
        "tables": [
            "| Return,R         | Frequency |\n| ---------------- | --------- |\n| -5% up to 0%    | 1         |\n| 0% up to 5%     | 6         |\n| 5% up to 10%    | 4         |\n| 10% up to 15%   | 3         |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-707",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the provided frequency distribution table, can you determine the relative frequency of the third interval?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    frequency_third_interval = 4\n    total_frequencies = 1 + 6 + 4 + 3\n    \n    # Do math calculation to get the answer\n    relative_frequency_third_interval = frequency_third_interval / total_frequencies\n    \n    # return answer\n    return relative_frequency_third_interval\n```"
        ]
    },
    {
        "tables": [
            "| Net income | $55,000 |\n|---|---|\n| Depreciation | $60,000 |\n| Taxes paid | $25,000 |\n| Interest received | $5,000 |\n| Dividends received | $10,000 |\n| Cash received from sale of company's equipment | $40,000 |\n| Issuance of preferred stock | $45,000 |\n| Repurchase of common stock | $20,000 |\n| Purchase of machinery | $20,000 |\n| Issuance of bonds | $40,000 |\n| Debt retired through issuance of common stock | $45,000 |\n| Paid off long-term bank borrowings | $15,000 |\n| Profit on sale of building | $15,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-708",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under American GAAP, what is the cash flow from operations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 55000\n    depreciation = 60000\n    taxes_paid = 25000\n    interest_received = 5000\n    dividends_received = 10000\n    cash_received_sale_equipment = 40000\n    issuance_preferred_stock = 45000\n    repurchase_common_stock = 20000\n    purchase_machinery = 20000\n    issuance_bonds = 40000\n    debt_retired_common_stock = 45000\n    paid_off_long_term_borrowings = 15000\n    profit_sale_building = 15000\n\n    # Do math calculation to get the answer\n    # Cash flow from operations (CFO) under American GAAP includes net income, adjustments for non-cash items (like depreciation), and changes in working capital.\n    # For simplicity, we assume no changes in working capital and only consider the provided non-cash items.\n    cfo = net_income + depreciation - taxes_paid + interest_received + dividends_received\n\n    # return answer\n    return cfo\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-709",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the flat price for Bond H, discussed in the display below, which is scheduled for sale on the settlement date of 16 June 2014? Here are some considerations: The Annual Coupon is 5%, the Coupon Payment Frequency is semi-annually, Interest Payment Dates are 10 April and 10 October, the Maturity Date is 10 October 2016, the Day Count Convention is 30/360, and the Annual Yield-to-Maturity is 4%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_coupon = 0.05\n    coupon_frequency = 2  # Semi-annually\n    yield_to_maturity = 0.04\n    settlement_date = \"16 June 2014\"\n    maturity_date = \"10 October 2016\"\n    day_count_convention = \"30/360\"\n    interest_payment_dates = [\"10 April\", \"10 October\"]\n\n    # Convert dates to datetime objects\n    from datetime import datetime\n    settlement_date = datetime.strptime(settlement_date, \"%d %B %Y\")\n    maturity_date = datetime.strptime(maturity_date, \"%d %B %Y\")\n    interest_payment_dates = [datetime.strptime(date, \"%d %B\") for date in interest_payment_dates]\n\n    # Calculate the number of days between settlement and next coupon payment\n    from dateutil.relativedelta import relativedelta\n    next_coupon_date = interest_payment_dates[0] + relativedelta(years=settlement_date.year - interest_payment_dates[0].year)\n    if next_coupon_date < settlement_date:\n        next_coupon_date += relativedelta(years=1)\n\n    # Calculate the number of days between settlement and maturity\n    days_to_maturity = (maturity_date - settlement_date).days\n\n    # Calculate the number of coupon periods between settlement and maturity\n    coupon_periods = (maturity_date.year - settlement_date.year) * coupon_frequency + (maturity_date.month - settlement_date.month) // 6\n\n    # Calculate the flat price of the bond\n    import numpy as np\n    coupon_payment = annual_coupon / coupon_frequency\n    present_value_coupons = sum([coupon_payment / (1 + yield_to_maturity / coupon_frequency) ** (i + 1) for i in range(coupon_periods)])\n    present_value_principal = 100 / (1 + yield_to_maturity / coupon_frequency) ** coupon_"
        ]
    },
    {
        "tables": [
            "|   | Company | Fixed Rate | Floating Rate |\n|---|---------|------------|---------------|\n| a | X       | 8%         | LIBOR+150bps  |\n| b | Y       | 10%        | LIBOR+200bps  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-710",
        "python_solution": "",
        "ground_truth": null,
        "question": "The lending rates for corporation A and corporation B are set as such: corporation A and corporation B borrowed money at their respective preferred borrowing rates before engaging in an interest rate swap. What's the overall savings?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fixed_rate_A = 0.08  # 8%\n    floating_rate_A = 0.015  # LIBOR + 150bps\n    fixed_rate_B = 0.10  # 10%\n    floating_rate_B = 0.02  # LIBOR + 200bps\n    \n    # Assume LIBOR is 0.02 (2%) for simplicity\n    LIBOR = 0.02\n    \n    # Calculate the effective rates before swap\n    effective_rate_A_before_swap = fixed_rate_A\n    effective_rate_B_before_swap = floating_rate_B + LIBOR\n    \n    # Calculate the effective rates after swap\n    # Assume A pays LIBOR to B and B pays fixed rate to A\n    effective_rate_A_after_swap = LIBOR\n    effective_rate_B_after_swap = fixed_rate_A\n    \n    # Calculate the overall savings\n    savings_A = effective_rate_A_before_swap - effective_rate_A_after_swap\n    savings_B = effective_rate_B_before_swap - effective_rate_B_after_swap\n    \n    overall_savings = savings_A + savings_B\n    \n    # return answer\n    return overall_savings\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-711",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a marginal tax rate of 40%, what is the after-tax cost of the preferred stock if a corporation is planning a fresh issue of preferred stock with a $100 par and a 12% dividend, and it can be sold for $95 per share with the corporation having to pay flotation costs equating to 5% of the market price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    dividend_rate = 0.12\n    market_price = 95\n    flotation_cost_rate = 0.05\n    marginal_tax_rate = 0.40\n    \n    # Calculate the dividend amount\n    dividend_amount = par_value * dividend_rate\n    \n    # Calculate the flotation costs\n    flotation_costs = market_price * flotation_cost_rate\n    \n    # Calculate the net proceeds from the sale of the preferred stock\n    net_proceeds = market_price - flotation_costs\n    \n    # Calculate the before-tax cost of preferred stock\n    before_tax_cost = dividend_amount / net_proceeds\n    \n    # Calculate the after-tax cost of preferred stock\n    after_tax_cost = before_tax_cost * (1 - marginal_tax_rate)\n    \n    # return answer\n    return after_tax_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-712",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the net-of-fees return earned in Year 3 by a hedge fund that started with $98 million, charges a 2% management fee based on assets under management at year end, a 20% incentive fee calculated separately from the management fee, and has a high-water mark provision? The fund was valued at $112 million at the end of Year 1, $100 million at the end of Year 2, and $116 million at the end of Year 3.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_capital = 98000000\n    year1_end_value = 112000000\n    year2_end_value = 100000000\n    year3_end_value = 116000000\n    management_fee_rate = 0.02\n    incentive_fee_rate = 0.20\n    \n    # Calculate management fees for each year\n    year1_management_fee = year1_end_value * management_fee_rate\n    year2_management_fee = year2_end_value * management_fee_rate\n    year3_management_fee = year3_end_value * management_fee_rate\n    \n    # Calculate net asset values after management fees\n    year1_net_value = year1_end_value - year1_management_fee\n    year2_net_value = year2_end_value - year2_management_fee\n    year3_net_value = year3_end_value - year3_management_fee\n    \n    # Calculate incentive fees for each year considering high-water mark\n    year1_incentive_fee = (year1_net_value - initial_capital) * incentive_fee_rate if year1_net_value > initial_capital else 0\n    year2_incentive_fee = (year2_net_value - year1_net_value) * incentive_fee_rate if year2_net_value > year1_net_value else 0\n    year3_incentive_fee = (year3_net_value - year1_net_value) * incentive_fee_rate if year3_net_value > year1_net_value else 0\n    \n    # Calculate net-of-fees returns for each year\n    year1_net_of_fees_return = year1_net_value - initial_capital - year1_incentive_fee\n    year2_net_of_fees_return = year2_net_value - year1_net_value - year2_incentive_fee\n    year3_"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-713",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering the details provided regarding a newly constructed showroom by a corporation, what is the depreciation expense (in millions) for the showroom in 2014? Here are the specifics: Construction commenced on 1 January 2012, the grand opening took place on 1 January 2014, a loan of \u20ac30 million was taken out on 1 January 2012, the interest rate on the loan was 8%, payable annually, repayment of the loan was scheduled as a balloon payment due on 1 January 2017. The total construction expenses during 2012 and 2013 amounted to \u20ac38.5 million, the estimated useful life of the showroom was 40 years, the projected residual value of the showroom was \u20ac5 million, and the depreciation approach used was straight line.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_construction_cost = 38.5  # in millions of euros\n    useful_life = 40  # years\n    residual_value = 5  # in millions of euros\n    \n    # Do math calculation to get the answer\n    # Straight-line depreciation formula: (Total cost - Residual value) / Useful life\n    depreciation_expense = (total_construction_cost - residual_value) / useful_life\n    \n    # return answer\n    return depreciation_expense\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price(\u20ac) | Beginning of Period Shares | End of Period Price(\u20ac) | End of Period Shares |\n|----------|------------------------------|---------------------------|------------------------|----------------------|\n| A        | 20.00                        | 300                       | 22.00                  | 300                  |\n| B        | 50.00                        | 300                       | 48.00                  | 300                  |\n| C        | 26.00                        | 2,000                     | 30.00                  | 2,000                |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-714",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the subsequent data for an equally-weighted index: What is the index's return over the time span?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = [20.00, 50.00, 26.00]\n    end_prices = [22.00, 48.00, 30.00]\n    shares = [300, 300, 2000]\n    \n    # Calculate individual security returns\n    returns = [(end_prices[i] - beginning_prices[i]) / beginning_prices[i] for i in range(len(beginning_prices))]\n    \n    # Calculate the equally-weighted index return\n    index_return = sum(returns) / len(returns)\n    \n    # return answer\n    return index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-715",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the aforementioned details, what must be the anticipated liquidity requirement for this financial corporation, given that the administration predicts a worst-case scenario next week involving a $25 million liquidity shortage with just a 15% likelihood? Furthermore, the most favorable scenario involves an $80 million liquidity excess, but this has a 10% likelihood. The most likely situation is a $15 million liquidity excess, which has a 75% probability according to administration estimates.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    worst_case_shortage = 25000000\n    worst_case_probability = 0.15\n    \n    favorable_case_excess = 80000000\n    favorable_case_probability = 0.10\n    \n    most_likely_excess = 15000000\n    most_likely_probability = 0.75\n    \n    # Do math calculation to get the answer\n    # Calculate the expected liquidity requirement\n    expected_liquidity_requirement = (worst_case_shortage * worst_case_probability) + \\\n                                     (favorable_case_excess * favorable_case_probability) + \\\n                                     (most_likely_excess * most_likely_probability)\n    \n    # return answer\n    return expected_liquidity_requirement\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n|-----|-----|-----|-----|-----|-----|\n| 20% | 4% | -5% | 12% | 3% | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-716",
        "python_solution": "",
        "ground_truth": null,
        "question": "The table provided presents the monthly stock returns for Rose Enterprises. Based on the information in the table, can you calculate the median stock return for Rose Enterprises?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_returns = [20, 4, -5, 12, 3, 12]\n    \n    # Sort the list of stock returns\n    stock_returns.sort()\n    \n    # Calculate the median\n    n = len(stock_returns)\n    if n % 2 == 1:\n        median = stock_returns[n // 2]\n    else:\n        median = (stock_returns[n // 2 - 1] + stock_returns[n // 2]) / 2\n    \n    # Return the median\n    return median\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-717",
        "python_solution": "",
        "ground_truth": null,
        "question": "Currently the 1-year rate is at 5%. If a trader predicts the 1-year rate next year to rise up to 7%, and the 1-year rate in two years to reach 9%, what will the 3-year spot rate be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    rate_year1 = 0.05  # 5%\n    rate_year2 = 0.07  # 7%\n    rate_year3 = 0.09  # 9%\n    \n    # Do math calculation to get the answer\n    # Using the formula for forward rates: (1 + r3)^3 = (1 + r1)(1 + f1)(1 + f2)\n    # where r3 is the 3-year spot rate, r1 is the 1-year rate, f1 is the 1-year forward rate starting in year 1, and f2 is the 1-year forward rate starting in year 2.\n    \n    # Calculate the 1-year forward rates\n    f1 = rate_year2\n    f2 = rate_year3\n    \n    # Calculate the 3-year spot rate\n    spot_rate_3_year = ((1 + rate_year1) * (1 + f1) * (1 + f2)) ** (1/3) - 1\n    \n    # return answer\n    return spot_rate_3_year\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-718",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investor bought 200 stocks of a company that doesn't pay dividends on margin with a cost of $50 each share. The leverage ratio stands at 2.5. Half a year later, the investor offloads these stocks at a price of $60 each share. If we disregard the interest paid on the borrowed money and the transaction expenses, what was the six-month period return for the investor?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price_per_share = 50\n    final_price_per_share = 60\n    number_of_shares = 200\n    leverage_ratio = 2.5\n    \n    # Calculate the initial investment and the amount borrowed\n    total_initial_cost = initial_price_per_share * number_of_shares\n    borrowed_amount = total_initial_cost / leverage_ratio\n    initial_investment = total_initial_cost - borrowed_amount\n    \n    # Calculate the final value of the investment\n    final_value = final_price_per_share * number_of_shares\n    \n    # Calculate the profit\n    profit = final_value - total_initial_cost\n    \n    # Calculate the return on the investor's own money\n    return_on_investment = profit / initial_investment\n    \n    # Calculate the six-month period return\n    six_month_return = return_on_investment * 100\n    \n    # return answer\n    return six_month_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-719",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine a portfolio that consists of two properties. Property X makes up 25% of the portfolio and has a standard deviation of 17.9%. Property Y constitutes 75% of the portfolio and comes with a standard deviation of 6.2%. Given that the correlation between these two properties is 0.5, what would be the standard deviation of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_x = 0.25\n    weight_y = 0.75\n    std_dev_x = 0.179\n    std_dev_y = 0.062\n    correlation = 0.5\n    \n    # Do math calculation to get the answer\n    # Formula for portfolio standard deviation: sqrt(w1^2 * s1^2 + w2^2 * s2^2 + 2 * w1 * w2 * s1 * s2 * r)\n    portfolio_std_dev = ((weight_x ** 2) * (std_dev_x ** 2) + \n                         (weight_y ** 2) * (std_dev_y ** 2) + \n                         2 * weight_x * weight_y * std_dev_x * std_dev_y * correlation) ** 0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [
            "|    | Joint probabilities |     |     |\n|----|-------------------:|----:|----:|\n|  X |                Y=5 | Y=2 | Y=-3|\n|X=-2|                 0.2|   0 |    0|\n| X=1|                   0| 0.6 |    0|\n|X= 4|                   0|   0 |  0.2|"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-720",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given joint probability table, what is the correlation between X and Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    joint_probabilities = {\n        (-2, 5): 0.2,\n        (1, 2): 0.6,\n        (4, -3): 0.2\n    }\n    \n    # Calculate marginal probabilities for X and Y\n    marginal_prob_X = {x: sum(p for (x_, y), p in joint_probabilities.items() if x_ == x) for x in [-2, 1, 4]}\n    marginal_prob_Y = {y: sum(p for (x, y_), p in joint_probabilities.items() if y_ == y) for y in [5, 2, -3]}\n    \n    # Calculate expected values for X and Y\n    E_X = sum(x * marginal_prob_X[x] for x in marginal_prob_X)\n    E_Y = sum(y * marginal_prob_Y[y] for y in marginal_prob_Y)\n    \n    # Calculate variances and covariance\n    var_X = sum((x - E_X) ** 2 * marginal_prob_X[x] for x in marginal_prob_X)\n    var_Y = sum((y - E_Y) ** 2 * marginal_prob_Y[y] for y in marginal_prob_Y)\n    \n    cov_XY = sum((x - E_X) * (y - E_Y) * joint_probabilities[(x, y)] for (x, y) in joint_probabilities)\n    \n    # Calculate correlation coefficient\n    correlation = cov_XY / (var_X ** 0.5 * var_Y ** 0.5)\n    \n    # return answer\n    return correlation\n```"
        ]
    },
    {
        "tables": [
            "| Probability | Return of Stock A(%) |\n|-------------|----------------------|\n| 0.20        | 30                   |\n| 0.60        | 10                   |\n| 0.20        | -20                  |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-721",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the standard deviation of return for stock A according to the above probability distribution?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = [0.20, 0.60, 0.20]\n    returns = [30, 10, -20]\n    \n    # Calculate the expected return\n    expected_return = sum(p * r for p, r in zip(probabilities, returns))\n    \n    # Calculate the variance\n    variance = sum(p * (r - expected_return) ** 2 for p, r in zip(probabilities, returns))\n    \n    # Calculate the standard deviation\n    standard_deviation = variance ** 0.5\n    \n    # return answer\n    return standard_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-722",
        "python_solution": "",
        "ground_truth": null,
        "question": "A manager at a snowboarding park is contemplating providing discounts on weekday snowboarding passes. With the regular price being \u20ac50 per day, it is anticipated that 300 patrons will purchase passes each weekday. However, if the price is lowered to \u20ac40 per day, it is expected that 450 patrons will purchase passes each weekday. What is the marginal revenue per patron gained through providing the discounted price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    regular_price = 50\n    discounted_price = 40\n    regular_patrons = 300\n    discounted_patrons = 450\n    \n    # Do math calculation to get the answer\n    regular_revenue = regular_price * regular_patrons\n    discounted_revenue = discounted_price * discounted_patrons\n    marginal_revenue = discounted_revenue - regular_revenue\n    marginal_revenue_per_patron = marginal_revenue / (discounted_patrons - regular_patrons)\n    \n    # return answer\n    return marginal_revenue_per_patron\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-723",
        "python_solution": "",
        "ground_truth": null,
        "question": "The probabilities for Z are displayed as follows, P(Z=0.4)=30%, P(Z=0.2)= 30%, P(Z=-0.2)= 40%. What is the standard deviation of Z?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = {0.4: 0.3, 0.2: 0.3, -0.2: 0.4}\n    mean = sum(z * p for z, p in probabilities.items())\n    \n    # Do math calculation to get the answer\n    variance = sum(p * (z - mean) ** 2 for z, p in probabilities.items())\n    standard_deviation = variance ** 0.5\n    \n    # return answer\n    return standard_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-724",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the H-model, John is assessing the worth of Company N at $20 per share. The firm has given a dividend of $1 per share in the most recent year. During the initial four years, the growth rate will gradually reduce from 10% to 6%. The dividend growth rate from that point onwards will be 6% per year indefinitely. What is the necessary rate of return in his model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    share_price = 20\n    initial_dividend = 1\n    initial_growth_rate = 0.10\n    terminal_growth_rate = 0.06\n    transition_period = 4\n    \n    # Do math calculation to get the answer\n    # Calculate the growth rate reduction per year during the transition period\n    growth_rate_reduction = (initial_growth_rate - terminal_growth_rate) / transition_period\n    \n    # Calculate the dividends for each year during the transition period\n    dividends = [initial_dividend * (1 + initial_growth_rate)]\n    for i in range(1, transition_period):\n        dividends.append(dividends[-1] * (1 + initial_growth_rate - growth_rate_reduction * i))\n    \n    # Calculate the terminal dividend\n    terminal_dividend = dividends[-1] * (1 + terminal_growth_rate)\n    \n    # Calculate the present value of the terminal dividend\n    present_value_terminal_dividend = terminal_dividend / (terminal_growth_rate - growth_rate_reduction)\n    \n    # Calculate the necessary rate of return\n    necessary_rate_of_return = (initial_dividend + present_value_terminal_dividend) / share_price\n    \n    # return answer\n    return necessary_rate_of_return\n```"
        ]
    },
    {
        "tables": [
            "| Comparable Companies | Tax Rate (%) | Debt/Equity | Equity Beta |\n|----------------------|--------------|-------------|-------------|\n| Private company      | 30           | 1           | N.A.        |\n| Public company       | 35           | 0.9         | 1.75        |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-725",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the details about a privately-owned corporation and its competitor in the public market and by applying the pure-play method, what would be the projected equity beta for the privately-owned corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    public_equity_beta = 1.75\n    public_debt_equity_ratio = 0.9\n    private_debt_equity_ratio = 1\n    \n    # Do math calculation to get the answer\n    # Unlever the public company's beta\n    unlevered_beta_public = public_equity_beta / (1 + (1 - 0.35) * public_debt_equity_ratio)\n    \n    # Re-lever the beta for the private company\n    levered_beta_private = unlevered_beta_public * (1 + (1 - 0.30) * private_debt_equity_ratio)\n    \n    # return answer\n    return levered_beta_private\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n|-----|-----|-----|-----|-----|-----|\n| 20% | 4%  | -5% | 12% | 3%  | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-726",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the provided table, what is the range for the monthly stock returns of Ivy Corp?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_returns = [20, 4, -5, 12, 3, 12]\n    \n    # Do math calculation to get the answer\n    range_of_returns = max(monthly_returns) - min(monthly_returns)\n    \n    # return answer\n    return range_of_returns\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-727",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Natsuki Yamamoto has become a part of a new company where he can choose from 10 mutual funds for the company's retirement plan, and he intends to pick four, how many distinct combinations of mutual funds can he select?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_mutual_funds = 10\n    funds_to_select = 4\n    \n    # Do math calculation to get the answer\n    # Use the combination formula to calculate distinct combinations\n    # Combination formula: C(n, k) = n! / (k! * (n-k)!)\n    from math import factorial\n    \n    def combination(n, k):\n        return factorial(n) // (factorial(k) * factorial(n - k))\n    \n    answer = combination(total_mutual_funds, funds_to_select)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-728",
        "python_solution": "",
        "ground_truth": null,
        "question": "A 90-day European put option on Apple has a strike price of $30. The current market price for Apple is $30. What is the delta for this option?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    strike_price = 30\n    current_market_price = 30\n    time_to_maturity = 90 / 365  # Convert days to years\n    risk_free_rate = 0.05  # Assume a risk-free rate of 5%\n    volatility = 0.2  # Assume a volatility of 20%\n\n    # Import necessary libraries\n    from scipy.stats import norm\n    import math\n\n    # Calculate d1 and d2 for the Black-Scholes formula\n    d1 = (math.log(current_market_price / strike_price) + (risk_free_rate + 0.5 * volatility ** 2) * time_to_maturity) / (volatility * math.sqrt(time_to_maturity))\n    d2 = d1 - volatility * math.sqrt(time_to_maturity)\n\n    # Calculate the delta for a put option\n    delta = -norm.cdf(-d1)\n\n    # return answer\n    return delta\n```"
        ]
    },
    {
        "tables": [
            "|                  |                  |                                  |\n|------------------|------------------|----------------------------------|\n| **Issue price**             |                  |  \u00a3 1,000 at par                     |\n| **Conversion period**       |                  | 13 September 20X5 to 12 September 20X8 |\n| **Initial conversion price**|                  | \u00a3 10.00 per share                  |\n| **Threshold dividend**      |                  | \u00a3 0.50 per share                   |\n| **Change of control conversion price** |                  | \u00a3 8.00 per share                   |\n| **Common stock share price on issue date** |                  | \u00a3 8.70                       |\n| **Share price on**          | 17 September 20X5| \u00a3 9.10                       |\n| **Convertible bond price on 17 September 20X5**  |                  | \u00a3 1,123                      |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-729",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share market conversion premium for the DE bond on 17 September 20X5, based on the chosen convertible bond data provided below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    issue_price = 1000  # in pounds\n    conversion_price = 10.00  # in pounds per share\n    share_price_on_issue_date = 8.70  # in pounds\n    share_price_on_17_sept_20X5 = 9.10  # in pounds\n    convertible_bond_price_on_17_sept_20X5 = 1123  # in pounds\n\n    # Calculate the number of shares that can be converted\n    number_of_shares = issue_price / conversion_price\n\n    # Calculate the market conversion value\n    market_conversion_value = number_of_shares * share_price_on_17_sept_20X5\n\n    # Calculate the market conversion premium\n    market_conversion_premium = convertible_bond_price_on_17_sept_20X5 - market_conversion_value\n\n    # Calculate the per share market conversion premium\n    per_share_market_conversion_premium = market_conversion_premium / number_of_shares\n\n    # return answer\n    return per_share_market_conversion_premium\n```\n\nThis program calculates the per share market conversion premium for the DE bond on 17 September 20X5 based on the provided data. It first calculates the number of shares that can be converted from the bond, then computes the market conversion value, and finally calculates the per share market conversion premium."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-730",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine that in a specific defined benefit scheme, the following situation occurs. Workers serve for 40 years with a wage that grows precisely with inflation rate. Pension equals to 60% of the last salary and grows perfectly with inflation rate. Employees always live for 25 years post-retirement. The money within the retirement plan is invested in bonds that yield an inflation rate. Which is the best approximation of the portion of the worker's income that ought to be put into the retirement plan? (Hint: You should perform all calculations in real and not nominal terms so that the income and pensions stay constant and the interest yield is zero.)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    years_of_service = 40\n    years_of_retirement = 25\n    pension_percentage = 0.60\n    interest_rate = 0  # Since all calculations are in real terms and the interest yield is zero\n\n    # Do math calculation to get the answer\n    # The portion of income to be put into the retirement plan is calculated by the formula:\n    # (Years of retirement * Pension percentage) / Years of service\n    portion_of_income = (years_of_retirement * pension_percentage) / years_of_service\n\n    # return answer\n    return portion_of_income\n```\n\nThis Python program calculates the portion of a worker's income that should be put into a retirement plan under the given conditions. The calculation is done in real terms, meaning that all values are constant and the interest rate is zero, as specified in the question."
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-731",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the operating breakeven point in units if the per unit contribution margin for an item is $12 and it is assumed that fixed costs are $12,000, interest costs are $3,000, and there are taxes of $2,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    per_unit_contribution_margin = 12\n    fixed_costs = 12000\n    interest_costs = 3000\n    taxes = 2000\n    \n    # Do math calculation to get the answer\n    total_fixed_costs = fixed_costs + interest_costs + taxes\n    operating_breakeven_point = total_fixed_costs / per_unit_contribution_margin\n    \n    # return answer\n    return operating_breakeven_point\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-732",
        "python_solution": "",
        "ground_truth": null,
        "question": "A note is presently selling for $109.246 for every $100 of face value. If the note's yield to maturity decreases by 25 bps, the note's total price is projected to increase to $110.481. If the note's yield to maturity increases by 25 bps, the note's total price is predicted to decrease to $108.029. What is the note's estimated convexity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P0 = 109.246  # Current price\n    P_minus = 108.029  # Price if yield increases by 25 bps\n    P_plus = 110.481  # Price if yield decreases by 25 bps\n    delta_y = 0.0025  # Change in yield in decimal (25 bps)\n    \n    # Do math calculation to get the answer\n    # Convexity formula: (P_plus + P_minus - 2*P0) / (P0 * (delta_y)^2)\n    convexity = (P_plus + P_minus - 2 * P0) / (P0 * (delta_y ** 2))\n    \n    # return answer\n    return convexity\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-733",
        "python_solution": "",
        "ground_truth": null,
        "question": "The 4-year spot rate is 9.45%, and the 1-year spot rate is 8.528%. What would be the 3-year forward rate starting a year from now?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r4 = 0.0945  # 4-year spot rate\n    r1 = 0.08528  # 1-year spot rate\n    \n    # Do math calculation to get the answer\n    # Formula for forward rate: (1 + r4)^4 / (1 + r1) - 1\n    forward_rate = ((1 + r4) ** 4 / (1 + r1)) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [
            "|                               | REIT A     |\n| ----------------------------- | ---------- |\n| Funds from operations (FFO)  | $ 396,400  |\n| Non - cash rents              | $ 56,782   |\n| Recurring maintenance-type capital expenditures | $ 78,600   |\n|                               |            |\n| Shares outstanding            | 73,500     |\n| Property subsector average P/AFFO multiple | 17.3x |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-734",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share value of REIT A by utilizing the property subsector average P/AFFO multiple method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    FFO = 396400\n    non_cash_rents = 56782\n    recurring_maintenance_capex = 78600\n    shares_outstanding = 73500\n    property_subsector_average_P_AFFO_multiple = 17.3\n\n    # Adjust FFO by adding back non-cash rents and subtracting recurring maintenance-type capital expenditures\n    adjusted_FFO = FFO + non_cash_rents - recurring_maintenance_capex\n\n    # Calculate AFFO per share\n    AFFO_per_share = adjusted_FFO / shares_outstanding\n\n    # Calculate the per share value using the property subsector average P/AFFO multiple\n    per_share_value = AFFO_per_share * property_subsector_average_P_AFFO_multiple\n\n    # return answer\n    return per_share_value\n```"
        ]
    },
    {
        "tables": [
            "|    |    |\n|----|----|\n| Name | Jane Lennon |\n| Occupation and Family Structure | She is the morning news anchor for a national broadcasting company, where she has worked for the past 20 years. She is 56 years of age, divorced, and the sole supporter of her two children, Everett, aged 18, and Marshall, aged 14. Marshall suffers from severe medical and developmental issues. |\n| Current and Expected Future Employment Income | She currently earns $1 million per year as a broadcaster. She plans on retiring in four years. With typical raises in her industry, she estimates that the present value of her pre-retirement income is $4.5 million. |\n| Financial Assets and Liabilities | She has an investment portfolio worth $8 million, which consists of 30% equities and the remainder in fixed-income securities. She also owns $1 million in shares of the broadcasting company she works for, but she is restricted from selling them for two more years. Her primary residence carries no mortgage and was recently valued at $2 million. She also owns a vacation property worth $3 million, with an outstanding mortgage of $1 million. Her defined-contribution pension plan has vested and is valued at $2.5 million. |\n| Aspirational Goals and Extended Liabilities | Everett is just beginning university and plans to pursue a medical degree. Lennon plans on paying for his entire education and living expenses as well as providing some assistance in funding his future practice. She believes that these goals will be covered with $1.5 million in present value terms. She has begun the process of setting up a special needs trust to provide lifetime benefits for Marshall that will not interfere with the government benefits that he is eligible to receive. It will be funded with $2 million within the year. She recently received an honorary doctorate from her alma mater and has started the process of endowing a chair in its communications department. She anticipates that the funding will be made available to the university in two years; it has a present value of $1.75 million. The present value of future consumption is estimated to be $9 million. |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-735",
        "python_solution": "",
        "ground_truth": null,
        "question": "Fox is currently recruiting an asset allocation analyst and has finished interviewing two applicants, Ambrose Kelly and Catherine Trainor, for the role. Based on the data in Exhibit 1, what is Lennon's economic net worth (in $ millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investment_portfolio = 8000000\n    shares_broadcasting_company = 1000000\n    primary_residence = 2000000\n    vacation_property = 3000000\n    pension_plan = 2500000\n    special_needs_trust = 2000000\n    endowment_chair = 1750000\n    mortgage_vacation_property = 1000000\n    \n    # Do math calculation to get the answer\n    total_assets = investment_portfolio + shares_broadcasting_company + primary_residence + vacation_property + pension_plan + special_needs_trust + endowment_chair\n    total_liabilities = mortgage_vacation_property\n    economic_net_worth = total_assets - total_liabilities\n    \n    # return answer\n    return economic_net_worth / 1000000  # Convert to millions\n\n# Example usage:\n# print(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-736",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company is contemplating a venture that would demand a starting investment of THB270 million. The venture will aid in augmenting the company's post-tax net cash flows by THB30 million annually indefinitely, and it has been detected to hold a negative NPV of THB20 million. What is the IRR (%) of the venture?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 270000000  # in THB\n    annual_cash_flow = 30000000  # in THB\n    npv = -20000000  # in THB\n    \n    # Do math calculation to get the answer\n    # IRR formula: NPV = initial_investment + annual_cash_flow / IRR\n    # Rearrange to solve for IRR: IRR = annual_cash_flow / (initial_investment - npv)\n    irr = annual_cash_flow / (initial_investment - npv)\n    \n    # Convert IRR to percentage\n    irr_percentage = irr * 100\n    \n    # return answer\n    return irr_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Time Period | Forward Rate |\n|-------------|--------------|\n| 0y1y        | 0.50%        |\n| 1y1y        | 0.70%        |\n| 2y1y        | 1.00%        |\n| 3y1y        | 1.50%        |\n| 4y1y        | 2.20%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-737",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's say the subsequent yearly forward rates were deduced from the yield curve. What would be the spot rate for a four-year period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rates = [0.005, 0.007, 0.01, 0.015, 0.022]\n    \n    # Initialize the spot rate for the first period\n    spot_rate = forward_rates[0]\n    \n    # Calculate the compounded spot rate for the four-year period\n    for i in range(1, len(forward_rates)):\n        spot_rate += forward_rates[i] * (1 + spot_rate) ** i\n    \n    # Convert the spot rate to a percentage\n    spot_rate_percentage = spot_rate * 100\n    \n    # return answer\n    return spot_rate_percentage\n```\n\nThis program calculates the spot rate for a four-year period by compounding the yearly forward rates provided. The spot rate is then converted to a percentage for easier interpretation."
        ]
    },
    {
        "tables": [
            "|   | Cumulative Distribution Function |\n|---|---|\n| X=x | F(x)=P(X\u2264x) |\n| 1 | 0.15 |\n| 2 | 0.25 |\n| 3 | 0.50 |\n| 4 | 0.60 |\n| 5 | 0.95 |\n| 6 | 1.00 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-738",
        "python_solution": "",
        "ground_truth": null,
        "question": "The cumulative distribution function for a discrete random variable is displayed in the subsequent table. What is the possibility that Y will assume a value of either 2 or 4?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    F_2 = 0.25\n    F_4 = 0.60\n    \n    # Do math calculation to get the answer\n    # The probability that Y will assume a value of either 2 or 4 is the sum of the probabilities of Y being 2 and Y being 4.\n    # Since the CDF gives us P(X \u2264 x), we need to subtract the CDF values to get the individual probabilities.\n    P_2 = F_2 - 0  # P(X = 2) = F(2) - F(1)\n    P_4 = F_4 - F_2  # P(X = 4) = F(4) - F(3)\n    \n    # Sum the probabilities of Y being 2 and Y being 4\n    answer = P_2 + P_4\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-739",
        "python_solution": "",
        "ground_truth": null,
        "question": "Kyle has an equity of $100 in cash. He initiates a short position in stock B. The current price of stock B is 100 and Kyle sells it. The cash from the short sale is kept in the dealer's account and is not available for funding other investments. Furthermore, Kyle deposits $50 as collateral. Based on the details provided, what is the leverage of the position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equity = 100  # Kyle's initial cash equity\n    short_sale_proceeds = 100  # Proceeds from short selling stock B\n    collateral = 50  # Additional collateral deposited\n    \n    # Total capital used in the position\n    total_capital_used = short_sale_proceeds + collateral\n    \n    # Do math calculation to get the answer\n    leverage = total_capital_used / equity\n    \n    # return answer\n    return leverage\n```"
        ]
    },
    {
        "tables": [
            "| Spot rate (CHF/GBP) | 1.4939/1.4941 |\n|---------------------|---------------|\n| One month           | -8.3/-7.9     |\n| Two month           | -17.4/-16.8   |\n| Three month         | -25.4/-24.6   |\n| Four month          | -35.4/-34.2   |\n| Five month          | -45.9/-44.1   |\n| Six month           | -56.5/-54.0   |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-740",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the present comprehensive bid rate for delivery of GBP against the CHF in three months for the CHF/GBP forex pair, taking into account the current spot rate and forward points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_bid = 1.4939\n    spot_rate_ask = 1.4941\n    three_month_forward_points_bid = -25.4\n    three_month_forward_points_ask = -24.6\n    \n    # Do math calculation to get the answer\n    # Calculate the comprehensive bid rate for delivery in three months\n    comprehensive_bid_rate = spot_rate_bid + (three_month_forward_points_bid / 10000)\n    \n    # return answer\n    return comprehensive_bid_rate\n```"
        ]
    },
    {
        "tables": [
            "| Exhibit 1. Consumption Baskets and Price Level Over 2 years |\n|-------------------------------------------------------------|",
            "| Time     | 2015 Q   | 2015 P     | 2016 Q   | 2016 P     |\n| -------- | -------- | ---------- | -------- | ---------- |\n| Soybean  | 110 kg   | $4.8/kg    | 150 kg   | $5.1/kg    |\n| Gasoline | 50 liters| $2.62/liter| 80 liters| $3.1/liter |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-741",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of the Paasche index for the consumption basket showcased in Exhibit 1 for the year 2016?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Q_2015_soybean = 110\n    P_2015_soybean = 4.8\n    Q_2016_soybean = 150\n    P_2016_soybean = 5.1\n    \n    Q_2015_gasoline = 50\n    P_2015_gasoline = 2.62\n    Q_2016_gasoline = 80\n    P_2016_gasoline = 3.1\n    \n    # Do math calculation to get the answer\n    # Paasche Index = (\u03a3(P_2016 * Q_2016)) / (\u03a3(P_2015 * Q_2016))\n    numerator = (P_2016_soybean * Q_2016_soybean) + (P_2016_gasoline * Q_2016_gasoline)\n    denominator = (P_2015_soybean * Q_2016_soybean) + (P_2015_gasoline * Q_2016_gasoline)\n    \n    Paasche_index = numerator / denominator\n    \n    # return answer\n    return Paasche_index\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-742",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bank certificate of deposit with a 365-day year has a starting principal sum of USD 96.5 million and a due amount at maturity of USD 100 million. It has 350 days between settlement and maturation. What is the equivalent yield of the bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 96500000  # Starting principal sum in USD\n    maturity_amount = 100000000  # Due amount at maturity in USD\n    days_to_maturity = 350  # Days between settlement and maturity\n    days_in_year = 365  # Days in a year\n    \n    # Do math calculation to get the answer\n    # Calculate the yield using the formula for the equivalent yield of a bond\n    yield_value = ((maturity_amount / principal) - 1) * (days_in_year / days_to_maturity)\n    \n    # return answer\n    return yield_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-743",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current year's consumer price index (CPI) stands at 252 while it was 246 last year. Can you determine this year's rate of inflation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_cpi = 252\n    last_year_cpi = 246\n    \n    # Do math calculation to get the answer\n    rate_of_inflation = ((current_cpi - last_year_cpi) / last_year_cpi) * 100\n    \n    # return answer\n    return rate_of_inflation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-744",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer acquires a nine-year bond with an annual coupon rate of 7% at a price equivalent to its par value. Prior to the receipt of the first coupon, interest rates rise to 8%. After holding the bond for five years, the buyer decides to sell it. Let's assume that the interest rates stayed steady at 8% during the five-year period. How much would the reinvested coupon payments be worth at the end of the holding period per 100 of par value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.07  # Annual coupon rate of 7%\n    interest_rate = 0.08  # Interest rates rise to 8%\n    holding_period = 5  # Holding the bond for five years\n    par_value = 100  # Per 100 of par value\n    \n    # Calculate the annual coupon payment\n    coupon_payment = par_value * coupon_rate\n    \n    # Calculate the future value of the reinvested coupon payments using the formula for the future value of an annuity\n    # FV = P * [(1 + r)^n - 1] / r\n    # where FV is the future value, P is the periodic payment, r is the interest rate, and n is the number of periods\n    future_value = coupon_payment * ((1 + interest_rate) ** holding_period - 1) / interest_rate\n    \n    # return answer\n    return future_value\n```"
        ]
    },
    {
        "tables": [
            "| Company | Market Share(%) |\n|---------|-----------------|\n| Mddert  | 45              |\n| Nuki    | 35              |\n| Pefa    | 10              |\n| Serds   | 5               |\n| Rsdf    | 5               |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-745",
        "python_solution": "",
        "ground_truth": null,
        "question": "In an industry consisting of 5 businesses, the market share data of these businesses was provided for the last quarter. What is the three-firm Herfindahl-Hirschmann Index for this industry?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_shares = [45, 35, 10, 5, 5]\n    \n    # Calculate the three-firm Herfindahl-Hirschmann Index\n    top_three_shares = sorted(market_shares, reverse=True)[:3]\n    hhi = sum(share ** 2 for share in top_three_shares)\n    \n    # return answer\n    return hhi\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-746",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Firm B disclosed a revenue of $80 million and net income of $45 million, what would be the sum of cash obtained from clients if there was a $5 million increase in accounts receivable and a $1 million decrease in accounts payable?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 80000000\n    increase_in_accounts_receivable = 5000000\n    decrease_in_accounts_payable = 1000000\n    \n    # Do math calculation to get the answer\n    cash_obtained_from_clients = revenue - increase_in_accounts_receivable + decrease_in_accounts_payable\n    \n    # return answer\n    return cash_obtained_from_clients\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-747",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Jane Doe's portfolio has a fixed-income position with a market value of USD 70 million, a modified duration of 6.44 years and a yield of 6.7% compounded semiannually and if there is a positive parallel shift in the yield curve of 25 basis points, which of the following answers best estimates the resulting change in the value of Jane\u2019s portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_value = 70000000  # USD 70 million\n    modified_duration = 6.44  # years\n    yield_change = 0.0025  # 25 basis points (0.25%)\n    \n    # Do math calculation to get the answer\n    # The formula for the change in value due to a change in yield is:\n    # \u0394V = -V * D * \u0394y\n    # where \u0394V is the change in value, V is the market value, D is the modified duration, and \u0394y is the change in yield\n    change_in_value = -market_value * modified_duration * yield_change\n    \n    # return answer\n    return change_in_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-748",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ Inc. released a five-year floating-rate note (FRN) that provides a quarterly coupon of three-month market reference rate (MRR) plus 125 bps. The FRN is valued at 96 for every 100 of par value. Given a 30/360-day count convention, evenly arranged periods, and a consistent three-month market reference rate (MRR) of 5%, what is the discount margin for the FRN?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    market_value = 96\n    mrr = 0.05  # 5% as a decimal\n    spread = 0.0125  # 125 bps as a decimal\n    periods_per_year = 4  # quarterly coupon\n    days_in_year = 360\n    days_in_period = 90  # 30/360-day count convention\n\n    # Calculate the annualized coupon rate\n    coupon_rate = mrr + spread\n\n    # Calculate the annualized cash flow\n    annual_cash_flow = coupon_rate * par_value\n\n    # Calculate the present value of the cash flows\n    present_value_cash_flows = annual_cash_flow / periods_per_year * (1 - (1 + (mrr + spread) / periods_per_year) ** (-5 * periods_per_year)) / ((mrr + spread) / periods_per_year) + par_value / (1 + (mrr + spread) / periods_per_year) ** (5 * periods_per_year)\n\n    # Calculate the discount margin\n    discount_margin = (market_value - present_value_cash_flows) / (par_value * 5)\n\n    # return answer\n    return discount_margin\n```"
        ]
    },
    {
        "tables": [
            "| Account Name                               | Amount ($ trillions) |\n|--------------------------------------------|---------------------:|\n| GDP                                        |                 18.0 |\n| Wages, salaries, and other labor income    |                  9.0 |\n| Taxes                                      |                  3.5 |\n| Capital consumption allowance              |                  2.3 |\n| Undistributed corporate profits            |                  1.0 |\n| Transfer payments                          |                  1.9 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-749",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the individual earnings (in $ trillions) for a theoretical nation derived from the chosen data in the GDP records?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    GDP = 18.0\n    wages_salaries_labor_income = 9.0\n    taxes = 3.5\n    undistributed_corporate_profits = 1.0\n    transfer_payments = 1.9\n\n    # Do math calculation to get the answer\n    # Individual earnings are calculated by summing wages, salaries, and other labor income,\n    # taxes, and transfer payments, and then subtracting undistributed corporate profits.\n    individual_earnings = wages_salaries_labor_income + taxes + transfer_payments - undistributed_corporate_profits\n\n    # return answer\n    return individual_earnings\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-750",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will be the 2014 stock-based remuneration cost from the stock grant scheme ($ millions) be, given that since 2010, the yearly executive pay included stock options on the corporation's shares. The enterprise launched a restricted stock grant plan for all non-managerial staff who had been with the enterprise for three years or longer on 1st September 2013. The fair market value of the corporation's shares on the grant date was $4.2 million and the staffer has to stay with the corporation for an additional three years for the shares to vest?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fair_market_value = 4.2  # in millions of dollars\n    vesting_period = 3  # in years\n    \n    # Do math calculation to get the answer\n    # Since the fair market value is given for the entire grant, and it vests over three years,\n    # we need to divide the total value by the vesting period to get the yearly cost.\n    yearly_cost = fair_market_value / vesting_period\n    \n    # return answer\n    return yearly_cost\n```"
        ]
    },
    {
        "tables": [
            "| | |\n|---|---|\n| **ABC LA retirement plan information  2018** | |\n| Current service costs | 320 |\n| Past service costs | 150 |\n| Employer contributions | 1,200 |\n| Benefit obligation at beginning of year | 45,000 |\n| Benefit obligation at end of year | 48,395 |\n| Plan assets at beginning of year | 40,800 |\n| Plan assets at end of year | 44,300 |\n| Actuarial loss | 350 |\n| Actual return on plan assets | 3,100 |\n| Discount rate on plan liabilities | 7.5% |\n| Expected rate of return on plan assets | 8.2% |"
        ],
        "topic": "Accounting",
        "question_id": "test-751",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ NY, a home decor purchasing corporation, provides its workers with a defined benefit pension scheme. The data in the subsequent table: The regular pension expense that would be documented in OCI as per IFRS is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_service_costs = 320\n    past_service_costs = 150\n    employer_contributions = 1200\n    benefit_obligation_beginning = 45000\n    benefit_obligation_end = 48395\n    plan_assets_beginning = 40800\n    plan_assets_end = 44300\n    actuarial_loss = 350\n    actual_return_on_plan_assets = 3100\n    discount_rate = 0.075\n    expected_rate_of_return = 0.082\n\n    # Calculate the interest cost on the benefit obligation\n    interest_cost = benefit_obligation_beginning * discount_rate\n\n    # Calculate the expected return on plan assets\n    expected_return_on_assets = plan_assets_beginning * expected_rate_of_return\n\n    # Calculate the net interest expense\n    net_interest_expense = interest_cost - expected_return_on_assets\n\n    # Calculate the total pension expense to be recognized in OCI\n    pension_expense_OCI = current_service_costs + past_service_costs + net_interest_expense + actuarial_loss\n\n    # return answer\n    return pension_expense_OCI\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-752",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond that Brian purchased has a maturity period of three years with a par value of $1000. The coupon rate is 4% and it pays interest annually. If the required rate of return on the bond is 3.5%, what would be the bond's price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 1000\n    coupon_rate = 0.04\n    required_rate_of_return = 0.035\n    maturity_period = 3\n    \n    # Calculate the annual coupon payment\n    annual_coupon_payment = par_value * coupon_rate\n    \n    # Calculate the present value of the coupon payments\n    present_value_coupons = sum(annual_coupon_payment / (1 + required_rate_of_return) ** t for t in range(1, maturity_period + 1))\n    \n    # Calculate the present value of the par value\n    present_value_par = par_value / (1 + required_rate_of_return) ** maturity_period\n    \n    # Calculate the bond's price\n    bond_price = present_value_coupons + present_value_par\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-753",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that the one-year probabilities of default for the bonds rated AAA and BBB are 1% and 4% respectively, and the combined probability of default of these two bonds is 0.07%. What is the correlation of default between these two bonds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_A = 0.01  # Probability of default for AAA bond\n    p_B = 0.04  # Probability of default for BBB bond\n    p_AB = 0.0007  # Combined probability of default for both bonds\n\n    # Do math calculation to get the answer\n    # Using the formula for correlation of default events:\n    # Correlation (rho) = (p_AB - p_A * p_B) / sqrt(p_A * (1 - p_A) * p_B * (1 - p_B))\n    rho = (p_AB - p_A * p_B) / ((p_A * (1 - p_A) * p_B * (1 - p_B)) ** 0.5)\n\n    # return answer\n    return rho\n```"
        ]
    },
    {
        "tables": [
            "|  |  |\n|---|---|\n|Exhibit 1. Adidas AG Excerpt from Consolidated Income Statement Year|   |\n|Ending 31 December 2010(\u00a3 in millions)|   |\n|Gross profit|5730|\n|Royalty and commission income|100|\n|Other operating income|110|\n|Other operating expenses|5046|\n|Operating profit|894|\n|Interest income 25| |\n|Interest expense|113|\n|Income before taxes|806|\n|Income taxes|238|\n|Net income|568|\n|Additional Information:| |\n|Depreciation and amortization:  \u00a3249 million| |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-754",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the EBITDA interest coverage ratio of Adidas AG as stated in Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_profit = 894  # in millions\n    depreciation_and_amortization = 249  # in millions\n    interest_expense = 113  # in millions\n    \n    # Do math calculation to get the answer\n    ebitda = operating_profit + depreciation_and_amortization\n    ebitda_interest_coverage_ratio = ebitda / interest_expense\n    \n    # return answer\n    return ebitda_interest_coverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Par Value   | Bond Price | Coupon | Modified Duration | Effective Duration | Convexity |\n|-------------|------------|--------|-------------------|--------------------|-----------|\n| $25million  |     105    |  8%    |     7.9           |     8              |   122     |\n| $25million  |     100    |  7%    |     8.5           |     8.5            |   154     |\n| $20million  |     95     |  5%    |     6.3           |     2              |   87      |\n| $30million  |     87     |  0%    |     10.2          |     10.2           |   32      |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-755",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the data in the chart concerning four bonds in an investment collection, what is the portfolio's effective duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_values = [25000000, 25000000, 20000000, 30000000]\n    effective_durations = [8, 8.5, 2, 10.2]\n    \n    # Do math calculation to get the answer\n    total_value = sum(bond_values)\n    weighted_durations = [value * duration for value, duration in zip(bond_values, effective_durations)]\n    portfolio_effective_duration = sum(weighted_durations) / total_value\n    \n    # return answer\n    return portfolio_effective_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-756",
        "python_solution": "",
        "ground_truth": null,
        "question": "A 2-year zero-coupon bond with a face value of  USD 1,000 is currently valued at USD 952.48. The corporation uses a binomial pricing model with a 1-year time increment for all its valuations. Should interest rates decrease over the forthcoming year, the model predicts the bond's worth to be USD 970, or USD 950 should interest rates increase. Using the risk-neutral probabilities deduced from the model, and assuming the risk-free interest rate is 1% annually, what ought to be the present value of a 1-year European call option on this bond with a exercise price of USD 960?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 952.48  # Current value of the bond\n    Su = 970.0   # Value of the bond if interest rates decrease\n    Sd = 950.0   # Value of the bond if interest rates increase\n    K = 960.0    # Exercise price of the call option\n    r = 0.01     # Risk-free interest rate\n    T = 1        # Time to expiration (in years)\n\n    # Calculate risk-neutral probabilities\n    p = (S0 * (1 + r) - Sd) / (Su - Sd)\n    q = 1 - p\n\n    # Calculate the payoff at expiration for the call option\n    Cu = max(Su - K, 0)  # Payoff if interest rates decrease\n    Cd = max(Sd - K, 0)  # Payoff if interest rates increase\n\n    # Calculate the present value of the call option using the risk-neutral probabilities\n    C0 = (p * Cu + q * Cd) / (1 + r)\n\n    # return answer\n    return C0\n```"
        ]
    },
    {
        "tables": [
            "| Company M | $(millions) |\n|-----------|-------------|\n| Operating income (EBIT) | 2,000 |\n| Depreciation expense | 750 |\n| Increase in accounts receivable | 1,000 |\n| Increase in inventories | 100 |\n| Increase in accounts payable | 500 |\n| Purchases of PP&E | 600 |\n| Borrowing (repayment) | 400 |\n| Tax rate | 30% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-757",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the financial report, what is the FCFF for Company N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_income_EBIT = 2000  # in millions\n    depreciation_expense = 750  # in millions\n    increase_in_accounts_receivable = 1000  # in millions\n    increase_in_inventories = 100  # in millions\n    increase_in_accounts_payable = 500  # in millions\n    purchases_of_PP_E = 600  # in millions\n    tax_rate = 0.30\n\n    # Do math calculation to get the answer\n    # Calculate Net Operating Profit After Taxes (NOPAT)\n    NOPAT = operating_income_EBIT * (1 - tax_rate)\n\n    # Calculate Changes in Net Working Capital (NWC)\n    change_in_NWC = (increase_in_accounts_receivable + increase_in_inventories) - increase_in_accounts_payable\n\n    # Calculate Free Cash Flow to the Firm (FCFF)\n    FCFF = NOPAT + depreciation_expense - change_in_NWC - purchases_of_PP_E\n\n    # return answer\n    return FCFF\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-758",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, a corporation acquired a warehouse and accompanying equipment like shelving and forklifts for a whole sum of \u20ac50 million. This was divided by an evaluator into: Land \u20ac10 million, building structure \u20ac35 million, and accompanying gear \u20ac5 million. For bookkeeping goals, taking into account additional spending like \u20ac2.0 million for enhancements to the building\u2019s roof and windows, \u20ac0.5 million for internal remodeling to suit their requirements (repositioning walls and doors, addition and removal of dividers, and so forth), and \u20ac0.1 million on an orientation and training workshop for employees to familiarize them with the facility, what is the capitalized cost to the building account in millions?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    building_structure_cost = 35  # in millions\n    enhancements_cost = 2.0  # in millions\n    remodeling_cost = 0.5  # in millions\n    \n    # Do math calculation to get the answer\n    capitalized_cost_to_building_account = building_structure_cost + enhancements_cost + remodeling_cost\n    \n    # return answer\n    return capitalized_cost_to_building_account\n```"
        ]
    },
    {
        "tables": [
            "|    | Today's one-year Libor | Currency pair (Price/Base) | Spot rate today | Projected spot rate in one year |\n|----|------------------------|---------------------------|-----------------|---------------------------------|\n| USD | 0.80% | CAD/USD | 1.0055 | 1.0006 |\n| CAD | 1.71% | EUR/CAD | 0.7218 | 0.7279 |\n| EUR | 2.20% |  |  |  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-759",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is contemplating a carry trade between the USD and the Euro. What could be the total USD return on the suggested carry trade, taking into account the spot rates and interest rates?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    libor_usd = 0.80 / 100  # Convert percentage to decimal\n    libor_eur = 2.20 / 100  # Convert percentage to decimal\n    spot_rate_today_cad_usd = 1.0055\n    projected_spot_rate_cad_usd = 1.0006\n    spot_rate_today_eur_cad = 0.7218\n    projected_spot_rate_eur_cad = 0.7279\n    \n    # Do math calculation to get the answer\n    # Step 1: Calculate the USD return from borrowing in USD and investing in EUR\n    # Assume John borrows 1 USD\n    usd_borrowed = 1\n    eur_received = usd_borrowed * spot_rate_today_cad_usd * spot_rate_today_eur_cad\n    eur_return = eur_received * (1 + libor_eur)\n    usd_return = eur_return / (projected_spot_rate_cad_usd * projected_spot_rate_eur_cad)\n    \n    # Step 2: Calculate the interest paid on the USD borrowed\n    usd_interest_paid = usd_borrowed * libor_usd\n    \n    # Step 3: Calculate the net USD return\n    net_usd_return = usd_return - usd_borrowed - usd_interest_paid\n    \n    # return answer\n    return net_usd_return\n```"
        ]
    },
    {
        "tables": [
            "| Path | Time 0 | Time 1 | Time 2 |\n|------|--------|--------|--------|\n| 1    | 1.500% | 2.8853%| 2.7183%|\n| 2    | 1.500% | 2.8853%| 1.6487%|\n| 3    | 1.500% | 1.7500%| 1.6487%|\n| 4    | 1.500% | 1.7500%| 1.0000%|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-760",
        "python_solution": "",
        "ground_truth": null,
        "question": "Bond D is a 3-year annual pay bond that offers a 3% coupon rate. Smith determines the potential interest rate paths for Bond D as shown in the Exhibit below. According to the Exhibit, what is the current value of Bond D's cash flows if we follow Path 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.03  # 3% coupon rate\n    face_value = 1000  # Assuming face value of the bond is 1000 for simplicity\n    time_0_rate = 0.015  # 1.500% at Time 0\n    time_1_rate = 0.028853  # 2.8853% at Time 1\n    time_2_rate = 0.016487  # 1.6487% at Time 2\n    \n    # Cash flows at each time period\n    cash_flow_time_1 = face_value * coupon_rate  # Coupon payment at Time 1\n    cash_flow_time_2 = face_value * coupon_rate  # Coupon payment at Time 2\n    cash_flow_time_3 = face_value * (1 + coupon_rate)  # Coupon payment plus principal at Time 3\n    \n    # Discount factors for each time period\n    discount_factor_time_1 = 1 / (1 + time_0_rate)\n    discount_factor_time_2 = 1 / ((1 + time_0_rate) * (1 + time_1_rate))\n    discount_factor_time_3 = 1 / ((1 + time_0_rate) * (1 + time_1_rate) * (1 + time_2_rate))\n    \n    # Present value of each cash flow\n    pv_cash_flow_time_1 = cash_flow_time_1 * discount_factor_time_1\n    pv_cash_flow_time_2 = cash_flow_time_2 * discount_factor_time_2\n    pv_cash_flow_time_3 = cash_flow_time_3 * discount_factor_time_3\n    \n    # Total present value of the bond's cash flows\n    total_pv = pv_cash_flow_time_1 + pv_cash_flow_time_2 + pv_cash_flow_time_3\n    \n    # return answer\n    return total_pv\n```\n\nThis Python program calculates the"
        ]
    },
    {
        "tables": [
            "|  Exhibit 1  | 10 Sample Results of Test Data for Dataset XYZ |\n|-------------|------------------------------------------------|\n| Sentence#   | Actual Sentiment Target p-value               |\n| 1           | 1 0.75                                        |\n| 2           | 0 0.45                                        |\n| 3           | 1 0.64                                        |\n| 4           | 1 0.81                                        |\n| 5           | 0 0.43                                        |\n| 6           | 1 0.78                                        |\n| 7           | 0 0.59                                        |\n| 8           | 1 0.60                                        |\n| 9           | 0 0.67                                        |\n| 10          | 0 0.54                                        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-761",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a threshold p-value of 0.65, Smith wants to implement machine learning (ML) models in the company's analytics procedures. Smith applies the ML model on the test data for Dataset XYZ, as described in Exhibit 1, which includes example results from the testing data collection. What is the accuracy metric for the sample test set of Dataset XYZ according to Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    actual_sentiments = [1, 0, 1, 1, 0, 1, 0, 1, 0, 0]\n    p_values = [0.75, 0.45, 0.64, 0.81, 0.43, 0.78, 0.59, 0.60, 0.67, 0.54]\n    threshold = 0.65\n    \n    # Do math calculation to get the answer\n    predicted_sentiments = [1 if p_value >= threshold else 0 for p_value in p_values]\n    \n    correct_predictions = sum(1 for actual, predicted in zip(actual_sentiments, predicted_sentiments) if actual == predicted)\n    total_predictions = len(actual_sentiments)\n    \n    accuracy = correct_predictions / total_predictions\n    \n    # return answer\n    return accuracy\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning($) | End($) | Shares |\n|----------|--------------|--------|--------|\n| G        |    15.00     |  17.00 |  500   |\n| H        |    35.00     |  33.00 |  300   |\n| 1        |    37.00     |  40.00 |  200   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-762",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, an analyst named Benedict from a finance firm collected this data for an equal-weighted index made up of securities G,H,I: What is the return of the index during this time frame?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = [15.00, 35.00, 37.00]\n    ending_prices = [17.00, 33.00, 40.00]\n    shares = [500, 300, 200]\n    \n    # Calculate individual returns\n    individual_returns = [(end - begin) / begin for begin, end in zip(beginning_prices, ending_prices)]\n    \n    # Calculate the equal-weighted index return\n    index_return = sum(individual_returns) / len(individual_returns)\n    \n    # return answer\n    return index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-763",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a product has a unit contribution margin of $12, fixed costs are $12,000, the interest costs amount to $3,000, and the tax rate is 40%, what would be the operating breakeven point (in units)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    unit_contribution_margin = 12\n    fixed_costs = 12000\n    interest_costs = 3000\n    tax_rate = 0.40\n    \n    # Do math calculation to get the answer\n    # Operating breakeven point is calculated by dividing the sum of fixed costs and interest costs by the unit contribution margin\n    operating_breakeven_point = (fixed_costs + interest_costs) / unit_contribution_margin\n    \n    # return answer\n    return operating_breakeven_point\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Standard Deviation(%) | Beta |\n| --- | --- | --- |\n| Security 1 | 30 | 1.60 |\n| Security 2 | 20 | 1.70 |\n| Security 3 | 25 | 1.90 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-764",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the capital asset pricing model, can you compute the market risk premium for the market using the provided details? The expected return for Security B is 15.9% and the risk-free rate stands at 4%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_security_B = 15.9\n    risk_free_rate = 4\n    beta_security_B = 1.70  # Assuming Security B is Security 2 from the table\n    \n    # Do math calculation to get the answer\n    market_risk_premium = (expected_return_security_B - risk_free_rate) / beta_security_B\n    \n    # return answer\n    return market_risk_premium\n```"
        ]
    },
    {
        "tables": [
            "| Neutral  real policy rate at trend growth and target inflation | 1.2% |\n| --- | --- |\n| Target inflation rate | 0.5% |\n| Expected inflation rate | 1.0% |\n| Trend real GDP growth rate | 1.0% |\n| Expected real GDP growth rate | 2.0% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-765",
        "python_solution": "",
        "ground_truth": null,
        "question": "In order to predict the return expectations for Swedish bonds, Oliver chooses to figure out the target nominal policy rate of Sweden by implementing the Taylor rule with the data shown in Exhibit 1. What's the calculated target nominal policy rate for Sweden using the Taylor rule?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    neutral_real_policy_rate = 1.2  # Neutral real policy rate at trend growth and target inflation\n    target_inflation_rate = 0.5  # Target inflation rate\n    expected_inflation_rate = 1.0  # Expected inflation rate\n    trend_real_gdp_growth_rate = 1.0  # Trend real GDP growth rate\n    expected_real_gdp_growth_rate = 2.0  # Expected real GDP growth rate\n    \n    # Taylor rule coefficients\n    inflation_gap_coefficient = 0.5\n    output_gap_coefficient = 0.5\n    \n    # Calculate the inflation gap\n    inflation_gap = expected_inflation_rate - target_inflation_rate\n    \n    # Calculate the output gap\n    output_gap = expected_real_gdp_growth_rate - trend_real_gdp_growth_rate\n    \n    # Do math calculation to get the target nominal policy rate using the Taylor rule\n    target_nominal_policy_rate = neutral_real_policy_rate + target_inflation_rate + \\\n                                 inflation_gap_coefficient * inflation_gap + \\\n                                 output_gap_coefficient * output_gap\n    \n    # return answer\n    return target_nominal_policy_rate\n```"
        ]
    },
    {
        "tables": [
            "|                                          | ($ thousands) |\n|------------------------------------------|-------------:|\n| Book value of Great Lakes                |      3,256.00|\n| Fair value of Suburban's investment in Great Lakes |         940|\n| Carrying value of Suburban's investment in Great Lakes | 1,264.51|"
        ],
        "topic": "Accounting",
        "question_id": "test-766",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on Thompson's assessment of Metro's assets in Great Lakes as outlined in Exhibit 3 at the conclusion of 2013, even with government assistance, he thought that the automotive sector was unlikely to make a full recovery. This, coupled with Great Lakes' dependence on the automotive industry, would cause Metro, a company known for acquiring local news organizations across the nation under US GAAP, to possibly consider the investment impaired. According to Thompson's viewpoint concerning the probable impairment of the investment in Great Lakes Free Press as presented in Exhibit 3, what is the impairment loss in thousands as of the end of 2013?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fair_value_investment = 940\n    carrying_value_investment = 1264.51\n    \n    # Do math calculation to get the answer\n    impairment_loss = carrying_value_investment - fair_value_investment\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [
            "|Maturity   | Par Rate | Spot rate |\n|-----------|----------|---------- |\n|One-Year   |   2.50%  |   2.50%   |\n|Two-Year   |   2.99%  |   3.00%   |\n|Three-Year |   3.48%  |   3.50%   |\n|Four-Year  |   3.95%  |   4.00%   |\n|Five-Year  |   4.37%  |           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-767",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided in Display 1 about the present par and spot rates of annual-coupon sovereign bonds, what is the forward rate for a loan for one year that starts in three years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_1_year = 0.025\n    spot_rate_2_year = 0.03\n    spot_rate_3_year = 0.035\n    spot_rate_4_year = 0.04\n    \n    # Do math calculation to get the answer\n    # Using the formula for forward rate: (1 + spot_rate_4_year)^4 / (1 + spot_rate_3_year)^3 - 1\n    forward_rate = ((1 + spot_rate_4_year)**4 / (1 + spot_rate_3_year)**3) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-768",
        "python_solution": "",
        "ground_truth": null,
        "question": "A zero-coupon bond with a maturity term of one year has a yield of 4.0%. The yield on zero-coupon bonds with a maturity of two and three years are 5.0% and 6.0% respectively. The forward price of a zero-coupon bond with a two-year term that begins in three years is established at 0.8479. What's the current price of a zero-coupon bond that matures in five years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_1_year = 0.04\n    yield_2_year = 0.05\n    yield_3_year = 0.06\n    forward_price_2_year_in_3_years = 0.8479\n    \n    # Calculate the current price of a zero-coupon bond that matures in 3 years\n    price_3_year = 1 / (1 + yield_3_year) ** 3\n    \n    # Calculate the implied yield for the 2-year bond starting in 3 years\n    implied_yield_2_year_in_3_years = (1 / forward_price_2_year_in_3_years) ** (1/2) - 1\n    \n    # Calculate the current price of a zero-coupon bond that matures in 5 years\n    # Using the relationship between forward rates and spot rates\n    price_5_year = price_3_year * (1 / (1 + implied_yield_2_year_in_3_years) ** 2)\n    \n    # return answer\n    return price_5_year\n```"
        ]
    },
    {
        "tables": [
            "| Years Ended 31 December | 2007 | 2008 |\n| --- | --- | --- |\n| Assets |  |  |\n| Current assets |  |  |\n| Cash and equivalents | $210 | $248 |\n| Accounts receivable | 474 | 513 |\n| Inventory | 520 | 564 |\n| Total current assets | 1,204 | 1,325 |\n| Gross fixed assets | 2,501 | 2,850 |\n| Accumulated depreciation | (604) | (784) |\n| Net fixed assets | 1,897 | 2,066 |\n| Total assets | $3,101 | $3,391 |",
            "| Years Ended 31  December | 2007  | 2008  |\n|--------------------------|-------|-------|\n| Liabilities and shareholders' equity | | |\n| Current liabilities | | |\n| Accounts payable        | $295  | $317  |\n| Notes payable           | 300   | 310   |\n| Accrued taxes and expenses| 76   | 99    |\n| Total current liabilities| 671   | 726   |\n| Long-term debt          | 1,010 | 1,050 |\n| Common stock            | 50    | 50    |\n| Additional paid-in capital| 300  | 300   |\n| Retained earnings       | 1,070 | 1,265 |\n| Total shareholders' equity| 1,420 | 1,615 |\n| Total liabilities and shareholders' equity | $3,101 | $3,391 |",
            "| Statement of Income<br>In Millions, except Per-Share Data | 31 December 2008 |\n|----------------------------------------------------------|-----------------|\n| Total revenues                                           | $2,215           |\n| Operating costs and expenses                             | 1,430           |\n| EBITDA                                                   | 785             |\n| Depreciation                                             | 180             |\n| EBIT                                                     | 605             |\n| Interest expense                                         | 130             |\n| Income before tax                                        | 475             |\n| Taxes (at 40 percent)                                    | 190             |\n| Net income                                               | 285             |\n| Dividends                                                | 90              |\n| Addition to retained earnings                            | 195             |",
            "| Statement of Cash Flows In Millions | 31 December 2008 |\n|---|---|\n| Operating activities |   |\n| Net income | $285 |\n| Adjustments |   |\n| Depreciation | 180 |\n| Changes in working capital |   |\n| Accounts receivable | (39) |\n| Inventories | (44) |\n| Accounts payable | 22 |\n| Accrued taxes and expenses | 23 |\n| Cash provided by operating activities | $427 |\n| Investing activities |   |\n| Purchases of fixed assets | $349 |\n| Cash used for investing activities | $349 |\n| Financing activities |   |\n| Notes payable | $(10) |\n| Long-term financing issuances | (40) |\n| Common stock dividends | 90 |\n| Cash used for financing activities | $40 |\n| Cash and equivalents increase (decrease) | 38 |\n| Cash and equivalents at beginning of year | 210 |\n| Cash and equivalents at end of year | $248 |\n| Supplemental cash flow disclosures |   |\n| Interest paid | $130 |\n| Income taxes paid | $190 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-769",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the difference between FCFF and FCFE as per the financial statements provided by the organization?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 285\n    depreciation = 180\n    capex = 349\n    change_in_working_capital = 39 + 44 - 22 - 23  # Accounts receivable + Inventories - Accounts payable - Accrued taxes and expenses\n    interest_expense = 130\n    tax_rate = 0.40\n    debt_issuance = 10  # Notes payable change\n    equity_issuance = 40  # Long-term financing issuances\n\n    # Calculate FCFF (Free Cash Flow to the Firm)\n    fcff = net_income + depreciation + interest_expense * (1 - tax_rate) - capex - change_in_working_capital\n\n    # Calculate FCFE (Free Cash Flow to Equity)\n    fcfe = fcff - interest_expense * (1 - tax_rate) + debt_issuance - equity_issuance\n\n    # Calculate the difference between FCFF and FCFE\n    difference = fcff - fcfe\n\n    # return answer\n    return difference\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-770",
        "python_solution": "",
        "ground_truth": null,
        "question": "Did Sesame Corp, which complies with IFRS, charge which amount to inventory expense (\u20ac millions) after it acquired inventory worth \u20ac100 million and allocated \u20ac5 million for storage before selling the items?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inventory_acquired = 100  # in millions of euros\n    storage_cost = 5  # in millions of euros\n    \n    # Do math calculation to get the answer\n    inventory_expense = inventory_acquired + storage_cost\n    \n    # return answer\n    return inventory_expense\n```"
        ]
    },
    {
        "tables": [
            "|                       | 2015 | 2016  | 2017 | 2018(E) |\n|-----------------------|------|-------|------|---------|\n| Earnings per share    | 5.56 | 6.23  | 4.72 | 6.5     |\n| Return on equity (ROE)| 11%  | 12.32%| 9.25%| 12.5%   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-771",
        "python_solution": "",
        "ground_truth": null,
        "question": "As a junior analyst at a modest investment firm, Jacob was tasked with assessing the value of a food service company known as SpeedyEats, based out of Shanghai. The company's stock price on the 20th of January 2018 stood at $35. Jacob collected data and made projections on the company as illustrated below. Based on the provided data, what is the trailing P/E of the company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_price = 35\n    earnings_per_share_2017 = 4.72\n    \n    # Do math calculation to get the answer\n    trailing_PE = stock_price / earnings_per_share_2017\n    \n    # return answer\n    return trailing_PE\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-772",
        "python_solution": "",
        "ground_truth": null,
        "question": "Think about a call option that is trading at $4 where the strike price is $50. What would be the final value and the earnings for the vendor if the price of the underlying asset at expiration is $49?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    option_price = 4\n    strike_price = 50\n    underlying_asset_price_at_expiration = 49\n    \n    # Do math calculation to get the answer\n    # For a call option, if the underlying asset price at expiration is below the strike price, the option expires worthless.\n    final_value = 0\n    earnings_for_vendor = option_price  # The vendor keeps the premium paid by the buyer\n    \n    # return answer\n    return final_value, earnings_for_vendor\n```"
        ]
    },
    {
        "tables": [
            "| Current share price | 20 |\n|---------------------|----|\n| Book value per share | 15 |\n| Total shares outstanding | 25 millions |\n| Market value of debt | 60 millions |\n| Accounting book value of total capital | 400 millions |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-773",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the market value added of the theoretical company, according to the data in the table below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_share_price = 20\n    book_value_per_share = 15\n    total_shares_outstanding = 25000000  # in millions\n    market_value_of_debt = 60000000  # in millions\n    accounting_book_value_of_total_capital = 400000000  # in millions\n    \n    # Calculate the market capitalization\n    market_capitalization = current_share_price * total_shares_outstanding\n    \n    # Calculate the total market value of the company\n    total_market_value = market_capitalization + market_value_of_debt\n    \n    # Calculate the market value added\n    market_value_added = total_market_value - accounting_book_value_of_total_capital\n    \n    # return answer\n    return market_value_added\n```"
        ]
    },
    {
        "tables": [
            "|                               |     | 2018 |     | 2017 |\n|-------------------------------|-----|------|-----|------|\n| Assets                           |     |      |     |      |\n| Current assets                   |     |      |     |      |\n| Accounts receivable              |     | 800  |     | 750  |\n| Inventories                      |     | 850  |     | 720  |\n| Gross fixed assets               |     | 5000 |     | 4250 |\n| Accounts payable                 |     | $ 400  |     | $300 |\n| Accrued taxes and expenses       |     | 120  |     | 90   |\n| Notes payable                    |     | 550  |     | 500  |\n| Long-term debt                   |     | 1,500 |     | 1,400 |\n| Income Statement for the Year Ended 31 December 2018 |     |      |     |      |\n| EBITDA                           |     |      |     | 2000 |\n| Depreciation expense             |     |      |     | 400  |\n| EBIT                             |     |      |     | 1600 |\n| Interest expense                 |     |      |     | 350  |\n| Pretax income                    |     |      |     | 1250 |\n| Income tax (at 30 percent)       |     |      |     | 375  |\n| Net income                       |     |      |     | $ 875  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-774",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the evaluation of PZ Inc.'s 2018 FCFF (in millions) according to the 2017 and 2018 financial statements provided by the company, as assessed by Jacques?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    EBIT = 1600  # EBIT from 2017, assuming it's the same for 2018 as not provided\n    tax_rate = 0.30  # Tax rate at 30 percent\n    depreciation_expense = 400  # Depreciation expense from 2017, assuming it's the same for 2018 as not provided\n    change_in_working_capital = (800 - 750) + (850 - 720) - (400 - 300) - (120 - 90)  # Change in working capital\n    capital_expenditures = 5000 - 4250  # Change in gross fixed assets\n\n    # Do math calculation to get the answer\n    FCFF = EBIT * (1 - tax_rate) + depreciation_expense - change_in_working_capital - capital_expenditures\n\n    # return answer\n    return FCFF\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-775",
        "python_solution": "",
        "ground_truth": null,
        "question": "Gemini is planning to buy a two-year Treasury note futures contract. The base 1.2%, semi-annual two-year Treasury note is listed at a clean price of 103. It's been 60 days since the last coupon payment. Gemini is aiming to determine the total spot price of the base two-year Treasury note:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    clean_price = 103\n    coupon_rate = 0.012  # 1.2%\n    days_since_last_coupon = 60\n    days_in_year = 365\n    coupon_frequency = 2  # semi-annual\n    \n    # Calculate the accrued interest\n    accrued_interest = (coupon_rate / coupon_frequency) * (days_since_last_coupon / (days_in_year / coupon_frequency))\n    \n    # Calculate the total spot price\n    total_spot_price = clean_price + accrued_interest\n    \n    # return answer\n    return total_spot_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-776",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the Equivalent YTM if the buying price of a 30-day Treasury Bill is 99.5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    buying_price = 99.5\n    face_value = 100\n    days_to_maturity = 30\n    \n    # Do math calculation to get the answer\n    # YTM formula for Treasury Bills: ((Face Value - Buying Price) / Buying Price) * (365 / Days to Maturity)\n    YTM = ((face_value - buying_price) / buying_price) * (365 / days_to_maturity)\n    \n    # return answer\n    return YTM\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-777",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the interest rates are 10% and they surge by 25 basis points, how much will the bond portfolio value diminish by, given that these are the current specifications: Portfolio X has 8 bonds under a long position, a price of $90,000, and a modified duration of 2.5, Portfolio Y is worth $110,000 and holds a short position in 6 bonds with a modified duration of 3, and Portfolio Z's details are a $120,000 price, a modified duration of 3.3, and a long position in 12 bonds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    interest_rate_change = 0.0025  # 25 basis points in decimal form\n    \n    # Portfolio X details\n    portfolio_x_bonds = 8\n    portfolio_x_price = 90000\n    portfolio_x_modified_duration = 2.5\n    \n    # Portfolio Y details\n    portfolio_y_price = 110000\n    portfolio_y_bonds = 6\n    portfolio_y_modified_duration = 3\n    \n    # Portfolio Z details\n    portfolio_z_bonds = 12\n    portfolio_z_price = 120000\n    portfolio_z_modified_duration = 3.3\n    \n    # Calculate the value change for each portfolio\n    portfolio_x_value_change = portfolio_x_price * portfolio_x_modified_duration * interest_rate_change\n    portfolio_y_value_change = portfolio_y_price * portfolio_y_modified_duration * interest_rate_change\n    portfolio_z_value_change = portfolio_z_price * portfolio_z_modified_duration * interest_rate_change\n    \n    # Since Portfolio Y is in a short position, the value change is opposite in sign\n    portfolio_y_value_change = -portfolio_y_value_change\n    \n    # Total value diminution\n    total_value_diminution = portfolio_x_value_change + portfolio_y_value_change + portfolio_z_value_change\n    \n    # return answer\n    return total_value_diminution\n```"
        ]
    },
    {
        "tables": [
            "|                          |      |\n|--------------------------|------|\n| weight of asset A        | 30%  |\n| weight of asset B        | 70%  |\n| standard deviation of asset A | 10%  |\n| standard deviation of asset B  | 15%  |\n| correlation coefficient  | -0.7 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-778",
        "python_solution": "",
        "ground_truth": null,
        "question": "Compute the standard deviation of the portfolio as per the data presented in the below table:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_A = 0.30\n    weight_B = 0.70\n    std_dev_A = 0.10\n    std_dev_B = 0.15\n    correlation_coeff = -0.7\n    \n    # Do math calculation to get the answer\n    # Formula for portfolio standard deviation: sqrt(wA^2 * stdA^2 + wB^2 * stdB^2 + 2 * wA * wB * stdA * stdB * corr)\n    portfolio_std_dev = (weight_A**2 * std_dev_A**2 + weight_B**2 * std_dev_B**2 + 2 * weight_A * weight_B * std_dev_A * std_dev_B * correlation_coeff)**0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [
            "|       Factor      | Market |  Size  | Value | Momentum |\n|:-----------------:|:------:|:------:|:-----:|:--------:|\n|    Coefficient    |  1.080 |  0.098 | -0.401|  0.034   |\n| Variance of the market factor return and covariances with the market factor return | 0.00109 | 0.00053 | 0.00022 | -0.00025 |\n| Portfolio's monthly standard deviation of returns | | | | 3.74% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-779",
        "python_solution": "",
        "ground_truth": null,
        "question": "Referring to Exhibit 1, what percentage of the total portfolio risk is accounted for by the market factor in the current portfolio of Fund 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_factor_coefficient = 1.080\n    variance_market_factor = 0.00109\n    portfolio_std_dev = 0.0374  # 3.74% converted to decimal\n\n    # Do math calculation to get the answer\n    # Calculate the contribution of the market factor to the portfolio risk\n    market_factor_risk = (market_factor_coefficient ** 2) * variance_market_factor\n    total_portfolio_variance = portfolio_std_dev ** 2\n    percentage_market_factor_risk = (market_factor_risk / total_portfolio_variance) * 100\n\n    # return answer\n    return percentage_market_factor_risk\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-780",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a luxury vehicle, bought for \u00a3200,000, is financed for a duration of five years with an annual interest rate of 6% compounded monthly with the initial payment due in a month, how much is the monthly payment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 200000  # Initial amount of the loan in pounds\n    annual_interest_rate = 0.06  # Annual interest rate\n    number_of_years = 5  # Duration of the loan in years\n    number_of_payments_per_year = 12  # Monthly payments\n\n    # Convert annual interest rate to monthly and calculate total number of payments\n    monthly_interest_rate = annual_interest_rate / number_of_payments_per_year\n    total_payments = number_of_years * number_of_payments_per_year\n\n    # Do math calculation to get the monthly payment using the formula for the monthly payment of a loan\n    # M = P * (r(1+r)^n) / ((1+r)^n - 1)\n    # where M is the monthly payment, P is the principal, r is the monthly interest rate, and n is the total number of payments\n    monthly_payment = principal * (monthly_interest_rate * (1 + monthly_interest_rate) ** total_payments) / ((1 + monthly_interest_rate) ** total_payments - 1)\n\n    # return answer\n    return monthly_payment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-781",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bondholder has a bond with a 9% coupon rate that pays interest biannually and matures in three years and they are thinking about selling it. If the necessary return rate on the bond is 11%, what is the bond's cost per 100 of nominal value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.09  # 9% coupon rate\n    interest_payment = coupon_rate / 2  # biannual interest payment\n    maturity = 3  # 3 years to maturity\n    periods = maturity * 2  # number of biannual periods\n    required_return = 0.11  # 11% required return rate\n    required_return_per_period = required_return / 2  # biannual required return rate\n    nominal_value = 100  # nominal value of the bond\n    \n    # Do math calculation to get the answer\n    present_value = 0\n    for t in range(1, periods + 1):\n        present_value += interest_payment * (1 + required_return_per_period) ** -t\n    present_value += nominal_value * (1 + required_return_per_period) ** -periods\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "|           | Hedge Fund | Market Index |\n|-----------|------------|--------------|\n| Hedge Fund   | 256        | 110          |\n| Market Index | 110        | 81           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-782",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the association between the returns of the hedge fund and the market index as per the covariance matrix of returns constructed by a researcher?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    hedge_fund_variance = 256\n    market_index_variance = 81\n    covariance = 110\n    \n    # Do math calculation to get the answer\n    correlation = covariance / ((hedge_fund_variance ** 0.5) * (market_index_variance ** 0.5))\n    \n    # return answer\n    return correlation\n```"
        ]
    },
    {
        "tables": [
            "|     |     |     |     |\n|-----|-----|-----|-----|\n|**Return in 2006-2017(%)**||||\n| 2006 | 1.48 | 2012 | -8.19|\n| 2007 | -1.59| 2013 | -4.11|\n| 2008 | 8.47 | 2014 | 0.33 |\n| 2009 | -1.55| 2015 | 5.84 |\n| 2010 | -2.69| 2016 | 2.04 |\n| 2011 | -1.89| 2017 | 3.72 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-783",
        "python_solution": "",
        "ground_truth": null,
        "question": "If John invests in a fund and the annual returns range between 1.03% \u2264 x <4.77%, what will be the cumulative relative frequency?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [1.48, -1.59, 8.47, -1.55, -2.69, -1.89, -8.19, -4.11, 0.33, 5.84, 2.04, 3.72]\n    lower_bound = 1.03\n    upper_bound = 4.77\n    \n    # Do math calculation to get the answer\n    count = sum(1 for r in returns if lower_bound <= r < upper_bound)\n    cumulative_relative_frequency = count / len(returns)\n    \n    # return answer\n    return cumulative_relative_frequency\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-784",
        "python_solution": "",
        "ground_truth": null,
        "question": "Grand Rapids Titanium Corp (GRTC) sustains an 80 percent dividend payout ratio due to its restricted growth possibilities. The company's return on equity stands at 15 percent. The obligatory return rate on GRTC's equity is 12 percent, while its anticipated long-term growth rate is 3 percent. Can you determine the justified P/B using the projected fundamentals, in accordance with the residual income model and under the assumption of a constant growth rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_payout_ratio = 0.80\n    return_on_equity = 0.15\n    required_return_rate = 0.12\n    growth_rate = 0.03\n    \n    # Do math calculation to get the answer\n    # Calculate the retention ratio\n    retention_ratio = 1 - dividend_payout_ratio\n    \n    # Calculate the residual income model components\n    book_value_growth_rate = retention_ratio * return_on_equity\n    residual_income_growth_rate = book_value_growth_rate - growth_rate\n    \n    # Calculate the justified P/B ratio\n    justified_P_B = (return_on_equity - growth_rate) / (required_return_rate - growth_rate)\n    \n    # return answer\n    return justified_P_B\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-785",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the latest financial year, Farrow Inc. had average days of sales outstanding of 19 days. Farrow is aiming to enhance its credit policies and collection methodologies and reduce its collection phase in the forthcoming financial year to align with the market average of 15 days. The credit sales in the latest fiscal year were $300 million, and they are estimated to rise to $390 million in the next fiscal year. What should be the alteration in the average accounts receivable balance to accomplish Farrow's objective of decreasing the collection period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_days_sales_outstanding = 19\n    target_days_sales_outstanding = 15\n    current_credit_sales = 300000000\n    future_credit_sales = 390000000\n    \n    # Calculate current average accounts receivable\n    current_average_accounts_receivable = (current_credit_sales / 365) * current_days_sales_outstanding\n    \n    # Calculate target average accounts receivable\n    target_average_accounts_receivable = (future_credit_sales / 365) * target_days_sales_outstanding\n    \n    # Calculate the alteration in the average accounts receivable balance\n    alteration_in_average_accounts_receivable = current_average_accounts_receivable - target_average_accounts_receivable\n    \n    # return answer\n    return alteration_in_average_accounts_receivable\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-786",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a set of mortgages, 50% are deemed as subprime. The principal balance of 50% of these subprime mortgages and 25% of the non-subprime mortgages are higher than the value of the property used as collateral. If you randomly pick a mortgage from this set for inspection and its principal balance is more than the value of the collateral, what is the likelihood that it is a subprime mortgage?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    subprime_percentage = 0.50\n    subprime_higher_than_collateral = 0.50\n    non_subprime_higher_than_collateral = 0.25\n    \n    # Calculate the total percentage of mortgages higher than collateral\n    total_higher_than_collateral = (subprime_percentage * subprime_higher_than_collateral) + ((1 - subprime_percentage) * non_subprime_higher_than_collateral)\n    \n    # Calculate the likelihood that a mortgage is subprime given that its principal balance is more than the value of the collateral\n    likelihood_subprime = (subprime_percentage * subprime_higher_than_collateral) / total_higher_than_collateral\n    \n    # return answer\n    return likelihood_subprime\n```"
        ]
    },
    {
        "tables": [
            "| Time Period | Forward Rate |\n|-------------|--------------|\n| 0y1y        | 0.80%        |\n| 1y1y        | 1.12%        |\n| Z           | 3.94%        |\n| 3y1y        | 3.28%        |\n| 4y1y        | 3.14%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-787",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value per 100 of par value for a two-year, 3.5% coupon bond, where interest payments are disbursed once a year, considering all rates mentioned are annual rates with a periodicity of one (effective annual rates)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rates = {\n        '0y1y': 0.0080,\n        '1y1y': 0.0112,\n        '2y1y': 0.0394,\n        '3y1y': 0.0328,\n        '4y1y': 0.0314\n    }\n    coupon_rate = 0.035\n    par_value = 100\n    years = 2\n    \n    # Calculate the discount factors\n    discount_factors = [1 / (1 + forward_rates['0y1y']), 1 / ((1 + forward_rates['0y1y']) * (1 + forward_rates['1y1y']))]\n    \n    # Calculate the present value of the coupon payments and the principal\n    present_value_coupons = sum([coupon_rate * par_value * discount_factors[i] for i in range(years)])\n    present_value_principal = par_value * discount_factors[-1]\n    \n    # Calculate the total present value\n    total_present_value = present_value_coupons + present_value_principal\n    \n    # return answer\n    return total_present_value\n```"
        ]
    },
    {
        "tables": [
            "|  X  | Y=5 | Y=2 | Y=-3 |\n| --- | --- | --- | ---- |\n| -2  | 0.2 | 0   | 0    |\n|  1  | 0   | 0.6 | 0    |\n|  4  | 0   | 0   | 0.2  |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-788",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided data chart, what is the standard deviation of X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    X = [-2, 1, 4]\n    Y = [5, 2, -3]\n    probabilities = [\n        [0.2, 0, 0],\n        [0, 0.6, 0],\n        [0, 0, 0.2]\n    ]\n    \n    # Calculate mean of X\n    mean_X = sum(X[i] * sum(probabilities[i]) for i in range(len(X)))\n    \n    # Calculate variance of X\n    variance_X = sum(probabilities[i][j] * (X[i] - mean_X) ** 2 for i in range(len(X)) for j in range(len(Y)))\n    \n    # Calculate standard deviation of X\n    std_dev_X = variance_X ** 0.5\n    \n    # return answer\n    return std_dev_X\n```"
        ]
    },
    {
        "tables": [
            "| Profit | Cumulative  Distribution  Function |\n|--------|-----------------------------------|\n| $0     | 0.2                               |\n| $1     | 0.4                               |\n| $2     | 0.6                               |\n| $3     | 0.8                               |\n| $4     | 1.0                               |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-789",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the chance of a profit between $1 and $4, as depicted by the following table displaying the discrete uniform probability distribution of gross profits from buying an option?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    profit_cdf = {0: 0.2, 1: 0.4, 2: 0.6, 3: 0.8, 4: 1.0}\n    \n    # Do math calculation to get the answer\n    # The chance of a profit between $1 and $4 is the difference in CDF at $4 and $1\n    chance_profit_1_to_4 = profit_cdf[4] - profit_cdf[1]\n    \n    # return answer\n    return chance_profit_1_to_4\n```"
        ]
    },
    {
        "tables": [
            "| ($ millions)          | 2017 | 2018 |\n|-----------------------|------|------|\n| Revenue               | 42   | 37   |\n| Cost of goods sold    | 18   | 16   |\n| Inventory             | 36   | 40   |\n| Accounts receivable   | 22   | 19   |\n| Accounts payable      | 14   | 12   |"
        ],
        "topic": "Accounting",
        "question_id": "test-790",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the year 2018, a firm that utilized US GAAP did cash disbursements of $6 million for employee wages, $2 million for interest liabilities, and $4 million for income tax obligations. Based solely on the data provided in the chart, what is the firm's cash flow from operations for 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 37  # in millions for 2018\n    cost_of_goods_sold = 16  # in millions for 2018\n    accounts_receivable = 19  # in millions for 2018\n    accounts_payable = 12  # in millions for 2018\n    cash_disbursements_employee_wages = 6  # in millions for 2018\n    cash_disbursements_interest_liabilities = 2  # in millions for 2018\n    cash_disbursements_income_tax_obligations = 4  # in millions for 2018\n\n    # Do math calculation to get the answer\n    # Cash flow from operations (CFO) can be calculated using the indirect method:\n    # CFO = Net Income + Depreciation + Changes in Working Capital\n    # However, since we don't have Net Income or Depreciation, we'll focus on changes in working capital.\n\n    # Calculate changes in working capital components:\n    change_in_accounts_receivable = accounts_receivable - 22  # 22 is the value for 2017\n    change_in_accounts_payable = accounts_payable - 14  # 14 is the value for 2017\n\n    # CFO calculation:\n    cfo = revenue - cost_of_goods_sold - change_in_accounts_receivable + change_in_accounts_payable - cash_disbursements_employee_wages - cash_disbursements_interest_liabilities - cash_disbursements_income_tax_obligations\n\n    # return answer\n    return cfo\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-791",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given that the cost per unit for savings account services is 0.5%, the anticipated overhead costs assigned to these services is 1.2%, the targeted profit margin per unit sold is 0.3%, the variable cost rate is 1.2%, and the mean interest rate is 4.5%, what would be the savings rate as per the Cost Plus Profit Margin method of pricing Savings-related Services?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_per_unit = 0.5\n    overhead_costs = 1.2\n    profit_margin = 0.3\n    variable_cost_rate = 1.2\n    mean_interest_rate = 4.5\n    \n    # Do math calculation to get the answer\n    total_cost = cost_per_unit + overhead_costs + variable_cost_rate\n    savings_rate = total_cost + profit_margin\n    \n    # return answer\n    return savings_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-792",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a client wishes to purchase a ball from a store that has 200 balls, three of which are of the same size, what is the likelihood that one of the three balls will be chosen?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_balls = 200\n    same_size_balls = 3\n    \n    # Do math calculation to get the answer\n    probability = same_size_balls / total_balls\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-793",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine the present 1-year rate for zero-coupon bonds stays at 6%, and the coming 1-year will fall by 2%. What would be the 2-year spot rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_1_year_rate = 0.06  # 6% as a decimal\n    future_1_year_rate = 0.06 - 0.02  # 6% minus 2%\n\n    # Do math calculation to get the answer\n    # The 2-year spot rate can be calculated using the formula for the geometric mean of the rates\n    # (1 + 2_year_spot_rate)^2 = (1 + present_1_year_rate) * (1 + future_1_year_rate)\n    combined_rate = (1 + present_1_year_rate) * (1 + future_1_year_rate)\n    two_year_spot_rate = (combined_rate ** 0.5) - 1\n\n    # return answer\n    return two_year_spot_rate\n```"
        ]
    },
    {
        "tables": [
            "| Current spot rate for the USD/EUR | 0.7500 |\n| --- | --- |\n| Forward rate for the EUR/AUD | 1.4300 |\n| EUR/AUD forward premium to the spot rate | 400 points |\n| USD: US dollar; EUR: Euro; AUD: Australian dollar | |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-794",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the same circumstances, what is the USD/AUD spot rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    USD_EUR_spot_rate = 0.7500\n    EUR_AUD_forward_rate = 1.4300\n    EUR_AUD_forward_premium = 0.0400  # 400 points converted to decimal\n    \n    # Calculate the EUR/AUD spot rate by subtracting the forward premium from the forward rate\n    EUR_AUD_spot_rate = EUR_AUD_forward_rate - EUR_AUD_forward_premium\n    \n    # Calculate the USD/AUD spot rate by multiplying the USD/EUR spot rate with the EUR/AUD spot rate\n    USD_AUD_spot_rate = USD_EUR_spot_rate * EUR_AUD_spot_rate\n    \n    # return answer\n    return USD_AUD_spot_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-795",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond's current price is $101.45 and a financial advisor anticipates that the price will increase to $103.28 if interest rates drop by 0.25% or decrease to $100.81 if interest rates go up by 0.25%, what is the bond's effective duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 101.45\n    price_if_rates_drop = 103.28\n    price_if_rates_rise = 100.81\n    interest_rate_change = 0.25 / 100  # Convert percentage to decimal\n    \n    # Do math calculation to get the answer\n    effective_duration = (price_if_rates_rise - price_if_rates_drop) / (2 * initial_price * interest_rate_change)\n    \n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [
            "|                       |        |\n| --------------------- | ------ |\n| Net income $          | 100,000|\n| Increase in accounts receivable | 12,000 |\n| Increase in accounts payable | 9,000   |\n| Depreciation and amortization   | 8,000   |"
        ],
        "topic": "Accounting",
        "question_id": "test-796",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the operational cash flow, taking into account the chosen data from the business's activities?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 100000\n    increase_in_accounts_receivable = 12000\n    increase_in_accounts_payable = 9000\n    depreciation_and_amortization = 8000\n    \n    # Do math calculation to get the answer\n    operational_cash_flow = net_income + depreciation_and_amortization - increase_in_accounts_receivable + increase_in_accounts_payable\n    \n    # return answer\n    return operational_cash_flow\n```"
        ]
    },
    {
        "tables": [
            "|                           |         |\n|---------------------------|---------|\n| Forecasted Balance Sheet Data for LI at 31 December 2018    |         |\n| Cash                      | 120     |\n| Accounts receivable       | 30      |\n| Inventory                 | 450     |\n| Fixed assets              | 800     |\n| Total assets              | 1,400   |\n| Liabilities               | 320     |\n| Common stock              | 780     |\n| Retained earnings         | 300     |",
            "|                            | Exchange rates ($/\u20ac) |\n|----------------------------|----------------------|\n| when fixed assets were acquired | 1.55                 |\n| 31 December 2018           | 1.77                 |\n| 2018 average               | 1.68                 |"
        ],
        "topic": "Accounting",
        "question_id": "test-797",
        "python_solution": "",
        "ground_truth": null,
        "question": "The XY corporation is an American business that follows US GAAP. It also owns two European subsidiary companies: FS financial service and FC financial consultant. John, a CFA, has compiled a forecast of XY's 2018 financial statement. If XY chooses the current rate method to convert the data of FS into US dollars and the temporal method for converting the data of FC into US dollars, what will the total assets be on 31 December 2018 when XY translates FS's results into US dollars?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_fs = 120  # in euros\n    accounts_receivable_fs = 30  # in euros\n    inventory_fs = 450  # in euros\n    fixed_assets_fs = 800  # in euros\n    total_assets_fs = 1400  # in euros\n    exchange_rate_current = 1.77  # current exchange rate on 31 December 2018\n\n    # Do math calculation to get the answer\n    # Using the current rate method for FS\n    cash_fs_usd = cash_fs * exchange_rate_current\n    accounts_receivable_fs_usd = accounts_receivable_fs * exchange_rate_current\n    inventory_fs_usd = inventory_fs * exchange_rate_current\n    fixed_assets_fs_usd = fixed_assets_fs * exchange_rate_current\n    total_assets_fs_usd = total_assets_fs * exchange_rate_current\n\n    # return answer\n    return total_assets_fs_usd\n```"
        ]
    },
    {
        "tables": [
            "|                         | Delite Beverage |\n|------------------------ |-----------------|\n| 2010 Earnings per share (EPS) | $3.44         |\n| 2011 estimated EPS      | $3.50          |\n| Book value per share end of year | $62.05    |\n| Current share price     | $65.50         |\n| Sales (billions)        | $32.13         |\n| Free cash flow per share| $2.68          |\n| Shares outstanding end of year | 2,322,034,000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-798",
        "python_solution": "",
        "ground_truth": null,
        "question": "Basing on the information provided in Exhibit 1, what would be the most suitable price-to-earnings ratio to apply in the assessment of value for the soft drink manufacturing and distribution company, Delite Beverage, especially considering their recent acquisition of a large water bottling firm?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_eps_2010 = 3.44\n    estimated_eps_2011 = 3.50\n    current_share_price = 65.50\n    \n    # Do math calculation to get the answer\n    # Calculate the price-to-earnings ratio using the estimated EPS for 2011\n    pe_ratio = current_share_price / estimated_eps_2011\n    \n    # return answer\n    return pe_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-799",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following data is provided for the returns on shares X and shares Y: the return variance for shares X is 100; the return variance for shares Y is 225, and the covariance between the returns on shares X and Y is 53.2. At the conclusion of 1999, you have USD 4 million in shares X. It's under consideration to move USD 1 million to shares Y while preserving USD 3 million in shares X. What is the risk reduction percentage, denoted by return standard deviation, that can be achieved with this strategy?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    variance_X = 100\n    variance_Y = 225\n    covariance_XY = 53.2\n    initial_investment_X = 4000000\n    new_investment_X = 3000000\n    new_investment_Y = 1000000\n    \n    # Calculate the weights of the new portfolio\n    total_investment = new_investment_X + new_investment_Y\n    weight_X = new_investment_X / total_investment\n    weight_Y = new_investment_Y / total_investment\n    \n    # Calculate the portfolio variance\n    portfolio_variance = (weight_X ** 2) * variance_X + (weight_Y ** 2) * variance_Y + 2 * weight_X * weight_Y * covariance_XY\n    \n    # Calculate the portfolio standard deviation (risk)\n    portfolio_std_dev = portfolio_variance ** 0.5\n    \n    # Calculate the initial standard deviation (risk) of shares X\n    initial_std_dev_X = variance_X ** 0.5\n    \n    # Calculate the risk reduction percentage\n    risk_reduction_percentage = ((initial_std_dev_X - portfolio_std_dev) / initial_std_dev_X) * 100\n    \n    # return answer\n    return risk_reduction_percentage\n```"
        ]
    },
    {
        "tables": [
            "| X     | 0    | 1    | 2    | 3    | 4    | 5    | 6    | 7    |\n|-------|------|------|------|------|------|------|------|------|\n| P(X)  | 0.14 | 0.09 | 0.19 | 0.25 | 0.17 | 0.06 | 0.03 | 0.07 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-800",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided table, what is the value of F(4)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = [0.14, 0.09, 0.19, 0.25, 0.17, 0.06, 0.03, 0.07]\n    \n    # Do math calculation to get the answer\n    cumulative_probability = sum(probabilities[:5])  # Sum up to P(4) inclusive\n    \n    # return answer\n    return cumulative_probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-801",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond was purchased by Robert with a remaining maturity of two years. The face value of the bond is 1000. The annual interest rate is 4% and the interest is paid once a year. The current market discount rate is 4.5%. What is the cost of the bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000\n    annual_interest_rate = 0.04\n    market_discount_rate = 0.045\n    remaining_maturity = 2\n    \n    # Calculate the annual interest payment\n    annual_interest_payment = face_value * annual_interest_rate\n    \n    # Calculate the present value of the interest payments\n    present_value_interest_payments = sum(annual_interest_payment / (1 + market_discount_rate) ** t for t in range(1, remaining_maturity + 1))\n    \n    # Calculate the present value of the face value\n    present_value_face_value = face_value / (1 + market_discount_rate) ** remaining_maturity\n    \n    # Calculate the total cost of the bond\n    cost_of_bond = present_value_interest_payments + present_value_face_value\n    \n    # return answer\n    return cost_of_bond\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-802",
        "python_solution": "",
        "ground_truth": null,
        "question": "In order to make use of the cash position of assets under management, an investment strategist decides to engage in a long futures position on the S&P 500 index with a multiplier of 250. The cash position stands at $15 million and given the existing futures value of 1,000, requires the strategist to hold 60 contracts long. Given that the present initial margin is $12,500 per contract and the maintenance margin stands at $10,000 per contract, what amount of variation margin is required by the investment strategist if the value of the futures contract drops to 995 on the closing day of the position being initiated?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_margin_per_contract = 12500\n    maintenance_margin_per_contract = 10000\n    number_of_contracts = 60\n    futures_initial_value = 1000\n    futures_closing_value = 995\n    multiplier = 250\n\n    # Calculate the total initial margin\n    total_initial_margin = initial_margin_per_contract * number_of_contracts\n\n    # Calculate the total value of the futures contracts at initiation\n    total_value_initiation = futures_initial_value * multiplier * number_of_contracts\n\n    # Calculate the total value of the futures contracts at closing\n    total_value_closing = futures_closing_value * multiplier * number_of_contracts\n\n    # Calculate the loss on the futures position\n    loss_on_position = total_value_initiation - total_value_closing\n\n    # Calculate the variation margin required\n    variation_margin = loss_on_position - total_initial_margin\n\n    # return answer\n    return variation_margin\n```"
        ]
    },
    {
        "tables": [
            "| Return, R     | Frequency |\n| ------------- |:---------:|\n| -5% up to 0%  | 1         |\n| 0% up to 5%   | 6         |\n| 5% up to 10%  | 4         |\n| 10% up to 15% | 3         |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-803",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided frequency distribution table, can you compute the sample size?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    frequency_1 = 1\n    frequency_2 = 6\n    frequency_3 = 4\n    frequency_4 = 3\n    \n    # Do math calculation to get the answer\n    sample_size = frequency_1 + frequency_2 + frequency_3 + frequency_4\n    \n    # return answer\n    return sample_size\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-804",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we aim to incorporate seasons such as spring, summer, autumn, and winter as independent variables, how many dummy variables are required to construct a regression model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    seasons = 4  # Number of seasons: spring, summer, autumn, winter\n    \n    # Do math calculation to get the answer\n    # To represent 'n' categories using dummy variables, we need 'n-1' dummy variables\n    dummy_variables = seasons - 1\n    \n    # return answer\n    return dummy_variables\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-805",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is interested in purchasing a 2-year bond with an annual coupon rate of 5%. The spot rates are listed as 4% for one year and 4.5% for two years. What is the cost of the bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.05  # Annual coupon rate of 5%\n    face_value = 1000  # Assuming the face value of the bond is $1000\n    spot_rate_1yr = 0.04  # Spot rate for one year is 4%\n    spot_rate_2yr = 0.045  # Spot rate for two years is 4.5%\n    \n    # Calculate the present value of the first year's coupon payment\n    pv_coupon_1yr = (coupon_rate * face_value) / (1 + spot_rate_1yr)\n    \n    # Calculate the present value of the second year's coupon payment and principal\n    pv_coupon_2yr = (coupon_rate * face_value) / ((1 + spot_rate_2yr) ** 2)\n    pv_principal_2yr = face_value / ((1 + spot_rate_2yr) ** 2)\n    \n    # Calculate the total present value of the bond\n    total_pv = pv_coupon_1yr + pv_coupon_2yr + pv_principal_2yr\n    \n    # return answer\n    return total_pv\n```"
        ]
    },
    {
        "tables": [
            "| Days to maturity | RMB Spot Interest Rates | USD Spot Interest Rates |\n|-----------------|------------------------|------------------------|\n| 90              | 1%                     | 0.4%                   |\n| 180             | 1.5%                   | 0.6%                   |\n| 270             | 2.0%                   | 0.8%                   |\n| 360             | 2.5%                   | 1.0%                   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-806",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive initiates a one-year currency swap which involves receiving RMB fixed and paying USD fixed. She utilizes the following data to determine the annualized fixed swap rate for USD: The annualized fixed swap rate for USD is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    days_to_maturity = [90, 180, 270, 360]\n    usd_spot_interest_rates = [0.4, 0.6, 0.8, 1.0]\n    \n    # Calculate the annualized fixed swap rate for USD\n    total_days = 360\n    total_interest = 0\n    \n    for i in range(len(days_to_maturity)):\n        total_interest += (usd_spot_interest_rates[i] / 100) * (days_to_maturity[i] / total_days)\n    \n    annualized_fixed_swap_rate_usd = total_interest * 100\n    \n    # return answer\n    return annualized_fixed_swap_rate_usd\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class     | Geometric Return (%) |\n|-----------------|----------------------|\n| Equities        | 8.0                  |\n| Corporate Bonds | 6.5                  |\n| Treasury bills  | 2.5                  |\n| Inflation       | 2.1                  |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-807",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the risk premium for business bonds a researcher notes in the following historic geometric returns?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    corporate_bonds_return = 6.5\n    treasury_bills_return = 2.5\n\n    # Do math calculation to get the answer\n    risk_premium = corporate_bonds_return - treasury_bills_return\n\n    # return answer\n    return risk_premium\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-808",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the bond-equivalent yield if the yield-to-maturity on a yearly-pay bond is 7.75%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_to_maturity = 0.0775  # 7.75% as a decimal\n    periods_per_year = 2  # Since it's a yearly-pay bond, we assume it's semi-annual\n    \n    # Do math calculation to get the answer\n    # Bond-equivalent yield formula for semi-annual compounding: BEY = (1 + YTM/2)^2 - 1\n    bond_equivalent_yield = (1 + yield_to_maturity / periods_per_year) ** periods_per_year - 1\n    \n    # Convert to percentage and round to 4 decimal places\n    bond_equivalent_yield = round(bond_equivalent_yield * 100, 4)\n    \n    # return answer\n    return bond_equivalent_yield\n```"
        ]
    },
    {
        "tables": [
            "|                                             |      |                                        |      |\n|---------------------------------------------|------|----------------------------------------|------|\n| **Exhibit 1 U.S.  Macroeconomic  Data**        |      |                                        |      |\n| Growth in real consumer spending           | 3.1% | Yield on  10-yr. U.S. Treasury bonds   | 2.7% |\n| Growth in potential labor force            | 1.9% | Growth in real investment spending     | 3.1% |\n| Growth in labor force participation        | -0.3%| Growth in total factor productivity    | 0.5% |\n| Growth in labor productivity               | 1.4% | Change in trade deficit                | -0.5%|"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-809",
        "python_solution": "",
        "ground_truth": null,
        "question": "After the financial crises starting in 2008, the squad deliberates on the potential long-term growth trajectory for the U.S. GDP in the wake of external shocks. Reports from several external sources are scrutinized and an agreed perception of the next decade's annual growth projections for the objects in Exhibit 1 is formed. Using the data from Exhibit 1 and adopting the simplest method to review the total trend growth for the U.S. GDP, the most probable projection for the GDP annual growth over the next decade (in %) would be:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    growth_real_consumer_spending = 3.1\n    growth_potential_labor_force = 1.9\n    growth_labor_force_participation = -0.3\n    growth_labor_productivity = 1.4\n    growth_real_investment_spending = 3.1\n    growth_total_factor_productivity = 0.5\n    change_trade_deficit = -0.5\n    \n    # Do math calculation to get the answer\n    # Simplest method to review the total trend growth for the U.S. GDP is to sum up the growth rates\n    total_growth = (growth_real_consumer_spending + growth_potential_labor_force + growth_labor_force_participation +\n                    growth_labor_productivity + growth_real_investment_spending + growth_total_factor_productivity +\n                    change_trade_deficit)\n    \n    # return answer\n    return total_growth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-810",
        "python_solution": "",
        "ground_truth": null,
        "question": "The likelihood of Occurrence X is 40%. The likelihood of Occurrence Y is 60%. The combined likelihood of XY is 40%. What is the likelihood (P) that X or Y happens, or both happen?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_X = 0.40\n    P_Y = 0.60\n    P_XY = 0.40\n    \n    # Do math calculation to get the answer\n    # Using the formula for the probability of either event or both: P(X or Y) = P(X) + P(Y) - P(XY)\n    P_X_or_Y = P_X + P_Y - P_XY\n    \n    # return answer\n    return P_X_or_Y\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-811",
        "python_solution": "",
        "ground_truth": null,
        "question": "What should the coupon rate be for the interest payment made on December 15 if Beta Co. issued a five-year semi-annual floating rate bond where the coupon rate is the six-month MRR plus 100 bps, with interest payments made every 15 June and 15 December, and which has a six-month MRR of 3% on June 15 and 3.2% on December 15?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    six_month_mrr_june = 0.03  # 3% on June 15\n    six_month_mrr_december = 0.032  # 3.2% on December 15\n    basis_points_addition = 0.01  # 100 basis points (1%)\n    \n    # Do math calculation to get the answer\n    # The coupon rate for December 15 is based on the six-month MRR on December 15\n    coupon_rate_december = six_month_mrr_december + basis_points_addition\n    \n    # return answer\n    return coupon_rate_december\n```"
        ]
    },
    {
        "tables": [
            "| Trades | Execution Price | Shares Executed |\n|--------|-----------------|-----------------|\n| Trade 1 | $40.75 | 10,000 |\n| Trade 2 | $41.25 | 30,000 |\n| Trade 3 | $41.50 | 20,000 |\n| Trade 4 | $41.75 | 30,000 |\n| Total | | 90,000 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-812",
        "python_solution": "",
        "ground_truth": null,
        "question": "On the following day, Thompson asks Green to go over their study on ABC Corp again. Green's study leads her to think that its stocks are underpriced. She gives her study findings to Thompson, and at 10 o'clock in the morning, he tells her to buy 120,000 shares at a price of $40.00 each using a limit order of $42.00. When the price is $40.50, the buy-side trader submits the order for market execution. The only cost involved is a share commission of $0.02. By the day's end, 90,000 shares of the order have been acquired, and ABC Corp concludes at $42.50. The trade was completed at an estimate price of $41.42. Exhibit 1 gives additional details about the completed trades. The arrival cost for buying the 90,000 shares of ABC Corp is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    execution_price = 41.42  # Estimated execution price\n    limit_order_price = 42.00  # Limit order price\n    market_execution_price = 40.50  # Market execution price when the order was submitted\n    commission_per_share = 0.02  # Commission per share\n    shares_acquired = 90000  # Number of shares acquired\n    \n    # Do math calculation to get the answer\n    # Arrival cost is the sum of the execution price and the commission per share\n    arrival_cost = execution_price + commission_per_share\n    \n    # return answer\n    return arrival_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-813",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we consider that the yearly continuously compounded spot rates are: Z1=5%, Z2=5.1%, Z3=5.2%, and a 1.5-year bond has a face value of $100 and a 6% semiannual coupon payment, how would you compute the bond price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Z1 = 0.05\n    Z2 = 0.051\n    Z3 = 0.052\n    face_value = 100\n    coupon_rate = 0.06\n    periods = 3  # 1.5 years * 2 semiannual periods per year\n    coupon_payment = face_value * coupon_rate / 2\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of each cash flow\n    pv_coupon1 = coupon_payment / (1 + Z1 / 2)\n    pv_coupon2 = coupon_payment / ((1 + Z2 / 2) ** 2)\n    pv_coupon3 = (coupon_payment + face_value) / ((1 + Z3 / 2) ** 3)\n    \n    # Sum the present values to get the bond price\n    bond_price = pv_coupon1 + pv_coupon2 + pv_coupon3\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-814",
        "python_solution": "",
        "ground_truth": null,
        "question": "A two-year outstanding US Treasury bond has a yield of 3.5%. The swap spread for a 2-year interest rate swap is said to be 80 bps. What does the fixed payer in a two-year interest rate swap have to pay?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    treasury_bond_yield = 3.5  # in percentage\n    swap_spread = 80  # in basis points\n    \n    # Convert basis points to percentage\n    swap_spread_percentage = swap_spread / 100\n    \n    # Do math calculation to get the answer\n    fixed_payment_rate = treasury_bond_yield + swap_spread_percentage\n    \n    # return answer\n    return fixed_payment_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-815",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the necessary rate of return is 4%, what is the intrinsic worth per share of a standing issue of 5% never-ending preferred stock with a face value of 100 and zero incorporated options?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    necessary_rate_of_return = 0.04\n    dividend_rate = 0.05\n    face_value = 100\n    \n    # Do math calculation to get the answer\n    intrinsic_worth_per_share = (dividend_rate * face_value) / necessary_rate_of_return\n    \n    # return answer\n    return intrinsic_worth_per_share\n```"
        ]
    },
    {
        "tables": [
            "| 10 | 20 | -8 | 2 | -9 | 5 | 0 | -8 | 3 | 21 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-816",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following set of 10 elements is chosen from a group. The variance of the group is unclear. What is the standard error of the average of the sample?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample = [10, 20, -8, 2, -9, 5, 0, -8, 3, 21]\n    n = len(sample)\n    \n    # Calculate the mean of the sample\n    mean = sum(sample) / n\n    \n    # Calculate the variance of the sample\n    variance = sum((x - mean) ** 2 for x in sample) / (n - 1)\n    \n    # Calculate the standard deviation of the sample\n    std_dev = variance ** 0.5\n    \n    # Calculate the standard error of the mean\n    std_error_mean = std_dev / (n ** 0.5)\n    \n    # return answer\n    return std_error_mean\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price(E) | End of Period Price(E) | Total Dividends(E) |\n|----------|------------------------------|------------------------|---------------------|\n| Able     | 10.00                        | 12.00                  | 0.75                |\n| Baker    | 20.00                        | 19.00                  | 1.00                |\n| Charlie  | 30.00                        | 30.00                  | 2.00                |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-817",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the following data for an equal-weighted index made up of assets X, Y, and Z: What is the price return of the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = [10.00, 20.00, 30.00]\n    end_prices = [12.00, 19.00, 30.00]\n    \n    # Calculate individual price returns\n    price_returns = [(end - begin) / begin for begin, end in zip(beginning_prices, end_prices)]\n    \n    # Calculate the average price return of the index (equal-weighted)\n    average_price_return = sum(price_returns) / len(price_returns)\n    \n    # return answer\n    return average_price_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-818",
        "python_solution": "",
        "ground_truth": null,
        "question": "John has determined that the DDM model is suitable to evaluate Corporation X. With the present dividend and the necessary rate of return of $0.5 per share and 10% respectively. He anticipates that the dividend will rise at 20% per annum for the first three years and then ascend at 5% annually into the unforeseeable future. What's the present value of Corporation X shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_dividend = 0.5  # Present dividend per share\n    required_rate_of_return = 0.10  # Required rate of return\n    growth_rate_first_three_years = 0.20  # Growth rate for the first three years\n    growth_rate_after_three_years = 0.05  # Growth rate after the first three years\n\n    # Calculate the dividends for the first three years\n    dividend_year_1 = present_dividend * (1 + growth_rate_first_three_years)\n    dividend_year_2 = dividend_year_1 * (1 + growth_rate_first_three_years)\n    dividend_year_3 = dividend_year_2 * (1 + growth_rate_first_three_years)\n\n    # Calculate the present value of the dividends for the first three years\n    pv_dividend_year_1 = dividend_year_1 / (1 + required_rate_of_return)\n    pv_dividend_year_2 = dividend_year_2 / (1 + required_rate_of_return)**2\n    pv_dividend_year_3 = dividend_year_3 / (1 + required_rate_of_return)**3\n\n    # Calculate the dividend from year 4 onwards using the Gordon Growth Model\n    dividend_year_4 = dividend_year_3 * (1 + growth_rate_after_three_years)\n    terminal_value = dividend_year_4 / (required_rate_of_return - growth_rate_after_three_years)\n    pv_terminal_value = terminal_value / (1 + required_rate_of_return)**3\n\n    # Calculate the total present value of the shares\n    total_present_value = pv_dividend_year_1 + pv_dividend_year_2 + pv_dividend_year_3 + pv_terminal_value\n\n    # return answer\n    return total_present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-819",
        "python_solution": "",
        "ground_truth": null,
        "question": "Sam, a market analyst at an investment bank, is conducting research on companies operating in the housing market sector. The leading company in this sector, named LoveYourHome, has recently released its annual financial report, revealing a basic EPS of $56, and a diluted EPS of $52. After examining the footnotes in LoveYourHome's financial report, Sam identifies a nonrecurring profit of $2 per share and a one-time restructuring cost of $3 per share, stemming from an acquisition in the previous year. Utilising a top-down analysis approach, Sam projects that LoveYourHome's basic EPS will rise to 76 in the upcoming year. The company's current share price is $72. Sam is keen to assess the relative worth within the housing sector using the trailing P/E ratio. Given the information provided, what is LoveYourHome's trailing Price/Earnings (P/E) ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    basic_eps = 56\n    nonrecurring_profit = 2\n    one_time_restructuring_cost = 3\n    current_share_price = 72\n    \n    # Adjust EPS for nonrecurring items\n    adjusted_eps = basic_eps - nonrecurring_profit + one_time_restructuring_cost\n    \n    # Calculate trailing P/E ratio\n    trailing_pe_ratio = current_share_price / adjusted_eps\n    \n    # return answer\n    return trailing_pe_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Component | Cost      | Useful Life |\n|-----------|-----------|-------------|\n| A         | $500,000  | 10 years    |\n| B         | $500,000  | 5 years     |"
        ],
        "topic": "Accounting",
        "question_id": "test-820",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business aiming to increase profits expended $1,000,000 on equipment with two crucial parts, as shown in the table. The equipment is projected to be functional for a total of 10 years, and the business applies the straight-line depreciation approach.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_A = 500000\n    useful_life_A = 10\n    cost_B = 500000\n    useful_life_B = 5\n    total_useful_life = 10\n\n    # Do math calculation to get the answer\n    # Calculate annual depreciation for each component\n    annual_depreciation_A = cost_A / useful_life_A\n    annual_depreciation_B = cost_B / useful_life_B\n\n    # Calculate total annual depreciation\n    total_annual_depreciation = annual_depreciation_A + annual_depreciation_B\n\n    # return answer\n    return total_annual_depreciation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-821",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier bought an annuity quite some time ago and is projected to get $1,200 annually for the following 40 years from this annuity. If the anticipated interest rate is 7%, what is the current worth of the cashflows the financier is set to receive?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_payment = 1200\n    interest_rate = 0.07\n    years = 40\n    \n    # Do math calculation to get the answer\n    # Using the formula for the present value of an annuity: PV = PMT * [(1 - (1 + r)^-n) / r]\n    present_value = annual_payment * ((1 - (1 + interest_rate) ** -years) / interest_rate)\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $ 500,000 |\n|---|---|\n| Volume Discounts | $ 20,000 |\n| Cash Received | $ 450,000 |\n| Cost of Goods Sold | $ 300,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-822",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under the accrual basis of accounting, what is the net revenue equivalent to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 500000\n    volume_discounts = 20000\n    \n    # Do math calculation to get the answer\n    net_revenue = revenue - volume_discounts\n    \n    # return answer\n    return net_revenue\n```"
        ]
    },
    {
        "tables": [
            "| Compensation of employees | 1,044,005 |\n|---------------------------|-----------|\n| Gross operating surplus | 518,979 |\n| Gross mixed income | 241,415 |\n| Net mixed income | 180,653 |\n| taxes less subsidies on production | 90,507 |\n| taxes less subsidies on products and imports | 139,443 |\n| Statistical discrepancy | 1,157 |\n| Net property income | 136,011 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-823",
        "python_solution": "",
        "ground_truth": null,
        "question": "Compute GDP using the income approach based on the information in the given table",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    compensation_of_employees = 1044005\n    gross_operating_surplus = 518979\n    gross_mixed_income = 241415\n    net_mixed_income = 180653\n    taxes_less_subsidies_on_production = 90507\n    taxes_less_subsidies_on_products_and_imports = 139443\n    statistical_discrepancy = 1157\n    net_property_income = 136011\n    \n    # Do math calculation to get the answer\n    # GDP using the income approach is calculated by summing up compensation of employees, gross operating surplus, gross mixed income, taxes less subsidies on production and products and imports, and net property income\n    gdp_income_approach = (compensation_of_employees + gross_operating_surplus + gross_mixed_income + taxes_less_subsidies_on_production + taxes_less_subsidies_on_products_and_imports + net_property_income)\n    \n    # return answer\n    return gdp_income_approach\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-824",
        "python_solution": "",
        "ground_truth": null,
        "question": "The fee structure of Cedar Ridge Associates, a fund of hedge funds, is as follows: 2/20 underlying fund fees with independently calculated incentive fees, Cedar Ridge's fees are calculated net of all underlying fund fees, a 1% management fee (based on year-end market value), a 10% incentive fee calculated net of the management fee, and there are no hurdle rate or high-water mark fee conditions for the fund and all underlying funds. In the most recent year, Cedar Ridge\u2019s fund value increased from $100 million to $133 million before any deductions for the fund's management and incentive fees or any underlying funds. Given this information, what is the cumulative fee earned by all the funds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_value = 100000000  # $100 million\n    final_value = 133000000  # $133 million\n    management_fee_rate = 0.01  # 1% management fee\n    incentive_fee_rate = 0.10  # 10% incentive fee\n    underlying_management_fee_rate = 0.02  # 2% underlying management fee\n    underlying_incentive_fee_rate = 0.20  # 20% underlying incentive fee\n\n    # Calculate underlying fund fees\n    underlying_management_fee = final_value * underlying_management_fee_rate\n    underlying_incentive_fee = (final_value - underlying_management_fee) * underlying_incentive_fee_rate\n    total_underlying_fees = underlying_management_fee + underlying_incentive_fee\n\n    # Calculate Cedar Ridge's fees net of underlying fees\n    net_value_after_underlying_fees = final_value - total_underlying_fees\n    management_fee = net_value_after_underlying_fees * management_fee_rate\n    incentive_fee = (net_value_after_underlying_fees - management_fee) * incentive_fee_rate\n\n    # Calculate cumulative fee earned by all funds\n    cumulative_fee = total_underlying_fees + management_fee + incentive_fee\n\n    # return answer\n    return cumulative_fee\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-825",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the monthly mortgage payment for a level-payment, fixed-rate mortgage with these features: term is 30 years, mortgage rate is 9.0%, servicing fee is 0.5%, and the initial mortgage loan balance is $150,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    term_years = 30\n    mortgage_rate = 0.09\n    servicing_fee = 0.005\n    initial_loan_balance = 150000\n    \n    # Convert annual rate to monthly rate\n    monthly_rate = mortgage_rate / 12\n    \n    # Include servicing fee in the monthly rate\n    effective_monthly_rate = monthly_rate + servicing_fee / 12\n    \n    # Calculate the number of monthly payments\n    number_of_payments = term_years * 12\n    \n    # Do math calculation to get the monthly payment using the formula for a fixed-rate mortgage\n    monthly_payment = initial_loan_balance * (effective_monthly_rate * (1 + effective_monthly_rate) ** number_of_payments) / ((1 + effective_monthly_rate) ** number_of_payments - 1)\n    \n    # return answer\n    return monthly_payment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-826",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond with a face value of $100 has a 15-year term, an annual payment rate of 10%, and a YTM of 12%, what is its cost?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    annual_payment_rate = 0.10\n    years_to_maturity = 15\n    yield_to_maturity = 0.12\n    \n    # Calculate the annual coupon payment\n    annual_coupon_payment = face_value * annual_payment_rate\n    \n    # Calculate the present value of the coupon payments\n    present_value_coupons = 0\n    for t in range(1, years_to_maturity + 1):\n        present_value_coupons += annual_coupon_payment / (1 + yield_to_maturity) ** t\n    \n    # Calculate the present value of the face value\n    present_value_face_value = face_value / (1 + yield_to_maturity) ** years_to_maturity\n    \n    # Calculate the total present value (cost) of the bond\n    bond_cost = present_value_coupons + present_value_face_value\n    \n    # return answer\n    return bond_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-827",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2017, the revenue for Fortune Enterprise was $5000, with a cost of goods sold standing at $900 and depreciation at $700. Given that the firm has an interest coverage ratio that's three times larger, what were its interest expenses in 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 5000\n    cost_of_goods_sold = 900\n    depreciation = 700\n    interest_coverage_ratio = 3\n    \n    # Calculate earnings before interest and taxes (EBIT)\n    ebit = revenue - cost_of_goods_sold - depreciation\n    \n    # Calculate interest expenses using the interest coverage ratio\n    interest_expenses = ebit / interest_coverage_ratio\n    \n    # return answer\n    return interest_expenses\n```"
        ]
    },
    {
        "tables": [
            "|                    | Income Statement |         | Balance Sheet Changes |      |\n|--------------------|-----------------:|---------|-----------------------|-----:|\n| Revenue            |         $ 56,800 | Decrease in accounts receivable | $1,324 |\n|                    |                  |         |                       |       |\n| Cost of goods sold |           27,264 | Decrease in inventory          |   501 |\n| Other operating expense           |   562 | Increase in prepaid expense   |     6 |\n| Depreciation expense          |  2,500 | Increase in accounts payable   | 1,063 |"
        ],
        "topic": "Accounting",
        "question_id": "test-828",
        "python_solution": "",
        "ground_truth": null,
        "question": "The subsequent data is derived from the financial statements of Sugarfall Corporation. How much cash did Sugarfall Corp. pay to its suppliers?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold = 27264\n    decrease_in_inventory = 501\n    increase_in_accounts_payable = 1063\n    \n    # Do math calculation to get the answer\n    cash_paid_to_suppliers = cost_of_goods_sold + decrease_in_inventory - increase_in_accounts_payable\n    \n    # return answer\n    return cash_paid_to_suppliers\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-829",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume that the earnings from a merger arbitrage operation conducted by XYZ Corporation results in $5 million if it's successful, but \u2014$20 million if it isn't. If the likelihood of success is 83%, what would be the expected payoff on this operation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    success_payoff = 5000000\n    failure_payoff = -20000000\n    success_probability = 0.83\n    failure_probability = 1 - success_probability\n    \n    # Do math calculation to get the answer\n    expected_payoff = (success_payoff * success_probability) + (failure_payoff * failure_probability)\n    \n    # return answer\n    return expected_payoff\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-830",
        "python_solution": "",
        "ground_truth": null,
        "question": "As a portfolio manager, Martin is thinking about including a 2-year bond with a 7% coupon rate and a par value of 100 in his investment portfolio. The bond's interest is paid yearly. Given the current 1-year and 2-year spot rates of 4% and 5% respectively, what is the bond's value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.07\n    par_value = 100\n    current_1_year_spot_rate = 0.04\n    current_2_year_spot_rate = 0.05\n    \n    # Calculate the present value of the first coupon payment\n    first_coupon_pv = (coupon_rate * par_value) / (1 + current_1_year_spot_rate)\n    \n    # Calculate the present value of the second coupon payment and principal repayment\n    second_coupon_and_principal_pv = ((coupon_rate * par_value) + par_value) / ((1 + current_2_year_spot_rate) ** 2)\n    \n    # Calculate the total present value of the bond\n    bond_value = first_coupon_pv + second_coupon_and_principal_pv\n    \n    # return answer\n    return bond_value\n```"
        ]
    },
    {
        "tables": [
            "|                       | 40 | 35 | 30 | 25 | 20 |\n|-----------------------|----|----|----|----|----|\n| 3-month call option price | 0.56 | 1.45 | 4.05 | 10.30 | 12.42 |\n| 3-month put option price | 9.56 | 5.20 | 2.78 | 1.56 | 0.72 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-831",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the Exhibit 1 Option Contract Pricing Details, what is the break-even price for an at-the-money (ATM) protective put strategy for Dropqik Corporation, where Justine Fisher, a client of Erica Taylor, holds a significant position and which is currently trading at $30.50 per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_stock_price = 30.50\n    atm_put_option_price = 2.78  # Corresponds to the strike price of $30, which is closest to the current stock price of $30.50\n    \n    # Do math calculation to get the answer\n    break_even_price = current_stock_price - atm_put_option_price\n    \n    # return answer\n    return break_even_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-832",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a living community, the landlords want to choose 3 out of 5 tenants to form a new landlords committee. How many possible scenarios can happen?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_tenants = 5\n    committee_size = 3\n    \n    # Do math calculation to get the answer\n    # Calculate the number of combinations using the combination formula C(n, k) = n! / (k! * (n-k)!)\n    from math import factorial\n    \n    def combination(n, k):\n        return factorial(n) // (factorial(k) * factorial(n - k))\n    \n    answer = combination(total_tenants, committee_size)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-833",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond's current value is $101.45, and the director predicts an increase to $103.28 should interest rates drop 0.25%, or a decrease to $100.81 should interest rates rise 0.25%, what is the bond's effective duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_value = 101.45\n    value_if_rates_drop = 103.28\n    value_if_rates_rise = 100.81\n    interest_rate_change = 0.0025  # 0.25% as a decimal\n    \n    # Do math calculation to get the answer\n    # Effective duration formula: (P_down - P_up) / (2 * P_0 * delta_r)\n    P_down = value_if_rates_rise\n    P_up = value_if_rates_drop\n    P_0 = current_value\n    delta_r = interest_rate_change\n    \n    effective_duration = (P_down - P_up) / (2 * P_0 * delta_r)\n    \n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [
            "| Quantity (unit) | Total Fixed Cost ($) | Total Variable Cost ($) |\n| --- | --- | --- |\n| 0 | 400 | 0 |\n| 1 | 400 | 100 |\n| 2 | 400 | 190 |\n| 3 | 400 | 275 |\n| 4 | 400 | 360 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-834",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a manufacturing company examines its cost structure, and the detailed data is provided in the accompanying table, what is the marginal cost if the production units are elevated from 3 to 4?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_variable_cost_3_units = 275\n    total_variable_cost_4_units = 360\n    \n    # Do math calculation to get the answer\n    marginal_cost = total_variable_cost_4_units - total_variable_cost_3_units\n    \n    # return answer\n    return marginal_cost\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| FCFE0  | $10 million  |\n| Growth rate of FCFE  | 2%  |\n| Risk free rate | 2.5%  |\n| Equity Risk Premium  | 4%  |\n| Size Premium  | 1.5%  |\n| Market value of debt | $4 million |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-835",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the provided data, determine the equity value using the CCM.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    FCFE0 = 10000000  # in dollars\n    growth_rate = 0.02  # 2%\n    risk_free_rate = 0.025  # 2.5%\n    equity_risk_premium = 0.04  # 4%\n    size_premium = 0.015  # 1.5%\n    market_value_of_debt = 4000000  # in dollars\n\n    # Calculate the required return on equity (Ke) using the Capital Asset Pricing Model (CAPM)\n    Ke = risk_free_rate + (equity_risk_premium + size_premium)\n\n    # Calculate the terminal value of FCFE using the Gordon Growth Model\n    terminal_value_FCFE = FCFE0 * (1 + growth_rate) / (Ke - growth_rate)\n\n    # Calculate the total equity value\n    total_equity_value = terminal_value_FCFE\n\n    # Subtract the market value of debt to get the equity value\n    equity_value = total_equity_value - market_value_of_debt\n\n    # return answer\n    return equity_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-836",
        "python_solution": "",
        "ground_truth": null,
        "question": "A yearly coupon bond with a yield-to-maturity rate of 7% has a price tag of 94.75 per 100 of par value, with a coupon rate standing at 5%. There are 3 years left until it matures. What is the Macaulay duration of this bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_to_maturity = 0.07\n    price = 94.75\n    coupon_rate = 0.05\n    par_value = 100\n    years_to_maturity = 3\n    \n    # Calculate the coupon payment\n    coupon_payment = coupon_rate * par_value\n    \n    # Calculate the present value of each cash flow\n    pv_cash_flows = []\n    for t in range(1, years_to_maturity + 1):\n        if t == years_to_maturity:\n            cash_flow = coupon_payment + par_value\n        else:\n            cash_flow = coupon_payment\n        pv_cash_flow = cash_flow / (1 + yield_to_maturity) ** t\n        pv_cash_flows.append(pv_cash_flow)\n    \n    # Calculate the weighted average of the present values\n    weighted_pv_cash_flows = []\n    for t in range(1, years_to_maturity + 1):\n        weighted_pv_cash_flow = t * pv_cash_flows[t - 1]\n        weighted_pv_cash_flows.append(weighted_pv_cash_flow)\n    \n    # Calculate the Macaulay duration\n    macaulay_duration = sum(weighted_pv_cash_flows) / price\n    \n    # return answer\n    return macaulay_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-837",
        "python_solution": "",
        "ground_truth": null,
        "question": "What are the odds that the returns from a portfolio with an average return rate of 8% and a standard deviation of 14% will range from 8% to 11%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    avg_return = 8\n    std_dev = 14\n    lower_bound = 8\n    upper_bound = 11\n    \n    # Import necessary library\n    from scipy.stats import norm\n    \n    # Calculate z-scores for the lower and upper bounds\n    z_lower = (lower_bound - avg_return) / std_dev\n    z_upper = (upper_bound - avg_return) / std_dev\n    \n    # Calculate the probability using the cumulative distribution function (CDF)\n    prob_lower = norm.cdf(z_lower)\n    prob_upper = norm.cdf(z_upper)\n    \n    # The probability that the returns will range from 8% to 11%\n    answer = prob_upper - prob_lower\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-838",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's say the present value (S0) of a stock that does not pay dividends is 100, and a put option for this stock has a strike price (X) of $95 with one year left until expiration. Now, a trader thinks that the share price will either rise by 10% or fall by 20%. Which of the subsequent computations of the worth of a put option is correct, presuming a 4% risk-free rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 100  # present value of the stock\n    X = 95   # strike price of the put option\n    u = 1.10  # up factor\n    d = 0.80  # down factor\n    r = 0.04  # risk-free rate\n    t = 1    # time to expiration in years\n\n    # Calculate the possible future stock prices\n    Su = S0 * u  # stock price if it goes up\n    Sd = S0 * d  # stock price if it goes down\n\n    # Calculate the put option values at expiration\n    Pu = max(0, X - Su)  # put option value if stock goes up\n    Pd = max(0, X - Sd)  # put option value if stock goes down\n\n    # Calculate the risk-neutral probabilities\n    q = (1 + r - d) / (u - d)\n    p = 1 - q\n\n    # Calculate the present value of the put option using the risk-neutral valuation\n    P0 = (q * Pu + p * Pd) / (1 + r)\n\n    # return answer\n    return P0\n```"
        ]
    },
    {
        "tables": [
            "|     |     | Coefficient |    | Standard Error | t-Statistic |\n|-----|-----|-------------|----|----------------|-------------|\n|     | Intercept | 0.0092 |    | 0.0087 | 1.0582 |\n|     | In Salest-1-In Salest-2 | -0.1279 |    | 0.1137 | -1.1252 |\n|     | In Salest-4-In Salest-5 | 0.7239 |    | 0.1093 | 6.6209 |\n|     | Most Recent Quarterly Sales Data (in billions) |  |    |  |  |\n|     | Dec 2015 (Salest-1) | $3.868 |    |  |  |\n|     | Sept 2015 (Salest-2) | $3.780 |    |  |  |\n|     | June 2015 (Salest-3) | $3.692 |    |  |  |\n|     | Mar 2015 (Salest-4) | $3.836 |    |  |  |\n|     | Dec 2014 (Salest-5) | $3.418 |    |  |  |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-839",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the regression output shown in the Exhibit, what is the predicted quarterly sales value for March 2016 if John is developing a model to predict future quarterly sales, and he starts by running this regression: ln Salest \u2013 ln Salest\u20131 = b0 + b1(ln Salest\u20131 \u2013 ln Salest\u20132) + b2(ln Salest\u20134 \u2013 ln Salest\u20135)+\u03b5t?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    b0 = 0.0092\n    b1 = -0.1279\n    b2 = 0.7239\n    \n    # Sales data in billions\n    Salest_1 = 3.868  # Dec 2015\n    Salest_2 = 3.780  # Sept 2015\n    Salest_4 = 3.836  # Mar 2015\n    Salest_5 = 3.418  # Dec 2014\n    \n    # Do math calculation to get the answer\n    # Calculate the natural logarithms of the sales values\n    ln_Salest_1 = math.log(Salest_1)\n    ln_Salest_2 = math.log(Salest_2)\n    ln_Salest_4 = math.log(Salest_4)\n    ln_Salest_5 = math.log(Salest_5)\n    \n    # Calculate the terms in the regression equation\n    term1 = b0\n    term2 = b1 * (ln_Salest_1 - ln_Salest_2)\n    term3 = b2 * (ln_Salest_4 - ln_Salest_5)\n    \n    # Calculate the predicted change in the natural logarithm of sales\n    ln_Salest_predicted_change = term1 + term2 + term3\n    \n    # Calculate the predicted natural logarithm of sales for March 2016\n    ln_Salest_predicted = ln_Salest_1 + ln_Salest_predicted_change\n    \n    # Convert the predicted natural logarithm of sales back to the sales value\n    Salest_predicted = math.exp(ln_Salest_predicted)\n    \n    # return answer\n    return Salest_predicted\n\nimport math\n```\n\nThis Python program calculates the predicted quarterly sales value for March 2016 based on the given regression model and sales data. It uses the coefficients from the regression output and the natural logarithms of the sales values to predict the future sales."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-840",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, Pinnacle Parcel sold items online on behalf of individuals under a consignment deal. Pinnacle would receive the goods from the owner, list them for online sale, and earn a 25 percent commission from any sold items. Pinnacle was responsible for collecting the full payment from the purchaser and would then pay the owner the remaining balance after deducting their commissions. If the items did not sell within 90 days, they would be returned to the owner. Throughout 2009, Pinnacle had the following records: The total sales price of items sold on consignment was \u20ac2,000,000. Pinnacle's commission on these items was \u20ac500,000 during 2009. What should Pinnacle declare as revenue in its 2009 income statement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_sales_price = 2000000\n    pinnacle_commission = 500000\n    \n    # Do math calculation to get the answer\n    # Pinnacle's revenue is the commission they earned\n    revenue = pinnacle_commission\n    \n    # return answer\n    return revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-841",
        "python_solution": "",
        "ground_truth": null,
        "question": "A valuer has been tasked with calculating the aggregated valuation discounts for a minor shareholding in a privately held firm. The valuer decided that a suitable control premium is 15 percent. A deduction due to the absence of marketability was approximated at 25 percent. In light of these parameters, what is the total discount?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    control_premium = 0.15\n    marketability_discount = 0.25\n    \n    # Do math calculation to get the answer\n    # The total discount is calculated by adding the control premium to the marketability discount\n    total_discount = control_premium + marketability_discount\n    \n    # return answer\n    return total_discount\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-842",
        "python_solution": "",
        "ground_truth": null,
        "question": "From the given data, what will be the other comprehensive income considering, foreign currency conversion benefits amounting to 4, unrealized depreciation on available-for-sale securities sitting at 2, unrealized depreciation on securities held until their maturity estimating 1, and actuarial profits observing 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    foreign_currency_conversion_benefits = 4\n    unrealized_depreciation_available_for_sale = 2\n    unrealized_depreciation_held_to_maturity = 1\n    actuarial_profits = 2\n    \n    # Do math calculation to get the answer\n    other_comprehensive_income = (foreign_currency_conversion_benefits\n                                 - unrealized_depreciation_available_for_sale\n                                 - unrealized_depreciation_held_to_maturity\n                                 + actuarial_profits)\n    \n    # return answer\n    return other_comprehensive_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-843",
        "python_solution": "",
        "ground_truth": null,
        "question": "Utilizing the given data to compute the total return on an equity share: Buying price: $20 Selling price: $28 Dividend received during the holding period: $1",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    buying_price = 20\n    selling_price = 28\n    dividend_received = 1\n    \n    # Do math calculation to get the answer\n    capital_gain = selling_price - buying_price\n    total_return = (capital_gain + dividend_received) / buying_price\n    \n    # return answer\n    return total_return\n```"
        ]
    },
    {
        "tables": [
            "|                                 |     |         |\n|---------------------------------|-----|---------|\n| Rate of return on 3-month Treasury bills  |     | 3.0%    |\n| Rate of return on 10-year Treasury bonds |     | 3.5%    |\n| Market risk premium                      |     | 6.0%    |\n| The company's equity beta               |     | 1.6     |\n| Dividend growth rate                    |     | 8.0%    |\n| Corporate tax rate                      |     | 35%     |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-844",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the percentage cost of equity for the organization using the CAPM approach and the collected data?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 3.0  # Rate of return on 3-month Treasury bills\n    market_risk_premium = 6.0  # Market risk premium\n    equity_beta = 1.6  # The company's equity beta\n    \n    # Do math calculation to get the answer\n    cost_of_equity = risk_free_rate + (equity_beta * market_risk_premium)\n    \n    # return answer\n    return cost_of_equity\n```"
        ]
    },
    {
        "tables": [
            "| Year | The return of this fund(%) |\n| ---- |------------------------ |\n| 2015 | 4.5                    |\n| 2014 | 3                      |\n| 2013 | 16                     |\n| 2012 | 20.1                   |\n| 2011 | -1                     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-845",
        "python_solution": "",
        "ground_truth": null,
        "question": "The annual return for a fund purchased by John is illustrated below: What will be the geometric mean of the fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [4.5, 3, 16, 20.1, -1]\n    \n    # Convert percentages to multipliers\n    multipliers = [1 + (r / 100) for r in returns]\n    \n    # Calculate the product of all multipliers\n    product = 1\n    for m in multipliers:\n        product *= m\n    \n    # Calculate the geometric mean\n    n = len(multipliers)\n    geometric_mean = product ** (1 / n)\n    \n    # Convert geometric mean back to percentage\n    geometric_mean_percentage = (geometric_mean - 1) * 100\n    \n    # return answer\n    return geometric_mean_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Time | Value |\n| --- | --- |\n| Time=0 | SO=80 |\n| Time=1 | Su=88 |\n| Time=1 | Sd=72 |\n| Time=2 | Suu=96.80 |\n| Time=2 | Sud,du=79.20 |\n| Time=2 | Sdd=64.80 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-846",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering a security's anticipated price fluctuation for the next two durations as follows: The starting price of the security is $80. There's a 75% chance of a rise in any given duration and a 25% chance of a decline in any given duration. Employing the binomial model, what are the chances that the security's value will stand at $79.20 after two durations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_up = 0.75  # Probability of an up move\n    p_down = 0.25  # Probability of a down move\n    \n    # We need to find the probability of reaching 79.20 after two durations\n    # The possible paths to reach 79.20 are:\n    # 1. Up in the first duration and down in the second duration (Su, Sd)\n    # 2. Down in the first duration and up in the second duration (Sd, Su)\n    \n    # Probability of each path\n    prob_path1 = p_up * p_down  # Up then Down\n    prob_path2 = p_down * p_up  # Down then Up\n    \n    # Total probability\n    total_probability = prob_path1 + prob_path2\n    \n    # return answer\n    return total_probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-847",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment firm possesses the subsequent fee structure: 2% Annual management fee dependent on year-end AUM, 20% Incentive fee, and a 4% Hurdle rate prior to starting incentive fee collection. The current high-water mark is at $610 million. The firm's value was $583.1 million at start of the year and reached $642 million before the fees deduction after a year. What would be the net return to an investor for this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_value = 583.1  # in million dollars\n    final_value_before_fees = 642  # in million dollars\n    high_water_mark = 610  # in million dollars\n    annual_management_fee_rate = 0.02\n    incentive_fee_rate = 0.20\n    hurdle_rate = 0.04\n\n    # Calculate the performance for the year before fees\n    performance_before_fees = final_value_before_fees - initial_value\n\n    # Check if the performance meets the hurdle rate and high-water mark\n    if performance_before_fees > 0 and final_value_before_fees > high_water_mark:\n        # Calculate the hurdle rate return\n        hurdle_return = initial_value * hurdle_rate\n        # Calculate the amount above the hurdle rate\n        above_hurdle = performance_before_fees - hurdle_return\n        # Calculate the incentive fee\n        incentive_fee = above_hurdle * incentive_fee_rate\n    else:\n        incentive_fee = 0\n\n    # Calculate the final value after incentive fee\n    final_value_after_incentive_fee = final_value_before_fees - incentive_fee\n\n    # Calculate the annual management fee\n    annual_management_fee = final_value_after_incentive_fee * annual_management_fee_rate\n\n    # Calculate the final value after all fees\n    final_value_after_all_fees = final_value_after_incentive_fee - annual_management_fee\n\n    # Calculate the net return to the investor\n    net_return = final_value_after_all_fees - initial_value\n\n    # return answer\n    return net_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-848",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is an entrepreneur who sells socks in the nearby marketplace. If he sells 100 pairs of socks, he generates an earning of $500. However, if he managed to sell 120 pairs, his overall income would be $590. What is the marginal revenue for socks if the market capacity is 120 pairs?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_pairs = 100\n    initial_earning = 500\n    increased_pairs = 120\n    increased_earning = 590\n    \n    # Do math calculation to get the answer\n    initial_revenue_per_pair = initial_earning / initial_pairs\n    increased_revenue_per_pair = increased_earning / increased_pairs\n    \n    marginal_revenue = increased_revenue_per_pair - initial_revenue_per_pair\n    \n    # return answer\n    return marginal_revenue\n```"
        ]
    },
    {
        "tables": [
            "| Year 1 | 15.25% | Year 6 | 30.79% |\n|--------|--------|--------|--------|\n| Year 2 | -10.02% | Year 7 | 12.34% |\n| Year 3 | 20.65% | Year 8 | -5.02% |\n| Year 4 | 9.57% | Year 9 | 16.54% |\n| Year 5 | -40.33% | Year 10 | 27.37% |"
        ],
        "topic": "Accounting",
        "question_id": "test-849",
        "python_solution": "",
        "ground_truth": null,
        "question": "What does the exhibit indicate as the return for the fourth quintile for the MSCI World Index over a span of 10 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [15.25, -10.02, 20.65, 9.57, -40.33, 30.79, 12.34, -5.02, 16.54, 27.37]\n    \n    # Convert percentages to decimal form\n    returns_decimal = [r / 100 for r in returns]\n    \n    # Calculate the cumulative product of returns\n    cumulative_product = 1\n    for r in returns_decimal:\n        cumulative_product *= (1 + r)\n    \n    # Calculate the geometric mean return\n    geometric_mean_return = (cumulative_product ** (1 / len(returns_decimal))) - 1\n    \n    # Convert geometric mean return back to percentage\n    geometric_mean_return_percentage = geometric_mean_return * 100\n    \n    # return answer\n    return geometric_mean_return_percentage\n```\n\nThis program calculates the geometric mean return of the MSCI World Index over a span of 10 years based on the provided annual returns. The geometric mean return is a measure of the average annual return taking into account the compounding effect of returns over time. The result is then converted back to a percentage for easier interpretation."
        ]
    },
    {
        "tables": [
            "| Transaction  Amount | (US$ millions) |\n|---------------------|----------------|\n| Bought raw material from Indonesia | 50.0 |\n| Sold food products to France | 65.0 |\n| Received royalty fees from its branch in the United Kingdom | 0.5 |\n| Donated to a charitable institution in Africa | 0.1 |\n| Borrowed from a bank in Singapore | 2.0 |\n| Paid legal fees to its German legal consultant company | 1.2 |\n| Received interest coupon from its investment in Eurobonds issued in Luxembourg | 0.8 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-850",
        "python_solution": "",
        "ground_truth": null,
        "question": "Over the past month, a food corporation based in the US had these transactions: How much is the US current account expected to increase by due to these transactions?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bought_raw_material = 50.0  # Import, decreases current account\n    sold_food_products = 65.0  # Export, increases current account\n    received_royalty_fees = 0.5  # Income from abroad, increases current account\n    donated_to_charity = 0.1  # Donation, decreases current account\n    borrowed_from_bank = 2.0  # Financial account, not current account\n    paid_legal_fees = 1.2  # Service payment abroad, decreases current account\n    received_interest_coupon = 0.8  # Investment income, increases current account\n    \n    # Do math calculation to get the answer\n    # Sum of exports and income from abroad minus imports and payments abroad\n    current_account_increase = (sold_food_products + received_royalty_fees + received_interest_coupon) - (bought_raw_material + donated_to_charity + paid_legal_fees)\n    \n    # return answer\n    return current_account_increase\n```\n\nThis program calculates the expected increase in the US current account due to the transactions listed, focusing on the balance of trade in goods and services, investment income, and unilateral transfers."
        ]
    },
    {
        "tables": [
            "| Accounts payable | 3,800 |\n|------------------|-------|\n| Long-term debt | 5,590 |\n| Other long-term liabilities | 800 |\n| Common stock | 1,200 |\n| Retained earnings | 1,810 |"
        ],
        "topic": "Accounting",
        "question_id": "test-851",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the debt-to-capital ratio of the firm as per the latest balance sheet showcasing the following values (NZ$ thousands)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    accounts_payable = 3800\n    long_term_debt = 5590\n    other_long_term_liabilities = 800\n    common_stock = 1200\n    retained_earnings = 1810\n    \n    # Calculate total debt and total capital\n    total_debt = accounts_payable + long_term_debt + other_long_term_liabilities\n    total_capital = total_debt + common_stock + retained_earnings\n    \n    # Calculate debt-to-capital ratio\n    debt_to_capital_ratio = total_debt / total_capital\n    \n    # Return answer\n    return debt_to_capital_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-852",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume you simulate the price path of stock ZYX using a geometric Brownian motion model with drift \u03bc = 0, volatility \u03c3 = 0.14, and time step \u0394 = 0.01. Let StS_t St\u200b be the price of the stock at time t. If S0S_0S0\u200b = 100, and the first two simulated (randomly chosen) standard normal variables are \u03b51 \\varepsilon_1 \u03b51\u200b = 0.263 and \u03b52 \\varepsilon_2 \u03b52\u200b= -0.475, what is the simulated stock price after the second step?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 100  # Initial stock price\n    mu = 0  # Drift\n    sigma = 0.14  # Volatility\n    delta_t = 0.01  # Time step\n    epsilon1 = 0.263  # First standard normal variable\n    epsilon2 = -0.475  # Second standard normal variable\n    \n    # Do math calculation to get the answer\n    # Calculate the stock price after the first step\n    S1 = S0 * (1 + mu * delta_t + sigma * epsilon1 * (delta_t ** 0.5))\n    \n    # Calculate the stock price after the second step\n    S2 = S1 * (1 + mu * delta_t + sigma * epsilon2 * (delta_t ** 0.5))\n    \n    # return answer\n    return S2\n```"
        ]
    },
    {
        "tables": [
            "|                          |                       |\n|--------------------------|-----------------------|\n| Demand curve             | P = 150-5xQ           |\n| Total revenue curve      | TR =150xQ-5xQ2        |\n| Marginal revenue curve   | MR =150-10xQ          |\n| Total cost curve         | TC = Q^3-10xQ^2+73xQ+120 |\n| Average cost curve       | AC = Q-10xQ +73 +120/Q  |\n| Marginal cost curve      | MC=3xQ^2-20xQ+73      |\n|                          | P: price per unit Q: cost per unit    |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-853",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the output, in units, that maximizes profit for this organization, based on the developed equations provided for the business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    # We need to find the quantity Q that maximizes profit, which is where MR = MC\n    \n    # Define the marginal revenue and marginal cost functions\n    def MR(Q):\n        return 150 - 10 * Q\n    \n    def MC(Q):\n        return 3 * Q**2 - 20 * Q + 73\n    \n    # Do math calculation to get the answer\n    # We need to solve for Q where MR(Q) = MC(Q)\n    # This is a non-linear equation, so we will use a numerical method to approximate the solution\n    \n    # Initial guess for Q\n    Q = 1\n    \n    # Define a function to minimize the difference between MR and MC\n    def diff(Q):\n        return MR(Q) - MC(Q)\n    \n    # Use a numerical method to find the root of the diff function\n    from scipy.optimize import fsolve\n    Q_optimal = fsolve(diff, Q)[0]\n    \n    # return answer\n    return Q_optimal\n```\n\nThis program defines the marginal revenue (MR) and marginal cost (MC) functions based on the given equations. It then uses a numerical method (fsolve from the scipy library) to find the quantity \\( Q \\) where MR equals MC, which maximizes the profit. The initial guess for \\( Q \\) is set to 1, and the program returns the optimal quantity \\( Q \\)."
        ]
    },
    {
        "tables": [
            "|  X  | Y=5 | Y=2 | Y=-3 |\n|-----|-----|-----|------|\n| -2  | 0.2 |  0  |   0   |\n|  1  |  0  | 0.6 |   0   |\n|  4  |  0  |  0  |  0.2  |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-854",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided chart, what is the variance of Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = [5, 2, -3]\n    frequencies = [\n        [0.2, 0, 0],\n        [0, 0.6, 0],\n        [0, 0, 0.2]\n    ]\n    \n    # Calculate the mean of Y\n    mean_y = sum(p * sum(frequencies[i][j] for i in range(3)) for j, p in enumerate(probabilities))\n    \n    # Calculate the variance of Y\n    variance_y = sum((p - mean_y) ** 2 * sum(frequencies[i][j] for i in range(3)) for j, p in enumerate(probabilities))\n    \n    # return answer\n    return variance_y\n```"
        ]
    },
    {
        "tables": [
            "| Par Value         | Bond Price | Coupon | Modified Duration | Effective Duration | Convexity |\n|-------------------|------------|--------|-------------------|--------------------|-----------|\n| $25million        | 105        | 8%     | 7.9               | 8                  | 122       |\n| $25million        | 100        | 7%     | 8.5               | 8.5                | 154       |\n| $20million        | 95         | 5%     | 6.3               | 2                  | 87        |\n| $30million        | 87         | 0%     | 10.2              | 10.2               | 32        |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-855",
        "python_solution": "",
        "ground_truth": null,
        "question": "Referring to the table with pertinent data about four bonds in a portfolio, what is the price fluctuation for the bond with an 8% interest rate using effective duration, if its YTM drops by 10 basis points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    effective_duration = 8  # Effective duration for the bond with 8% interest rate\n    yield_change = -0.001  # Yield to Maturity (YTM) drops by 10 basis points (0.1%)\n    bond_price = 105  # Bond price for the bond with 8% interest rate\n    \n    # Do math calculation to get the answer\n    price_fluctuation = effective_duration * yield_change * bond_price\n    \n    # return answer\n    return price_fluctuation\n```\n\nThis program calculates the price fluctuation for the bond with an 8% interest rate when its Yield to Maturity (YTM) drops by 10 basis points, using the effective duration method."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-856",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the 2017 annual report data from company B, what is the debt/capital ratio of company B? Given Depreciation and amortization: $265 million, Total assets: $11,324 million, Total debt: $1,756 million, and Shareholders' equity: $5,217 million.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt = 1756  # in million dollars\n    shareholders_equity = 5217  # in million dollars\n    \n    # Do math calculation to get the answer\n    total_capital = total_debt + shareholders_equity\n    debt_capital_ratio = total_debt / total_capital\n    \n    # return answer\n    return debt_capital_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-857",
        "python_solution": "",
        "ground_truth": null,
        "question": "A futures contract for a stock index has two months left until it matures. The annual risk-free rate, when compounded continuously, is 0.25%, while the dividend yield on the stock index, also compounded continuously, is 0.8%. If the index is currently at 1,350, what would be the no-arbitrage futures price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 1350  # Current index value\n    r = 0.0025  # Annual risk-free rate, compounded continuously\n    q = 0.008  # Dividend yield, compounded continuously\n    T = 2 / 12  # Time to maturity in years (2 months)\n\n    # Do math calculation to get the answer\n    import math\n    F = S * math.exp((r - q) * T)\n\n    # return answer\n    return F\n```"
        ]
    },
    {
        "tables": [
            "|            |                |\n|------------|----------------|\n| Table1: Forward Rates | |\n| Maturity   | Forward Points |\n| Three months | 5.3/6.1        |\n| Six months | 7.8/8.9        |\n| 90-Day Libor | |\n| Currency   | Annualized Rate|\n| GBP        | 0.60%          |\n| USD        | 0.45%          |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-858",
        "python_solution": "",
        "ground_truth": null,
        "question": "The American company named BBQ Company has exported steel to an English firm and is expected to receive payment of 3,600,000 GBP in six months, which the firm will then convert into dollars. To protect against currency risk, BBQ Company decided to enter into a 6 month forward contract to sell GBP at 1.5512USD/GBP. After three months have passed, now, the spot exchange market rate is 1.5500 USD/GBP for bid and 1.5505 for ask. Given the information on the spot exchange market rate, forward rates, and the 90-Day Libor, what is the mark-to-market value for BBQ Company's forward position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_forward_rate = 1.5512  # USD/GBP\n    current_spot_rate_bid = 1.5500  # USD/GBP\n    current_spot_rate_ask = 1.5505  # USD/GBP\n    notional_amount = 3600000  # GBP\n    three_month_libor_gbp = 0.60 / 100  # Annualized rate\n    three_month_libor_usd = 0.45 / 100  # Annualized rate\n    time_to_maturity = 3 / 12  # in years\n\n    # Calculate the discount factors for GBP and USD\n    discount_factor_gbp = 1 / (1 + three_month_libor_gbp * time_to_maturity)\n    discount_factor_usd = 1 / (1 + three_month_libor_usd * time_to_maturity)\n\n    # Calculate the mark-to-market value of the forward contract\n    # Using the bid rate for selling GBP\n    forward_mtm_value = (current_spot_rate_bid - initial_forward_rate) * notional_amount * discount_factor_gbp\n\n    # Convert the mark-to-market value to USD\n    forward_mtm_value_usd = forward_mtm_value * discount_factor_usd\n\n    # return answer\n    return forward_mtm_value_usd\n```\n\nThis Python program calculates the mark-to-market value of BBQ Company's forward position after three months, taking into account the current spot rates, the initial forward rate, and the 90-Day Libor rates for both GBP and USD. The result is expressed in USD."
        ]
    },
    {
        "tables": [
            "| Account Name                              | Amount ($ billions) |\n| ---------------------------------------- | ------------------- |\n| Personal income                          | 2,456               |\n| Personal disposable income               | 1,930               |\n| Government spending                      | 666                 |\n| Government fixed investment              | 118                 |\n| Business gross fixed investment          | 538                 |\n| Government transfer payments to consumers| 348                 |\n| Total domestic savings                   | 638                 |\n| Tax revenue other than from households   | 440                 |\n| Change in inventories                    | -16                 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-859",
        "python_solution": "",
        "ground_truth": null,
        "question": "Chosen data is extracted from the GDP statistics of a fictitious nation. What is the trade shortfall in $ trillions for this nation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    personal_income = 2456  # in $ billions\n    personal_disposable_income = 1930  # in $ billions\n    government_spending = 666  # in $ billions\n    government_fixed_investment = 118  # in $ billions\n    business_gross_fixed_investment = 538  # in $ billions\n    government_transfer_payments = 348  # in $ billions\n    total_domestic_savings = 638  # in $ billions\n    tax_revenue_other_than_households = 440  # in $ billions\n    change_in_inventories = -16  # in $ billions\n\n    # Calculate GDP using the expenditure approach\n    GDP = personal_income + government_spending + government_fixed_investment + business_gross_fixed_investment + government_transfer_payments + change_in_inventories\n\n    # Calculate net exports (X - M) where X is exports and M is imports\n    # Assuming net exports is the difference between GDP and the sum of domestic expenditures and savings\n    net_exports = GDP - (personal_disposable_income + total_domestic_savings + tax_revenue_other_than_households)\n\n    # Calculate trade shortfall (negative net exports)\n    trade_shortfall = -net_exports\n\n    # Convert trade shortfall to $ trillions\n    trade_shortfall_trillions = trade_shortfall / 1000\n\n    # return answer\n    return trade_shortfall_trillions\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-860",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Chief Vice President of XY investment requests John to apply the market approach to assessment prioritizing the guideline transactions methodology. John states that the control premium paid for the most comparable guideline company used for the evaluation implies a lack of control discount of 15 percent. The discount for absence of marketability was assessed at 20 percent. What is the cumulative discount for both control and marketability?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    control_discount = 0.15\n    marketability_discount = 0.20\n    \n    # Do math calculation to get the answer\n    cumulative_discount = control_discount + marketability_discount - (control_discount * marketability_discount)\n    \n    # return answer\n    return cumulative_discount\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-861",
        "python_solution": "",
        "ground_truth": null,
        "question": "In an economy, there exist two firms, Firm X and Firm Y. The default rate for Firm X stands at 10%, while for Firm Y, it is 20%. Presuming defaults for both firms happen independently, what is the likelihood that either Firm X or Firm Y defaults?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    default_rate_X = 0.10  # 10% default rate for Firm X\n    default_rate_Y = 0.20  # 20% default rate for Firm Y\n    \n    # Do math calculation to get the answer\n    # The probability that either Firm X or Firm Y defaults is calculated using the formula:\n    # P(X or Y) = P(X) + P(Y) - P(X and Y)\n    # Since defaults are independent, P(X and Y) = P(X) * P(Y)\n    probability_X_or_Y = default_rate_X + default_rate_Y - (default_rate_X * default_rate_Y)\n    \n    # return answer\n    return probability_X_or_Y\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Coupon Rate | Time-to-Maturity | Spot Rates |\n|------|-------------|------------------|------------|\n| X    | 8%          | 3 years          | 8%         |\n| Y    | 7%          | 3 years          | 9%         |\n| Z    | 6%          | 3 years          | 10%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-862",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the same sequence of spot rates, what is the cost of Bond X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate_x = 0.08  # 8%\n    time_to_maturity_x = 3  # 3 years\n    spot_rate_x = 0.08  # 8%\n    face_value = 1000  # Assuming a face value of $1000 for simplicity\n    \n    # Calculate the present value of each coupon payment and the face value at maturity\n    coupon_payment = face_value * coupon_rate_x\n    pv_coupons = sum([coupon_payment / (1 + spot_rate_x) ** t for t in range(1, time_to_maturity_x + 1)])\n    pv_face_value = face_value / (1 + spot_rate_x) ** time_to_maturity_x\n    \n    # Calculate the total present value (cost) of the bond\n    cost_of_bond_x = pv_coupons + pv_face_value\n    \n    # return answer\n    return cost_of_bond_x\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-863",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Greenleaf company employs an exponentially weighted moving average model (EWMA) to predict the daily volatility of a stock. With a decay factor of 0.85, the latest estimate for daily volatility sits at 2.5%. If the stock closed at $35 yesterday and stands at $33 today, assuming we use continuously compounded returns, what would be the revised estimate of volatility?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    decay_factor = 0.85\n    current_volatility = 0.025  # 2.5%\n    price_yesterday = 35\n    price_today = 33\n    \n    # Calculate the continuously compounded return\n    log_return = math.log(price_today / price_yesterday)\n    \n    # Calculate the squared return\n    squared_return = log_return ** 2\n    \n    # Update the volatility using the EWMA formula\n    new_volatility = math.sqrt(decay_factor * current_volatility ** 2 + (1 - decay_factor) * squared_return)\n    \n    # return answer\n    return new_volatility\n```\n\nThis program calculates the revised estimate of volatility using the exponentially weighted moving average model (EWMA) with a given decay factor and the latest stock prices. The continuously compounded return is calculated and used to update the volatility estimate."
        ]
    },
    {
        "tables": [
            "\n|                | Coefficient | Standard Error |\n|----------------|-------------|----------------|\n| Intercept      | 0.2248      |                |\n| Sizei          | -0.012      |                |\n| D/Ei           | -0.0172     | 0.00986        |\n|                |             |                |\n| **ANOVA**      | **Degrees of freedom** | **Sum of squares** |\n| Regression     | 2           | 0.0960         |\n| Residual       | 69          | 0.5704         |\n\nNote: Sizei= In (market capitalization)\n"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-864",
        "python_solution": "",
        "ground_truth": null,
        "question": "An analyst with an investment management firm named James Collins is examining the consequences of leverage on yearly ROE in the company's Eurozone equities fund (\"the fund\"). He gathers data on the 72 stocks in the fund, taking company size as an independent variable. The results of estimating the model Ri = b0 + b1(Sizei) + b2(D/Ei) + \u03b5\u03b9 are shown in Exhibit 1. Collins compares the projections of his model to the actual ROE for two portfolio stocks, X and Y, both with identical debt ratios but with market capitalizations of EUR 100 million and 200 million respectively. According to Collins' regression analysis, how much higher is the ROE for company X than for company Y (in percentage points)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = 0.2248\n    size_coefficient = -0.012\n    d_e_coefficient = -0.0172\n    \n    # Market capitalizations of companies X and Y\n    size_x = 100  # in millions of EUR\n    size_y = 200  # in millions of EUR\n    \n    # Calculate the ROE for both companies using the regression model\n    roe_x = intercept + size_coefficient * size_x + d_e_coefficient * 1  # assuming debt ratio is 1 for both\n    roe_y = intercept + size_coefficient * size_y + d_e_coefficient * 1  # assuming debt ratio is 1 for both\n    \n    # Calculate the difference in ROE between company X and company Y\n    roe_difference = roe_x - roe_y\n    \n    # Return the answer in percentage points\n    return roe_difference * 100\n\n# Example usage:\n# print(solution())\n```\n\nThis Python program calculates the difference in ROE between two companies, X and Y, based on their market capitalizations and assuming identical debt ratios. The difference is then returned in percentage points."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-865",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming John Smith has short-sold 100 shares of Mega Marts at a rate of $42 for each share and concurrently placed a \"good-till-cancelled, stop 50, limit 55 buy\" order, which would be executed once the stipulated stop condition is met, what is the highest potential loss Smith may incur, ignoring transaction expenses?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    short_sold_shares = 100\n    short_sell_price = 42\n    stop_price = 50\n    limit_buy_price = 55\n    \n    # Calculate the potential loss per share\n    potential_loss_per_share = limit_buy_price - short_sell_price\n    \n    # Calculate the total potential loss\n    total_potential_loss = potential_loss_per_share * short_sold_shares\n    \n    # return answer\n    return total_potential_loss\n```"
        ]
    },
    {
        "tables": [
            "| Par value of preferred stock offered at a 6% dividend rate | 100  |\n|---------------------------------------------------|------|\n| Company's sustainable growth rate                 | 5%   |\n| Yield on comparable preferred stock issues        | 11.5%|\n| Investor's marginal tax rate                      | 30%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-866",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the calculated worth of the preferred shares of the corporation, based on the data collected by a shareholder?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    dividend_rate = 0.06\n    yield_on_comparable = 0.115\n    marginal_tax_rate = 0.30\n    \n    # Do math calculation to get the answer\n    # Calculate the annual dividend\n    annual_dividend = par_value * dividend_rate\n    \n    # Calculate the worth of the preferred shares\n    # Adjust for the investor's marginal tax rate\n    net_dividend_yield = yield_on_comparable * (1 - marginal_tax_rate)\n    worth_of_shares = annual_dividend / net_dividend_yield\n    \n    # return answer\n    return worth_of_shares\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-867",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following is the demand function for smartphones: QDmobile=10,000-2Pmobile+0.05income+2Pfixed-linetelephone-5Pwireless. As of now, a smartphone is priced at 3,000 RMB, while a landline and wireless solutions are priced at 1500 RMB and 500 RMB, respectively. With an assumption that income is 10,000 RMB, what would be the respective income elasticity of demand for a smartphone?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_mobile = 3000\n    income = 10000\n    P_fixed_line_telephone = 1500\n    P_wireless = 500\n    \n    # Calculate the quantity demanded for smartphones\n    QD_mobile = 10000 - 2 * P_mobile + 0.05 * income + 2 * P_fixed_line_telephone - 5 * P_wireless\n    \n    # Calculate the partial derivative of QD_mobile with respect to income\n    dQD_mobile_dIncome = 0.05\n    \n    # Calculate the income elasticity of demand\n    income_elasticity = (dQD_mobile_dIncome * income) / QD_mobile\n    \n    # return answer\n    return income_elasticity\n```"
        ]
    },
    {
        "tables": [
            "| Magnitude of the Parallel Shift in the Benchmark Yield Curve | +20bps | -20bps |\n|-------------------------------------------------------------|--------|--------|\n| Full Price of the Bond (% of par)                           | 100.478| 101.238|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-868",
        "python_solution": "",
        "ground_truth": null,
        "question": "The SW bond offers a 4% annual coupon and matures in three years. It's a callable bond that could be exercised at par at the conclusion of years 1 and 2. In calculating and assessing SW's bonds, Huang employs a projected interest rate volatility of 15% and develops the binomial interest rate tree as outlined in the Exhibit below. Green, a lead analyst, instructs Huang to determine the impact of a 20 bps parallel shift of the benchmark yield curve on the price of this callable bond. What does Huang's computations reveal in the table below about the effective duration of SW's callable bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 100.478  # Full price of the bond at current yield curve\n    price_up_20bps = 100.478  # Full price of the bond with a +20bps shift\n    price_down_20bps = 101.238  # Full price of the bond with a -20bps shift\n    shift_bps = 20  # Shift in basis points\n\n    # Do math calculation to get the answer\n    # Effective duration formula for a callable bond\n    effective_duration = (price_down_20bps - price_up_20bps) / (2 * initial_price * (shift_bps / 10000))\n\n    # return answer\n    return effective_duration\n```\n\nThis Python program calculates the effective duration of the SW callable bond based on the provided prices at different yield curve shifts. The effective duration is a measure of the sensitivity of a bond's price to a change in interest rates, taking into account the bond's callability."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-869",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a PE fund has a total committed capital of $100 million, and the cumulative paid-in capital by the end of the most recent year was $90 million, with cumulative distributions tallying up to $30 million. Additionally, the end-of-year NAV, taking into consideration the balance before and after distributions, stood at $160 million and $130 million respectively. Moreover, the estimated NAV prior to distributions for the ensuing year is projected to be $250 million and the carried interest rate stands at 20%. Based on these financial figures of the PE fund, what was the TVPI (Total Value to Paid-In Capital) ratio at the close of the most recent year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    committed_capital = 100000000\n    paid_in_capital = 90000000\n    cumulative_distributions = 30000000\n    end_of_year_NAV_before_distributions = 160000000\n    end_of_year_NAV_after_distributions = 130000000\n    estimated_NAV_next_year_before_distributions = 250000000\n    carried_interest_rate = 0.20\n\n    # Do math calculation to get the answer\n    # Total Value (TV) is the sum of cumulative distributions and the end-of-year NAV after distributions\n    total_value = cumulative_distributions + end_of_year_NAV_after_distributions\n\n    # TVPI (Total Value to Paid-In Capital) ratio is the Total Value divided by the Paid-In Capital\n    tvpi_ratio = total_value / paid_in_capital\n\n    # return answer\n    return tvpi_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-870",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond provides a yearly coupon rate of 5%, paying interest every six months, and it matures in seven years, what would be the bond's price per 100 of par value, given the market discount rate of 3%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.05\n    discount_rate = 0.03\n    maturity_years = 7\n    par_value = 100\n    payment_frequency = 2  # semi-annual payments\n\n    # Calculate the semi-annual coupon payment\n    semi_annual_coupon = (coupon_rate / payment_frequency) * par_value\n\n    # Calculate the number of periods\n    periods = maturity_years * payment_frequency\n\n    # Initialize the present value of the bond\n    bond_price = 0\n\n    # Calculate the present value of each coupon payment and add to bond_price\n    for i in range(1, periods + 1):\n        bond_price += semi_annual_coupon / ((1 + discount_rate / payment_frequency) ** i)\n\n    # Calculate the present value of the par value at maturity and add to bond_price\n    bond_price += par_value / ((1 + discount_rate / payment_frequency) ** periods)\n\n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-871",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jane Doe possesses a spreadsheet comprised of 108 monthly returns for shares in the ABC Company. She constructs a software program that employs bootstrap resampling to generate 200 resamples of the ABC data by sampling with replacement. Each resample similarly contains 108 data points. Doe's software measures the average of all 200 resamples and determines that the mean of these 200 resample averages is 0.0261. The software then subtracts 0.0261 from all 200 resample averages, squares each of these 200 differences, and sums up the squared differences. The outcome is 0.835. Subsequently, the software calculates an estimation of the standard error of the sample average. What is the estimated standard error of the sample average?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sum_of_squared_differences = 0.835\n    number_of_resamples = 200\n    \n    # Do math calculation to get the answer\n    estimated_standard_error = (sum_of_squared_differences / (number_of_resamples - 1)) ** 0.5\n    \n    # return answer\n    return estimated_standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-872",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given a discrete uniform distribution, the possible outcome contains 25 integers from 1 to 25, what is the accurate value of P( 5 \u2264 X < 10 )?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_outcomes = 25\n    favorable_outcomes = 4  # Numbers from 5 to 9 inclusive\n    \n    # Do math calculation to get the answer\n    probability = favorable_outcomes / total_outcomes\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-873",
        "python_solution": "",
        "ground_truth": null,
        "question": "Travelpro has just distributed a dividend of 500 per share. The annual dividend will increase by 5% per annum over the coming four years. The corporation's shares are projected to be sold for $10,000 at the conclusion of the fourth year. If the necessary return rate is 15%, what is the inherent value of Travelpro's shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_dividend = 500\n    dividend_growth_rate = 0.05\n    years = 4\n    future_share_price = 10000\n    required_return_rate = 0.15\n    \n    # Calculate the future dividends for each year\n    dividends = [initial_dividend * (1 + dividend_growth_rate) ** i for i in range(1, years + 1)]\n    \n    # Calculate the present value of each dividend\n    present_values = [dividend / (1 + required_return_rate) ** i for i, dividend in enumerate(dividends, start=1)]\n    \n    # Calculate the present value of the future share price\n    present_value_future_price = future_share_price / (1 + required_return_rate) ** years\n    \n    # Sum the present values of the dividends and the future share price to get the inherent value\n    inherent_value = sum(present_values) + present_value_future_price\n    \n    # return answer\n    return inherent_value\n```"
        ]
    },
    {
        "tables": [
            "| Probability Matrix |         |         |         |\n|--------------------|---------|---------|---------|\n| Returns            | RB=70%  | RB=30%  | RB=-20% |\n| RA=-20%, 30%       |         | 0%      | 0%      |\n| RA=20%, 0%         |         | 40%     | 0%      |\n| RA=30%, 0%         |         | 0%      | 30%     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-874",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided probability matrix, what is the covariance of stock X and stock Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    RA = [-20, 20, 30]\n    RB = [70, 30, -20]\n    probabilities = [\n        [0, 0, 0],\n        [0, 40, 0],\n        [0, 0, 30]\n    ]\n    \n    # Calculate expected values\n    E_RA = sum(p * a for i, a in enumerate(RA) for j, p in enumerate(probabilities[i])) / 100\n    E_RB = sum(p * b for i, b in enumerate(RB) for j, p in enumerate(probabilities[i])) / 100\n    \n    # Calculate covariance\n    covariance = sum(probabilities[i][j] * (RA[i] - E_RA) * (RB[j] - E_RB) for i in range(3) for j in range(3)) / 100\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [
            "| Variable | Coefficient | t-statistic | p-value |\n| -------- | ----------- | ----------- | ------- |\n| Constant | -0.0069     | -0.013      | 0.99    |\n| S&P 500  | 0.3625      | 6.190       | <0.01   |\n| SPREAD   | 1.0264      | 4.280       | <0.01   |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-875",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided in Exhibit 1, which consists of the results of a regression of the monthly returns for an index related to a power company's equity over the past 203 months (the dependent variable), against the monthly returns for the S&P 500 Index and the difference between the monthly returns on long-term U.S. government bonds and one-month U.S. Treasury bills (SPREAD) (the two independent variables), what is the test statistic value related to Peterson's null hypothesis on the coefficient value of SPREAD? Peterson's null hypothesis is that this coefficient equals 1, while his alternative hypothesis claims it does not equal to 1.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coefficient_spread = 1.0264\n    hypothesized_value = 1\n    standard_error_spread = (coefficient_spread - hypothesized_value) / 4.280  # Using the t-statistic to approximate the standard error\n    \n    # Do math calculation to get the answer\n    test_statistic = (coefficient_spread - hypothesized_value) / standard_error_spread\n    \n    # return answer\n    return test_statistic\n```\n\nThis Python program calculates the test statistic for Peterson's null hypothesis that the coefficient of SPREAD equals 1. It uses the provided coefficient and t-statistic to approximate the standard error and then computes the test statistic."
        ]
    },
    {
        "tables": [
            "|     | Bid     |       |     | Ask     |       |     |     |\n|-----|---------|-------|-----|---------|-------|-----|-----|\n| Dealer | Time Entered | Price | Size | Dealer | Time Entered | Price | Size |\n| B |   10.10 a.m. | $17.15 | 900 | C | 10.11 a.m. | $17.19 | 1,200 |\n| C |   10.11 a.m. | $17.14 | 1,500 | B | 10.10 a.m. | $17.20 | 800 |\n| A |   10.11 a.m. | $17.12 | 1,100 | A | 10.12 a.m. | $17.22 | 1,100 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-876",
        "python_solution": "",
        "ground_truth": null,
        "question": "Three merchants are creating a market for Light Systems shares. From these prices, Wilson's trading desk carries out a market sell order for 1,100 shares of Light Systems. Based on the information in Exhibit 1, what is the cumulative amount that Wilson will receive, per share, for making the market sell order?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bid_prices = [17.15, 17.14, 17.12]\n    bid_sizes = [900, 1500, 1100]\n    \n    # Initialize variables for calculation\n    total_shares_sold = 0\n    cumulative_amount = 0\n    \n    # Do math calculation to get the answer\n    for i in range(len(bid_prices)):\n        if total_shares_sold + bid_sizes[i] <= 1100:\n            total_shares_sold += bid_sizes[i]\n            cumulative_amount += bid_prices[i] * bid_sizes[i]\n        else:\n            remaining_shares = 1100 - total_shares_sold\n            cumulative_amount += bid_prices[i] * remaining_shares\n            total_shares_sold += remaining_shares\n            break\n    \n    average_price_per_share = cumulative_amount / 1100\n    \n    # return answer\n    return average_price_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-877",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is tasked with approximating the equity value of Company X using the Merton approach. 1)The value of Company X's assets stand at 180. 2)There's a risk-free rate of 5%.3)The company puts forth one-year zero interest bonds with a face value of 100. 4)The worth of a European put option on the company's asset is 3.50 and the strike price is set at 100.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_value = 180\n    risk_free_rate = 0.05\n    bond_face_value = 100\n    put_option_value = 3.50\n    strike_price = 100\n    \n    # Do math calculation to get the answer\n    # Using the Merton model, the equity value is the difference between the asset value and the present value of the debt (bonds)\n    # The present value of the debt can be approximated by the bond face value minus the value of the put option\n    present_value_of_debt = bond_face_value - put_option_value\n    equity_value = asset_value - present_value_of_debt\n    \n    # return answer\n    return equity_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-878",
        "python_solution": "",
        "ground_truth": null,
        "question": "A corporate bond with a 5-year timeline and a 5% semiannual coupon payment is valued at 104.967 for every 100 of face value. It has a yield-to-maturity of 3.897%, as quoted on a semiannual bond basis. If an economist is instructed to convert this to a monthly rate, what would be the yield-to-maturity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_to_maturity_semiannual = 0.03897\n    periods_per_year = 2  # Since the yield is quoted on a semiannual basis\n\n    # Convert semiannual yield to effective annual yield\n    effective_annual_yield = (1 + yield_to_maturity_semiannual / periods_per_year) ** periods_per_year - 1\n\n    # Convert effective annual yield to monthly yield\n    monthly_yield = (1 + effective_annual_yield) ** (1 / 12) - 1\n\n    # return answer\n    return monthly_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-879",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided information that the available stable funding for Bank X is $180 million, their high-quality liquid assets are $200 million, their required stable funding amounts to $330 million, and they have Net cash outflows of $120 million expected over the next 30 days, what is the liquidity coverage ratio of Bank X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    high_quality_liquid_assets = 200000000  # in dollars\n    net_cash_outflows = 120000000  # in dollars\n    \n    # Do math calculation to get the answer\n    liquidity_coverage_ratio = (high_quality_liquid_assets / net_cash_outflows) * 100\n    \n    # return answer\n    return liquidity_coverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "|                             | 2015 | 2016 |\n|-----------------------------|------|------|\n| Cash                        | 210  | 310  |\n| Accounts receivable         |      | 31   |\n| Inventory                   | 60   | 80   |\n| Fixed assets                | 200  | 200  |\n| Accumulated depreciation    | -    | (35) |\n| Total assets                | 470  | 586  |\n| Accounts payable            | 105  | 162  |\n| Long-term debt              | 235  | 273  |\n| Common stock                | 130  | 130  |\n| Retained earnings           | -    | 21   |\n| Total liabilities and shareholders' equity | 470  | 586  |",
            "|                          |                    |    US $/C$    |\n|--------------------------|--------------------|--------------|\n| Rate on                  | 31 December 2015   |    0.89      |\n| Average  rate in 2016    |                    |    0.96      |\n| Weighted-average rate for inventory purchases | |    0.94      |\n| Rate  on  31 December 2016 |                  |    0.94      |"
        ],
        "topic": "Accounting",
        "question_id": "test-880",
        "python_solution": "",
        "ground_truth": null,
        "question": "Sephora is a corporation from the United States that deals with cosmetics. Its Canadian branch, Beauty company, operates exclusively in Canada. It was established on 31st December 2015, and Beauty company uses the US dollar as its working currency. Fixed assets were acquired when the company was instituted. The table provides financial statement data for the years finalised in 2015 and 2016. Could you compute the balance sheet exposure if the working currency were modified?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_2015 = 210\n    cash_2016 = 310\n    accounts_receivable_2016 = 31\n    inventory_2015 = 60\n    inventory_2016 = 80\n    fixed_assets_2015 = 200\n    fixed_assets_2016 = 200\n    accumulated_depreciation_2016 = 35\n    total_assets_2015 = 470\n    total_assets_2016 = 586\n    accounts_payable_2015 = 105\n    accounts_payable_2016 = 162\n    long_term_debt_2015 = 235\n    long_term_debt_2016 = 273\n    common_stock_2015 = 130\n    common_stock_2016 = 130\n    retained_earnings_2016 = 21\n    total_liabilities_and_equity_2015 = 470\n    total_liabilities_and_equity_2016 = 586\n    \n    rate_2015 = 0.89\n    rate_2016 = 0.94\n    \n    # Convert assets and liabilities to USD using the exchange rates\n    cash_2015_usd = cash_2015 / rate_2015\n    cash_2016_usd = cash_2016 / rate_2016\n    accounts_receivable_2016_usd = accounts_receivable_2016 / rate_2016\n    inventory_2015_usd = inventory_2015 / rate_2015\n    inventory_2016_usd = inventory_2016 / rate_2016\n    fixed_assets_2015_usd = fixed_assets_2015 / rate_"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-881",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business acquired machinery for $50,000 on the 1st of January 2009. The company is implementing straight-line depreciation for accounting reasons over a decade, but applying a declining balance method at a rate of 20% for taxation. Given a 30% tax rate, what is the deferred tax obligation by the end of 2011?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 50000\n    useful_life = 10\n    straight_line_depreciation_rate = 1 / useful_life\n    declining_balance_rate = 0.20\n    tax_rate = 0.30\n    years_passed = 3  # from 2009 to 2011\n\n    # Calculate straight-line depreciation for each year\n    straight_line_depreciation_per_year = initial_cost * straight_line_depreciation_rate\n    accumulated_straight_line_depreciation = straight_line_depreciation_per_year * years_passed\n    book_value_straight_line = initial_cost - accumulated_straight_line_depreciation\n\n    # Calculate declining balance depreciation for each year\n    book_value_declining_balance = initial_cost\n    for _ in range(years_passed):\n        depreciation_for_year = book_value_declining_balance * declining_balance_rate\n        book_value_declining_balance -= depreciation_for_year\n\n    # Calculate the deferred tax obligation\n    temporary_difference = book_value_straight_line - book_value_declining_balance\n    deferred_tax_obligation = temporary_difference * tax_rate\n\n    # return answer\n    return deferred_tax_obligation\n```"
        ]
    },
    {
        "tables": [
            "| Year | Hazard Rate |\n|---|---|\n| 1 | 0.22% |\n| 2 | 0.35% |\n| 3 | 0.50% |\n| 4 | 0.65% |\n| 5 | 0.80% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-882",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson inquires Chen to gauge the likelihood of default linked with a five-year investment-grade bond offered by Polaris Corporation. Chosen information on the Polaris Corporation bond is displayed in Exhibit 1.Exhibit 1. Based on Exhibit 1, what is the possibility of Polaris failing to repay the bond within the first three years, taking into account the specific data on Polaris Corporation Five-Year Bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    hazard_rate_year1 = 0.0022  # 0.22%\n    hazard_rate_year2 = 0.0035  # 0.35%\n    hazard_rate_year3 = 0.0050  # 0.50%\n    \n    # Do math calculation to get the answer\n    # The probability of default in a given year is calculated as (1 - e^(-hazard_rate * time))\n    # For simplicity, we assume the hazard rate is constant within each year and use the exponential function to approximate the probability of default.\n    prob_default_year1 = 1 - math.exp(-hazard_rate_year1 * 1)\n    prob_default_year2 = 1 - math.exp(-hazard_rate_year2 * 1)\n    prob_default_year3 = 1 - math.exp(-hazard_rate_year3 * 1)\n    \n    # The cumulative probability of default over the first three years is the product of (1 - individual year default probabilities)\n    cumulative_prob_default = 1 - ((1 - prob_default_year1) * (1 - prob_default_year2) * (1 - prob_default_year3))\n    \n    # return answer\n    return cumulative_prob_default\n\n# Note: This program uses the math module for the exponential function. Ensure you have imported math at the beginning of your script.\n```\n\nThis program calculates the cumulative probability of default for the first three years of a five-year bond investment based on the provided hazard rates. It assumes that the hazard rate is constant within each year and uses the exponential function to approximate the probability of default for each year. The cumulative probability is then calculated by multiplying the survival probabilities (1 - individual year default probabilities) for each year."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-883",
        "python_solution": "",
        "ground_truth": null,
        "question": "Duhamel starts reviewing the asset collection of an American citizen, Brooke Jensen. Jensen's investments are in American and European securities. On January 1, 2019, Jensen held assets of USD 50 million and EUR 50 million, distributed between shares and bonds. The exchange rate on this day was 1.1 USD/EUR. A year later, on January 1, 2020, the value of Jensen's European asset increased from EUR 50 million to EUR 54 million, having EUR 20 million in shares and EUR 34 million in bonds. The USD/EUR exchange rate at this time is 1.16. Can you determine the domestic currency return on Jensen's European portfolio over the preceding year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_eur_assets = 50000000  # EUR 50 million\n    final_eur_assets = 54000000  # EUR 54 million\n    initial_exchange_rate = 1.1  # USD/EUR\n    final_exchange_rate = 1.16  # USD/EUR\n\n    # Convert initial and final European assets to USD\n    initial_usd_assets = initial_eur_assets * initial_exchange_rate\n    final_usd_assets = final_eur_assets * final_exchange_rate\n\n    # Calculate the return on Jensen's European portfolio in USD\n    return_on_portfolio = (final_usd_assets - initial_usd_assets) / initial_usd_assets\n\n    # return answer\n    return return_on_portfolio\n```"
        ]
    },
    {
        "tables": [
            "| Estimated net income | $200 |\n| --- | --- |\n| Beginning retained earnings | $1,400 |\n| Estimated distributions to owners | $100 |"
        ],
        "topic": "Accounting",
        "question_id": "test-884",
        "python_solution": "",
        "ground_truth": null,
        "question": "What should be the projection of the analyst for the final retained earnings of a corporation, ahead of its end-of-year profit declaration (in millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    estimated_net_income = 200\n    beginning_retained_earnings = 1400\n    estimated_distributions_to_owners = 100\n    \n    # Do math calculation to get the answer\n    final_retained_earnings = beginning_retained_earnings + estimated_net_income - estimated_distributions_to_owners\n    \n    # Convert to millions for the final answer\n    final_retained_earnings_in_millions = final_retained_earnings / 1000000\n    \n    # return answer\n    return final_retained_earnings_in_millions\n```"
        ]
    },
    {
        "tables": [
            "| Full price of bond (PVFull) | $100,367,242    |\n|-----------------------------|-----------------|\n| Modified duration (AnnModDur) | 8.124 years |\n| Accrued interest               | $303,218        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-885",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the below details about a company's bond, what is the financial duration of this particular bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    PVFull = 100367242\n    AnnModDur = 8.124\n    AccruedInterest = 303218\n    \n    # Calculate the full price of the bond without accrued interest\n    PVClean = PVFull - AccruedInterest\n    \n    # Do math calculation to get the financial duration\n    FinancialDuration = AnnModDur * (PVClean / PVFull)\n    \n    # return answer\n    return FinancialDuration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-886",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business sells a non-refundable, two-year service agreement for \u20ac420. According to previous trends, the business anticipates that the first year will see 25% of service expenses, with the rest expected in the second year. How much revenue does the business acknowledge in the first year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_service_agreement = 420\n    first_year_expenses_percentage = 0.25\n    \n    # Do math calculation to get the answer\n    first_year_revenue = total_service_agreement * first_year_expenses_percentage\n    \n    # return answer\n    return first_year_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-887",
        "python_solution": "",
        "ground_truth": null,
        "question": "Anna, a researcher, carried out a basic regression to understand the fluctuation in electricity usage based on temperature. She found out that the overall variation of the dependent variable was 132.08 and the variation that was explained stood at 60.38. Given that she had 60 monthly data points, can you calculate the coefficient of determination?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_variation = 132.08\n    explained_variation = 60.38\n    \n    # Do math calculation to get the answer\n    coefficient_of_determination = explained_variation / total_variation\n    \n    # return answer\n    return coefficient_of_determination\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-888",
        "python_solution": "",
        "ground_truth": null,
        "question": "John wants to assist his pal, Lisa, in forecasting the revenue of her store in October 20X9. To do this, he uses the income data from January 20X6 to September 20X9 as examples to create an AR(2) model. The resulting formula is: Xt+1  =1.3458+0.8912Xt+0.3372Xt-1. What would be the anticipated earnings of Lisa\u2019s store in October 20X9 if it is known that the income in August 20X9 was $2746.72 and the income in September 20X9 was $2957.63?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    income_august = 2746.72\n    income_september = 2957.63\n    constant = 1.3458\n    coefficient_Xt = 0.8912\n    coefficient_Xt_minus_1 = 0.3372\n    \n    # Do math calculation to get the answer\n    income_october = constant + coefficient_Xt * income_september + coefficient_Xt_minus_1 * income_august\n    \n    # return answer\n    return income_october\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-889",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume a call option priced at $4 where the strike price is $50. Calculate the worth at expiration and the earnings for a purchaser if the cost of the underlying asset at expiration is $48.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    option_price = 4\n    strike_price = 50\n    underlying_asset_price_at_expiration = 48\n    \n    # Do math calculation to get the answer\n    # Calculate the worth of the call option at expiration\n    if underlying_asset_price_at_expiration > strike_price:\n        option_worth_at_expiration = underlying_asset_price_at_expiration - strike_price\n    else:\n        option_worth_at_expiration = 0\n    \n    # Calculate the earnings for the purchaser\n    earnings = option_worth_at_expiration - option_price\n    \n    # return answer\n    return earnings\n```"
        ]
    },
    {
        "tables": [
            "| Balance Sheet Item | 12/31/2017 | 12/31/2018 | Change |\n| ------------------ | ---------- | ---------- | ------ |\n| Equipment          | $100 million  | $105 million | $5 million  |\n| Accumulated  depreciation - equipment | $40 million | $46 million | $6 million |"
        ],
        "topic": "Accounting",
        "question_id": "test-890",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the same figures highlighted in the comparative balance sheets, how much money did Globex Metals International, a global metals corporation, gain from the sale of machinery, following their reported equipment sale loss of $2 million in 2018, a noted depreciation expense of $8 million, and capital outlays amounting to $10 million which was completely used on new machinery purchases?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_equipment_value = 100000000  # $100 million\n    final_equipment_value = 105000000    # $105 million\n    initial_accumulated_depreciation = 40000000  # $40 million\n    final_accumulated_depreciation = 46000000    # $46 million\n    reported_loss = 2000000  # $2 million\n    depreciation_expense = 8000000  # $8 million\n    capital_outlays = 10000000  # $10 million\n\n    # Do math calculation to get the answer\n    # Calculate the net book value of equipment sold\n    net_book_value_sold = (initial_accumulated_depreciation + depreciation_expense) - final_accumulated_depreciation\n    \n    # Calculate the gain or loss from the sale of machinery\n    gain_from_sale = net_book_value_sold - reported_loss\n\n    # return answer\n    return gain_from_sale\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-891",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose interest rate parity is valid and the present spot rate is 1.4808 CAD/EUR. The annual interest rates in the nation of Canada (CAD) and the country of France (EUR) stand at 3% and 4% respectively. What is the 1-year forward rate in CAD/EUR?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 1.4808  # CAD/EUR\n    interest_rate_CAD = 0.03  # 3%\n    interest_rate_EUR = 0.04  # 4%\n    \n    # Do math calculation to get the answer\n    forward_rate = spot_rate * (1 + interest_rate_CAD) / (1 + interest_rate_EUR)\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [
            "|  | 2015 | 2016 | 2017 | 2018(E) |\n|---|---|---|---|---|\n| Earnings per share | 6 | 6.3 | 6.62 | 6.95 |\n| Dividends per share | 1.8 | 1.89 | 2.00 | 2.10 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-892",
        "python_solution": "",
        "ground_truth": null,
        "question": "Bill is examining a food distribution enterprise, RapidSnacks's fair forward P/E using the Gordon growth offer discount model. The EPS and dividends of RapidSnacks are indicated previously. Bill assumes that the company's necessary rate of return would be 12%, and hypothesizes that the growth rate of the company would be consistent at 5%. Based on this data, what is the justified forward P/E of the enterprise?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    required_rate_of_return = 0.12\n    growth_rate = 0.05\n    \n    # Do math calculation to get the answer\n    # Using the Gordon Growth Model to find the justified forward P/E\n    # P/E = (DPS / (r - g)) / EPS\n    # For the forward P/E, we use the expected EPS and DPS for 2018\n    EPS_2018 = 6.95\n    DPS_2018 = 2.10\n    \n    justified_forward_PE = (DPS_2018 / (required_rate_of_return - growth_rate)) / EPS_2018\n    \n    # return answer\n    return justified_forward_PE\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-893",
        "python_solution": "",
        "ground_truth": null,
        "question": "A life insurance firm from Canada has an outstanding issue of perpetual, non-convertible, non-callable preferred shares with a 4.80 percent coupon rate and a par value of $25. If the required return on similar issues is 4.49 percent, what would be the intrinsic value of one of these preferred shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.0480\n    par_value = 25\n    required_return = 0.0449\n    \n    # Do math calculation to get the answer\n    intrinsic_value = (coupon_rate * par_value) / required_return\n    \n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-894",
        "python_solution": "",
        "ground_truth": null,
        "question": "An expert finds out that roughly 99% of the observations of daily revenue for a corporation lie between $230,000 and $480,000 and that daily revenue for the corporation follows a normal distribution. If about 99% of all the observations lie in the interval \u03bc \u00b1 3\u03c3, then using the approximate z-value instead of the exact table, what is the standard deviation of daily revenue for the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lower_bound = 230000\n    upper_bound = 480000\n    mean = (lower_bound + upper_bound) / 2\n    z_value = 3  # Approximate z-value for 99% confidence interval\n    \n    # Do math calculation to get the answer\n    standard_deviation = (upper_bound - mean) / z_value\n    \n    # return answer\n    return standard_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-895",
        "python_solution": "",
        "ground_truth": null,
        "question": "A manager in charge of market risk intends to determine the cost of a 2-year zero-coupon bond. The 1-year interest rate currently stands at 10.0%. It's projected that there's a 50% chance that the 1-year interest rate will reach 12.0% and a 50% chance that it could be 8.0% in the next year. If the risk premium of duration risk is assumed to be 50 bps annually, and the bond\u2019s face value is worth EUR 1,000, which would be the accurate price of this zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000  # EUR\n    current_1_year_rate = 0.10  # 10.0%\n    future_1_year_rate_high = 0.12  # 12.0%\n    future_1_year_rate_low = 0.08  # 8.0%\n    risk_premium = 0.005  # 50 bps annually\n    probability_high = 0.5  # 50% chance\n    probability_low = 0.5  # 50% chance\n\n    # Calculate the expected 1-year rate for the next year\n    expected_1_year_rate_next_year = (future_1_year_rate_high * probability_high) + (future_1_year_rate_low * probability_low)\n\n    # Calculate the 2-year rate considering the risk premium\n    rate_2_year = (current_1_year_rate + expected_1_year_rate_next_year) / 2 + risk_premium\n\n    # Calculate the present value of the bond\n    present_value = face_value / ((1 + rate_2_year) ** 2)\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "|     |      |\n| ----| ----|\n| EXHIBIT 1  SELECTED INFORMATION O N INVESTMENTS FOR THE YEAR ENDED 31 DECEMBER 2017 (\u00a3 THOUSANDS, EXCEPT PER SHARE DATA) | |\n| Company Name | Alme AG |\n| Security  description | Bonds maturing  31 December 2026, 5% coupon payable  annually, 6% effective market rate when issued  1 January 2012 |\n| Classification at purchase | Held to maturity |\n| Date of purchase | 1 January 2016 |\n| Amount owned by Dagmar | Face value \u00a34,000 |\n| Market value on  1 January 2017 | \u00a33,600.60 |\n| Market value on  31 December 2017 | \u00a33,634.76 |"
        ],
        "topic": "Accounting",
        "question_id": "test-896",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the contribution from the investment in Alme to the net earnings (in thousands) for 2017 of Brecht and Co, a European manufacturing company that prepares its financial statements according to International Financial Reporting Standards (IFRS)? This is being reviewed by two treasury group members of Brecht and Co, Hans Braun and Olga Schmitt.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 4000  # in thousands of pounds\n    coupon_rate = 0.05  # 5% coupon rate\n    effective_market_rate = 0.06  # 6% effective market rate\n    market_value_start = 3600.60  # in thousands of pounds on 1 January 2017\n    market_value_end = 3634.76  # in thousands of pounds on 31 December 2017\n    \n    # Calculate the coupon payment\n    coupon_payment = face_value * coupon_rate\n    \n    # Calculate the amortization of the discount or premium\n    amortization = (market_value_end - market_value_start)\n    \n    # Calculate the total contribution to net earnings\n    contribution_to_net_earnings = coupon_payment + amortization\n    \n    # return answer\n    return contribution_to_net_earnings\n```\n\nThis Python program calculates the contribution to net earnings from the investment in Alme AG bonds for the year 2017. It considers the coupon payment and the amortization of the market value change over the year, as per IFRS requirements for held-to-maturity securities."
        ]
    },
    {
        "tables": [
            "| Revenue growth | 5% |\n| --- | --- |\n| Gross profit margin | 30% |\n| Depreciation Expense | 2.5% of revenues |\n| SG&A | 15% of revenues |\n| WCInv | 5% of the incremental revenues |\n| CapEx | 15% of the incremental revenues |\n| Tax rate | 30% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-897",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is assessing the FCFF of Corporation N for the upcoming year, which records an annual turnover of $100 million. He has projected the pertinent details in the given table. What is the FCFF?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 100000000  # Annual turnover of $100 million\n    revenue_growth = 0.05  # 5% revenue growth\n    gross_profit_margin = 0.30  # 30% gross profit margin\n    depreciation_expense = 0.025  # 2.5% of revenues\n    sga = 0.15  # 15% of revenues\n    wcinv = 0.05  # 5% of the incremental revenues\n    capex = 0.15  # 15% of the incremental revenues\n    tax_rate = 0.30  # 30% tax rate\n\n    # Calculate incremental revenues\n    incremental_revenue = revenue * revenue_growth\n\n    # Calculate gross profit\n    gross_profit = revenue * gross_profit_margin\n\n    # Calculate depreciation expense\n    depreciation = revenue * depreciation_expense\n\n    # Calculate SG&A expense\n    sga_expense = revenue * sga\n\n    # Calculate EBIT (Earnings Before Interest and Taxes)\n    ebit = gross_profit - depreciation - sga_expense\n\n    # Calculate taxes\n    taxes = ebit * tax_rate\n\n    # Calculate NOPAT (Net Operating Profit After Tax)\n    nopat = ebit - taxes\n\n    # Calculate WCInv (Working Capital Investment)\n    wcinv_amount = incremental_revenue * wcinv\n\n    # Calculate CapEx (Capital Expenditure)\n    capex_amount = incremental_revenue * capex\n\n    # Calculate FCFF (Free Cash Flow to the Firm)\n    fcff = nopat + depreciation - wcinv_amount - capex_amount\n\n    # return answer\n    return fcff\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-898",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we assume an annual interest rate of 8% and an investment made today of $50,000. Let's suppose equal distributions are made at the end of each year for the following twelve years, leaving the account to be closed at the end of the twelfth year. How much would each yearly distribution amount be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_interest_rate = 0.08\n    investment = 50000\n    years = 12\n    \n    # Do math calculation to get the answer\n    # Using the formula for the present value of an annuity due\n    # P = R * [(1 - (1 + r)^-n) / r]\n    # Solving for R (the yearly distribution amount)\n    r = annual_interest_rate\n    n = years\n    P = investment\n    \n    yearly_distribution = P * (r / (1 - (1 + r)**-n))\n    \n    # return answer\n    return yearly_distribution\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-899",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given that Occurrence A and Occurrence B are independent events. The probability of A is 0.2 [P(A) = 0.2] and the probability of B is 0.5 [P(B) = 0.5]. What is the combined probability of A and B, P(AB)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_A = 0.2\n    P_B = 0.5\n    \n    # Do math calculation to get the answer\n    P_AB = P_A * P_B\n    \n    # return answer\n    return P_AB\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-900",
        "python_solution": "",
        "ground_truth": null,
        "question": "The portfolio manager of AB pension, Monique, is contemplating the addition of XY Corp. (New York Stock Exchange: XY) to her portfolio. After a thorough evaluation of the company and its competitors, she is of the view that the company will exhibit exceptional growth for the coming 4 years and regular growth following that. Therefore, she has inferred that a two-stage DDM is most suitable for evaluating the stock. The total dividends paid by XY in 2017 amounted to $0.22. She predicts a growth rate of 12 percent for the next 4 years and 6 percent thereafter. She estimates that the required return is 9 percent. What percentage of the total value of the stock is associated with the value of the second stage based on this method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_dividend = 0.22\n    growth_rate_stage1 = 0.12\n    growth_rate_stage2 = 0.06\n    required_return = 0.09\n    years_stage1 = 4\n\n    # Calculate the dividends for each year in the first stage\n    dividends_stage1 = [initial_dividend * (1 + growth_rate_stage1) ** (i + 1) for i in range(years_stage1)]\n\n    # Calculate the present value of dividends in the first stage\n    pv_dividends_stage1 = sum([dividend / (1 + required_return) ** (i + 1) for i, dividend in enumerate(dividends_stage1)])\n\n    # Calculate the terminal value at the end of the first stage\n    terminal_dividend = dividends_stage1[-1] * (1 + growth_rate_stage2)\n    terminal_value = terminal_dividend / (required_return - growth_rate_stage2)\n\n    # Calculate the present value of the terminal value\n    pv_terminal_value = terminal_value / (1 + required_return) ** years_stage1\n\n    # Calculate the total value of the stock\n    total_value = pv_dividends_stage1 + pv_terminal_value\n\n    # Calculate the percentage of the total value associated with the second stage\n    percentage_second_stage = (pv_terminal_value / total_value) * 100\n\n    # return answer\n    return percentage_second_stage\n```\n\nThis Python program calculates the percentage of the total value of the stock that is associated with the value of the second stage using a two-stage Dividend Discount Model (DDM). It defines the necessary variables, performs the calculations for both stages, and returns the desired percentage."
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-901",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the following financial information for a financial institution, in millions of dollars: shareholders' funds: 627.4; retained earnings: 65.6; undisclosed reserves: 33.5; goodwill: 21.3; subordinated debt: 180.0; specific provisions: 11.7. What is the ratio of tier 2 capital to tier 1 capital?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shareholders_funds = 627.4\n    retained_earnings = 65.6\n    undisclosed_reserves = 33.5\n    goodwill = 21.3\n    subordinated_debt = 180.0\n    specific_provisions = 11.7\n    \n    # Tier 1 Capital includes shareholders' funds, retained earnings, and undisclosed reserves\n    tier_1_capital = shareholders_funds + retained_earnings + undisclosed_reserves\n    \n    # Tier 2 Capital includes subordinated debt and specific provisions\n    tier_2_capital = subordinated_debt + specific_provisions\n    \n    # Do math calculation to get the answer\n    ratio_tier_2_to_tier_1 = tier_2_capital / tier_1_capital\n    \n    # return answer\n    return ratio_tier_2_to_1\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-902",
        "python_solution": "",
        "ground_truth": null,
        "question": "A dealer submits a limit order to purchase stocks at a rate of $49.94, with the market bid price being $49.49 and the bid-ask spread standing at 0.7%. What will likely be the final fill price for the order?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    limit_order_price = 49.94\n    market_bid_price = 49.49\n    bid_ask_spread_percentage = 0.7 / 100\n    \n    # Calculate the ask price based on the bid-ask spread\n    ask_price = market_bid_price * (1 + bid_ask_spread_percentage)\n    \n    # Determine the final fill price\n    # Since the limit order price is higher than the market bid price but lower than the ask price,\n    # the order will likely be filled at the limit order price or slightly above it, but not exceeding the ask price.\n    final_fill_price = min(limit_order_price, ask_price)\n    \n    # return answer\n    return final_fill_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-903",
        "python_solution": "",
        "ground_truth": null,
        "question": "Currently possessing $750,000 in cash and short investment, Robert consults his investment manager Smith to discuss his investment portfolio. Robert's human capital amounts to $1.2 million with 30% demonstrating an equity-like characteristic according to calculations. Deciding that an overall target allocation of 45% equity is fitting for Robert, Smith must now determine the financial capital equity allocation required for Robert to meet the total economic wealth's targeted equity allocation. What should this allocation amount to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_and_short_investment = 750000\n    human_capital = 1200000\n    equity_like_human_capital_percentage = 0.30\n    target_equity_allocation = 0.45\n\n    # Calculate the equity-like human capital\n    equity_like_human_capital = human_capital * equity_like_human_capital_percentage\n\n    # Calculate total economic wealth\n    total_economic_wealth = cash_and_short_investment + human_capital\n\n    # Calculate the total desired equity allocation\n    total_desired_equity = total_economic_wealth * target_equity_allocation\n\n    # Calculate the financial capital equity allocation required\n    financial_capital_equity_allocation = total_desired_equity - equity_like_human_capital\n\n    # return answer\n    return financial_capital_equity_allocation\n```"
        ]
    },
    {
        "tables": [
            "| Bond Class | Par Value(Emillions) |\n|------------|---------------------|\n| A(senior)  | 200                 |\n| B(subordinated) | 20           |\n| C(subordinated) | 5            |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-904",
        "python_solution": "",
        "ground_truth": null,
        "question": "At what level of default in par value would Bond Class A incur a loss if issued by a special purpose vehicle in the following structure?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value_A = 200  # Par value of Bond Class A in millions\n    par_value_B = 20   # Par value of Bond Class B in millions\n    par_value_C = 5    # Par value of Bond Class C in millions\n    \n    # Do math calculation to get the answer\n    # Bond Class A incurs a loss if the total default exceeds the sum of par values of Bond Class B and C\n    total_subordinated_par_value = par_value_B + par_value_C\n    \n    # return answer\n    return total_subordinated_par_value\n\n# Example usage:\n# print(solution())\n```\n\nThis program calculates the level of default in par value at which Bond Class A would incur a loss. Since Bond Class A is senior, it only incurs a loss if the total default exceeds the combined par values of the subordinated bonds (Bond Class B and C). The function `solution()` returns this critical level of default."
        ]
    },
    {
        "tables": [
            "| Activity                           | Cost of Input (\u00a3/unit) | Price of Output (\u00a3/unit) in Current Period |\n| ---------------------------------- | ---------------------- | ----------------------------------------- |\n| Input materials                    | 3.50                   | 5.42                                      |\n| Production                         | 5.42                   | 8.02                                      |\n| Distributing good to stores (wholesale) | 8.02            | 11.23                                     |\n| Selling good to consumers (retail) | 11.23                  | 16.50                                     |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-905",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the contribution per unit (in \u00a3) this product adds to the present GDP, taking into account the production and sale expenses as shown in the subsequent table?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    input_materials_cost = 3.50\n    production_cost = 5.42\n    wholesale_cost = 8.02\n    retail_cost = 11.23\n    \n    input_materials_price = 5.42\n    production_price = 8.02\n    wholesale_price = 11.23\n    retail_price = 16.50\n    \n    # Do math calculation to get the answer\n    # Calculate the contribution to GDP at each stage\n    contribution_input_materials = input_materials_price - input_materials_cost\n    contribution_production = production_price - production_cost\n    contribution_wholesale = wholesale_price - wholesale_cost\n    contribution_retail = retail_price - retail_cost\n    \n    # Sum up the contributions to get the total contribution to GDP\n    total_contribution = contribution_input_materials + contribution_production + contribution_wholesale + contribution_retail\n    \n    # return answer\n    return total_contribution\n```"
        ]
    },
    {
        "tables": [
            "| Checking account | $27,000 |\n|------------------|---------|\n| Taxable investment account | $625,000 |\n| Residence | $525,000 |\n| Residential mortgage | $285,000 |\n| Outstanding balance on a $100,000 home equity line of credit | $38,000 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-906",
        "python_solution": "",
        "ground_truth": null,
        "question": "Exhibit 1 Smith Family: Personal and Financial Information:Personal Information:1. Estimated present value of the Smiths\u2019 future earnings is $3,900,000.2. The family has two children, ages 10 and 8. Cost of four years of university for the two children, with an estimated present value of $250,000.3. Purchase of a vacation home in the next five years, with an estimated present value of $325,000.4. Estimated present value of the Grahams\u2019 future consumption is $3,500,000. Using the data in Exhibit 1, what is the Smiths\u2019 economic net worth (in thousands)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    checking_account = 27000\n    taxable_investment_account = 625000\n    residence = 525000\n    residential_mortgage = 285000\n    home_equity_line_of_credit = 38000\n    future_earnings_value = 3900000\n    future_consumption_value = 3500000\n    children_education_cost = 250000\n    vacation_home_cost = 325000\n    \n    # Do math calculation to get the answer\n    # Calculate total assets\n    total_assets = checking_account + taxable_investment_account + residence + future_earnings_value\n    \n    # Calculate total liabilities\n    total_liabilities = residential_mortgage + home_equity_line_of_credit + future_consumption_value + children_education_cost + vacation_home_cost\n    \n    # Calculate economic net worth\n    economic_net_worth = total_assets - total_liabilities\n    \n    # return answer\n    return economic_net_worth / 1000  # Convert to thousands\n\n# Example usage\nprint(solution())\n```\n\nThis program calculates the Smiths' economic net worth by summing up their assets and subtracting their liabilities, then converts the result to thousands for the final answer."
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-907",
        "python_solution": "",
        "ground_truth": null,
        "question": "If John has put money into 50,000 shares of Company N's stock that is being sold for $25 each and the company announces a cash dividend of $2, assuming John will be using all dividends received to buy more shares and considering he is a tax-exempt investor, how many shares will he possess after reinvesting the dividends at the ex-dividend price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_shares = 50000\n    share_price = 25\n    dividend_per_share = 2\n    \n    # Calculate total dividend received\n    total_dividend = initial_shares * dividend_per_share\n    \n    # Calculate the number of shares that can be bought with the dividend\n    shares_bought_with_dividend = total_dividend / share_price\n    \n    # Calculate the total number of shares after reinvesting the dividends\n    total_shares_after_reinvestment = initial_shares + shares_bought_with_dividend\n    \n    # return answer\n    return total_shares_after_reinvestment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-908",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a trader acquired a stock initially priced at $20 and sold it at the end of the year for $25, what is the continuously compounded annual rate of return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 20\n    final_price = 25\n    \n    # Do math calculation to get the answer\n    rate_of_return = (final_price / initial_price) - 1\n    continuously_compounded_rate = (1 + rate_of_return) ** (1 / 1) - 1\n    continuously_compounded_rate_percentage = continuously_compounded_rate * 100\n    \n    # return answer\n    return continuously_compounded_rate_percentage\n```\n\nThis program calculates the continuously compounded annual rate of return for a stock that was bought at $20 and sold at $25 at the end of the year. The result is returned as a percentage."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-909",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of a bond with a par value of $100, a coupon rate of 6% paid twice a year, a YTM of 7%, and a maturity period of a decade?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    coupon_rate = 0.06\n    payments_per_year = 2\n    YTM = 0.07\n    maturity_years = 10\n    \n    # Calculate the annual coupon payment\n    annual_coupon_payment = par_value * coupon_rate\n    \n    # Calculate the semi-annual coupon payment\n    semi_annual_coupon_payment = annual_coupon_payment / payments_per_year\n    \n    # Calculate the number of periods\n    periods = maturity_years * payments_per_year\n    \n    # Calculate the discount rate per period\n    discount_rate_per_period = YTM / payments_per_year\n    \n    # Initialize the present value of the bond\n    present_value = 0\n    \n    # Calculate the present value of the coupon payments\n    for i in range(1, periods + 1):\n        present_value += semi_annual_coupon_payment / (1 + discount_rate_per_period) ** i\n    \n    # Calculate the present value of the par value at maturity\n    present_value_of_par = par_value / (1 + discount_rate_per_period) ** periods\n    \n    # Add the present value of the coupon payments and the present value of the par value\n    bond_value = present_value + present_value_of_par\n    \n    # Return the bond value\n    return bond_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-910",
        "python_solution": "",
        "ground_truth": null,
        "question": "Michael wishes to assist his buddy James in forecasting the sales volume of his store in January 20X9, so he employs the sales volume data from January 20X6 to December 20X8 as examples to construct a log-linear trend model, achieving the result: Ln( \u0177t ) =2.3748+0.0912t. What is the forecasted sales volume of James's store in January 20X9?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    base_year = 20X6\n    forecast_year = 20X9\n    forecast_month = 1\n    t = (forecast_year - base_year) * 12 + forecast_month\n    \n    # Coefficients from the log-linear trend model\n    intercept = 2.3748\n    slope = 0.0912\n    \n    # Do math calculation to get the answer\n    ln_forecast = intercept + slope * t\n    forecast_sales = math.exp(ln_forecast)\n    \n    # return answer\n    return forecast_sales\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-911",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a Property B has an appraised worth of $36,000,000 with a predicted Year 1 NOI of 900,000, What would be the highest loan amount that Property B could receive if the loan provider is interested in an interest-only loan at 5% mortgage rate, given that the maximum loan to value doesn't exceed 80% and the minimum debt service coverage ratio is no less than 1.2x?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    appraised_worth = 36000000\n    year1_NOI = 900000\n    mortgage_rate = 0.05\n    max_loan_to_value = 0.80\n    min_debt_service_coverage_ratio = 1.2\n\n    # Calculate the maximum loan amount based on LTV\n    max_loan_based_on_LTV = appraised_worth * max_loan_to_value\n\n    # Calculate the maximum annual debt service based on DSCR\n    max_annual_debt_service = year1_NOI / min_debt_service_coverage_ratio\n\n    # Calculate the maximum loan amount based on the interest-only loan at 5% rate\n    max_loan_based_on_interest = max_annual_debt_service / mortgage_rate\n\n    # The highest loan amount is the minimum of the two calculated amounts\n    highest_loan_amount = min(max_loan_based_on_LTV, max_loan_based_on_interest)\n\n    # return answer\n    return highest_loan_amount\n```\n\nThis program calculates the highest loan amount that Property B could receive based on the constraints of the loan-to-value ratio and the debt service coverage ratio. It first calculates the maximum loan amount based on the 80% loan-to-value ratio, then calculates the maximum loan amount based on the 1.2x debt service coverage ratio and a 5% interest rate. The final answer is the minimum of these two calculated amounts, ensuring that both constraints are met."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-912",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ, a wealth management company based in France, is planning to buy CDS on a firm called E to secure its existing portfolio position. The yearly coupon rate for the CDS is 5%, and the term of the CDS agreement is 5 years. The credit spread for firm E stands at 650 bps. Based on the details provided, what is the initial premium as a percent of the notional for the CDS on firm E?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yearly_coupon_rate = 5  # in percent\n    term_of_cds = 5  # in years\n    credit_spread = 650  # in bps (basis points)\n    \n    # Convert credit spread from bps to percent\n    credit_spread_percent = credit_spread / 100\n    \n    # Calculate the initial premium as a percent of the notional\n    initial_premium_percent = credit_spread_percent * term_of_cds\n    \n    # return answer\n    return initial_premium_percent\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-913",
        "python_solution": "",
        "ground_truth": null,
        "question": "A merchant initiates an equity swap with a notional principle of $500,000. He will acquire the return on stock ABC and give the return on Dow Jones Index. At the end of the quarter, if the stock ABC has increased by 5% and the index has risen by 1%, what would be the merchant's payoff?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_principle = 500000\n    stock_abc_return = 0.05\n    dow_jones_index_return = 0.01\n    \n    # Do math calculation to get the answer\n    stock_abc_payoff = notional_principle * stock_abc_return\n    dow_jones_index_payoff = notional_principle * dow_jones_index_return\n    merchant_payoff = stock_abc_payoff - dow_jones_index_payoff\n    \n    # return answer\n    return merchant_payoff\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-914",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an individual puts $1000 into an investment now at a 6% interest rate, how much will they make in 10 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 1000\n    interest_rate = 0.06\n    years = 10\n    \n    # Do math calculation to get the answer\n    future_value = principal * (1 + interest_rate) ** years\n    interest_earned = future_value - principal\n    \n    # return answer\n    return interest_earned\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-915",
        "python_solution": "",
        "ground_truth": null,
        "question": "In March 2017, John purchased 500 pen units at a price of $2 each. Then in April 2017, John acquired 600 pen units at a cost of $3 each. Throughout 2017, he made sales of 1000 units at $5 for each unit. Utilizing the Weighted Average method, what will be the cost of goods sold in 2017 for John?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_march = 500\n    cost_per_unit_march = 2\n    purchase_april = 600\n    cost_per_unit_april = 3\n    sales = 1000\n    selling_price_per_unit = 5\n    \n    # Calculate total units and total cost\n    total_units = purchase_march + purchase_april\n    total_cost = (purchase_march * cost_per_unit_march) + (purchase_april * cost_per_unit_april)\n    \n    # Calculate weighted average cost per unit\n    weighted_avg_cost_per_unit = total_cost / total_units\n    \n    # Calculate cost of goods sold\n    cost_of_goods_sold = weighted_avg_cost_per_unit * sales\n    \n    # return answer\n    return cost_of_goods_sold\n```"
        ]
    },
    {
        "tables": [
            "| Date | Spot Exchange Rate (USD/RMB) | CPI |\n| --- | --- | --- |\n| 31 Dec 2015 | 6.2 | 100 |\n| 31 Dec 2016 | 8.6 | 130 |\n| 31 Dec 2017 | 17.3 | 200 |\n| Average 2017 | 15.2 | 165 |"
        ],
        "topic": "Accounting",
        "question_id": "test-916",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ Inc. is a global company that adheres to IFRS and uses RMB as the currency for reporting. XYZ owns a subsidiary named QRS, located in the US and uses the US dollar (USD) as its operational currency. QRS's revenue for 2017 is USD90 million. What amount should XYZ Inc. report as its December 31, 2017 revenue from QRS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue_usd = 90000000  # QRS's revenue in USD for 2017\n    exchange_rate_dec_2017 = 17.3  # Spot Exchange Rate (USD/RMB) on 31 Dec 2017\n    \n    # Do math calculation to get the answer\n    revenue_rmb = revenue_usd * exchange_rate_dec_2017\n    \n    # return answer\n    return revenue_rmb\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-917",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a continuous compound interest rate of 2.5%, how much will John receive after 5 years from his $1million investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 1000000  # Initial investment amount in dollars\n    rate = 0.025  # Continuous compound interest rate of 2.5%\n    time = 5  # Investment duration in years\n    \n    # Do math calculation to get the answer\n    # Formula for continuous compound interest: A = P * e^(rt)\n    import math\n    amount = principal * math.exp(rate * time)\n    \n    # return answer\n    return amount\n```"
        ]
    },
    {
        "tables": [
            "| country  | Inflation rate (%) | Growth in total factor productivity (%) | Output elasticity of capital | Growth rate of capital (%) | Growth rate of labor (%) |\n|----------|----------------|---------------------------------------|-----------------------------|----------------------------|--------------------------|\n| Country A | 1.7              | 1.5                                                 | 0.3                                           | 3.2                                   | 0.4                                     |\n| Country B | 1.8              | 1.3                                                 | 0.4                                           | 3.7                                   | 0.5                                     |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-918",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the information given in Exhibit 1, what is the GDP growth rate in Country A using the Solow growth accounting equation, which is the preferred method of calculation by Thompson?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    growth_in_total_factor_productivity = 1.5\n    output_elasticity_of_capital = 0.3\n    growth_rate_of_capital = 3.2\n    growth_rate_of_labor = 0.4\n\n    # Do math calculation to get the answer\n    gdp_growth_rate = growth_in_total_factor_productivity + (output_elasticity_of_capital * growth_rate_of_capital) + ((1 - output_elasticity_of_capital) * growth_rate_of_labor)\n\n    # return answer\n    return gdp_growth_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-919",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the onset of 2017, Corporation Beta had a retained earnings amount of $800. The company's anticipated net income for the entire year falls around $150, and they're planning to distribute a dividend of $200 to the shareholders. What amount of retained earnings will Corporation Beta have by the end of 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_retained_earnings = 800\n    net_income = 150\n    dividends_distributed = 200\n    \n    # Do math calculation to get the answer\n    ending_retained_earnings = beginning_retained_earnings + net_income - dividends_distributed\n    \n    # return answer\n    return ending_retained_earnings\n```"
        ]
    },
    {
        "tables": [
            "| Company   | Sales(in millions of) |\n|-----------|----------------------|\n| ABC       | 300                  |\n| Brown     | 250                  |\n| Coral     | 200                  |\n| Delta     | 150                  |\n| Erie      | 100                  |\n| All others| 50                   |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-920",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the sector's concentration ratio for four companies, based on the market share data collected by the analyst for a particular industry?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales_ABC = 300\n    sales_Brown = 250\n    sales_Coral = 200\n    sales_Delta = 150\n    sales_Erie = 100\n    sales_All_others = 50\n    \n    # Calculate the total sales for the sector\n    total_sales = sales_ABC + sales_Brown + sales_Coral + sales_Delta + sales_Erie + sales_All_others\n    \n    # Calculate the sales for the top four companies\n    top_four_sales = sales_ABC + sales_Brown + sales_Coral + sales_Delta\n    \n    # Calculate the concentration ratio for the top four companies\n    concentration_ratio = top_four_sales / total_sales\n    \n    # Return the concentration ratio\n    return concentration_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-921",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment fund implements the succeeding payment structure: Yearly administrative fee based on year-end AUM: 2% Incentive fee: 20% Initial requirement rate before incentive fee starts: 4% Present top earning point: $610 million. The fund starts off the year with a value of $580 million and after one year, it ends with a value of $650 million before the fees are considered. What is the annual net percentage return to a shareholder for this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_value = 580000000  # Initial value of the fund in dollars\n    final_value_before_fees = 650000000  # Final value of the fund before fees in dollars\n    administrative_fee_rate = 0.02  # Yearly administrative fee rate\n    incentive_fee_rate = 0.20  # Incentive fee rate\n    initial_requirement_rate = 0.04  # Initial requirement rate before incentive fee starts\n    top_earning_point = 610000000  # Top earning point in dollars\n\n    # Calculate the administrative fee\n    administrative_fee = final_value_before_fees * administrative_fee_rate\n\n    # Calculate the final value after administrative fee\n    final_value_after_admin_fee = final_value_before_fees - administrative_fee\n\n    # Calculate the return before incentive fee\n    return_before_incentive_fee = final_value_after_admin_fee - initial_value\n\n    # Check if the return exceeds the initial requirement rate\n    if return_before_incentive_fee > (initial_value * initial_requirement_rate):\n        # Calculate the incentive fee\n        incentive_fee = (final_value_after_admin_fee - top_earning_point) * incentive_fee_rate\n    else:\n        incentive_fee = 0\n\n    # Calculate the final value after all fees\n    final_value_after_all_fees = final_value_after_admin_fee - incentive_fee\n\n    # Calculate the net return to the shareholder\n    net_return = final_value_after_all_fees - initial_value\n\n    # Calculate the annual net percentage return\n    annual_net_percentage_return = (net_return / initial_value) * 100\n\n    # return answer\n    return annual_net_percentage_return\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $1,000,000 |\n|---------|------------|\n| Returns of goods sold | $100,000 |\n| Cash collected | $800,000 |\n| Cost of goods sold | $700,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-922",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, which was its inaugural year of operations, GameSquare recorded certain data concerning the sale of its products. Under the accrual basis of accounting, how much net revenue would appear on GameSquare's 2009 income statement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 1000000\n    returns_of_goods_sold = 100000\n    \n    # Do math calculation to get the answer\n    net_revenue = revenue - returns_of_goods_sold\n    \n    # return answer\n    return net_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-923",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial advisor was requested to look for opportunities for arbitrage in the market of Treasury bonds through a comparison of the cash flows from some selected bonds and the cash flows of other bond combinations. If the price of a 1-year zero-coupon bond is USD 97 and a 1-year bond with a 7% coupon and payments every six months comes at USD 102, using a duplication method, what would be the cost of a 1-year Treasury bond with a 6% coupon that has semi-annual payments?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_zero_coupon = 97\n    price_7_percent_bond = 102\n    coupon_7_percent = 7 / 100\n    coupon_6_percent = 6 / 100\n    semi_annual_payments = 2\n    \n    # Calculate the semi-annual coupon payments for the 7% bond\n    semi_annual_coupon_7_percent = coupon_7_percent / semi_annual_payments\n    \n    # Calculate the semi-annual coupon payments for the 6% bond\n    semi_annual_coupon_6_percent = coupon_6_percent / semi_annual_payments\n    \n    # Calculate the cost of duplicating the 6% bond using the 1-year zero-coupon bond and the 7% bond\n    cost_6_percent_bond = (semi_annual_coupon_6_percent * price_zero_coupon) + ((1 + semi_annual_coupon_7_percent) * price_7_percent_bond)\n    \n    # return answer\n    return cost_6_percent_bond\n```"
        ]
    },
    {
        "tables": [
            "|                | Investment A | Investment B | Total |\n|----------------|--------------|--------------|-------|\n| Initial cost   | 100          | 150          | 250   |\n| Profit/loss    | -50          | 30           | -20   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-924",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the subsequent details (in $ millions) regarding a private investment fund: The supervisor's reward fee is 20% of the earnings. If there is no clawback clause applicable, the total reward fee (in $ millions) under a U.S.-style waterfall is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investment_a_initial_cost = 100\n    investment_a_profit_loss = -50\n    investment_b_initial_cost = 150\n    investment_b_profit_loss = 30\n    supervisor_reward_fee_rate = 0.20\n    \n    # Calculate total earnings\n    total_earnings = investment_a_profit_loss + investment_b_profit_loss\n    \n    # Calculate supervisor's reward fee\n    supervisor_reward_fee = total_earnings * supervisor_reward_fee_rate\n    \n    # Return the total reward fee in $ millions\n    return supervisor_reward_fee\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-925",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the stated price of an option is $1.25, what is the value of a single option contract?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    option_price = 1.25\n    contract_size = 100  # Standard size of an option contract\n    \n    # Do math calculation to get the answer\n    contract_value = option_price * contract_size\n    \n    # return answer\n    return contract_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-926",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the yearly yield-to-maturity, noted with a 12 period frequency, for a 4-year, zero coupon bond priced at 75% of par value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100  # Assuming par value is 100%\n    price = 75  # Price is 75% of par value\n    years = 4  # 4-year zero coupon bond\n    periods_per_year = 12  # 12 periods per year\n    total_periods = years * periods_per_year  # Total periods in the bond's life\n    \n    # Do math calculation to get the answer\n    # Calculate the yield-to-maturity using the formula for a zero coupon bond\n    # Price = Par Value / (1 + YTM/periods_per_year)^(total_periods)\n    # Solving for YTM:\n    YTM = (par_value / price) ** (1 / total_periods) - 1\n    YTM_annualized = YTM * periods_per_year\n    \n    # return answer\n    return YTM_annualized\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-927",
        "python_solution": "",
        "ground_truth": null,
        "question": "The analyst, Jane, performed a straightforward regression that accounted for the changes in electric usage based on temperature fluctuations. The total variation for the dependent variable totaled 132.08, with the explained variation being 60.38. She made 60 observations on a monthly basis. Can you compute the F-statistic to assess the model's fit?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_variation = 132.08\n    explained_variation = 60.38\n    number_of_observations = 60\n    number_of_predictors = 1  # Assuming one predictor variable (temperature)\n\n    # Do math calculation to get the answer\n    unexplained_variation = total_variation - explained_variation\n    degrees_of_freedom_model = number_of_predictors\n    degrees_of_freedom_error = number_of_observations - number_of_predictors - 1\n\n    mean_square_model = explained_variation / degrees_of_freedom_model\n    mean_square_error = unexplained_variation / degrees_of_freedom_error\n\n    f_statistic = mean_square_model / mean_square_error\n\n    # return answer\n    return f_statistic\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-928",
        "python_solution": "",
        "ground_truth": null,
        "question": "A one-year zero-coupon bond has a return of 4.0%. The yields on a two-year and a three-year zero-coupon bond are 5.0% and 6.0% respectively. What would be the forward rate for a loan for two years starting in one year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    one_year_rate = 0.04\n    two_year_rate = 0.05\n    three_year_rate = 0.06\n    \n    # Do math calculation to get the answer\n    # Calculate the forward rate for a loan for two years starting in one year\n    # Using the formula: (1 + three_year_rate)^3 / (1 + two_year_rate)^2 = (1 + one_year_rate) * (1 + forward_rate)^2\n    forward_rate = ((1 + three_year_rate)**3 / (1 + two_year_rate)**2 / (1 + one_year_rate))**(1/2) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-929",
        "python_solution": "",
        "ground_truth": null,
        "question": "Four years ago, Mike deposited $2,000 into his savings account for home renovations, it compounded annually at an annual interest rate of 3%. Now, Mike has altered his plan and has decided to leave the money in the bank for an additional five years. What is the current value of Mike's account?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 2000\n    annual_interest_rate = 0.03\n    years_initial = 4\n    years_additional = 5\n    \n    # Do math calculation to get the answer\n    # Calculate the value after the initial 4 years\n    value_after_initial_years = principal * (1 + annual_interest_rate) ** years_initial\n    \n    # Calculate the value after the additional 5 years\n    value_after_additional_years = value_after_initial_years * (1 + annual_interest_rate) ** years_additional\n    \n    # return answer\n    return value_after_additional_years\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class     | Geometric Return (%) |\n| --------------- | -------------------- |\n| Equities        | 8.0                  |\n| Corporate Bonds | 6.5                  |\n| Treasury bills  | 2.5                  |\n| Inflation       | 2.1                  |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-930",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the actual yield for stocks, as per the historic geometric returns observed by a research analyst?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    geometric_return_equities = 8.0\n    \n    # Do math calculation to get the answer\n    # The actual yield for stocks is directly given by the geometric return\n    actual_yield_stocks = geometric_return_equities\n    \n    # return answer\n    return actual_yield_stocks\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-931",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming quarterly compounding, what is the stated annual interest rate if a financial institution offers an effective annual rate (EAR) of 12%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    EAR = 0.12  # Effective Annual Rate\n    compounding_periods = 4  # Quarterly compounding\n    \n    # Do math calculation to get the answer\n    # Formula to convert EAR to Stated Annual Interest Rate (SAIR) for quarterly compounding:\n    # SAIR = compounding_periods * [(1 + EAR) ** (1 / compounding_periods) - 1]\n    SAIR = compounding_periods * ((1 + EAR) ** (1 / compounding_periods) - 1)\n    \n    # return answer\n    return SAIR\n```"
        ]
    },
    {
        "tables": [
            "|                        | Maturity (Years) |     |     |     |\n|------------------------|------------------|-----|-----|-----|\n|                        | 1                | 2   | 3   | 4   |\n| Government spot rate   | 2.25%            | 2.70% | 3.30% | 4.05% |\n| Swap spread            | 0.25%            | 0.30% | 0.45% | 0.70% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-932",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson collects data on spot rates for on-the-run yearly-coupon government securities and swap spreads, as shown in the Exhibit below. Johnson purchases a four-year, zero-coupon corporate bond and then sells it after two years. Johnson demonstrates the returns from this approach using the swap rate as a substitute for corporate yields. What should Johnson display as a total return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    government_spot_rates = [0.0225, 0.0270, 0.0330, 0.0405]\n    swap_spreads = [0.0025, 0.0030, 0.0045, 0.0070]\n    \n    # Calculate the swap rates by adding the swap spreads to the government spot rates\n    swap_rates = [government_spot_rates[i] + swap_spreads[i] for i in range(4)]\n    \n    # The initial swap rate for a four-year zero-coupon bond\n    initial_swap_rate_4yr = swap_rates[3]\n    \n    # The swap rate for a two-year zero-coupon bond after holding for two years\n    final_swap_rate_2yr = swap_rates[1]\n    \n    # Assume the face value of the bond is $100 for simplicity\n    face_value = 100\n    \n    # Calculate the price of the four-year zero-coupon bond at the time of purchase\n    price_at_purchase = face_value / (1 + initial_swap_rate_4yr) ** 4\n    \n    # Calculate the price of the bond after two years (as a two-year zero-coupon bond)\n    price_after_two_years = face_value / (1 + final_swap_rate_2yr) ** 2\n    \n    # Calculate the total return\n    total_return = (price_after_two_years - price_at_purchase) / price_at_purchase\n    \n    # return answer\n    return total_return\n```\n\nThis Python program calculates the total return for Johnson who purchases a four-year zero-coupon corporate bond and sells it after two years, using the swap rate as a substitute for corporate yields. The program first calculates the swap rates by adding the swap spreads to the government spot rates. Then, it calculates the price of the bond at the time of purchase and after two years, and finally computes the total return based on these prices."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-933",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an investment advisor has a bond position valued at USD 100 million with a modified duration of eight years and a convexity of 150 years, with the term structure being flat, what would be the change in the position's value if interest rates were to rise by 25 basis points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_value = 100000000  # USD 100 million\n    modified_duration = 8  # 8 years\n    convexity = 150  # 150 years\n    interest_rate_change = 0.0025  # 25 basis points (0.25%)\n    \n    # Do math calculation to get the answer\n    # Calculate the change in value due to modified duration\n    value_change_duration = -modified_duration * bond_value * interest_rate_change\n    \n    # Calculate the change in value due to convexity\n    value_change_convexity = 0.5 * convexity * bond_value * (interest_rate_change ** 2)\n    \n    # Total change in value\n    total_value_change = value_change_duration + value_change_convexity\n    \n    # return answer\n    return total_value_change\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-934",
        "python_solution": "",
        "ground_truth": null,
        "question": "The women's apparel producer, Ivory Ensign, recorded a $20 million expense in salaries. The initial balance of payable salaries was at $3 million and eventually ended at $1 million. How much in salaries did the firm distribute in cash?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expense_in_salaries = 20000000\n    initial_balance_payable_salaries = 3000000\n    ending_balance_payable_salaries = 1000000\n    \n    # Do math calculation to get the answer\n    cash_distributed_in_salaries = expense_in_salaries - (initial_balance_payable_salaries - ending_balance_payable_salaries)\n    \n    # return answer\n    return cash_distributed_in_salaries\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-935",
        "python_solution": "",
        "ground_truth": null,
        "question": "The annual spot rate r(1) is 5% and the forward price for a one-year zero-coupon bond starting in a year stands at 0.9346. What would be the spot price of a two-year zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r1 = 0.05  # Annual spot rate for one year\n    forward_price = 0.9346  # Forward price for a one-year zero-coupon bond starting in a year\n    \n    # Do math calculation to get the answer\n    # The spot price of a two-year zero-coupon bond can be calculated using the formula:\n    # Spot price = Forward price / (1 + r1)\n    spot_price = forward_price / (1 + r1)\n    \n    # return answer\n    return spot_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-936",
        "python_solution": "",
        "ground_truth": null,
        "question": "The possibility of a variable, which follows a normal distribution with an average of 0.9 and a standard deviation of 1.5, being in the range of 0.9 and 1.2 is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean = 0.9\n    std_dev = 1.5\n    lower_bound = 0.9\n    upper_bound = 1.2\n    \n    # Import necessary library\n    from scipy.stats import norm\n    \n    # Do math calculation to get the answer\n    probability = norm.cdf(upper_bound, mean, std_dev) - norm.cdf(lower_bound, mean, std_dev)\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-937",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, Pelican Enterprises reported a net profit of $1,000,000. On the first of January, 2009, there were 1,000,000 shares in circulation. The company issued an additional 100,000 shares at $20 per share on July 1, 2009. Common shareholders received $200,000 in dividends. What is the basic earnings per share for Pelican Enterprises for the year 2009?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_profit = 1000000\n    initial_shares = 1000000\n    additional_shares = 100000\n    issue_price = 20\n    dividends = 200000\n    \n    # Calculate weighted average number of shares\n    # Shares were outstanding for 6 months at 1,000,000 and 6 months at 1,100,000\n    weighted_avg_shares = (initial_shares * 6 / 12) + ((initial_shares + additional_shares) * 6 / 12)\n    \n    # Calculate earnings available to common shareholders\n    earnings_available = net_profit - dividends\n    \n    # Calculate basic earnings per share\n    basic_eps = earnings_available / weighted_avg_shares\n    \n    # return answer\n    return basic_eps\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-938",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company is planning to acquire 10,000 barrels of West Texas Intermediate Crude Oil and intends to hedge its purchase utilizing the Brent Crude Oil futures contract. Given that the correlation between the spot and futures prices is 0.72 and the annual volatility of the spot price and the Brent Crude Oil futures price are 0.35 and 0.27 respectively, what is the hedge ratio for the company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.72\n    spot_volatility = 0.35\n    futures_volatility = 0.27\n    \n    # Do math calculation to get the answer\n    hedge_ratio = (correlation * spot_volatility) / futures_volatility\n    \n    # return answer\n    return hedge_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-939",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the cost per 100 of face value for a bond offering a 3% annual interest rate that will mature in two years, given a market discount rate of 4%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_interest_rate = 0.03\n    market_discount_rate = 0.04\n    years_to_maturity = 2\n    face_value = 100\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the bond's interest payments\n    interest_payment = face_value * annual_interest_rate\n    present_value_interest = interest_payment * (1 - (1 + market_discount_rate) ** -years_to_maturity) / market_discount_rate\n    \n    # Calculate the present value of the bond's face value\n    present_value_face_value = face_value / (1 + market_discount_rate) ** years_to_maturity\n    \n    # Calculate the total present value of the bond\n    total_present_value = present_value_interest + present_value_face_value\n    \n    # return answer\n    return total_present_value\n```"
        ]
    },
    {
        "tables": [
            "| coupon | 15% annual-pay coupon |\n| --- | --- |\n| years to maturity | 7 years |\n| current price | trading at par |\n| basis point change in yield | 25 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-940",
        "python_solution": "",
        "ground_truth": null,
        "question": "Estimate the approximate modified duration of the bond given the details below:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.15  # 15% annual-pay coupon\n    years_to_maturity = 7  # 7 years to maturity\n    current_price = 1000  # trading at par (assuming par value is $1000)\n    basis_point_change = 0.0025  # 25 basis points change in yield (25/10000)\n\n    # Do math calculation to get the answer\n    # Modified Duration formula: (Price if yields decrease - Price if yields increase) / (2 * Initial Price * Yield Change)\n    # Since we don't have the actual price changes with yield changes, we approximate using the formula:\n    # Modified Duration \u2248 (1 / Initial Price) * (Change in Price / Change in Yield)\n    # Here, we assume the change in price due to the yield change is proportional to the duration.\n\n    # Approximate Modified Duration\n    modified_duration = years_to_maturity / (1 + coupon_rate)\n\n    # return answer\n    return modified_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-941",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier purchases a Treasury bill that matures in one month for $987. When it matures, he receives $1,000. Work out the effective annual rate (EAR) for him.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 987\n    maturity_value = 1000\n    period_in_months = 1\n    \n    # Calculate the monthly return rate\n    monthly_return_rate = (maturity_value / initial_investment) - 1\n    \n    # Convert monthly return rate to annual effective rate\n    annual_return_rate = (1 + monthly_return_rate) ** 12 - 1\n    \n    # return answer\n    return annual_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-942",
        "python_solution": "",
        "ground_truth": null,
        "question": "Firm B declared COGS of $50 million. Over the year, there was an increase of $8 million in inventory and a decrease of $5 million in accounts payable. What is the total cash the firm paid to its suppliers?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cogs = 50000000  # COGS in dollars\n    inventory_increase = 8000000  # Increase in inventory in dollars\n    accounts_payable_decrease = 5000000  # Decrease in accounts payable in dollars\n    \n    # Do math calculation to get the answer\n    # Total cash paid to suppliers = COGS + Increase in inventory - Decrease in accounts payable\n    total_cash_paid = cogs + inventory_increase - accounts_payable_decrease\n    \n    # return answer\n    return total_cash_paid\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-943",
        "python_solution": "",
        "ground_truth": null,
        "question": "In New York, Mia peddles homemade cakes. On a daily basis, she can sell 250 cakes at $10 each. On Mother's Day, she offers a special discount and anticipates a sale of 350 cakes at the discounted rate of $8 per cake. What is the marginal revenue per cake she earns from the special discount?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    regular_price = 10\n    regular_quantity = 250\n    discount_price = 8\n    discount_quantity = 350\n    \n    # Calculate total revenue before discount\n    regular_revenue = regular_price * regular_quantity\n    \n    # Calculate total revenue after discount\n    discount_revenue = discount_price * discount_quantity\n    \n    # Calculate marginal revenue\n    marginal_revenue = discount_revenue - regular_revenue\n    \n    # Calculate marginal revenue per cake\n    marginal_revenue_per_cake = marginal_revenue / (discount_quantity - regular_quantity)\n    \n    # return answer\n    return marginal_revenue_per_cake\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-944",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond has an annual coupon rate of 4%, and it pays interest twice a year, and is due in two years. Given a 6% market discount rate, what is the cost of this bond for every 100 of nominal value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_coupon_rate = 0.04\n    coupon_payment_frequency = 2  # twice a year\n    years_to_maturity = 2\n    market_discount_rate = 0.06\n    nominal_value = 100\n    \n    # Calculate semi-annual coupon payment\n    semi_annual_coupon_payment = (annual_coupon_rate / coupon_payment_frequency) * nominal_value\n    \n    # Calculate the number of periods\n    periods = coupon_payment_frequency * years_to_maturity\n    \n    # Calculate the semi-annual discount rate\n    semi_annual_discount_rate = market_discount_rate / coupon_payment_frequency\n    \n    # Initialize the present value of the bond\n    present_value = 0\n    \n    # Calculate the present value of each coupon payment\n    for i in range(1, periods + 1):\n        present_value += semi_annual_coupon_payment / (1 + semi_annual_discount_rate) ** i\n    \n    # Calculate the present value of the nominal value at maturity\n    present_value += nominal_value / (1 + semi_annual_discount_rate) ** periods\n    \n    # Return the present value of the bond\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-945",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a portfolio contains two investments, both of equal value, with a VaR of $15 million and $30 million respectively, and if these two investments are perfectly correlated, what would be the calculated VaR of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    var_investment1 = 15000000\n    var_investment2 = 30000000\n    \n    # Do math calculation to get the answer\n    # Since the investments are perfectly correlated, the VaR of the portfolio is the sum of the individual VaRs\n    var_portfolio = var_investment1 + var_investment2\n    \n    # return answer\n    return var_portfolio\n```"
        ]
    },
    {
        "tables": [
            "| | | Year 1 | Year 2 | Year 3 | Year 4 |\n|---|---|---|---|---|---|\n| | NOI | $1,100,000 | $1,166,000 | $1,236,000 | $1,310,000 |\n| | | **DCF Assumptions** | | | |\n| | | | Investment Hold Period | | 3 years |\n| | | | Going-in Cap Rate | | 5.00% |\n| | | | Terminal Cap Rate | | 6.00% |\n| | | | Discount Rate | | 7.00% |\n| | | | Income /Value  Growth Rate | | Constant |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-946",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given information, what is the worth of Asset A utilizing the direct capitalization approach?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    noi_year1 = 1100000\n    going_in_cap_rate = 0.05\n    \n    # Do math calculation to get the answer\n    asset_worth = noi_year1 / going_in_cap_rate\n    \n    # return answer\n    return asset_worth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-947",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business offers a two-year, non-refundable service agreement for \u20ac420. Historically, the business anticipates meeting 25% of service expenses in the first year of the contract, with the rest covered in the second year. How much revenue does the business recognize in the first year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_service_agreement = 420\n    first_year_expense_coverage = 0.25\n    \n    # Do math calculation to get the answer\n    first_year_revenue = total_service_agreement * first_year_expense_coverage\n    \n    # return answer\n    return first_year_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-948",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Sarah intends to purchase a property five years from now, anticipated to be worth $250,000 then, how much should she invest currently, given an annual rate of 3% that is compounded monthly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    future_value = 250000\n    annual_rate = 0.03\n    compounding_periods_per_year = 12\n    years = 5\n    \n    # Do math calculation to get the answer\n    # Formula for present value with monthly compounding: PV = FV / (1 + r/n)^(n*t)\n    present_value = future_value / (1 + annual_rate / compounding_periods_per_year) ** (compounding_periods_per_year * years)\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period: Price(E) | Beginning of Period: Shares | End of Period: Price(\u20ac) | End of Period: Shares |\n|----------|-------------------------------|-----------------------------|-------------------------|-----------------------|\n| A        | 20.00                         | 300                         | 22.00                   | 300                   |\n| B        | 50.00                         | 300                         | 48.00                   | 300                   |\n| C        | 26.00                         | 2,000                       | 30.00                   | 2,000                 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-949",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the following information for a value-weighted index: What is the return on the value-weighted index for the given period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = {'A': 20.00, 'B': 50.00, 'C': 26.00}\n    ending_prices = {'A': 22.00, 'B': 48.00, 'C': 30.00}\n    shares = {'A': 300, 'B': 300, 'C': 2000}\n    \n    # Calculate the beginning and ending market values\n    beginning_market_values = {security: beginning_prices[security] * shares[security] for security in beginning_prices}\n    ending_market_values = {security: ending_prices[security] * shares[security] for security in ending_prices}\n    \n    # Calculate the total beginning and ending market values\n    total_beginning_market_value = sum(beginning_market_values.values())\n    total_ending_market_value = sum(ending_market_values.values())\n    \n    # Calculate the return on the value-weighted index\n    return_on_index = (total_ending_market_value - total_beginning_market_value) / total_beginning_market_value\n    \n    # return answer\n    return return_on_index\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-950",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Corporation X employs the double-declining balance method for amortizing a patent worth $120,000 with a useful lifespan of 4 years, what would be the difference in the net book value at the end of the 3rd year if it switched to the straight-line method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_value = 120000\n    useful_lifespan = 4\n    \n    # Calculate depreciation using double-declining balance method\n    double_declining_rate = 2 / useful_lifespan\n    book_value_ddb = initial_value\n    for year in range(1, 4):  # Calculate for 3 years\n        depreciation_ddb = book_value_ddb * double_declining_rate\n        book_value_ddb -= depreciation_ddb\n    \n    # Calculate depreciation using straight-line method\n    straight_line_depreciation = initial_value / useful_lifespan\n    book_value_sl = initial_value\n    for year in range(1, 4):  # Calculate for 3 years\n        book_value_sl -= straight_line_depreciation\n    \n    # Calculate the difference in net book value at the end of the 3rd year\n    difference = book_value_ddb - book_value_sl\n    \n    # return answer\n    return difference\n```"
        ]
    },
    {
        "tables": [
            "| 10-Year Historical | Current | Capital Market Expectations |\n| ----------------- | ------- | ---------------------------- |\n| Average government bond yield: 2.8% | 10-year government bond yield:2.3% |   |\n| Average annual equity return:4.6% | Year-over-year equity return:-9.4% |   |\n| Average annual inflation rate: 2.3% | Year-over-year inflation rate:2.1% | Expected annual inflation: 2.3% |\n| Equity market P/E (beginning of period): 15x | Current equity market P/E:14.5x | Expected equity market P/E: 14.0x |\n| Average annual dividend income return: 2.6% |   | Expected annual income return: 2.4% |\n| Average annual real earnings growth: 6.0% |   | Expected annual real earnings growth: 5.0% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-951",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier from Australia presently possesses an equity portfolio worth A$240 million. Based on his evaluation of the risk and return potential of the Australian economy, he is thinking about reconfiguring his portfolio. A table was generated containing data relevant to the Australian investment markets and the economy: Use the data from the table to determine the historical Australian equity risk premium using the \"equity-vs-bonds\" premium approach.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average_equity_return = 4.6  # Average annual equity return\n    average_bond_yield = 2.8  # Average government bond yield\n\n    # Do math calculation to get the answer\n    equity_risk_premium = average_equity_return - average_bond_yield\n\n    # return answer\n    return equity_risk_premium\n```"
        ]
    },
    {
        "tables": [
            "| acquisition cost | $500,000 |\n|---|---|\n| accumulated depreciation | $90,000 |\n| loss on the sale | $100,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-952",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the analyst attempting to calculate the selling price of the intangible asset of corporation TDC based on the data provided?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 500000\n    accumulated_depreciation = 90000\n    loss_on_sale = 100000\n    \n    # Do math calculation to get the answer\n    # The selling price can be calculated by subtracting the loss on sale from the book value of the asset\n    # Book value = Acquisition cost - Accumulated depreciation\n    book_value = acquisition_cost - accumulated_depreciation\n    selling_price = book_value - loss_on_sale\n    \n    # return answer\n    return selling_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-953",
        "python_solution": "",
        "ground_truth": null,
        "question": "By utilizing the two-stage dividend discount model, John has appraised the worth of Corporation N. The firm has given a dividend of $1 per share in the latest year. In this model, it is forecasted that the dividend will have an annual growth of 10% for the initial three years, then continue to grow at a rate of 5% per year indefinitely. With a required return rate of 10%, what is the present value of Corporation N's stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_dividend = 1  # Initial dividend per share\n    growth_rate_initial = 0.10  # Initial growth rate of 10%\n    growth_rate_constant = 0.05  # Constant growth rate of 5%\n    required_return = 0.10  # Required return rate of 10%\n    years_initial_growth = 3  # Number of years with initial growth rate\n\n    # Calculate the dividends for the initial growth period\n    dividends_initial = [initial_dividend * (1 + growth_rate_initial) ** (i + 1) for i in range(years_initial_growth)]\n    \n    # Calculate the present value of the dividends during the initial growth period\n    present_value_initial = sum(dividend / (1 + required_return) ** (i + 1) for i, dividend in enumerate(dividends_initial))\n    \n    # Calculate the dividend at the end of the initial growth period\n    terminal_dividend = dividends_initial[-1] * (1 + growth_rate_constant)\n    \n    # Calculate the present value of the terminal dividend using the constant growth model\n    present_value_terminal = terminal_dividend / (required_return - growth_rate_constant) / (1 + required_return) ** years_initial_growth\n    \n    # Calculate the total present value of the stock\n    present_value_total = present_value_initial + present_value_terminal\n    \n    # return answer\n    return present_value_total\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-954",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the following spot rates term structure: 1-year at 2.50%, 2-year at 3.00%, 3-year at 3.50%, 4-year at 4.00%, and 5-year at 4.50%, can you calculate the two-year forward rate that begins after three years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_1y = 0.025\n    spot_rate_2y = 0.030\n    spot_rate_3y = 0.035\n    spot_rate_4y = 0.040\n    spot_rate_5y = 0.045\n    \n    # Do math calculation to get the answer\n    # Calculate the 5-year spot rate factor\n    spot_rate_5y_factor = (1 + spot_rate_5y) ** 5\n    \n    # Calculate the 3-year spot rate factor\n    spot_rate_3y_factor = (1 + spot_rate_3y) ** 3\n    \n    # Calculate the two-year forward rate starting after three years\n    forward_rate_2y_after_3y = (spot_rate_5y_factor / spot_rate_3y_factor) ** (1/2) - 1\n    \n    # return answer\n    return forward_rate_2y_after_3y\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-955",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher ascertains that roughly 99% of the daily sales observations for a firm fall within the $230,000 to $480,000 bracket, with the sales being distributed normally. If about 99% of all observations fit in the \u03bc\u00b13\u03c3 range, what is the standard deviation of the corporation's daily sales when using the approximate z-value instead of the accurate table?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lower_bound = 230000\n    upper_bound = 480000\n    mean = (lower_bound + upper_bound) / 2\n    z_value = 3  # Approximate z-value for 99% confidence interval\n    \n    # Do math calculation to get the answer\n    standard_deviation = (upper_bound - mean) / z_value\n    \n    # return answer\n    return standard_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-956",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ corporation rents a machine for its operations for a duration of 6 years with an annual payment of $3000, an 8% interest rate, under an operating lease, what is the present value of the lease payment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_payment = 3000\n    interest_rate = 0.08\n    lease_duration = 6\n    \n    # Do math calculation to get the answer\n    # The present value of an annuity formula is used: PV = PMT * [(1 - (1 + r)^-n) / r]\n    present_value = annual_payment * ((1 - (1 + interest_rate)**-lease_duration) / interest_rate)\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-957",
        "python_solution": "",
        "ground_truth": null,
        "question": "If in 2016, Serena purchased a machine for $50,000 that has a useful life of ten years and a residual value of $5,000, what would the depreciation of this machine be in 2017 if we use the straight-line method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 50000\n    useful_life = 10\n    residual_value = 5000\n    \n    # Do math calculation to get the answer\n    annual_depreciation = (initial_cost - residual_value) / useful_life\n    \n    # return answer\n    return annual_depreciation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-958",
        "python_solution": "",
        "ground_truth": null,
        "question": "On the 1st of January, a company releases ten-year bonds with a principal amount of \u20ac10,000,000 and with yearly interest payments due every 31st of December. The coupon rate is 2.0 percent, and the effective interest rate is 3.0 percent. By applying the effective interest rate method, what is the amortized discount at the conclusion of the first year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal_amount = 10000000\n    coupon_rate = 0.02\n    effective_interest_rate = 0.03\n    bond_term = 10\n    \n    # Calculate the initial bond price using the present value formula\n    initial_bond_price = principal_amount / (1 + effective_interest_rate) ** bond_term\n    \n    # Calculate the interest payment using the coupon rate\n    interest_payment = principal_amount * coupon_rate\n    \n    # Calculate the effective interest for the first year\n    effective_interest = initial_bond_price * effective_interest_rate\n    \n    # Calculate the amortized discount for the first year\n    amortized_discount = effective_interest - interest_payment\n    \n    # return answer\n    return amortized_discount\n```"
        ]
    },
    {
        "tables": [
            "| Balance Sheet Item                          | 12/31/2016 | 12/31/2017 |\n| ------------------------------------------- | ---------- | ---------- |\n| Common stock                                | $50        | $55        |\n| Additional paid-in capital  common stock    | $80        | $100       |\n| Retained earnings                           | $95        | $150       |"
        ],
        "topic": "Accounting",
        "question_id": "test-959",
        "python_solution": "",
        "ground_truth": null,
        "question": "The net income reported by Corporation B was $56 million. Given the subsequent balance sheets (in $millions), what was the known net financing cash flows for 2017? The assumption is that dividends paid are considered as CFF.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    common_stock_2016 = 50\n    common_stock_2017 = 55\n    additional_paid_in_capital_2016 = 80\n    additional_paid_in_capital_2017 = 100\n    retained_earnings_2016 = 95\n    retained_earnings_2017 = 150\n    net_income_2017 = 56\n\n    # Calculate the change in retained earnings\n    change_in_retained_earnings = retained_earnings_2017 - retained_earnings_2016\n\n    # Calculate dividends paid\n    dividends_paid = net_income_2017 - change_in_retained_earnings\n\n    # Calculate the change in common stock and additional paid-in capital\n    change_in_common_stock = common_stock_2017 - common_stock_2016\n    change_in_additional_paid_in_capital = additional_paid_in_capital_2017 - additional_paid_in_capital_2016\n\n    # Calculate net financing cash flows\n    net_financing_cash_flows = change_in_common_stock + change_in_additional_paid_in_capital - dividends_paid\n\n    # return answer\n    return net_financing_cash_flows\n```\n\nThis Python program calculates the net financing cash flows for 2017 by considering the changes in common stock, additional paid-in capital, and dividends paid, which are derived from the given balance sheets and net income."
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-960",
        "python_solution": "",
        "ground_truth": null,
        "question": "If there is a positive parallel shift in the yield curve of 25 basis points, which of the following answers best estimates the resulting change in the value of Michael\u2019s portfolio which contains a fixed-income position with a market value of USD 70 million, a modified duration of 6.44 years, and yields 6.7% compounded semiannually?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_value = 70000000  # USD 70 million\n    modified_duration = 6.44  # years\n    yield_change = 0.0025  # 25 basis points (0.25%)\n    \n    # Do math calculation to get the answer\n    # The formula to estimate the change in portfolio value due to a change in yield is:\n    # \u0394P \u2248 -P * D * \u0394y\n    # where \u0394P is the change in portfolio value, P is the current market value, D is the modified duration, and \u0394y is the change in yield.\n    change_in_value = -market_value * modified_duration * yield_change\n    \n    # return answer\n    return change_in_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-961",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume that the hedge fund known as Global Finance started with an initial capital of $250 million. Global charges a 2% administrative fee based upon assets managed at the close of the year, and a bonus fee of 20% calculated on gains surpassing the 8% mark. The fund's value increased by 16% in its inaugural year. Given that management fees are calculated using end-of-year valuation, what will an investor's net return be, taking into consideration that the performance fee is calculated after the management fee?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_capital = 250000000  # in dollars\n    administrative_fee_rate = 0.02\n    bonus_fee_rate = 0.20\n    annual_increase_rate = 0.16\n    performance_threshold = 0.08\n\n    # Calculate end-of-year valuation\n    end_of_year_valuation = initial_capital * (1 + annual_increase_rate)\n\n    # Calculate administrative fee\n    administrative_fee = end_of_year_valuation * administrative_fee_rate\n\n    # Calculate gains surpassing the 8% mark\n    gains_above_threshold = end_of_year_valuation - (initial_capital * (1 + performance_threshold))\n\n    # Calculate bonus fee\n    bonus_fee = gains_above_threshold * bonus_fee_rate\n\n    # Calculate total fees\n    total_fees = administrative_fee + bonus_fee\n\n    # Calculate net return for the investor\n    net_return = end_of_year_valuation - total_fees - initial_capital\n\n    # Calculate net return rate\n    net_return_rate = net_return / initial_capital\n\n    # return answer\n    return net_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-962",
        "python_solution": "",
        "ground_truth": null,
        "question": "Every day, a prominent credit card corporation evaluates 10,000,000 transactions for possible scams. Among these transactions, 0.001% are identified as scam attempts. Should their system detect 90% of all scam transactions, while also erroneously flagging 0.0001% of legitimate transactions, what are the chances that a flagged transaction is actually a scam?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_transactions = 10000000\n    scam_percentage = 0.001 / 100  # Convert percentage to decimal\n    scam_detection_rate = 0.90\n    false_positive_rate = 0.0001 / 100  # Convert percentage to decimal\n    \n    # Calculate the number of scam transactions\n    scam_transactions = total_transactions * scam_percentage\n    \n    # Calculate the number of detected scam transactions\n    detected_scam_transactions = scam_transactions * scam_detection_rate\n    \n    # Calculate the number of legitimate transactions\n    legitimate_transactions = total_transactions - scam_transactions\n    \n    # Calculate the number of falsely flagged legitimate transactions\n    falsely_flagged_transactions = legitimate_transactions * false_positive_rate\n    \n    # Calculate the total number of flagged transactions\n    total_flagged_transactions = detected_scam_transactions + falsely_flagged_transactions\n    \n    # Calculate the probability that a flagged transaction is actually a scam\n    probability_scam_given_flagged = detected_scam_transactions / total_flagged_transactions\n    \n    # return answer\n    return probability_scam_given_flagged\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|---|---|---|\n| A | 20 | 16 |\n| B | 20 | 12 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-963",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a correlation of -0.8 between two securities, what would be the anticipated standard deviation if the two assets are given equal weight, as recently structured by Laurel, a manager at an investment firm?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_A = 0.5\n    weight_B = 0.5\n    std_dev_A = 16 / 100  # Convert percentage to decimal\n    std_dev_B = 12 / 100  # Convert percentage to decimal\n    correlation = -0.8\n    \n    # Do math calculation to get the answer\n    # Formula for portfolio standard deviation: sqrt(wA^2 * stdA^2 + wB^2 * stdB^2 + 2 * wA * wB * stdA * stdB * correlation)\n    portfolio_std_dev = ((weight_A ** 2) * (std_dev_A ** 2) + \n                         (weight_B ** 2) * (std_dev_B ** 2) + \n                         2 * weight_A * weight_B * std_dev_A * std_dev_B * correlation) ** 0.5\n    \n    # Convert back to percentage\n    portfolio_std_dev_percentage = portfolio_std_dev * 100\n    \n    # return answer\n    return portfolio_std_dev_percentage\n```"
        ]
    },
    {
        "tables": [
            "|                                       | $ Millions |\n|---------------------------------------|------------|\n| Short-term borrowing                  | 4,231      |\n| Current portion of long-term interest-bearing debt |    |\n| Long-term interest-bearing debt       | 925        |\n| Average shareholders' equity          | 18,752     |\n| Average total assets                  | 45,981     |"
        ],
        "topic": "Accounting",
        "question_id": "test-964",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the financial leverage ratio for a business, given the provided selected financial data?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average_total_assets = 45981  # in $ millions\n    average_shareholders_equity = 18752  # in $ millions\n    \n    # Do math calculation to get the answer\n    financial_leverage_ratio = average_total_assets / average_shareholders_equity\n    \n    # return answer\n    return financial_leverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-965",
        "python_solution": "",
        "ground_truth": null,
        "question": "The F(18) is supposed to be what, in a continuous uniform distribution defined as U(5, 15)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    a = 5  # Lower bound of the uniform distribution\n    b = 15  # Upper bound of the uniform distribution\n    x = 18  # The value at which we want to find the cumulative distribution function (CDF)\n\n    # Do math calculation to get the answer\n    # For a continuous uniform distribution U(a, b), the CDF at x is (x - a) / (b - a) if x is within the interval [a, b]\n    # Since x = 18 is outside the interval [5, 15], the CDF value is 1 (as the distribution is uniform and x is beyond the upper bound)\n    if x < a:\n        answer = 0\n    elif x > b:\n        answer = 1\n    else:\n        answer = (x - a) / (b - a)\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Fund | Expected Return | GDP Factor Sensitivity | Inflation Factor Sensitivity |\n|------|-----------------|------------------------|------------------------------|\n| A    | 15%             | 1.2                    | 1                            |\n| B    | 20%             | 2                      | 0.2                          |\n| C    | 10%             | 1.5                    | 0                            |",
            "| Factor     | Forecast | Actual |\n| -----------| ---------| -------|\n| inflation  | 3.5%     | 4.2%   |\n| GDP growth | 6%       | 6.5%   |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-966",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the given chart and the details about inflation and GDP growth data, what is the yield for Portfolio X and Z, made up of a 55% allocation to portfolio X and a 45% allocation to portfolio Z?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inflation_forecast = 0.035\n    inflation_actual = 0.042\n    gdp_forecast = 0.06\n    gdp_actual = 0.065\n    \n    # Fund A\n    expected_return_A = 0.15\n    gdp_sensitivity_A = 1.2\n    inflation_sensitivity_A = 1\n    \n    # Fund B\n    expected_return_B = 0.20\n    gdp_sensitivity_B = 2\n    inflation_sensitivity_B = 0.2\n    \n    # Fund C\n    expected_return_C = 0.10\n    gdp_sensitivity_C = 1.5\n    inflation_sensitivity_C = 0\n    \n    # Portfolio X (55% Fund A, 45% Fund B)\n    allocation_X_A = 0.55\n    allocation_X_B = 0.45\n    \n    # Portfolio Z (55% Fund B, 45% Fund C)\n    allocation_Z_B = 0.55\n    allocation_Z_C = 0.45\n    \n    # Calculate the expected return of Portfolio X\n    expected_return_X = (allocation_X_A * expected_return_A) + (allocation_X_B * expected_return_B)\n    \n    # Calculate the expected return of Portfolio Z\n    expected_return_Z = (allocation_Z_B * expected_return_B) + (allocation_Z_C * expected_return_C)\n    \n    # Calculate the sensitivity of Portfolio X to GDP and Inflation\n    gdp_sensitivity_X = (allocation_X_A * gdp_sensitivity_A) + (allocation_X_B * gdp_sensitivity_B)\n    inflation_sensitivity_X = (allocation_X_A * inflation_sensitivity_A) + (allocation_X_B * inflation_sensitivity_B)\n    \n    # Calculate the sensitivity of Portfolio Z to GDP and Inflation\n    gdp_sensitivity_Z = (allocation_Z_B * gdp_sensitivity_B) +"
        ]
    },
    {
        "tables": [
            "| Metric                        |        |\n|-------------------------------|--------|\n| Sales                         | $421,000 |\n| Cost of goods sold (COGS)     | $315,000 |\n| Cash                          | $30,000  |\n| Average accounts receivable   | $40,000  |\n| Average inventories           | $36,000  |\n| Average accounts payable      | $33,000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-967",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the selected financial data given, what is the cash conversion cycle (in days) of the business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales = 421000\n    COGS = 315000\n    cash = 30000\n    avg_accounts_receivable = 40000\n    avg_inventories = 36000\n    avg_accounts_payable = 33000\n    \n    # Calculate Days Sales Outstanding (DSO)\n    DSO = 365 * avg_accounts_receivable / sales\n    \n    # Calculate Days Inventory Outstanding (DIO)\n    DIO = 365 * avg_inventories / COGS\n    \n    # Calculate Days Payable Outstanding (DPO)\n    DPO = 365 * avg_accounts_payable / COGS\n    \n    # Calculate Cash Conversion Cycle (CCC)\n    CCC = DSO + DIO - DPO\n    \n    # return answer\n    return CCC\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-968",
        "python_solution": "",
        "ground_truth": null,
        "question": "If you have a portfolio made up of five shares, how many distinct covariance terms, without considering variances, are needed to compute the return variance of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    number_of_shares = 5\n    \n    # Do math calculation to get the answer\n    # The number of distinct covariance terms in a covariance matrix for n assets is given by n*(n-1)/2\n    distinct_covariance_terms = number_of_shares * (number_of_shares - 1) // 2\n    \n    # return answer\n    return distinct_covariance_terms\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-969",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, Corporation X had a net income of $20,000 and paid out cash dividends of $1,500 to its common shareholders and another $2,000 to preferred shareholders. At the beginning of the year, there were 20,000 shares of common stock. On July 1st, 1,000 additional shares were issued. What is the Basic EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 20000\n    cash_dividends_common = 1500\n    cash_dividends_preferred = 2000\n    shares_beginning = 20000\n    shares_issued_july = 1000\n    \n    # Calculate the weighted average number of shares\n    # Shares from Jan to June (6 months)\n    shares_first_half = shares_beginning * (6 / 12)\n    # Shares from July to Dec (6 months)\n    shares_second_half = (shares_beginning + shares_issued_july) * (6 / 12)\n    weighted_avg_shares = shares_first_half + shares_second_half\n    \n    # Calculate the earnings available to common shareholders\n    earnings_common = net_income - cash_dividends_preferred\n    \n    # Calculate Basic EPS\n    basic_eps = earnings_common / weighted_avg_shares\n    \n    # return answer\n    return basic_eps\n```"
        ]
    },
    {
        "tables": [
            "|                                            |        |\n|--------------------------------------------|--------|\n| **Exhibit 1  Atlantic Preserves, Inc.**                |        |\n| **Selected Information from Note F of the 2013 Annual Financial Statements** |        |\n| **Relating to the Company's Defined Benefit Pension Plan (in $ thousands)**   |        |\n| Start-of-year pension obligation           | 72,544 |\n| Start-of-year plan assets                  | 60,096 |\n| End-of-year pension obligation             | 74,077 |\n| End-of-year plan assets                    | 61,812 |\n| Current service cost                       | 1,151  |\n| Interest cost                              | 5,441  |\n| Actual return on plan assets               | 5,888  |\n| Expected return on plan assets             | 4,597  |\n| Benefits paid to retired employees         | 5,059  |\n| Employer's contributions                   | 887    |\n| Amortization of past service costs         | 272    |"
        ],
        "topic": "Accounting",
        "question_id": "test-970",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the company Atlantic Preserve prepares its financial statements following U.S. GAAP, what is the reported periodic pension cost on the income statement for 2013 (in $ thousands), as Loris has asked Paul to work out using the data in Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_service_cost = 1151\n    interest_cost = 5441\n    expected_return_on_plan_assets = 4597\n    amortization_of_past_service_costs = 272\n\n    # Do math calculation to get the answer\n    periodic_pension_cost = current_service_cost + interest_cost - expected_return_on_plan_assets + amortization_of_past_service_costs\n\n    # return answer\n    return periodic_pension_cost\n```"
        ]
    },
    {
        "tables": [
            "|           | Gross plant and equipments | Accumulated depreciation |\n|-----------|---------------------------|-------------------------|\n| Last year | \u00a3460,000                  | \u00a3110,000                |\n| This year | \u00a3500,000                  | \u00a3120,000                |"
        ],
        "topic": "Accounting",
        "question_id": "test-971",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the latest fiscal report, the depreciation expense for Smiths Ltd. stands at \u00a320,000. Given the company's general information, what is the presumed residual useful life of the factory and machinery?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    accumulated_depreciation_last_year = 110000\n    accumulated_depreciation_this_year = 120000\n    depreciation_expense = 20000\n    \n    # Do math calculation to get the answer\n    # Calculate the total accumulated depreciation\n    total_accumulated_depreciation = accumulated_depreciation_this_year\n    \n    # Calculate the residual useful life\n    residual_useful_life = (total_accumulated_depreciation - accumulated_depreciation_last_year) / depreciation_expense\n    \n    # return answer\n    return residual_useful_life\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-972",
        "python_solution": "",
        "ground_truth": null,
        "question": "In nation Y, the odds of a letter sent via the mail service getting to its intended destination are 2/3. Suppose that each mail delivery is not influenced by any other, and if a girlfriend gets a letter from her boyfriend, she will definitely send a reply to him. Imagine a guy in nation Y mails a letter to his girlfriend (also in nation Y) using the mail service. Assuming the guy doesn't get a return letter from his girlfriend, what are the chances that his girlfriend received his letter?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_received = 2/3\n    probability_not_received = 1 - probability_received\n    probability_no_reply = 1\n    \n    # Do math calculation to get the answer\n    # If the girlfriend received the letter, she would definitely send a reply.\n    # Therefore, the probability of no reply implies the letter was not received.\n    # We need to find the probability that the letter was received given that there was no reply.\n    # This is a conditional probability problem.\n    \n    # P(Received | No Reply) = P(No Reply | Received) * P(Received) / P(No Reply)\n    # Since P(No Reply | Received) = 0 (if received, there would be a reply), the formula simplifies to:\n    # P(Received | No Reply) = 0 * P(Received) / P(No Reply) = 0\n    # However, this is not realistic since there's a chance the letter was received but something happened to the reply.\n    # Instead, we use the fact that if no reply, then the letter was not received.\n    \n    # Given the problem setup, if there's no reply, the letter was not received.\n    # Therefore, the probability that the letter was received given no reply is the complement of the probability of not receiving.\n    answer = probability_received\n    \n    # return answer\n    return answer\n```\n\nThis program assumes that if there is no reply, the letter was not received, which aligns with the problem's conditions. The probability that the letter was received given no reply is simply the probability of receiving the letter, as the absence of a reply implies the letter was not received."
        ]
    },
    {
        "tables": [
            "|                   |         |\n|-------------------|---------|\n| Fair value        | $500,000|\n| Costs to sell     | $90,000 |\n| Value in use      | $460,000|\n| Net carrying amount | $600,000|"
        ],
        "topic": "Accounting",
        "question_id": "test-973",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under IFRS, the impairment loss for a machine from company TDC is listed as follows:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fair_value = 500000\n    costs_to_sell = 90000\n    value_in_use = 460000\n    net_carrying_amount = 600000\n    \n    # Do math calculation to get the answer\n    # Calculate the recoverable amount which is the higher of fair value less costs to sell and value in use\n    recoverable_amount = max(fair_value - costs_to_sell, value_in_use)\n    \n    # Calculate the impairment loss\n    impairment_loss = net_carrying_amount - recoverable_amount\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [
            "| Bond | A   | B   |\n|------|-----|-----|\n| Number of periods to maturity | 4 years | 4 years |\n| Coupon rate | 6% | 9% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-974",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the market discount rate is 5%, what is the variance in the pricing for two bonds per 100 of face value that pay out interest every year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_discount_rate = 0.05\n    periods_to_maturity = 4\n    coupon_rate_A = 0.06\n    coupon_rate_B = 0.09\n    face_value = 100\n    \n    # Function to calculate bond price\n    def bond_price(coupon_rate, periods, discount_rate, face_value):\n        price = 0\n        for t in range(1, periods + 1):\n            price += (coupon_rate * face_value) / (1 + discount_rate) ** t\n        price += face_value / (1 + discount_rate) ** periods\n        return price\n    \n    # Calculate bond prices\n    price_A = bond_price(coupon_rate_A, periods_to_maturity, market_discount_rate, face_value)\n    price_B = bond_price(coupon_rate_B, periods_to_maturity, market_discount_rate, face_value)\n    \n    # Calculate variance in pricing\n    variance = abs(price_A - price_B)\n    \n    # return answer\n    return variance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-975",
        "python_solution": "",
        "ground_truth": null,
        "question": "ABC has a three-year floating rate loan. To hedge the risk of increasing interest rates, the organization is considering entering into an interest rate swap. The notional principle of the floating loan is $5 million, the rate is Libor+1%. The swap's fixed rate is 5% and the floating rate is Libor, with payments made every six months. The notional principle of the swap is also $5 million. What is the first net interest payment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_principle = 5000000  # in dollars\n    floating_loan_rate = 0.01  # Libor + 1%\n    fixed_swap_rate = 0.05  # 5%\n    libor_rate = 0.0  # Assuming initial Libor rate is 0% for simplicity\n\n    # Calculate the interest payments\n    floating_loan_interest = notional_principle * (libor_rate + floating_loan_rate)\n    fixed_swap_interest = notional_principle * fixed_swap_rate\n\n    # Calculate the net interest payment\n    net_interest_payment = floating_loan_interest - fixed_swap_interest\n\n    # return answer\n    return net_interest_payment\n```\n\nThis program assumes an initial Libor rate of 0% for simplicity. In a real-world scenario, you would need to use the actual Libor rate at the time of the first payment. The program calculates the interest payments for both the floating rate loan and the fixed rate swap, then computes the net interest payment by subtracting the fixed swap interest from the floating loan interest."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-976",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2017, the net sales of the XYZ corporation were $300,000. Given that accounts receivable fell by $56,000 and accounts payable rose by $9,000, and that the inventory increased by $20,000, what were their cash collections?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_sales = 300000\n    decrease_in_accounts_receivable = 56000\n    increase_in_inventory = 20000\n    increase_in_accounts_payable = 9000\n    \n    # Do math calculation to get the answer\n    # Cash collections can be calculated using the formula:\n    # Cash Collections = Net Sales + Decrease in Accounts Receivable - Increase in Inventory + Increase in Accounts Payable\n    cash_collections = net_sales + decrease_in_accounts_receivable - increase_in_inventory + increase_in_accounts_payable\n    \n    # return answer\n    return cash_collections\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-977",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jane Smith is interested in taking a loan of $40,000 to purchase a vehicle with no down payments. She's expected to make even payments at the end of each month for the coming 3 years. If her monthly payment is $1,350, what is the principal portion of her second installment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 40000\n    monthly_payment = 1350\n    loan_term_months = 3 * 12\n    annual_interest_rate = 0.05  # Assuming an annual interest rate of 5%\n    monthly_interest_rate = annual_interest_rate / 12\n\n    # Calculate the interest for the first month\n    interest_first_month = loan_amount * monthly_interest_rate\n    principal_first_month = monthly_payment - interest_first_month\n\n    # Calculate the remaining principal after the first payment\n    remaining_principal_after_first = loan_amount - principal_first_month\n\n    # Calculate the interest for the second month\n    interest_second_month = remaining_principal_after_first * monthly_interest_rate\n    principal_second_month = monthly_payment - interest_second_month\n\n    # return answer\n    return principal_second_month\n```\n\nThis program calculates the principal portion of Jane Smith's second installment by first determining the interest and principal portions of the first installment, then using the remaining principal to calculate the interest and principal portions of the second installment. The assumption here is an annual interest rate of 5%, which is used to calculate the monthly interest rate."
        ]
    },
    {
        "tables": [
            "| Sample mean | 15% |\n|-------------|-----|\n| Sample size | 90  |\n| Population variance | 128 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-978",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the data provided, what is the standard error of the mean sample?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 90\n    population_variance = 128\n    \n    # Do math calculation to get the answer\n    standard_error = (population_variance / sample_size) ** 0.5\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-979",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the highest possible value for Qy, considering the inverse demand function Py = 13 \u2013 3.7Q where Py equals the price per unit for good Y and Qy is the quantity demanded of good Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Py = 0  # Price per unit for good Y, starting from 0 to find the maximum Qy\n    Qy = 0  # Quantity demanded of good Y\n    \n    # Do math calculation to get the answer\n    # The highest possible value for Qy occurs when Py = 0\n    # From the inverse demand function Py = 13 - 3.7Qy\n    # Solving for Qy when Py = 0:\n    # 0 = 13 - 3.7Qy\n    # 3.7Qy = 13\n    # Qy = 13 / 3.7\n    Qy = 13 / 3.7\n    \n    # return answer\n    return Qy\n```"
        ]
    },
    {
        "tables": [
            "| Assets                                         |   |   |   |   |\n|------------------------------------------------|---|---|---|---|\n| Current assets                                 |   |   |   |   |\n| Cash and cash equivalents 0                    | 5 | 7 |   |   |\n| Marketable securities 5                        | 0 | 2 |   |   |\n| Accounts receivable, net 5                     | 15|12 |   |   |\n| Inventories 15                                 | 20|16 |   |   |\n| Prepaid expenses 5                             | 15|11 |   |   |\n| Total current assets 35                        | 55|48 |   |   |\n| Property, plant,and equipment, net 40          | 35|37 |   |   |\n| Goodwill 25                                    |  0| 8 |   |   |\n| Other assets 0                                 | 10| 7 |   |   |\n| Total assets 100                               |100|100|   |   |\n| Liabilities and Shareholders' Equity           |   |   |   |   |\n|                                                |   |   |   |   |\n| Accounts payable, Short-term debt              |10 & 10, 25 & 10 & 15| | | |\n| Accrued expenses                               |   |0, 5, 3      |   |   |\n| Total current liabilities                      |   |35, 25, 28   |   |   |\n| Long-term debt                                 |   |45, 20, 28   |   |   |\n| Other non-current liabilities                  |   |0, 10, 7     |   |   |\n| Total liabilities                              |   |80, 55, 63   |   |   |\n| Total shareholders' equity, total liabilities and shareholders' equity | |20 & 45 & 37, 100 & 100 & 100 | | |"
        ],
        "topic": "Accounting",
        "question_id": "test-980",
        "python_solution": "",
        "ground_truth": null,
        "question": "In reference to Exhibit 1: Common-Size Balance Sheets for Corporation X, Corporation Y, and Sector Average, what is the financial leverage ratio for Corporation Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets_y = 100  # Total assets for Corporation Y\n    total_liabilities_y = 55  # Total liabilities for Corporation Y\n    total_shareholders_equity_y = 45  # Total shareholders' equity for Corporation Y\n    \n    # Do math calculation to get the answer\n    financial_leverage_ratio = total_assets_y / total_shareholders_equity_y\n    \n    # return answer\n    return financial_leverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-981",
        "python_solution": "",
        "ground_truth": null,
        "question": "A put option from Europe possesses the following traits: S0 = $50; X = $45; r = 5%; T = 1 year; and \u03c3 = 25%. Utilizing the BSM formula, could you determine which value is closest to the put's value? Here are some values for reference: N(-0.78644) = 0.2158, N(-0.74644) = 0.2266, N(-0.49644) = 0.3085, N(-0.56644) = 0.2855.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 50  # Current stock price\n    X = 45   # Strike price\n    r = 0.05 # Risk-free rate\n    T = 1    # Time to maturity in years\n    sigma = 0.25 # Volatility\n\n    # Import necessary library for mathematical functions\n    from math import log, sqrt, exp\n\n    # Define the cumulative normal distribution function (approximation)\n    def N(x):\n        if x < -0.78644:\n            return 0.2158\n        elif x < -0.74644:\n            return 0.2266\n        elif x < -0.49644:\n            return 0.3085\n        else:\n            return 0.2855\n\n    # Calculate d1 and d2 using the BSM formula\n    d1 = (log(S0 / X) + (r + 0.5 * sigma ** 2) * T) / (sigma * sqrt(T))\n    d2 = d1 - sigma * sqrt(T)\n\n    # Calculate the put option value using the BSM formula\n    put_value = X * exp(-r * T) * N(-d2) - S0 * N(-d1)\n\n    # return the calculated put option value\n    return put_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-982",
        "python_solution": "",
        "ground_truth": null,
        "question": "Venture Holdings is a hedge fund that started with $250 million in capital. Venture charges a 2% management fee based on assets managed at the end of the year, and a 20% incentive fee if their returns exceed an 8% benchmark in its first year. Venture experienced a 16% increase in its first year. Let's assume that the management fees are calculated using the end-of-period valuation. What would be the net return for the investor, assuming that the performance fee is calculated after deducting the management fee?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_capital = 250000000  # $250 million\n    management_fee_rate = 0.02  # 2% management fee\n    incentive_fee_rate = 0.20  # 20% incentive fee\n    benchmark_return = 0.08  # 8% benchmark\n    actual_return_rate = 0.16  # 16% actual return\n\n    # Calculate end-of-year valuation\n    end_of_year_valuation = initial_capital * (1 + actual_return_rate)\n\n    # Calculate management fee\n    management_fee = end_of_year_valuation * management_fee_rate\n\n    # Calculate the amount above the benchmark\n    amount_above_benchmark = end_of_year_valuation - (initial_capital * (1 + benchmark_return))\n\n    # Calculate incentive fee\n    incentive_fee = amount_above_benchmark * incentive_fee_rate\n\n    # Calculate net return for the investor\n    net_return = end_of_year_valuation - management_fee - incentive_fee - initial_capital\n\n    # Calculate net return percentage\n    net_return_percentage = (net_return / initial_capital) * 100\n\n    # return answer\n    return net_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "|                                   |        |\n|-----------------------------------|--------|\n| Net income                        | $55,000|\n| Depreciation                      | $60,000|\n| Taxes paid                        | $25,000|\n| Interest paid                     | $5,000 |\n| Dividends paid                    | $10,000|\n| Cash received from sale of company building | $40,000|\n| Issuance of preferred stock       | $45,000|\n| Repurchase of common stock        | $20,000|\n| Purchase of machinery             | $20,000|\n| Issuance of bonds                 | $40,000|\n| Debt retired through issuance of common stock | $45,000|\n| Paid off long-term bank borrowings | $15,000|\n| Profit on sale of building        | $15,000|"
        ],
        "topic": "Accounting",
        "question_id": "test-983",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming Cash flow from investing activities as per U.S. GAAP is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_received_sale_building = 40000\n    purchase_machinery = 20000\n    profit_on_sale_building = 15000\n    \n    # Do math calculation to get the answer\n    # Cash flow from investing activities includes cash inflows and outflows related to the purchase or sale of long-term assets.\n    # Cash received from sale of building is an inflow.\n    # Purchase of machinery is an outflow.\n    # Profit on sale of building is already included in the cash received from sale of building, so it should not be added separately.\n    \n    cash_flow_investing_activities = cash_received_sale_building - purchase_machinery\n    \n    # return answer\n    return cash_flow_investing_activities\n```"
        ]
    },
    {
        "tables": [
            "|    |    | Longevity Bond |   |\n|----|----|---------------|---|\n|    |    | No Default    | Default |\n| Market Returns | 20% Increase | 61% | 1% |\n|                | 20% Decrease | 35% | 3% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-984",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager is evaluating if the 1-year default probability of a longevity bond provided by a life assurance corporation is not related to equity market returns. The fund manager establishes the following probability matrix using 1-year probabilities from the initial investigation: With the data in the table, what is the likelihood that the longevity bond will default in 1 year considering the market declines by 20% over 1 year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_decrease_default_probability = 3  # Probability of default when market decreases by 20%\n\n    # Do math calculation to get the answer\n    # The answer is directly given by the probability of default when the market decreases by 20%\n    answer = market_decrease_default_probability\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-985",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a population with a variance of 2.45 was used to compute a sample mean and the sample size is 40, what would be the standard error of this sample mean?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    population_variance = 2.45\n    sample_size = 40\n    \n    # Do math calculation to get the answer\n    standard_deviation = population_variance ** 0.5\n    standard_error = standard_deviation / (sample_size ** 0.5)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-986",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of the year, XY corporation purchased a new mini-computer for $35,000. The computer is predicted to be used for a decade and then resold for $1,000. Using the double-declining-balance method, what is the declared depreciation expense in the third year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 35000\n    salvage_value = 1000\n    useful_life = 10\n    depreciation_rate = 2 / useful_life\n    \n    # Calculate the book value at the end of each year\n    book_value = initial_cost\n    for year in range(1, 4):  # We need the book value at the end of the 3rd year\n        if year == 3:\n            depreciation_expense = book_value * depreciation_rate\n        else:\n            depreciation_expense = book_value * depreciation_rate\n            book_value -= depreciation_expense\n    \n    # Adjust the depreciation expense for the third year to ensure the book value does not go below salvage value\n    if book_value - depreciation_expense < salvage_value:\n        depreciation_expense = book_value - salvage_value\n    \n    # return answer\n    return depreciation_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-987",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is interested in purchasing a 3-year bond that has a coupon rate of 5%, paid yearly. The spot rates are as follows: 1-year spot rate is 4%; 2-year spot rate is 4.5%; 3-year spot rate is 5%. What is the bond's price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.05  # 5% coupon rate\n    face_value = 1000  # Assuming a face value of $1000 for simplicity\n    spot_rates = [0.04, 0.045, 0.05]  # 1-year, 2-year, and 3-year spot rates\n    \n    # Calculate the present value of each cash flow\n    cash_flows = [coupon_rate * face_value] * 3  # Yearly coupon payments\n    cash_flows[-1] += face_value  # Adding the face value to the last cash flow\n    \n    present_values = [cash_flows[i] / (1 + spot_rates[i]) ** (i + 1) for i in range(3)]\n    \n    # Sum the present values to get the bond's price\n    bond_price = sum(present_values)\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-988",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose there exists a bond with an annual modified duration of 8.05 and an annual convexity of 58.32. What is the anticipated percentage change in price if the yield-to-maturity of the bond rises by 20 basis points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 8.05\n    convexity = 58.32\n    yield_change_basis_points = 20\n    \n    # Convert basis points to percentage\n    yield_change_percentage = yield_change_basis_points / 10000\n    \n    # Do math calculation to get the answer\n    # Calculate the percentage change due to modified duration\n    percentage_change_duration = -modified_duration * yield_change_percentage\n    \n    # Calculate the percentage change due to convexity\n    percentage_change_convexity = 0.5 * convexity * (yield_change_percentage ** 2)\n    \n    # Total anticipated percentage change in price\n    total_percentage_change = percentage_change_duration + percentage_change_convexity\n    \n    # return answer\n    return total_percentage_change\n```"
        ]
    },
    {
        "tables": [
            "|     |     |\n| --- | --- |\n| Exhibit 1 10-Year Trailing Risk-Adjusted Performance |     |\n| Average annual return | 8.20% |\n| Minimum acceptable return (MAR) | 5.00% |\n| Sharpe ratio | 0.95 |\n| Sortino ratio | 0.87 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-989",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the provided table, what is the target semideviation for the investment portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average_annual_return = 0.082\n    minimum_acceptable_return = 0.05\n    sortino_ratio = 0.87\n    \n    # Do math calculation to get the answer\n    # The formula for Sortino ratio is (Average Annual Return - Minimum Acceptable Return) / Target Semideviation\n    # Rearranging the formula to solve for Target Semideviation:\n    target_semideviation = (average_annual_return - minimum_acceptable_return) / sortino_ratio\n    \n    # return answer\n    return target_semideviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-990",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will the mean absolute deviation be when referring to the range of 1-10?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    data = list(range(1, 11))  # Range of 1-10\n    mean = sum(data) / len(data)  # Calculate the mean\n    \n    # Do math calculation to get the answer\n    absolute_deviations = [abs(x - mean) for x in data]  # Calculate absolute deviations from the mean\n    mean_absolute_deviation = sum(absolute_deviations) / len(data)  # Calculate the mean absolute deviation\n    \n    # return answer\n    return mean_absolute_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-991",
        "python_solution": "",
        "ground_truth": null,
        "question": "Thompson is a tax consultant, providing tax-related guidance to individual clients. One of his clients is Jennifer, an American citizen residing within the U.S. Jennifer recently became the owner of AAPL shares, left to her by a deceased relative who was also a U.S. resident. The U.S. uses the \"step-up\" in basis at death system. The shares were originally purchased 20 years ago at a cost of $15,000 (inclusive of commissions and other costs). When the relative passed away, the market value of the AAPL stock was $220,000, and Jennifer just sold these shares for $190,000. Jennifer\u2019s tax rate for capital gains is 20%. The tax obligation from the sale of the AAPL shares is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_cost_basis = 15000\n    stepped_up_basis = 220000\n    sale_price = 190000\n    capital_gains_tax_rate = 0.20\n    \n    # Do math calculation to get the answer\n    # Calculate the capital gain or loss\n    capital_gain = sale_price - stepped_up_basis\n    \n    # Calculate the tax obligation\n    tax_obligation = capital_gain * capital_gains_tax_rate\n    \n    # return answer\n    return tax_obligation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-992",
        "python_solution": "",
        "ground_truth": null,
        "question": "The cost of a three-year zero-coupon bond from the government is $85.16, while a four-year bond of the same type is $79.81. Can you calculate the one-year implied forward rate from the third to the fourth year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_three_year = 85.16\n    price_four_year = 79.81\n    face_value = 100  # Assuming the face value of the bond is $100\n\n    # Calculate the yield to maturity for both bonds\n    yield_three_year = (face_value / price_three_year) ** (1 / 3) - 1\n    yield_four_year = (face_value / price_four_year) ** (1 / 4) - 1\n\n    # Calculate the one-year implied forward rate from the third to the fourth year\n    forward_rate = ((1 + yield_four_year) ** 4 / (1 + yield_three_year) ** 3) ** (1 / 1) - 1\n\n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-993",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond that has a face value of $100 matures in 10 years and pays a 4.5% coupon semiannually, is priced to yield 5.83%, and has a modified duration of 7.81. What is the approximate percentage price change for the bond if the bond's yield decreases by 0.25%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 7.81\n    yield_change = 0.25  # in percentage points\n    \n    # Do math calculation to get the answer\n    # The formula for the approximate percentage price change is: -Modified Duration * Yield Change\n    percentage_price_change = -modified_duration * (yield_change / 100)\n    \n    # return answer\n    return percentage_price_change\n```"
        ]
    },
    {
        "tables": [
            "| Component | Cost | Useful Life |\n|-----------|------|-------------|\n| A         | $500,000 | 10 years |\n| B         | $500,000 | 5 years  |"
        ],
        "topic": "Accounting",
        "question_id": "test-994",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business that aims to increase its earnings has invested $1,000,000 in a machine with two key parts, as seen in the provided chart. The machine's anticipated total lifespan is 10 years, and the business employs the straight-line technique of depreciation. How does the first year's depreciation expense calculated in accordance with the International Financial Reporting Standards (IFRS) compare to the one under the US GAAP?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_A = 500000\n    cost_B = 500000\n    useful_life_A = 10\n    useful_life_B = 5\n    total_cost = cost_A + cost_B\n    total_useful_life = 10  # Given that the total anticipated lifespan is 10 years\n\n    # Do math calculation to get the answer\n    # Straight-line depreciation calculation\n    depreciation_expense_IFRS = total_cost / total_useful_life\n\n    # US GAAP allows component depreciation, so we calculate depreciation for each component separately\n    depreciation_expense_A_USGAAP = cost_A / useful_life_A\n    depreciation_expense_B_USGAAP = cost_B / useful_life_B\n    total_depreciation_expense_USGAAP = depreciation_expense_A_USGAAP + depreciation_expense_B_USGAAP\n\n    # Compare the depreciation expenses under IFRS and US GAAP\n    comparison = total_depreciation_expense_USGAAP - depreciation_expense_IFRS\n\n    # return answer\n    return comparison\n```\n\nThis Python program calculates the first year's depreciation expense under both IFRS and US GAAP for a machine with two key parts. It then compares the two depreciation expenses and returns the difference. Under IFRS, the depreciation is calculated based on the total cost and total useful life. Under US GAAP, the depreciation is calculated separately for each component based on their respective useful lives, allowing for component depreciation."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-995",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portion of the financial statement of Alpha Enterprises is presented below: Assets at the end of 2015: $5,000 Revenues for the year: $1,750 Expenses for the year: $1,200 Distributions to owners: $250 Retained earnings at the conclusion of 2014: $2,000 Contributed capital at the conclusion of 2015: $800 What should be the liabilities of Alpha Enterprises at the end of 2015?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    assets = 5000\n    revenues = 1750\n    expenses = 1200\n    distributions_to_owners = 250\n    retained_earnings_2014 = 2000\n    contributed_capital = 800\n    \n    # Calculate net income for the year\n    net_income = revenues - expenses\n    \n    # Calculate retained earnings at the end of 2015\n    retained_earnings_2015 = retained_earnings_2014 + net_income - distributions_to_owners\n    \n    # Calculate total equity\n    total_equity = retained_earnings_2015 + contributed_capital\n    \n    # Calculate liabilities using the accounting equation: Assets = Liabilities + Equity\n    liabilities = assets - total_equity\n    \n    # return answer\n    return liabilities\n```"
        ]
    },
    {
        "tables": [
            "| Security | Security Weight(%) | Expected Standard Deviation (%) |\n|----------|-------------------|--------------------------------|\n| 1        | 30                | 20                             |\n| 2        | 70                | 12                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-996",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a fund manager constructs a portfolio with a standard deviation of 14.40%, what is the covariance between the two assets?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight1 = 0.30\n    weight2 = 0.70\n    std_dev1 = 0.20\n    std_dev2 = 0.12\n    portfolio_std_dev = 0.1440\n\n    # Do math calculation to get the answer\n    # Using the formula for portfolio variance: \u03c3_p^2 = w1^2 * \u03c31^2 + w2^2 * \u03c32^2 + 2 * w1 * w2 * \u03c31 * \u03c32 * \u03c1\n    # where \u03c1 is the correlation coefficient, and \u03c3_p is the portfolio standard deviation.\n    # We need to solve for \u03c1 and then convert it to covariance.\n\n    # Calculate the portfolio variance\n    portfolio_variance = portfolio_std_dev ** 2\n\n    # Calculate the individual variances\n    variance1 = std_dev1 ** 2\n    variance2 = std_dev2 ** 2\n\n    # Rearrange the formula to solve for \u03c1\n    # portfolio_variance = weight1^2 * variance1 + weight2^2 * variance2 + 2 * weight1 * weight2 * std_dev1 * std_dev2 * \u03c1\n    # Solving for \u03c1:\n    # \u03c1 = (portfolio_variance - weight1^2 * variance1 - weight2^2 * variance2) / (2 * weight1 * weight2 * std_dev1 * std_dev2)\n\n    correlation_coefficient = (portfolio_variance - (weight1 ** 2) * variance1 - (weight2 ** 2) * variance2) / (2 * weight1 * weight2 * std_dev1 * std_dev2)\n\n    # Covariance is the product of the standard deviations and the correlation coefficient\n    covariance = std_dev1 * std_dev2 * correlation_coefficient\n\n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [
            "| Company | A  | B  | C  | D  | E  | F  |\n|---------|----|----|----|----|----|----|\n| Market  | 30 | 25 | 16 | 12 | 10 | 7  |\n| Share (%) | |  |  |  |  |  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-997",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Corporations D and F combined to form a new Entity, G, what would the three-company concentration ratio in the industry be considering that there are six corporations in the sector with respective market shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_shares = [30, 25, 16, 12, 10, 7]\n    \n    # Combine the shares of D and F to form G\n    combined_share_G = market_shares[3] + market_shares[5]\n    \n    # Remove the shares of D and F from the list\n    market_shares = market_shares[:3] + market_shares[4:5]\n    \n    # Add the combined share of G to the list\n    market_shares.append(combined_share_G)\n    \n    # Sort the shares in descending order to get the top three\n    market_shares.sort(reverse=True)\n    \n    # Calculate the three-company concentration ratio\n    concentration_ratio = sum(market_shares[:3])\n    \n    # return answer\n    return concentration_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-998",
        "python_solution": "",
        "ground_truth": null,
        "question": "If John's Industries recently acquired a manufacturing machine for $60,000 which is predicted to produce an annual cash inflow of $25,000 for six years, and plans to depreciate the machine over six years for accounting reasons, while the tax authority calculates the machine's useful life to be 5 years. If we consider the tax rate to be 40% and the machines have no resale value. What would be the pretax income for John's Industries in the 6th year using the straight-line method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 60000\n    annual_cash_inflow = 25000\n    useful_life_accounting = 6\n    useful_life_tax = 5\n    tax_rate = 0.40\n    resale_value = 0\n\n    # Depreciation per year using straight-line method for accounting purposes\n    depreciation_accounting = initial_cost / useful_life_accounting\n\n    # Pretax income calculation for the 6th year\n    # Since the machine is fully depreciated for tax purposes in 5 years, there is no tax depreciation in the 6th year\n    pretax_income_6th_year = annual_cash_inflow - depreciation_accounting\n\n    # return answer\n    return pretax_income_6th_year\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-999",
        "python_solution": "",
        "ground_truth": null,
        "question": "John thinks that the average cost of the commercial residential property is more than $155,000. The population standard deviation is $25,000. A random sample of 36 commercial residential properties in the region has an average cost of $159,750. John carry out the hypothesis test at a 1% significance level. What is the value of the computed test statistic?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_mean = 159750\n    population_mean = 155000\n    population_std_dev = 25000\n    sample_size = 36\n\n    # Do math calculation to get the answer\n    test_statistic = (sample_mean - population_mean) / (population_std_dev / (sample_size ** 0.5))\n\n    # return answer\n    return test_statistic\n```"
        ]
    }
]