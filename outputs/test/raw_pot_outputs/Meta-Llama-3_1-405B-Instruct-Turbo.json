[
    {
        "tables": [
            "| Asset Class    | Geometric Return(%) |\n| -------------- | ------------------- |\n| Equities       | 8.0                 |\n| Corporate Bonds| 6.5                 |\n| Treasury bills | 2.5                 |\n| Inflation      | 2.1                 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-0",
        "python_solution": "",
        "ground_truth": null,
        "question": "What historical geometric real rate of return for corporate bonds does a researcher identify?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    corporate_bonds_nominal_return = 6.5  # in percentage\n    inflation_rate = 2.1  # in percentage\n    \n    # Do math calculation to get the answer\n    corporate_bonds_real_return = (1 + corporate_bonds_nominal_return / 100) / (1 + inflation_rate / 100) - 1\n    corporate_bonds_real_return_percentage = corporate_bonds_real_return * 100\n    \n    # return answer\n    return corporate_bonds_real_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Period | Years | Forward Rate |\n|--------|-------|--------------|\n| 1      | 0.5   | 1.20%        |\n| 2      | 1     | 1.80%        |\n| 3      | 1.5   | 2.30%        |\n| 4      | 2     | 2.70%        |\n| 5      | 2.5   | 3.00%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-1",
        "python_solution": "",
        "ground_truth": null,
        "question": "With the given US Treasury forward rates, what's the value of a 2.5-year $100 face value Treasury bond with a 5% interest rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    periods = [0.5, 1, 1.5, 2, 2.5]\n    forward_rates = [0.0120, 0.0180, 0.0230, 0.0270, 0.0300]\n    coupon_rate = 0.05\n    face_value = 100\n    years = 2.5\n    \n    # Calculate the present value of each cash flow\n    cash_flows = []\n    for i, period in enumerate(periods):\n        if period <= years:\n            cash_flow = face_value * coupon_rate * period\n            cash_flow_pv = cash_flow / (1 + forward_rates[i]) ** (period / 0.5)\n            cash_flows.append(cash_flow_pv)\n        else:\n            break\n    \n    # Calculate the present value of the face value\n    face_value_pv = face_value / (1 + forward_rates[-1]) ** (years / 0.5)\n    cash_flows.append(face_value_pv)\n    \n    # Calculate the bond value\n    bond_value = sum(cash_flows)\n    \n    # return answer\n    return bond_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-2",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming U.S. GAAP is in effect unless stated otherwise, imagine a highly profitable company, Alpha Enterprises, acquired a new asset for $1,000,000 on January 1, 2002. How does the asset acquisition impact Alpha Enterprises' deferred tax liability for 2002 given the following conditions for the asset: for financial statements purposes, straight-line depreciation over 10 years with no salvage value; for tax purposes, the asset is classified under three-year MACRS depreciation with the first year MACRS factor being 0.333, and the tax rate stands at 40%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_cost = 1000000  # cost of the asset\n    financial_depreciation_years = 10  # years for straight-line depreciation for financial statements\n    tax_depreciation_years = 3  # years for MACRS depreciation for tax purposes\n    tax_rate = 0.4  # corporate tax rate\n    macrs_factor = 0.333  # MACRS factor for the first year\n\n    # Calculate the financial depreciation for the first year\n    financial_depreciation = asset_cost / financial_depreciation_years\n\n    # Calculate the tax depreciation for the first year using MACRS\n    tax_depreciation = asset_cost * macrs_factor\n\n    # Calculate the deferred tax liability for 2002\n    deferred_tax_liability = (tax_depreciation - financial_depreciation) * tax_rate\n\n    # return answer\n    return deferred_tax_liability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-3",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the average P/E of 30 shares in a particular manufacturing sector is 18 and the sample standard deviation is 3.5, what is the standard error of the mean closest to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 30\n    sample_standard_deviation = 3.5\n    \n    # Do math calculation to get the answer\n    standard_error = sample_standard_deviation / (sample_size ** 0.5)\n    \n    # return answer\n    return round(standard_error, 2)\n```\n\nExplanation: The standard error of the mean (SEM) is calculated by dividing the sample standard deviation by the square root of the sample size. In this case, we have a sample size of 30 and a sample standard deviation of 3.5. Therefore, we can use the formula `SEM = \u03c3 / \u221an` to calculate the standard error, where `\u03c3` is the sample standard deviation and `n` is the sample size. The result is then rounded to two decimal places using the `round()` function."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-4",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose there are two stocks, X and Y. If their annual returns are jointly normally distributed, the marginal distribution of each stock has a mean of 2% and a standard deviation of 10%, and the correlation is 0.9, can you tell me the expected annual return of stock X if the annual return of stock Y is 3%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean_x = 0.02  # mean of stock X\n    mean_y = 0.02  # mean of stock Y\n    std_dev_x = 0.10  # standard deviation of stock X\n    std_dev_y = 0.10  # standard deviation of stock Y\n    correlation = 0.9  # correlation between stock X and Y\n    return_y = 0.03  # given annual return of stock Y\n    \n    # Do math calculation to get the answer\n    beta = correlation * (std_dev_x / std_dev_y)\n    expected_return_x = mean_x + beta * (return_y - mean_y)\n    \n    # return answer\n    return expected_return_x\n```"
        ]
    },
    {
        "tables": [
            "| Balances as of year ended 31 December | 2004 | 2005 |\n| ------------------------------------- | ---- | ---- |\n| Retained earnings                     | 120  | 145  |\n| Accounts receivable                   | 38   | 43   |\n| Inventory                             | 45   | 48   |\n| Accounts payable                      | 36   | 29   |"
        ],
        "topic": "Accounting",
        "question_id": "test-5",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's consider that U.S. GAAP is applicable unless stated differently. A research analyst has collected this data from a corporation's financial statements for the year 2005 (in millions of dollars): The firm announced and distributed cash dividends worth $10 million in 2005 and accounted for a depreciation cost of $25 million for the same year. What was the corporation's cash flow from operations, in millions, for 2005?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    retained_earnings_2004 = 120  # in millions of dollars\n    retained_earnings_2005 = 145  # in millions of dollars\n    accounts_receivable_2004 = 38  # in millions of dollars\n    accounts_receivable_2005 = 43  # in millions of dollars\n    inventory_2004 = 45  # in millions of dollars\n    inventory_2005 = 48  # in millions of dollars\n    accounts_payable_2004 = 36  # in millions of dollars\n    accounts_payable_2005 = 29  # in millions of dollars\n    cash_dividends = 10  # in millions of dollars\n    depreciation_cost = 25  # in millions of dollars\n    \n    # Do math calculation to get the answer\n    net_income = retained_earnings_2005 - retained_earnings_2004 + cash_dividends\n    increase_in_accounts_receivable = accounts_receivable_2005 - accounts_receivable_2004\n    increase_in_inventory = inventory_2005 - inventory_2004\n    decrease_in_accounts_payable = accounts_payable_2005 - accounts_payable_2004\n    cash_flow_from_operations = net_income + depreciation_cost - increase_in_accounts_receivable - increase_in_inventory - decrease_in_accounts_payable\n    \n    # return answer\n    return cash_flow_from_operations\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-6",
        "python_solution": "",
        "ground_truth": null,
        "question": "In early 2009, Steel Production procured a new assembly line equipment for $600,000. The equipment is anticipated to have a useful life of 10 years and an estimated salvage value of $50,000. What amount of depreciation would Steel Production record in 2009 for financial statements using the double-declining balance method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost = 600000  # cost of the equipment\n    salvage_value = 50000  # estimated salvage value\n    useful_life = 10  # useful life in years\n    \n    # Do math calculation to get the answer\n    annual_depreciation_rate = 2 / useful_life  # double-declining balance rate\n    first_year_depreciation = (cost - salvage_value) * annual_depreciation_rate\n    \n    # return answer\n    return first_year_depreciation\n\nresult = solution()\nprint(\"The final answer is $\", round(result, 2)) \n```"
        ]
    },
    {
        "tables": [
            "| ASSETS                         |         | Company A | Company B | Sector Average |\n|--------------------------------|---------|-----------|-----------|----------------|\n| Current assets                 |         |           |           |                |\n| Cash and cash equivalents      |         | 5         | 7         |                |\n| Marketable securities          |         | 0         | 2         |                |\n| Accounts receivable, net       |         | 15        | 12        |                |\n| Inventories                    |         | 20        | 16        |                |\n| Prepaid expenses               |         | 15        | 11        |                |\n| Total current assets           |         | 55        | 48        |                |\n| Property, plant, and equipment | net     | 35        | 37        |                |\n| Goodwill                       |         | 0         | 8         |                |\n| Other assets                   |         | 10        | 7         |                |\n| Total assets                   | 100     | 100       | 100       | 100            |\n|--------------------------------|---------|-----------|-----------|----------------|\n| LIABILITIES AND SHAREHOLDERS' EQUITY | | | | |\n| Current liabilities                 |   | | | |\n| Accounts payable                    |   | 10 | 10 | 10 |\n| Short-term debt                     |   | 25 | 10 | 15 |\n| Accrued expenses                    |   | 5  | 3  |    |\n| Total current liabilities           |   | 35 | 25 | 28 |\n| Long-term debt                      |   | 45 | 20 | 28 |\n| Other non-current liabilities       |   | 0  | 10 | 7  |\n| Total liabilities                   |   | 80 | 55 | 63 |\n| Total shareholders' equity          |   | 20 | 45 | 37 |\n| Total liabilities and shareholders' equity | | 100 | 100 | 100 |"
        ],
        "topic": "Accounting",
        "question_id": "test-7",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the quick ratio for Company B as per the common-size balance sheets displayed in Exhibit 1 for Company A, Company B, and the Sector Average?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_current_assets_company_b = 48\n    accounts_receivable_company_b = 12\n    inventories_company_b = 16\n    prepaid_expenses_company_b = 11\n    total_current_liabilities_company_b = 25\n    \n    # Do math calculation to get the answer\n    # The quick ratio is calculated as (Total Current Assets - Inventories) / Total Current Liabilities\n    quick_ratio_company_b = (total_current_assets_company_b - inventories_company_b) / total_current_liabilities_company_b\n    \n    # Alternatively, the quick ratio can be calculated as (Cash and Cash Equivalents + Accounts Receivable + Marketable Securities) / Total Current Liabilities\n    # Here we don't have the value for Cash and Cash Equivalents, Accounts Receivable, and Marketable Securities separately. \n    # Therefore, we calculate the quick ratio by using the first formula.\n    \n    # return answer\n    return quick_ratio_company_b\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-8",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of the year, the portfolio of Frontier Investment Group, a hedge fund, was valued at $475,000,000. A year later, the value of assets under management has grown to $541,500,000. The hedge fund imposes a 1.5% management fee based on the portfolio value at the end of the year and a 10% incentive fee. If these two fees are calculated separately, what would be the effective return for an investor in this hedge fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    starting_portfolio_value = 475000000\n    ending_portfolio_value = 541500000\n    management_fee_rate = 0.015\n    incentive_fee_rate = 0.10\n\n    # Do math calculation to get the answer\n    # Calculate the actual return before fees\n    actual_return_before_fees = ending_portfolio_value - starting_portfolio_value\n    \n    # Calculate the management fee\n    management_fee = ending_portfolio_value * management_fee_rate\n    \n    # Calculate the incentive fee, which is based on the actual return\n    incentive_fee = actual_return_before_fees * incentive_fee_rate\n    \n    # Calculate the total fees\n    total_fees = management_fee + incentive_fee\n    \n    # Calculate the net return after fees\n    net_return_after_fees = actual_return_before_fees - total_fees\n    \n    # Calculate the effective return rate\n    effective_return_rate = (net_return_after_fees / starting_portfolio_value) * 100\n    \n    # return answer\n    return effective_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-9",
        "python_solution": "",
        "ground_truth": null,
        "question": "What does an analyst project as the expected return on equity for a corporation using the Bond yield plus risk premium approach, given a yield on the corporation's bonds at 4.3% and a 6.1% historical risk premium obtained by equity investors compared to long-term corporate bond yields?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_yield = 0.043  # 4.3%\n    historical_risk_premium = 0.061  # 6.1%\n\n    # Do math calculation to get the answer\n    expected_return_on_equity = bond_yield + historical_risk_premium\n\n    # Convert the result to percentage\n    answer = expected_return_on_equity * 100\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|         | RDI=30% | RDI=25% | RDI=15% |\n|---------|---------|---------|---------|\n| RFI=25% | 0.25    |         |         |\n| RFI=15% |         | 0.5     |         |\n| RFI=10% |         |         | 0.25    |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-10",
        "python_solution": "",
        "ground_truth": null,
        "question": "A specialist generates the subsequent joint probability function for an international index (FI) and a local index (DI). What is the covariance of returns on the international index and the returns on the local index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    rdi = [30, 25, 15]  # RDI values\n    rfi = [25, 15, 10]  # RFI values\n    p_rdi = [0.25, 0.5, 0.25]  # Joint probability values\n\n    # Calculate expected returns for DI and FI\n    e_di = (rdi[0] * p_rdi[0] + rdi[1] * p_rdi[1] + rdi[2] * p_rdi[2]) / 100\n    e_fi = (rfi[0] * p_rdi[0] + rfi[1] * p_rdi[1] + rfi[2] * p_rdi[2]) / 100\n\n    # Calculate covariance of returns on DI and FI\n    covariance_di_fi = (rdi[0] * rfi[0] * p_rdi[0] + rdi[1] * rfi[1] * p_rdi[1] + rdi[2] * rfi[2] * p_rdi[2]) / 100 ** 2 - e_di * e_fi\n\n    # return answer\n    return covariance_di_fi\n```\nNote that the returns are divided by 100 to convert them to decimal form. The covariance calculation follows the standard formula for covariance, which is the expected value of the product of the returns minus the product of their individual expected values."
        ]
    },
    {
        "tables": [
            "| Cost of the equipment | UYP 1,200,000       |\n|----------------------|---------------------|\n| Estimated residual value | UYP 200,000      |\n| Expected useful life | 8 years             |\n| Total productive capacity| 800,000 units    |\n| Production in FY 2009 | 135,000 units      | \n| Expected production for the next 7 years | 95,000 units each |"
        ],
        "topic": "Accounting",
        "question_id": "test-11",
        "python_solution": "",
        "ground_truth": null,
        "question": "If MARIO S.A., a corporation based in Uruguay, uses the straight-line method, then how much is the depreciation expense on their income statement related to the manufacturing equipment, considering that Carlos Lopez from the company is calculating it for the fiscal year ended 31 December 2009? The equipment was obtained on 1 January 2009, and Lopez has gathered the following data (currency in Uruguayan pesos, UYP).",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_equipment = 1200000\n    estimated_residual_value = 200000\n    expected_useful_life = 8\n    \n    # Do math calculation to get the answer\n    annual_depreciation = (cost_of_equipment - estimated_residual_value) / expected_useful_life\n    answer = annual_depreciation\n    \n    # return answer\n    return answer\n\n# print(solution())\n```"
        ]
    },
    {
        "tables": [
            "|                                      |            |\n|--------------------------------------|------------|\n| **Wood Balance Sheet 2017**          |            |\n| **Assets**                           |            |\n| Cash                                 | $650,000   |\n| Inventory                            | 27,000     |\n| Accounts receivable                  | 25,000     |\n| Plant and equipment (cost less depreciation) | 300,000 |\n| TimberLand                           | 8,086,000  |\n| **Total assets**                     | $9,088,000 |\n| Accounts payables                    | $ 88,000   |\n| Long-term bank loan                  | 2,500,000  |\n| Common stock                         | 6,500,000  |\n| **Total liabilities and equity**     | $9,088,000 |\n| TimberLand (market value)            | 50,000,000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-12",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the balance sheet as of 31 December 2017, Pierre thinks that an asset-based assessment is suitable for Oak. Based on the extra presumption that other assets and liabilities on the balance sheet, what is the asset-based valuation of Oak?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash = 650000\n    inventory = 27000\n    accounts_receivable = 25000\n    plant_and_equipment = 300000\n    timber_land_book_value = 8086000\n    timber_land_market_value = 50000000\n    accounts_payables = 88000\n    long_term_bank_loan = 2500000\n    \n    # Do math calculation to get the answer\n    total_assets = cash + inventory + accounts_receivable + plant_and_equipment + timber_land_market_value\n    total_liabilities = accounts_payables + long_term_bank_loan\n    \n    asset_based_valuation = total_assets - total_liabilities\n    \n    # return answer\n    return asset_based_valuation\n```"
        ]
    },
    {
        "tables": [
            "| End of Year | Call Price |\n|-------------|------------|\n| 3           | 102        |\n| 4           | 101        |\n| 5           | 100        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-13",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond that has 5 years left until it matures is presently being traded for 101 for every 100 of par value. It provides a coupon rate of 6%, with interest being paid every six months. Considering that the bond can be first called in 3 years, and can be called following that date on interest payment dates per the provided schedule, what is the bond's yearly yield-to-first-call?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    years_until_maturity = 5\n    traded_price_per_100_par = 101\n    coupon_rate_annual = 0.06\n    coupon_payment_per_100_par = coupon_rate_annual / 2 * 100\n    call_price_after_3_years = 102\n    remaining_payment_after_call = call_price_after_3_years + coupon_payment_per_100_par\n    \n    # Do math calculation to get the answer\n    yield_to_first_call = (coupon_rate_annual / 2) / (traded_price_per_100_par / (remaining_payment_after_call))\n    annualized_yield_to_call = (1 + yield_to_first_call)**2 - 1\n    \n    # return answer\n    return round(annualized_yield_to_call * 100, 2)\n```\n\nThis program calculates the bond's yearly yield-to-first-call. It first defines the key parameters, then calculates the yield to call based on the traded price, coupon payment, and call price. Finally, it annualizes the yield and returns it as a percentage. \n\nThe actual answer would depend on correctly running the generated Python program:\n```python\nanswer = solution()\nprint(answer)\n```\n\nThe program simply represents a financial calculation, without considering any external economic factors or market conditions that may also impact yield. Real-world bond trading involves additional complexities, but this program is designed to solve the mathematical problem based on the question's data."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-14",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Corporation A disclosed a salary expenditure of $30 million and wage payable rose by $2 million, how much money was actually disbursed to workers?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    salary_expenditure = 30000000  # $30 million\n    wage_payable_increase = 2000000  # $2 million\n    \n    # Do math calculation to get the answer\n    actual_disbursed_amount = salary_expenditure - wage_payable_increase\n    \n    # return answer\n    return actual_disbursed_amount\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-15",
        "python_solution": "",
        "ground_truth": null,
        "question": "Peterson Energy Inc, a US-based, publicly traded energy firm, recently stated its plans to acquire Heartland Energy Inc, a smaller energy company based in the US. The offer from Peterson values Heartland at an enterprise worth of USD40.6 billion, which includes USD4.3 billion of existing Heartland debt. In order to finance the consideration of USD55 in cash along with 2.25 Peterson shares for each Heartland share, Peterson intends to issue 104 million new shares and will raise approximately USD26 billion in new debt, with the remaining being funded by cash on hand. Once the deal has closed, Peterson anticipates having an outstanding debt of nearly USD62 billion. Before the acquisition, Peterson had 1.096 billion shares in circulation, each trading at USD125. With the assumption of a constant share price and the book value of debt being equal to its market value, Jackson plans to ascertain the change in the proportions of debt and equity in Peterson\u2019s capital structure following",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    peterson_shares_outstanding = 1096000000  # shares\n    peterson_share_price = 125  # USD/share\n    heartland_enterprise_value = 40600000000  # USD\n    heartland_debt = 4300000000  # USD\n    new_shares_issued = 104000000  # shares\n    new_debt_raised = 26000000000  # USD\n    cash_on_hand = (55 * 1000000000) - new_debt_raised  # USD\n    peterson_outstanding_debt_post_acquisition = 62000000000  # USD\n    \n    # Calculate the value of equity pre-acquisition\n    peterson_equity_pre_acquisition = peterson_shares_outstanding * peterson_share_price\n    \n    # Calculate the value of debt pre-acquisition\n    peterson_debt_pre_acquisition = peterson_outstanding_debt_post_acquisition - new_debt_raised - heartland_debt\n    \n    # Calculate the value of equity post-acquisition\n    peterson_equity_post_acquisition = (peterson_shares_outstanding + new_shares_issued) * peterson_share_price\n    \n    # Calculate the ratio of debt to equity pre-acquisition\n    debt_to_equity_ratio_pre_acquisition = peterson_debt_pre_acquisition / peterson_equity_pre_acquisition\n    \n    # Calculate the ratio of debt to equity post-acquisition\n    debt_to_equity_ratio_post_acquisition = peterson_outstanding_debt_post_acquisition / peterson_equity_post_acquisition\n    \n    # Calculate the change in debt and equity ratio\n    change_in_debt_and_equity_ratio = debt_to_equity_ratio_post_acquisition - debt_to_equity_ratio_pre_acquisition\n    \n    # return the change in debt and equity ratio\n    return change_in_debt_and_equity_ratio\n```"
        ]
    },
    {
        "tables": [
            "| 1 Year | 3 Years | 5 Years | Since Inception |\n|--------|---------|---------|-----------------|\n| 5.3%   | 6.2%    | 4.7%    | 4.4%            |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-16",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the performance metrics for a different investment option: Let's assume that the highest drawdown risk remains constant at 10.2% for every time interval. Also, suppose that the mean drawdown risk is unchanging at 6.8% for every time interval. Based on the data given, compute the Calmar ratio in the usual manner. What is the resulting Calmar ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    one_year_return = 0.053\n    three_year_return = 0.062\n    five_year_return = 0.047\n    since_inception_return = 0.044\n    max_drawdown_risk = 0.102\n    mean_drawdown_risk = 0.068\n    \n    # Calculate the average return\n    average_return = (one_year_return + three_year_return + five_year_return + since_inception_return) / 4\n    \n    # Calculate the Calmar ratio in the usual manner\n    calmar_ratio = average_return / max_drawdown_risk\n    \n    # return answer\n    return calmar_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Returns | RB=50% | RB=20% | RB=-30% |\n|---------|--------|--------|---------|\n| RA=-10% | 0.4    | 0      | 0       |\n| RA=10%  | 0      | 0.3    | 0       |\n| RA=30%  | 0      | 0      | 0.3     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-17",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the above probability matrix, what is the covariance of returns on Portfolio X and Portfolio Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ra_values = [-0.10, 0.10, 0.30]\n    rb_values = [0.50, 0.20, -0.30]\n    probabilities = {\n        (-0.10, 0.50): 0.4,\n        (0.10, 0.20): 0.3,\n        (0.30, -0.30): 0.3\n    }\n\n    # Calculate the expected return for RA and RB\n    expected_ra = sum([ra * probabilities.get((ra, rb), 0) for ra in ra_values for rb in rb_values])\n    expected_rb = sum([rb * probabilities.get((ra, rb), 0) for ra in ra_values for rb in rb_values])\n\n    # Calculate the covariance\n    covariance = sum([(ra - expected_ra) * (rb - expected_rb) * probabilities.get((ra, rb), 0) for ra in ra_values for rb in rb_values])\n\n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-18",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Fairfield Inc. intends to borrow sufficient funds to buy back 100,000 stocks, what would be Fairfield\u2019s earnings per share following the repurchase, with the following data related to the share buyback: Shares outstanding before buyback 3.1 million, Earnings per share before buyback US$4.00, Share price at the time of buyback US$50, and After-tax cost of borrowing 6%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_outstanding_before_buyback = 3100000  # Shares outstanding before buyback\n    earnings_per_share_before_buyback = 4.00    # Earnings per share before buyback\n    share_price_at_buyback = 50                # Share price at the time of buyback\n    after_tax_cost_of_borrowing = 0.06         # After-tax cost of borrowing\n    shares_to_buyback = 100000                 # Number of shares to buy back\n    \n    # Do math calculation to get the answer\n    total_earnings_before_buyback = shares_outstanding_before_buyback * earnings_per_share_before_buyback\n    total_cost_of_borrowing = shares_to_buyback * share_price_at_buyback * after_tax_cost_of_borrowing\n    total_earnings_after_buyback = total_earnings_before_buyback - total_cost_of_borrowing\n    shares_outstanding_after_buyback = shares_outstanding_before_buyback - shares_to_buyback\n    earnings_per_share_after_buyback = total_earnings_after_buyback / shares_outstanding_after_buyback\n    \n    # return answer\n    return earnings_per_share_after_buyback\n```"
        ]
    },
    {
        "tables": [
            "|      | Adesivo | Enviado | Gesticular |\n|------|---------|---------|------------|\n| Stock's current price | 14.72 | 72.20 | 132.16 |\n| Diluted EPS (last four quarters) | 0.81 | 2.92 | -0.05 |\n| Diluted EPS (next four quarters) | 0.91 | 3.10 | 2.85 |\n| Dividend rate (annualized most recent dividend) | 0.44 | 1.24 | 0.00 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-19",
        "python_solution": "",
        "ground_truth": null,
        "question": "Pinho instructs Martins to utilize a valuation metric to facilitate a comprehensive evaluation of the relative share value of the three corporations. The essential financial data for these businesses are shown in Exhibit 1. For Adesivo, Martins examines the base trailing EPS. With a basic trailing EPS of R$0.84, he found a note in the financial reports of Adesivo stating that\u201cOn a per share basis, Adesivo incurred in the last four quartersi. from a lawsuit, a non-recurring gain of R$0.04; andii. Based on Exhibit 1 and Adesivo\u2019s financial reports, what is the trailing P/E for Adesivo using the base EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_current_price = 14.72\n    diluted_eps_last_four_quarters = 0.81\n    adjustment_for_non_recurring_gain = 0.04\n    \n    # Do math calculation to get the answer\n    base_eps = diluted_eps_last_four_quarters - adjustment_for_non_recurring_gain\n    trailing_pe = stock_current_price / base_eps\n    \n    # return answer\n    return trailing_pe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-20",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investor bought 200 stocks of a company that doesn't pay dividends on margin for a price of $50 each. The leverage ratio stands at 2.5. Half a year later, the investor offloads these stocks at $60 apiece. Disregarding the interest accrued on the borrowed sum and the transaction costs, what was the investor's return over the half-year period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 50  # Initial price of the stock\n    selling_price = 60  # Selling price of the stock\n    num_stocks = 200  # Number of stocks bought\n    leverage_ratio = 2.5  # Leverage ratio\n    \n    # Do math calculation to get the answer\n    # Calculate the initial investment made by the investor\n    initial_investment = (initial_price * num_stocks) / leverage_ratio\n    \n    # Calculate the profit made from selling the stocks\n    profit = (selling_price - initial_price) * num_stocks\n    \n    # Calculate the return on investment (ROI)\n    roi = (profit / initial_investment)\n    \n    # Since the period is half a year, to annualize this return, we would multiply by 2. \n    # However, the question specifically asks for the half-year return, so we do not need to annualize it.\n    answer = roi * 100  # Convert ROI to percentage\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| BVPS  | $28.25  |\n| ROE  | 14.5%  |\n| Constant long-term growth  | 5.5%  |\n| Cost of equity  | 10.9%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-21",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is assessing the value of Corporation Z using the single-stage residual income model and has compiled pertinent data in the listed table. What is the justified price-to-book ratio for Corporation Z?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    BVPS = 28.25  # Book Value Per Share\n    ROE = 0.145   # Return On Equity\n    g = 0.055     # Constant long-term growth\n    r = 0.109     # Cost of equity\n\n    # Do math calculation to get the answer\n    justified_P_B_ratio = (ROE - g) / (r - g)\n\n    # return answer\n    return justified_P_B_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-22",
        "python_solution": "",
        "ground_truth": null,
        "question": "An employee at a capital management firm, Jonathan, is given the task to determine the gain in 6 months on a transaction of $2,000,000 vega notional of a one-year variance swap on the S&P 500 at a 20% strike (expressed as annual volatility). After a period of six months, the S&P 500 shows a realized volatility of 16%, while the fair strike of a fresh 6-month variance swap on the S&P 500 is now 18%. The yearly interest rate is 2.00%. What is the updated value of the variance swap?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_amount = 2000000  # $2,000,000\n    strike = 0.20  # 20% annual volatility\n    realized_volatility = 0.16  # 16% for the first 6 months\n    current_fair_strike = 0.18  # 18% for the new 6-month swap\n    yearly_interest_rate = 0.02  # 2.00%\n    time_elapsed = 0.5  # 6 months in years\n    time_to_maturity = 0.5  # remaining 6 months in years\n    \n    # Do math calculation to get the answer\n    variance_realized = realized_volatility ** 2 * time_elapsed\n    variance_implied = current_fair_strike ** 2 * time_to_maturity\n    variance_expected = strike ** 2 * (time_elapsed + time_to_maturity)\n    \n    payoff = notional_amount * (variance_realized - variance_implied)\n    updated_value = payoff * (1 + yearly_interest_rate) ** (-time_to_maturity)\n    \n    discount_factor = (1 + yearly_interest_rate) ** (-time_to_maturity)\n    updated_value_discounted = discount_factor * payoff\n    \n    # Adjust the calculation to account for the specifications provided\n    updated_value_swap = notional_amount * ((variance_realized - variance_implied) + variance_implied) * discount_factor\n    \n    # return answer\n    return updated_value_swap\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-23",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a four-factor market model is being used for the return process of 100 companies, then what is the number of parameters that need to be estimated?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_companies = 100\n    num_factors = 4\n    \n    # Do math calculation to get the answer\n    # In a four-factor market model, each company has a constant term (alpha) and \n    # four factor loadings (betas), and one set of parameters is estimated for each company.\n    num_parameters_per_company = 1 + num_factors  # 1 alpha + 4 betas\n    total_num_parameters = num_parameters_per_company * num_companies\n    \n    # return answer\n    return total_num_parameters\n\n# Print the answer\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-24",
        "python_solution": "",
        "ground_truth": null,
        "question": "A significant purchase has just been declared, aiming at corporation Y. The proposal from corporation X features an exchange offer with a ratio of 2. Directly following the declaration, corporation X and Y's prices are at $50 and $90, respectively. A hedge fund opts to take a long position in corporation Y, hedged with shares from X. Following the completion of the acquisition, the prices shift to $60 and $120. Therefore, the profit for each share from corporation Y is",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_y_initial = 90\n    price_x_initial = 50\n    exchange_ratio = 2\n    price_y_final = 120\n    price_x_final = 60\n    \n    # Do math calculation to get the answer\n    # Calculate the initial value of the hedged position\n    initial_value = price_y_initial - (price_x_initial * exchange_ratio)\n    \n    # Calculate the final value of the hedged position\n    final_value = price_y_final - (price_x_final * exchange_ratio)\n    \n    # Calculate the profit\n    profit = final_value - initial_value\n    \n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-25",
        "python_solution": "",
        "ground_truth": null,
        "question": "Presuming the exercise price of a share option is $50, if the share undergoes a 2-to-1 split, what would be the fresh exercise price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_exercise_price = 50\n    split_ratio = 2\n    \n    # Do math calculation to get the answer\n    new_exercise_price = original_exercise_price / split_ratio\n    \n    # return answer\n    return new_exercise_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-26",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, Firm B had 10,000 shares and 1,000 outstanding warrants with an exercise price of $20/share. The average stock price was $25 over the course of that year. What was the net shares issued when computing the EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_outstanding = 10000\n    warrants_outstanding = 1000\n    exercise_price = 20\n    average_stock_price = 25\n    \n    # Do math calculation to get the answer\n    # Since the average stock price is greater than the exercise price, \n    # the warrants are dilutive\n    dilutive_warrants = warrants_outstanding\n    adjusted_shares_outstanding = shares_outstanding + dilutive_warrants\n    \n    # However, we need to account for the proceeds received from the exercise of the warrants\n    # So, we calculate the treasury shares\n    proceeds_from_warrants = warrants_outstanding * exercise_price\n    treasury_shares = proceeds_from_warrants / average_stock_price\n    \n    # Finally, we calculate the net shares issued\n    net_shares_issued = shares_outstanding + dilutive_warrants - treasury_shares\n    \n    answer = net_shares_issued\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Year | Investment | Return |\n|------|------------|--------|\n| 1    | $500       | 12%    |\n| 2    | $600       | 5%     |\n| 3    | $1000      | 1%     |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-27",
        "python_solution": "",
        "ground_truth": null,
        "question": "The fund overseen by John displays the following returns in year1,2,3: What will be the time-weighted rate of return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    year1_investment = 500\n    year1_return = 0.12\n    year2_investment = 600\n    year2_return = 0.05\n    year3_investment = 1000\n    year3_return = 0.01\n\n    # Calculate the total return for each year\n    year1_total_return = year1_investment * year1_return\n    year2_total_return = year2_investment * year2_return\n    year3_total_return = year3_investment * year3_return\n\n    # Calculate the total value at the end of each year\n    year1_total = year1_investment + year1_total_return\n    year2_total = year1_total + year2_investment + year2_total_return\n    year3_total = year2_total + year3_investment + year3_total_return\n\n    # Calculate the time-weighted rate of return using the geometric mean\n    time_weighted_return = ((year3MethodImpl / year2_total) * (year2_total / year1_total) * (year1_total / year1_investment)) ** (1/3) - 1\n\n    # return answer\n    return time_weighted_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-28",
        "python_solution": "",
        "ground_truth": null,
        "question": "On today's date, 5 June 2013, a semi-annual bond lasting three years that comes with a coupon rate of 6% just issued its initial coupon payment. The face value stands at 100. The due dates for interest payments are the 5th of April and the 5th of October. The bond's yield-to-maturity is equal to 5%. If the count convention is based on 30/360, figure out the accrued interest on this bond as of 5 June 2013.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    coupon_rate = 0.06\n    yield_to_maturity = 0.05\n    interest_payment_date_1 = '05-04'\n    interest_payment_date_2 = '05-10'\n    evaluation_date = '05-06'\n    convention = '30/360'\n\n    # Convert dates into day of year format since all dates are in the same year\n    ipd_1_day_of_year = (4*30) + 5  # Since each month has 30 days in the convention\n    ipd_2_day_of_year = (10*30) + 5  # Same convention\n    ed_day_of_year = (6*30) + 5\n\n    # Determine the number of days between the last interest payment and evaluation date\n    n_days = ed_day_of_year - ipd_1_day_of_year\n\n    # Calculate the annual coupon payment\n    annual_coupon_payment = face_value * coupon_rate\n\n    # Calculate the accrued interest\n    accrued_interest = (annual_coupon_payment/2) * (n_days/180)\n\n    # return answer\n    return accrued_interest\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-29",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, Steel Production acquired a new machine for its production line at an expense of $600,000. The machine is expected to be useful for 10 years and has an approximate residual value of $50,000. Using the straight-line method, what amount of depreciation should Steel report in 2010 for financial accounting?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_machine = 600000\n    residual_value = 50000\n    useful_life = 10\n    \n    # Do math calculation to get the answer\n    annual_depreciation = (cost_of_machine - residual_value) / useful_life\n    \n    # return answer\n    return annual_depreciation\n```"
        ]
    },
    {
        "tables": [
            "| Asset | Annual Return | Volatility of Annual Return | Value |\n|-------|---------------|-----------------------------|-------|\n| A     | 10%           | 25%                         | 100   |\n| B     | 20%           | 20%                         | 50    |"
        ],
        "topic": "Risk Management",
        "question_id": "test-30",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there are 250 trading days in a year, how would the daily VaR at 99% level change if the financial institution sells $50 worth of asset A and purchases $50 worth of asset B, given that the institution's trading portfolio includes two assets with a Correlation (A, B) = 0.2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_A_annual_return = 0.10\n    asset_A_volatility = 0.25\n    asset_A_value = 100\n    \n    asset_B_annual_return = 0.20\n    asset_B_volatility = 0.20\n    asset_B_value = 50\n    \n    trading_days = 250\n    confidence_level = 0.99\n    correlation_AB = 0.2\n    sell_amount = 50\n    purchase_amount = 50\n    \n    # Calculate the daily volatility for each asset\n    asset_A_daily_volatility = asset_A_volatility / (trading_days ** 0.5)\n    asset_B_daily_volatility = asset_B_volatility / (trading_days ** 0.5)\n    \n    # Calculate the new values after selling $50 of A and purchasing $50 of B\n    new_asset_A_value = asset_A_value - sell_amount\n    new_asset_B_value = asset_B_value + purchase_amount\n    \n    # Calculate the portfolio volatility\n    portfolio_volatility = ((new_asset_A_value * asset_A_daily_volatility) ** 2 + \n                            (new_asset_B_value * asset_B_daily_volatility) ** 2 + \n                            2 * new_asset_A_value * new_asset_B_value * \n                            asset_A_daily_volatility * asset_B_daily_volatility * correlation_AB) ** 0.5\n    \n    # Calculate the daily VaR at 99% level\n    daily_VaR = portfolio_volatility * (1 - confidence_level) ** 0.5\n    \n    # return answer\n    return daily_VaR\n```"
        ]
    },
    {
        "tables": [
            "|Maturity(years)|STRIPS Price|Spot Rate|Forward Rate|\n|---|---|---|---|\n|0.5|98.7654|2.50%|2.50%|\n|1.0|97.0662|3.00%|3.50%|\n|1.5|95.2652|3.26%|3.78%|\n|2.0|93.2775|?.??%|?.??%|"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-31",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the chart, what is the worth of a 1.5-year, 6% semiannual coupon, $100 face value bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    coupon_rate = 0.06\n    years = 1.5\n    periods_per_year = 2\n    total_periods = years * periods_per_year\n    coupon_per_period = coupon_rate / periods_per_year\n    discount_rates = [0.025, 0.03, 0.0326]  # 6-month, 1-year, 1.5-year spot rates\n    \n    # Calculate the present value of the bond\n    bond_pv = 0\n    for i in range(1, int(total_periods) + 1):\n        coupon_pv = (coupon_per_period * face_value) / (1 + discount_rates[min(i - 1, 2)]) ** i\n        bond_pv += coupon_pv\n    \n    # Add the present value of the face value at maturity\n    bond_pv += face_value / (1 + discount_rates[2]) ** total_periods\n    \n    # return answer\n    return bond_pv\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-32",
        "python_solution": "",
        "ground_truth": null,
        "question": "The hedge fund known as Sovereign Wealth starts out with an initial capital of $300 million. They levy a 1% management fee anchored on year-end asset value and a 20% incentive fee that applies when returns surpass an 8% hurdle rate. Considering that Sovereign Wealth's first-year appreciation rate stands at 10% and its management fees are predicated on valuation at period's end, what will be the net return for the investor, provided the performance fee is computed after subtracting the management fee?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_capital = 300000000  # Initial capital of $300 million\n    management_fee_rate = 0.01  # 1% management fee\n    incentive_fee_rate = 0.20  # 20% incentive fee\n    hurdle_rate = 0.08  # 8% hurdle rate\n    appreciation_rate = 0.10  # 10% first-year appreciation rate\n\n    # Do math calculation to get the answer\n    end_of_year_asset_value = initial_capital * (1 + appreciation_rate)\n    management_fee = end_of_year_asset_value * management_fee_rate\n    net_asset_value_before_incentive_fee = end_of_year_asset_value - management_fee\n    excess_return = net_asset_value_before_incentive_fee - initial_capital * (1 + hurdle_rate)\n    incentive_fee = max(0, excess_return) * incentive_fee_rate\n    net_return = (net_asset_value_before_incentive_fee - incentive_fee) / initial_capital - 1\n\n    # return answer\n    return net_return\n```"
        ]
    },
    {
        "tables": [
            "| Asset class | Portfolio Weight(%) | Benchmark Weight(%) | Portfolio Return(%) | Benchmark Return(%) |\n| ----------- | ------------------ | ------------------- | ------------------- | ------------------ |\n| Domestic equities | 55 | 40 | 10 | 8 |\n| International equities | 20 | 30 | 10 | 9 |\n| Bonds | 25 | 30 | 5 | 6 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-33",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the asset class returns for the 2016 financial year, what is the value added or active return for the supervised investment portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    domestic_equities_weight = 0.55\n    international_equities_weight = 0.20\n    bonds_weight = 0.25\n    \n    domestic_equities_portfolio_return = 0.10\n    international_equities_portfolio_return = 0.10\n    bonds_portfolio_return = 0.05\n    \n    domestic_equities_benchmark_weight = 0.40\n    international_equities_benchmark_weight = 0.30\n    bonds_benchmark_weight = 0.30\n    \n    domestic_equities_benchmark_return = 0.08\n    international_equities_benchmark_return = 0.09\n    bonds_benchmark_return = 0.06\n    \n    # Calculate portfolio return\n    portfolio_return = (domestic_equities_weight * domestic_equities_portfolio_return +\n                        international_equities_weight * international_equities_portfolio_return +\n                        bonds_weight * bonds_portfolio_return)\n    \n    # Calculate benchmark return\n    benchmark_return = (domestic_equities_benchmark_weight * domestic_equities_benchmark_return +\n                        international_equities_benchmark_weight * international_equities_benchmark_return +\n                        bonds_benchmark_weight * bonds_benchmark_return)\n    \n    # Calculate active return\n    active_return = portfolio_return - benchmark_return\n    \n    # return answer\n    return active_return\n```"
        ]
    },
    {
        "tables": [
            "| Exhibit 4.Arch way's 2015 Forecasted Price and Volume Changes ||\n| --- | --- |\n| Average price increase per unit | 5.00% |\n| Volume growth | -3.00% |"
        ],
        "topic": "Accounting",
        "question_id": "test-34",
        "python_solution": "",
        "ground_truth": null,
        "question": "French indicates that for the recently concluded year (2014), the cost of goods sold by Bridgeport was 30% of sales. When projecting Bridgeport's income statement for 2015, French assumes that all firms in the industry will encounter an inflation rate of 8% on the cost of goods sold. Exhibit 4 presents French\u2019s predictions about Bridgeport\u2019s price and volume variations. According to Exhibit 4, what is Bridgeport\u2019s anticipated gross profit margin for 2015?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    avg_price_increase = 0.05  # 5.00%\n    volume_growth = -0.03  # -3.00%\n    cost_of_goods_sold_percentage = 0.3  # 30%\n    inflation_rate = 0.08  # 8%\n\n    # Calculate 2015 forecasted sales\n    forecasted_sales = 1 + avg_price_increase + volume_growth\n\n    # Calculate 2015 forecasted cost of goods sold\n    forecasted_cost_of_goods_sold = cost_of_goods_sold_percentage * (1 + inflation_rate)\n\n    # Calculate 2015 forecasted gross profit margin\n    forecasted_gross_profit_margin = (forecasted_sales - forecasted_cost_of_goods_sold) / forecasted_sales\n\n    # Convert to percentage\n    answer = forecasted_gross_profit_margin * 100\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-35",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a periodic inventory system, what was the cost of sales in 2008 (\u20ac thousands) for Nutmeg Enterprises, which launched in 2007 and employs the weighted average cost method? During its first year, the company bought 45,000 units of inventory for \u20ac10 each and sold 40,000 units for \u20ac20 each. The following year, it acquired an additional 50,000 units at \u20ac11 each and sold 45,000 units for \u20ac22 each.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    units_sold_2008 = 45000\n    price_per_unit_2007 = 10\n    price_per_unit_2008 = 11\n    units_bought_2007 = 45000\n    units_bought_2008 = 50000\n    units_sold_2007 = 40000\n\n    # Calculate the units remaining from 2007\n    remaining_units_2007 = units_bought_2007 - units_sold_2007\n\n    # Calculate the weighted average cost of remaining units from 2007 and new units bought in 2008\n    total_units_2008 = remaining_units_2007 + units_bought_2008\n    weighted_average_cost = (remaining_units_2007 * price_per_unit_2007 + units_bought_2008 * price_per_unit_2008) / total_units_2008\n\n    # Calculate the cost of sales in 2008\n    cost_of_sales_2008 = units_sold_2008 * weighted_average_cost\n\n    # Express the answer in \u20ac thousands\n    answer = cost_of_sales_2008 / 1000\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-36",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a security is valued at 88.692 per 100 of par value, and the security's complete price decreases to 88.642 if the yield-to-maturity rises by 10 basis points and increases to 88.762 if the yield-to-maturity is reduced by 10 basis points, what is the approximate convexity of the security?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_change_up = 88.762 - 88.692  # Price increase when yield-to-maturity is reduced by 10 basis points\n    price_change_down = 88.692 - 88.642  # Price decrease when yield-to-maturity is increased by 10 basis points\n    yield_change = 10 / 100  # Yield-to-maturity change in decimal format (10 basis points = 0.1%)\n    par_value = 100\n    current_price = 88.692\n    \n    # Do math calculation to get the answer\n    convexity = (price_change_up - price_change_down) / (par_value * (yield_change ** 2))\n    modified_convexity = convexity * (par_value / current_price)\n    \n    # return answer\n    return modified_convexity\n```\n\nNote: This Python program calculates the approximate convexity of the security using the provided price and yield-to-maturity changes. The convexity is then modified to account for the current price of the security. The modified convexity is returned as the answer."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-37",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of 2013, company N released bonds with a face value of $2,000,000 that would mature in 5 years. With the market interest rate being 7%, the bonds will provide an 8% coupon payment every 31st December. What would be the interest expenditure according to the effective interest rate method on the 31st December 2013?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 2000000  # Face value of the bond\n    market_interest_rate = 0.07  # Market interest rate\n    coupon_rate = 0.08  # Coupon rate\n    years_to_maturity = 5  # Years to maturity\n    \n    # Calculate the present value of the bond using the market interest rate\n    present_value = face_value / (1 + market_interest_rate) ** years_to_maturity\n    \n    # Calculate the coupon payment\n    coupon_payment = face_value * coupon_rate\n    \n    # Calculate the interest expenditure using the effective interest rate method\n    effective_interest_rate = market_interest_rate\n    interest_expenditure = (present_value * effective_interest_rate) + (coupon_payment - (present_value * effective_interest_rate))\n    \n    # return answer\n    return interest_expenditure\n```\n\nNote: In this solution, I'm using the formula for present value of a bond, which is Face Value / (1 + Market Interest Rate)^Years to Maturity. Then I calculate the coupon payment and the interest expenditure using the effective interest rate method."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-38",
        "python_solution": "",
        "ground_truth": null,
        "question": "If at the start of the year, Alpine Peak Investments, a hedge fund, had a portfolio valued at $475,000,000, which increased to $541,500,000 after a year, what would be the efficient yield for an investor? This is keeping in mind that the hedge fund levies a 1.5% management fee on the final portfolio value and a 10% incentive fee that are calculated separately.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_portfolio_value = 475000000\n    final_portfolio_value = 541500000\n    management_fee_rate = 0.015\n    incentive_fee_rate = 0.10\n    \n    # Calculate the absolute return for the year\n    absolute_return = final_portfolio_value - initial_portfolio_value\n    \n    # Calculate the management fee\n    management_fee = final_portfolio_value * management_fee_rate\n    \n    # Calculate the incentive fee\n    incentive_fee = absolute_return * incentive_fee_rate\n    \n    # Calculate the net return after fees\n    net_return = absolute_return - management_fee - incentive_fee\n    \n    # Calculate the efficient yield\n    efficient_yield = (net_return / initial_portfolio_value) * 100\n    \n    # return answer\n    return efficient_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-39",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a daily compounded annual interest rate of 2.5%, how long would it take for Alex, who currently has an investment of $1 million, to save up to his required retirement goal of $2million for his everyday costs?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_investment = 1000000  # $1 million\n    retirement_goal = 2000000  # $2 million\n    annual_interest_rate = 0.025  # 2.5%\n    daily_interest_rate = (1 + annual_interest_rate) ** (1/365) - 1  # daily compounded interest rate\n    \n    # Do math calculation to get the answer\n    import math\n    years_to_reach_goal = math.log(retirement_goal / current_investment) / math.log(1 + daily_interest_rate) / 365\n    \n    # return answer\n    return round(years_to_reach_goal, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-40",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financial expert predicts that a share may have a $2 dividend next year and could be sold for $38 by the end of next year. What would the share's value be if the required rate of return is 20%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_next_year = 2\n    sale_price_next_year = 38\n    required_rate_of_return = 0.20  # 20%\n\n    # Do math calculation to get the answer\n    present_value_dividend = dividend_next_year / (1 + required_rate_of_return)\n    present_value_sale_price = sale_price_next_year / (1 + required_rate_of_return)\n    share_value = present_value_dividend + present_value_sale_price\n\n    # return answer\n    return share_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-41",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business is pondering on the idea of transitioning from a completely equity-based capital structure to a capital structure comprising of equal parts of equity and debt, keeping assets constant. This alteration would decrease the net income by 30%. If the present return on equity (ROE) is 10%, what would the ROE be with the suggested capital structure?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_ROE = 0.10  # 10%\n    decrease_in_net_income = 0.30  # 30%\n    original_net_income = 1  # Assuming original net income is 1 for simplicity\n    original_equity = original_net_income / original_ROE\n    \n    # Calculate the new net income after the decrease\n    new_net_income = original_net_income * (1 - decrease_in_net_income)\n    \n    # Calculate the new equity, which is half of the original equity\n    new_equity = original_equity / 2\n    \n    # Calculate the new ROE\n    new_ROE = new_net_income / new_equity\n    \n    # return answer\n    return new_ROE\n```"
        ]
    },
    {
        "tables": [
            "|                     | Value  |\n|---------------------|--------|\n| Initial Value       | 87.1876|\n| 2-year shift for 1bp| 87.3212|\n| 5-year shift for 1bp| 87.2545|\n| 10-year shift for 1bp|87.1454|\n| 30-year shift for 1bp|87.3454|"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-42",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given table, what is the key rate duration for a shift of 10 years for a zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_value = 87.1876\n    shift_10_year = 87.1454\n    \n    # Do math calculation to get the answer\n    key_rate_duration = (initial_value - shift_10_year) / initial_value * 100\n    \n    # return answer\n    return key_rate_duration\n```"
        ]
    },
    {
        "tables": [
            "| X   | 0   | 1   | 2   | 3   | 4   | 5   | 6   | 7   |\n|-----|-----|-----|-----|-----|-----|-----|-----|-----|\n| P(X)| 0.14| 0.09| 0.19| 0.25| 0.17| 0.06| 0.03| 0.07|\n\nNote: A discrete random variable X follows the probability distribution as given in the table above."
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-43",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided data, what is the value of P(3\u2264X\u22646)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = [0.14, 0.09, 0.19, 0.25, 0.17, 0.06, 0.03, 0.07]\n\n    # Define the range of X for the given question\n    start = 3\n    end = 6\n\n    # Do math calculation to get the answer\n    answer = sum(probabilities[start:end+1])\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| company | Share price | Call premium | Strike price |\n|---------|-------------|--------------|--------------|\n| NZT     | 53.37       | 1.62         | 58           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-44",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data in Exhibit 1, if Michael is planning to implement a covered call strategy, what would be the breakeven share price for this strategy? Exhibit 1: Share Price and Option Premiums (share prices and option premiums in $)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    share_price = 53.37  # Share price of NZT\n    call_premium = 1.62  # Call premium\n    strike_price = 58  # Strike price\n\n    # Do math calculation to get the answer\n    breakeven_share_price = share_price - call_premium\n\n    # return answer\n    return breakeven_share_price\n```"
        ]
    },
    {
        "tables": [
            "| Acquisition cost                                       | \u20ac2,300,000           |\n|-------------------------------------------------------|----------------------|\n| Acquisition date                                      | 1 January 2008       |\n| Expected residual value at time of acquisition        | \u20ac500,000             |\n| The customer list is expected to result in extra sales for three years after acquisition. The present value of these expected extra sales exceeds the cost of the list. | |"
        ],
        "topic": "Accounting",
        "question_id": "test-45",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an analyst in the finance team of a French company, PLECCO Inc., calculates the amortization of a client list, an intangible asset, for the fiscal year concluded 31 December 2009 using the straight-line method, what would be the sum of accumulated amortization associated with the client list as of 31 December 2009, based on the data she has collected about the asset?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 2300000  # in euros\n    expected_residual_value = 500000  # in euros\n    acquisition_date = \"1 January 2008\"\n    fiscal_year_end = \"31 December 2009\"\n    \n    # Calculate the total amortization period in years\n    amortization_period = 3  # in years\n    \n    # Calculate the annual amortization amount using the straight-line method\n    annual_amortization = (acquisition_cost - expected_residual_value) / amortization_period\n    \n    # Calculate the accumulated amortization as of 31 December 2009\n    accumulated_amortization = annual_amortization * 2  # 2 years have passed since acquisition\n    \n    # return answer\n    return accumulated_amortization\n```"
        ]
    },
    {
        "tables": [
            "|                   | 2017($) | 2018($) |\n|-------------------|---------|---------|\n| net income        | 320,000 | 360,000 |\n| accounts receivable | 23,000  | 25,000  |\n| accounts payable  | 31,000  | 35,000  |\n| depreciation      | 7,000   | 7,000   |"
        ],
        "topic": "Accounting",
        "question_id": "test-46",
        "python_solution": "",
        "ground_truth": null,
        "question": "Can you compute the operational cash flow for the year 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income_2018 = 360000\n    accounts_receivable_2017 = 23000\n    accounts_receivable_2018 = 25000\n    accounts_payable_2017 = 31000\n    accounts_payable_2018 = 35000\n    depreciation_2018 = 7000\n    \n    # Do math calculation to get the answer\n    delta_accounts_receivable = accounts_receivable_2018 - accounts_receivable_2017\n    delta_accounts_payable = accounts_payable_2018 - accounts_payable_2017\n    operational_cash_flow = net_income_2018 - delta_accounts_receivable + delta_accounts_payable + depreciation_2018\n    \n    # return answer\n    return operational_cash_flow\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-47",
        "python_solution": "",
        "ground_truth": null,
        "question": "An agriculturist intends to sell 50,000 tons of soybeans in six months and opts to short futures contracts to protect against a decrease in price. The present price of soybeans is $508/ton, the contract size is 100 tons, with a soybean storage cost of 1.5% annually. The exponentially compounded rate is 5%, what's the cost of the futures contract?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_tons = 50000\n    current_price = 508\n    contract_size = 100\n    storage_cost = 0.015\n    interest_rate = 0.05\n    time_in_years = 0.5  # Six months\n\n    # Do math calculation to get the answer\n    # Calculate the storage cost per ton\n    storage_cost_per_ton = storage_cost * current_price\n    \n    # Calculate the interest cost per ton\n    interest_cost_per_ton = (1 - (1 + interest_rate) ** -time_in_years) * current_price\n    \n    # Calculate the total cost per ton\n    total_cost_per_ton = current_price + storage_cost_per_ton + interest_cost_per_ton\n    \n    # The cost of the futures contract is the difference between the total cost per ton and the current price\n    cost_of_futures_contract = total_cost_per_ton - current_price\n    \n    # return answer\n    return cost_of_futures_contract\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-48",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the effective annual rate (EAR) if the declared yearly interest rate is 20% and the compounding occurs on a monthly basis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yearly_interest_rate = 0.20  # 20%\n    compounding_frequency = 12  # Monthly compounding\n    \n    # Do math calculation to get the answer\n    monthly_interest_rate = yearly_interest_rate / compounding_frequency\n    effective_annual_rate = (1 + monthly_interest_rate) ** compounding_frequency - 1\n    \n    # return answer\n    return effective_annual_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-49",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the correlation coefficient of the returns of XYZ company and the overall market, given that the covariance of the returns is 0.009, the standard deviation of the overall market returns is 0.08, and the standard deviation of XYZ's returns is 0.15?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    covariance = 0.009\n    std_dev_market = 0.08\n    std_dev_xyz = 0.15\n    \n    # Do math calculation to get the answer\n    correlation_coefficient = covariance / (std_dev_market * std_dev_xyz)\n    \n    # return answer\n    return correlation_coefficient\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-50",
        "python_solution": "",
        "ground_truth": null,
        "question": "The trader, Michael, is preparing to establish a regression hedge. He plans to sell a Treasury bond worth $500,000 and buy TIPS as a hedge. Based on past data, the DV01on the T-bond is 0.085, the DV01on the TIPS is 0.063, and the regression beta coefficient (hedge adjustment factor) is 1.1. How much TIPS should Michael acquire?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    treasury_bond_value = 500000\n    dv01_t_bond = 0.085\n    dv01_tips = 0.063\n    regression_beta_coefficient = 1.1\n    \n    # Do math calculation to get the answer\n    hedge_ratio = regression_beta_coefficient * (dv01_t_bond / dv01_tips)\n    tips_to_acquire = treasury_bond_value * hedge_ratio\n    \n    # return answer\n    return tips_to_acquire\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-51",
        "python_solution": "",
        "ground_truth": null,
        "question": "Over the previous 36 months, the standard deviation of monthly returns within a fund's portfolio was recorded at 4.9%. What is the test statistic value to verify an assertion that this fund's investment approach results in a standard deviation of monthly returns of less than 5.0%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    n = 36  # number of months\n    s = 0.049  # sample standard deviation of monthly returns\n    sigma_0 = 0.05  # hypothesized population standard deviation\n    \n    # Do math calculation to get the answer\n    chi_square = (n - 1) * (s ** 2) / (sigma_0 ** 2)\n    \n    # In this case, the chi-square value itself is the test statistic, not the solution directly.\n    # However, to keep in line with the requested format, we will return it as the answer.\n    answer = chi_square\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|         | November 2010 |       | December 2010 |       |\n|---------|---------------|-------|---------------|-------|\n| Goods   | Quantity      | Price | Quantity      | Price |\n| Sugar   | 70kg          | \u00a30.90/kg  | 120kg         | \u00a31.00/kg  |\n| Cotton  | 60kg          | \u20ac0.60/kg  | 50kg          | \u20ac0.80/kg  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-52",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we set the base period for 2010's consumption to be November and the starting price index at 100, what would be the inflation rate after determining the December price index as a Laspeyres index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sugar_quantity_nov = 70  # kg\n    sugar_price_nov = 0.90  # \u00a3/kg\n    sugar_quantity_dec = 120  # kg\n    sugar_price_dec = 1.00  # \u00a3/kg\n    \n    cotton_quantity_nov = 60  # kg\n    cotton_price_nov = 0.60  # \u20ac/kg\n    cotton_quantity_dec = 50  # kg\n    cotton_price_dec = 0.80  # \u20ac/kg\n    \n    exchange_rate = 1  # assume \u00a31 = \u20ac1 for simplicity\n    \n    # Convert cotton prices to \u00a3\n    cotton_price_nov = cotton_price_nov * exchange_rate\n    cotton_price_dec = cotton_price_dec * exchange_rate\n    \n    # Calculate total expenditure in November\n    total_expenditure_nov = (sugar_quantity_nov * sugar_price_nov) + (cotton_quantity_nov * cotton_price_nov)\n    \n    # Calculate Laspeyres index for December\n    laspeyres_index_dec = ((sugar_quantity_nov * sugar_price_dec) + (cotton_quantity_nov * cotton_price_dec)) / total_expenditure_nov\n    \n    # Calculate inflation rate\n    inflation_rate = (laspeyres_index_dec - 1) * 100\n    \n    # return answer\n    return inflation_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-53",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is interested in forecasting the earnings of his manufacturing plant in October 20X9, thus he employs income data from January 20X6 to September 20X9 as samples to create a AR(1) model, achieving the following outcome: Xt=293.5742+0.9387Xt\u22121X_t=293.5742+0.9387X_{t-1}Xt\u200b=293.5742+0.9387Xt\u22121\u200b Can you determine the long-term average?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = 293.5742\n    slope = 0.9387\n    \n    # Do math calculation to get the answer\n    long_term_average = intercept / (1 - slope)\n    \n    # return answer\n    return long_term_average\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| 1. | Purchased a customer list for $100,000, which is expected to provide equal annual benefits for the next 4 years. |\n| 2. | Recorded $200,000 of goodwill in the acquisition of a competitor. It is estimated that the acquisition would provide substantial benefits for the company for at least the next 10 years. |\n| 3. | Spent $300,000 on media placements announcing the company had donated products and services to the community. The CEO believes the firm's reputation was enhanced substantially and the company will likely benefit from it for the next 5 years. |"
        ],
        "topic": "Accounting",
        "question_id": "test-54",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2010, certain incidents took place at a corporation. Given those incidents, what should be the corporation's documented amortization expense in 2011?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    customer_list_cost = 100000\n    customer_list_years = 4\n    goodwill_cost = 200000\n    goodwill_years = 10\n    media_placements_cost = 300000\n    media_placements_years = 5\n\n    # Do math calculation to get the answer\n    customer_list_amortization = customer_list_cost / customer_list_years\n    goodwill_amortization = goodwill_cost / goodwill_years\n    media_placements_amortization = media_placements_cost / media_placements_years\n\n    total_amortization = customer_list_amortization + goodwill_amortization + media_placements_amortization\n\n    # return answer\n    return total_amortization\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-55",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier is considering a property valued at $2.5 million. To purchase this property, he needs to pay up front 25% of the total cost and the remaining amount is to be financed at 10%, compounded monthly for a duration of 25 years. Determine the monthly mortgage payment for this scenario.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    property_value = 2500000\n    down_payment_percentage = 0.25\n    interest_rate = 0.10\n    loan_term_years = 25\n\n    # Calculate the down payment\n    down_payment = property_value * down_payment_percentage\n    loan_amount = property_value - down_payment\n\n    # Convert annual interest rate to monthly interest rate\n    monthly_interest_rate = interest_rate / 12\n\n    # Calculate the number of monthly payments\n    loan_term_months = loan_term_years * 12\n\n    # Calculate the monthly mortgage payment using the formula for M (monthly payment)\n    # M = P[r(1+r)^n]/[(1+r)^n - 1], where P is the loan amount, r is the monthly interest rate, and n is the number of monthly payments\n    monthly_mortgage_payment = (loan_amount * (monthly_interest_rate * (1 + monthly_interest_rate) ** loan_term_months)) / ((1 + monthly_interest_rate) ** loan_term_months - 1)\n\n    # return answer\n    return monthly_mortgage_payment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-56",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a reversed head and shoulders formation, if the collar is at \u20ac100, the shoulders are priced at \u20ac90, and the head is at \u20ac75. What is the intended price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    collar_price = 100\n    shoulder_price = 90\n    head_price = 75\n\n    # Do math calculation to get the answer\n    price_difference = collar_price - head_price\n    intended_price = collar_price + price_difference\n\n    # return answer\n    return intended_price\n```"
        ]
    },
    {
        "tables": [
            "| Security | Security Weight(%) | Expected Standard Deviation(%) |\n|----------|--------------------|--------------------------------|\n| Equity   | 40                 | 30                             |\n| Bond     | 60                 | 15                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-57",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the covariance between stocks and bonds is 0.058, what is the projected standard deviation of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_equity = 0.4\n    weight_bond = 0.6\n    std_dev_equity = 0.3\n    std_dev_bond = 0.15\n    covariance = 0.058\n    \n    # Do math calculation to get the answer\n    portfolio_variance = (weight_equity ** 2) * (std_dev_equity ** 2) + (weight_bond ** 2) * (std_dev_bond ** 2) + 2 * weight_equity * weight_bond * covariance\n    portfolio_std_dev = portfolio_variance ** 0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-58",
        "python_solution": "",
        "ground_truth": null,
        "question": "During the same period last year, the stock price of Company H surged by 2.5 times its initial price. What was the continuously compounded return on the company's stock price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 1  # Assuming initial price is 1 for simplicity\n    final_price = 2.5 * initial_price\n    \n    # Do math calculation to get the answer\n    import math\n    continuously_compounded_return = math.log(final_price / initial_price)\n    \n    # return answer\n    return continuously_compounded_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-59",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a portfolio contains 80 assets, what should be the estimated number of covariances?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_assets = 80\n    \n    # Do math calculation to get the answer\n    # The number of covariances can be calculated using the formula n*(n-1)/2, \n    # where n is the number of assets in the portfolio.\n    num_covariances = num_assets * (num_assets - 1) // 2\n    \n    # return answer\n    return num_covariances\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-60",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the worth of a bond that has a face value of EUR 1,000, a three-year maturity period, and annually pays a 5% coupon? Please note the following spot rate curve: 1-year, 6%; 2-year, 7%; and 3-year, 8%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000  # EUR\n    maturity_period = 3  # years\n    coupon_rate = 0.05  # 5%\n    spot_rates = [0.06, 0.07, 0.08]  # 1-year, 2-year, 3-year spot rates\n    \n    # Calculate the coupon payment\n    coupon_payment = face_value * coupon_rate\n    \n    # Calculate the present value of each cash flow\n    pv_cash_flows = []\n    for i in range(maturity_period):\n        if i == maturity_period - 1:  # add face value to last cash flow\n            cash_flow = coupon_payment + face_value\n        else:\n            cash_flow = coupon_payment\n        pv_cash_flow = cash_flow / (1 + spot_rates[i]) ** (i + 1)\n        pv_cash_flows.append(pv_cash_flow)\n    \n    # Calculate the worth of the bond (sum of present values of all cash flows)\n    bond_worth = sum(pv_cash_flows)\n    \n    # return answer\n    return bond_worth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-61",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the critical value at the 0.05 level of significance is 9.4877, when will Samantha, a data analyst, reject the null hypothesis while using a chi-square distributed test statistic to check the independence of two categorical variables?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    critical_value = 9.4877\n    alpha_level = 0.05\n    \n    # Do math calculation to get the answer\n    # In this case, no math calculation is needed as the question is about decision making based on a critical value\n    answer = f\"Reject the null hypothesis if the calculated chi-square statistic is greater than {critical_value} at the {alpha_level} level of significance.\"\n    \n    # return answer\n    return answer\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-62",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company has to choose two out of four executives to join the finance committee. What are the possible combinations of two that can be created?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_executives = 4\n    executives_to_choose = 2\n\n    # Do math calculation to get the answer\n    # Calculate the combination using the formula for combination: nCr = n! / (r!(n-r)!)\n    import math\n    combination = math.comb(total_executives, executives_to_choose)\n    \n    # return answer\n    return combination\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-63",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier is interested in establishing a bull call spread with the next options: a call option with a strike price of $35 that costs $12.65, and a call option with a strike price of $40 priced at $8.85. What is the maximum profit that can be made from this bull call spread?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    strike_price_lower = 35\n    cost_lower = 12.65\n    strike_price_upper = 40\n    cost_upper = 8.85\n\n    # Do math calculation to get the answer\n    max_profit = strike_price_upper - strike_price_lower - (cost_lower - cost_upper)\n\n    # return answer\n    return max_profit\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-64",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert is trying to determine the worth of Sovereign Corporation's shares. The corporation has recently issued a dividend of $0.58 per share. The dividends are projected to increase by 20 percent in the coming year and 15 percent in the following year. From the third year onwards, the dividends are expected to rise at a rate of 5.6 percent per annum perpetually. If the necessary rate of return is 8.3 percent, what is the inherent value of the stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_per_share = 0.58\n    growth_rate_year1 = 0.20\n    growth_rate_year2 = 0.15\n    perpetual_growth_rate = 0.056\n    required_rate_of_return = 0.083\n\n    # Do math calculation to get the answer\n    # Calculate dividend for the first two years\n    dividend_year1 = dividend_per_share * (1 + growth_rate_year1)\n    dividend_year2 = dividend_year1 * (1 + growth_rate_year2)\n\n    # Calculate the perpetual dividend from the third year onwards\n    perpetual_dividend = dividend_year2 * (1 + perpetual_growth_rate)\n\n    # Calculate the present value of the first two years' dividends\n    present_value_year1 = dividend_year1 / (1 + required_rate_of_return)\n    present_value_year2 = dividend_year2 / ((1 + required_rate_of_return) ** 2)\n\n    # Calculate the present value of the perpetual dividend\n    present_value_perpetual_dividend = perpetual_dividend / (required_rate_of_return - perpetual_growth_rate) / ((1 + required_rate_of_return) ** 2)\n\n    # Calculate the inherent value of the stock\n    inherent_value = present_value_year1 + present_value_year2 + present_value_perpetual_dividend\n\n    # return answer\n    return inherent_value\n```"
        ]
    },
    {
        "tables": [
            "| Scenario | Probability of Scenario (%) | Amount Recovered ($) | Probability of Amount (%) |\n|----------|-----------------------------|----------------------|--------------------------|\n| 1        | 40                          | 50,000               | 60                       |\n| 1        | 40                          | 30,000               | 40                       |\n| 2        | 60                          | 80,000               | 90                       |\n| 2        | 60                          | 60,000               | 10                       |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-65",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the two scenarios proposed by a financial examiner, what is the anticipated recovery value from the principal of defaulted loans amounting to $100,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    scenario_1_probability = 0.4  # 40%\n    scenario_2_probability = 0.6  # 60%\n    \n    scenario_1_amount_recovered_1 = 50000  # $50,000\n    scenario_1_amount_recovered_2 = 30000  # $30,000\n    scenario_1_probability_amount_recovered_1 = 0.6  # 60%\n    scenario_1_probability_amount_recovered_2 = 0.4  # 40%\n    \n    scenario_2_amount_recovered_1 = 80000  # $80,000\n    scenario_2_amount_recovered_2 = 60000  # $60,000\n    scenario_2_probability_amount_recovered_1 = 0.9  # 90%\n    scenario_2_probability_amount_recovered_2 = 0.1  # 10%\n    \n    principal_amount = 100000  # $100,000\n    \n    # Do math calculation to get the answer\n    scenario_1_expected_recovery = (scenario_1_probability * scenario_1_amount_recovered_1 * scenario_1_probability_amount_recovered_1) + \\\n                                  (scenario_1_probability * scenario_1_amount_recovered_2 * scenario_1_probability_amount_recovered_2)\n    \n    scenario_2_expected_recovery = (scenario_2_probability * scenario_2_amount_recovered_1 * scenario_2_probability_amount_recovered_1) + \\\n                                  (scenario_2_probability * scenario_2_amount_recovered_2 * scenario_2_probability_amount_recovered_2)\n    \n    total_expected_recovery = scenario_1_expected_recovery + scenario_2_expected_recovery\n    \n    answer = total_expected_recovery / principal_amount\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-66",
        "python_solution": "",
        "ground_truth": null,
        "question": "What are the chances of stock A underperforming the market, given an analyst's discovery that it has a 60% probability of outdoing the market?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_of_outdoing_market = 0.6\n    \n    # Do math calculation to get the answer\n    probability_of_underperforming_market = 1 - probability_of_outdoing_market\n    \n    # return answer\n    return probability_of_underperforming_market\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-67",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bank that complies with the Basel I Accord issues a loan of $100 million to a company having a risk weight of 50%. What is the fundamental on-balance-sheet credit risk charge?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 100000000  # Loan amount in dollars\n    risk_weight = 0.5  # Risk weight as a decimal\n    \n    # Do math calculation to get the answer\n    # The Basel I Accord requires banks to hold at least 8% of risk-weighted assets as capital\n    # The risk-weighted asset is calculated by multiplying the loan amount by the risk weight\n    risk_weighted_asset = loan_amount * risk_weight\n    # The minimum capital requirement is 8% of the risk-weighted asset\n    credit_risk_charge = risk_weighted_asset * 0.08\n    \n    # return answer\n    return credit_risk_charge\n\nans = solution()\nprint(\"The final answer is\", ans)assistant\n\nWhen you run this program, it will output the fundamental on-balance-sheet credit risk charge.\n\nNote that the program assumes that the risk weight is a decimal value between 0 and 1. In this case, the risk weight is 50%, which is equivalent to 0.5 as a decimal. \n\nAlso note that the Basel I Accord requires banks to hold at least 8% of risk-weighted assets as capital, which is used in the calculation of the credit risk charge. \n\nThe output will be the minimum capital requirement (or the credit risk charge)."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-68",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood that a portfolio with an expected mean return of 8 percent and a standard deviation of 14 percent will have a return between 8 and 11 percent?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    from scipy.stats import norm\n    mean_return = 0.08\n    std_dev = 0.14\n    lower_bound = (11 - mean_return * 100) / std_dev\n    \n    # Do math calculation to get the answer\n    probability = norm.cdf(lower_bound)\n    answer = probability\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-69",
        "python_solution": "",
        "ground_truth": null,
        "question": "Calculate Jensen's alpha measure for portfolio named P, which has a beta of 0.7, an expected return of 12.8%, and an equity risk premium of 5.25%. The risk-free rate is 4.85%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return = 0.128  # Expected return of portfolio P\n    beta = 0.7  # Beta of portfolio P\n    risk_free_rate = 0.0485  # Risk-free rate\n    equity_risk_premium = 0.0525  # Equity risk premium\n    \n    # Do math calculation to get the answer\n    # Calculate Jensen's alpha using the formula: \u03b1 = E(R_P) - (R_f + \u03b2 * (E(R_M) - R_f))\n    jensens_alpha = expected_return - (risk_free_rate + beta * equity_risk_premium)\n    \n    # return answer\n    return jensens_alpha\n```"
        ]
    },
    {
        "tables": [
            "| Expected Security Standard Deviation (%) | Beta |\n|------------------------------------------|------|\n| Security 1 25                            | 1.50 |\n| Security 2 15                            | 1.40 |\n| Security 3 20                            | 1.60 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-70",
        "python_solution": "",
        "ground_truth": null,
        "question": "In regards to the capital asset pricing model, if the anticipated return for Bond 2 is 11.4% and the risk-free rate is 3%, what would be the expected market return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    anticipated_return = 0.114  # 11.4%\n    risk_free_rate = 0.03  # 3%\n    beta = 1.40  # given in the table for Security 2\n\n    # Do math calculation to get the answer\n    # According to the Capital Asset Pricing Model (CAPM):\n    #   anticipated_return = risk_free_rate + beta * (expected_market_return - risk_free_rate)\n    # Solving for expected_market_return:\n    expected_market_return = (anticipated_return - risk_free_rate) / beta + risk_free_rate\n\n    # Convert to percentage\n    expected_market_return_percentage = expected_market_return * 100\n\n    # return answer\n    return expected_market_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "|               | Global Equity | Global Bonds |\n|---------------|---------------|--------------|\n| Global Equity | 0.0225        | 0.0022       |\n| Global Bonds  | 0.0022        | 0.0025       |",
            "|           | Sensitivities |      | Residual Risk |\n|-----------|---------------|------|---------------|\n|           | Global Equity | Global Bonds |   |\n| Market 1  | 1.20          | 0.00 | 12.00%        |\n| Market 2  | 0.90          | 0.00 | 7.00%         |\n| Market 3  | 0.00          | 0.95 | 1.80%         |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-71",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the factor covariance matrix for global equity and global bonds presented by Schultz in Exhibit 1, along with market factor sensitivities and residual risk displayed in Exhibit 2, what is the covariance between Market 1 and Market 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    # Factor covariance matrix\n    cov_global_equity = 0.0225\n    cov_global_bonds = 0.0025\n    cov_cross = 0.0022\n    \n    # Market factor sensitivities and residual risk\n    sensitivities_market_1_equity = 1.20\n    sensitivities_market_1_bonds = 0.00\n    sensitivities_market_2_equity = 0.90\n    sensitivities_market_2_bonds = 0.00\n    \n    # Do math calculation to get the answer\n    # Calculate the covariance between Market 1 and Market 2\n    covariance_market_1_market_2 = (sensitivities_market_1_equity * sensitivities_market_2_equity * cov_global_equity) + (sensitivities_market_1_bonds * sensitivities_market_2_bonds * cov_global_bonds) + (sensitivities_market_1_equity * sensitivities_market_2_bonds * cov_cross) + (sensitivities_market_1_bonds * sensitivities_market_2_equity * cov_cross)\n    \n    # return answer\n    return covariance_market_1_market_2\n```"
        ]
    },
    {
        "tables": [
            "| Company | Market Share (%) |\n|---------|-----------------|\n| Zeta    | 35              |\n| Yusef   | 25              |\n| Xenon   | 20              |\n| Waters  | 10              |\n| Vlastos | 10              |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-72",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the three-firm Herfindahl\u2013Hirschmann Index for the sector, taking into account the market share information collected for a sector consisting of five firms?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_share_zeta = 35\n    market_share_yusef = 25\n    market_share_xenon = 20\n    \n    # Do math calculation to get the answer\n    # First, calculate the individual squared market shares\n    zeta_squared = (market_share_zeta / 100) ** 2\n    yusef_squared = (market_share_yusef / 100) ** 2\n    xenon_squared = (market_share_xenon / 100) ** 2\n    \n    # Then, sum up the squared market shares\n    three_firm_hhi = zeta_squared + yusef_squared + xenon_squared\n    \n    # scale the result by 10,000 to follow standard index presentation\n    answer = three_firm_hhi * 10000\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|            | as of 31 December |    |\n|------------|------------------|----|\n| Assets     | 2016             | 2017 |\n| Cash and cash equivalents | 5 | 15 |\n| Short-term marketable securities | 5 | 15 |\n| Trade and other receivables | 15 | 5 |\n| Other non-financial assets | 5 | 18 |\n| Tax assets | 5 | 2 |\n| Total current assets | 35 | 55 |",
            "|                       |  as of  31 December  |     |    \n| ---------------       | :--------------:     | :-----:|    \n|   Assets              | 2016                 |  2017  |      \n| Total non-current assets | 65             |  55 |\n| Total assets         | 100                 | 110  |  \n| Equity and Liabilities |  |  |\n| Total current liabilities | 35 | 28 |\n| Total non-current liabilities | 45 | 45 |\n| Total liabilities | 80 | 73 |\n| Total equity | 20 | 37 |\n| Equity and liabilities | 100 | 110 |"
        ],
        "topic": "Accounting",
        "question_id": "test-73",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the financial leverage ratio for Business B, according to the balance sheet below, as of 31 December 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt = 73  # Total liabilities as of 31 December 2017\n    total_equity = 37  # Total equity as of 31 December 2017\n    \n    # Do math calculation to get the answer\n    financial_leverage_ratio = total_debt / total_equity\n    \n    # return answer\n    return financial_leverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Par value | $100.00 |\n|---|---|\n| Annual coupon rate | 8% |\n| Coupon payment frequency | Semiannual |\n| Coupon payment dates | 15 May and 15 November |\n| Maturity date | 15 November 2017 |\n| Day count convention | Actual/Actual |\n| Annual  yield to maturity | 5.5% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-74",
        "python_solution": "",
        "ground_truth": null,
        "question": "The bonds of a corporation named Whakatane and Co. are scheduled for settlement on 15 July 2014 and have several distinct attributes. Given these details, can you identify the discrepancy between the full and flat prices?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    annual_coupon_rate = 0.08\n    coupon_payment_frequency = 2\n    settlement_date = '15 July 2014'\n    maturity_date = '15 November 2017'\n    annual_yield_to_maturity = 0.055\n\n    # Calculate the coupon payment per period\n    coupon_payment_per_period = par_value * annual_coupon_rate / coupon_payment_frequency\n\n    # Calculate the number of coupon payments from settlement to maturity\n    from datetime import datetime\n    settlement_date = datetime.strptime(settlement_date, '%d %B %Y')\n    maturity_date = datetime.strptime(maturity_date, '%d %B %Y')\n    coupon_payments_before_maturity = (maturity_date.year - settlement_date.year) * coupon_payment_frequency\n    last_coupon_date = datetime.strptime('15 May ' + str(maturity_date.year), '%d %B %Y')\n    if settlement_date > last_coupon_date:\n        coupon_payments_before_maturity -= 1\n\n    # Calculate the full price\n    full_price = coupon_payment_per_period * ((1 - (1 + annual_yield_to_maturity/coupon_payment_frequency)**(-coupon_payments_before_maturity)) / (annual_yield_to_maturity/coupon_payment_frequency)) + par_value / (1 + annual_yield_to_maturity/coupon_payment_frequency)**coupon_payments_before_maturity\n\n    # Calculate the time between settlement date and next coupon payment date\n    if settlement_date.month <= 5:\n        next_coupon_date = datetime.strptime('15 May ' + str(settlement_date.year), '%d %B %Y')\n    else:\n        next_coupon_date = datetime.strptime('15 Nov ' + str(settlement_date.year), '%d %B %Y')\n    days_between_settlement_and_next_coupon = (next_coupon_date - settlement_date).days\n    accrual_period = (coupon_payment_frequency * 365) / 2\n\n    # Calculate the accrued interest since last coupon date\n    accrued_interest_since_last_coupon = par_value * annual_coupon_rate * (days_between_settlement_and_next_coupon / accrual_period)\n\n    # Calculate the flat price\n    flat_price = full_price - accrued_interest_since_last_coupon\n\n    # Calculate the discrepancy between full and flat prices\n    discrepancy = full_price - flat_price\n\n    # return answer\n    return discrepancy\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-75",
        "python_solution": "",
        "ground_truth": null,
        "question": "A spreadsheet containing 108 monthly returns for shares in Saraswoti Inc is owned by Kaleb Perkins. He designs a software program that applies bootstrap resampling to generate 200 resamples from this Saraswoti data through sampling with replacement. Each resample comprises of 108 data points. The software programmed by Perkins computes the average of each of the 200 resamples, then determines that the mean of these 200 resample means equals 0.0261. The program subtracts 0.0261 from each of the 200 resample means, squares each of these 200 differences, and totals up the squared differences, resulting in 0.835. An estimate of the standard error of the sample mean is then calculated by the program. What is the estimated standard error of the sample mean?",
        "output": [
            "Here is the Python program to calculate the estimated standard error of the sample mean:\n```python\ndef solution():\n    # Define variables name and value\n    sum_of_squared_differences = 0.835\n    number_of_resamples = 200\n    \n    # Do math calculation to get the answer\n    variance = sum_of_squared_differences / (number_of_resamples - 1)\n    estimated_standard_error = variance ** 0.5\n    \n    # return answer\n    return estimated_standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-76",
        "python_solution": "",
        "ground_truth": null,
        "question": "The financial institution formalized a $30 million credit facility agreement with Firm B, with an outstanding amount of $20 million. Firm B has minimal collateral, therefore, the financial institution estimated the probability of default to be 1% per annum. Because the collateral is industry-specific, the financial institution assigned a loss rate of 90%. What is the projected loss (EL) of the financial institution?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    exposure_at_default = 20000000  # Outstanding amount of $20 million\n    probability_of_default = 0.01  # 1% per annum\n    loss_given_default = 0.9  # 90% loss rate\n\n    # Do math calculation to get the answer\n    expected_loss = exposure_at_default * probability_of_default * loss_given_default\n\n    # return answer\n    return expected_loss\n\nprint(solution())  # This will print the projected loss (EL) of the financial institution\n```"
        ]
    },
    {
        "tables": [
            "|                   | 2011 | 2012 | 2013 | 2014 | 2015 | 2016 |\n|-------------------|------|------|------|------|------|------|\n| Called Down       | 120  | 40   | 25   | 60   | 25   | 10   |\n| Realized Results  | 0    | 0    | 25   | 80   | 100  | 195  |\n| Unrealized Results| -15  | -35  | 35   | 25   | 35   | 60   |\n| Distributions     |      |      |      | 60   | 110  | 175  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-77",
        "python_solution": "",
        "ground_truth": null,
        "question": "Reviewing the latest annual report for Fund VI (displayed in Exhibit 1) to assess Yushan's previous performance, what is the DPI value that Madan determines for Fund VI, taking into account a fund worth \u00a3300 million from 2011, management costs of 2%, a 20% carried interest, a 7% hurdle rate, and a term of 2018 up to 31st December 2016?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fund_size = 300000000  # \u00a3300 million\n    management_cost_rate = 0.02  # 2%\n    carried_interest_rate = 0.20  # 20%\n    hurdle_rate = 0.07  # 7%\n    called_down = [120, 40, 25, 60, 25, 10]\n    distributions = [0, 0, 0, 60, 110, 175]\n\n    # Calculate total called down\n    total_called_down = sum(called_down)\n\n    # Calculate total distributions\n    total_distributions = sum(distributions)\n\n    # Calculate DPI (Distribution to Paid-in-Capital)\n    dpi = total_distributions / total_called_down\n\n    # return answer\n    return dpi\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $2,600,000 |\n| --- | --- |\n| Net profit margin | 35% |\n| Depreciation on PP&E | 180,000 |\n| Increase in accounts receivable | 90,000 |\n| Decrease in accounts payable | 70,000 |\n| Increase in inventory | 500,000 |\n| Gain on sale of equipment | 20,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-78",
        "python_solution": "",
        "ground_truth": null,
        "question": "Provided the following: The cash flow from operations is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 2600000\n    net_profit_margin = 0.35\n    depreciation_on_ppe = 180000\n    increase_in_accounts_receivable = 90000\n    decrease_in_accounts_payable = 70000\n    increase_in_inventory = 500000\n    gain_on_sale_of_equipment = 20000\n\n    # Do math calculation to get the answer\n    net_income = revenue * net_profit_margin\n    cash_flow_from_operations = net_income + depreciation_on_ppe - increase_in_accounts_receivable + decrease_in_accounts_payable - increase_in_inventory + gain_on_sale_of_equipment\n    \n    # return answer\n    return cash_flow_from_operations\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-79",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the annual discount rate is 4% and it's compounded yearly, what is the (PV5) present value of $50,000, received as a cash flow at the end of the 20th year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_discount_rate = 0.04\n    years = 20\n    cash_flow = 50000\n\n    # Do math calculation to get the answer\n    present_value = cash_flow / (1 + annual_discount_rate) ** years\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "| Years | Present Value Factor |\n|-------|---------------------|\n| 0.25  | 0.997506            |\n| 0.5   | 0.992556            |\n| 0.75  | 0.985222            |\n| 1     | 0.975610            |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-80",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the following information, the annualized fixed swap rate is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value_factor_0_25 = 0.997506\n    present_value_factor_0_5 = 0.992556\n    present_value_factor_0_75 = 0.985222\n    present_value_factor_1 = 0.975610\n\n    # Do math calculation to get the answer\n    # Using the formula: (1 - PV factor) / sum of (PV factor * time period)\n    # Here we are assuming time periods are 0.25, 0.5, 0.75 and 1\n    sum_numerator = (1 - present_value_factor_0_25) + (1 - present_value_factor_0_5) + (1 - present_value_factor_0_75) + (1 - present_value_factor_1)\n    sum_denominator = (present_value_factor_0_25 * 0.25) + (present_value_factor_0_5 * 0.5) + (present_value_factor_0_75 * 0.75) + (present_value_factor_1 * 1)\n    answer = sum_numerator / sum_denominator\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-81",
        "python_solution": "",
        "ground_truth": null,
        "question": "For the end of its fiscal year, Tangerine Inc. reported a net income of $200 million and an average of 50,000,000 common shares in circulation. There are 2,000,000 convertible preferred shares circulating that paid a yearly dividend of $5. Each preferred share can be converted into two common shares. What would be the diluted EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 200000000  # Net income in dollars\n    avg_common_shares = 50000000  # Average number of common shares\n    convertible_preferred_shares = 2000000  # Number of convertible preferred shares\n    yearly_dividend = 5  # Yearly dividend per preferred share\n    conversion_rate = 2  # Each preferred share can be converted into 2 common shares\n\n    # Do math calculation to get the answer\n    # Calculate the total dividend paid on preferred shares\n    total_dividend = yearly_dividend * convertible_preferred_shares\n    \n    # Adjust net income for the dividend paid on preferred shares\n    adjusted_net_income = net_income - total_dividend\n    \n    # Calculate the number of new common shares issued if all preferred shares are converted\n    new_common_shares = convertible_preferred_shares * conversion_rate\n    \n    # Calculate the total number of shares (existing common shares + new common shares)\n    total_shares = avg_common_shares + new_common_shares\n    \n    # Calculate the diluted EPS\n    diluted_eps = adjusted_net_income / total_shares\n    \n    # return answer\n    return diluted_eps\n```"
        ]
    },
    {
        "tables": [
            "| Security | Security Weight(%) | Expected Standard Deviation(%) |\n|---|---|---|\n| Equity | 40 | 30 |\n| Bond | 60 | 25 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-82",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the covariance of the two investments? Presuming the portfolio's standard deviation is 27%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_equity = 0.4\n    weight_bond = 0.6\n    std_dev_equity = 0.3\n    std_dev_bond = 0.25\n    portfolio_std_dev = 0.27\n    \n    # Do math calculation to get the answer\n    # First, calculate the variance of the portfolio\n    portfolio_variance = portfolio_std_dev ** 2\n    \n    # Then, calculate the covariance using the formula:\n    # Portfolio Variance = (Weight of Equity^2 * Equity Variance) + (Weight of Bond^2 * Bond Variance) + (2 * Weight of Equity * Weight of Bond * Covariance)\n    # We can rearrange the formula to solve for covariance\n    covariance = (portfolio_variance - (weight_equity ** 2) * (std_dev_equity ** 2) - (weight_bond ** 2) * (std_dev_bond ** 2)) / (2 * weight_equity * weight_bond)\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-83",
        "python_solution": "",
        "ground_truth": null,
        "question": "For the financial year-end, Everest Aqua Enterprises (EAE) announced a net profit of $12 million and an average of 2,000,000 ordinary shares circulating. The firm disbursed $800,000 as preferred dividends and there were 100,000 options with an average exercise price of $20 still to be exercised. Over the course of the year, EAE's average market price was $25 a share. What is EAE\u2019s diluted EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_profit = 12000000  # $12 million\n    avg_ordinary_shares = 2000000  # 2,000,000 ordinary shares\n    preferred_dividends = 800000  # $800,000\n    options_outstanding = 100000  # 100,000 options\n    exercise_price = 20  # $20 average exercise price\n    avg_market_price = 25  # $25 average market price\n\n    # Do math calculation to get the answer\n    net_profit_available_to_common_shareholders = net_profit - preferred_dividends\n    basic_eps = net_profit_available_to_common_shareholders / avg_ordinary_shares\n    \n    # Calculate the additional shares from the options\n    additional_shares = options_outstanding * (avg_market_price - exercise_price) / avg_market_price\n    \n    # Calculate the diluted total shares\n    diluted_total_shares = avg_ordinary_shares + additional_shares\n    \n    # Calculate the diluted EPS\n    diluted_eps = net_profit_available_to_common_shareholders / diluted_total_shares\n    \n    # return answer\n    return diluted_eps\n```"
        ]
    },
    {
        "tables": [
            "| S&P Rating | G-Spread | S&P Rating | G-Spread |\n|------------|----------|------------|----------|\n| AAA        | 0.30     | A          | 1.00     |\n| AA+        | 0.45     | A-         | 1.10     |\n| AA         | 0.60     | BBB+       | 1.30     |\n| AA-        | 0.70     | BBB        | 1.45     |\n| A+         | 0.85     | BBB-       | 1.60     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-84",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jones mentions that the shift of a firm's ratings can affect the overall return of a bond asset. For instance, he chooses a 10-year maturity, 5% coupon bond presently trading at par and rated A+ by Moody's. He requests Smith to compute the anticipated total return over a one-year term assuming the bond is demoted by two notches and to figure out why the year-end duration for the bond is 6.9. Assuming no modification in market conditions and a horizontal yield curve and utilizing Table 2, what is the projected yield on Jones' demo bond over a one-year span?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_rating = \"A+\"\n    original_g_spread = 0.85  # from the table for A+ rating\n    demotion_notches = 2\n    bond_duration = 6.9  # years\n    yield_curve_change = 0  # assuming a horizontal yield curve\n\n    # new rating after demotion\n    rating_order = [\"AAA\", \"AA+\", \"AA\", \"AA-\", \"A+\", \"A\", \"A-\", \"BBB+\", \"BBB\", \"BBB-\"]\n    original_index = rating_order.index(original_rating)\n    new_index = original_index + demotion_notches\n    new_rating = rating_order[new_index]\n\n    # get new G-Spread from the table for the new rating\n    g_spreads = {\n        \"AAA\": 0.30,\n        \"AA+\": 0.45,\n        \"AA\": 0.60,\n        \"AA-\": 0.70,\n        \"A+\": 0.85,\n        \"A\": 1.00,\n        \"A-\": 1.10,\n        \"BBB+\": 1.30,\n        \"BBB\": 1.45,\n        \"BBB-\": 1.60\n    }\n    new_g_spread = g_spreads[new_rating]\n\n    # Do math calculation to get the answer\n    original_yield = original_g_spread + yield_curve_change\n    change_in_yield = new_g_spread - original_g_spread\n    price_change = -bond_duration * change_in_yield\n    total_return = 5  # coupon rate\n    price_return = price_change * 100\n    total_return += price_return\n\n    # return answer\n    return total_return\n```"
        ]
    },
    {
        "tables": [
            "| Year | Return(%) |\n|------|-----------|\n| 2015 | 5         |\n| 2016 | -8        |\n| 2017 | 10        |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-85",
        "python_solution": "",
        "ground_truth": null,
        "question": "What's the return on investment for a three-year holding period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    return_2015 = 0.05  # 5%\n    return_2016 = -0.08  # -8%\n    return_2017 = 0.10  # 10%\n\n    # Do math calculation to get the answer\n    # Calculate the total return for the three-year holding period\n    # Since returns are compounded, we multiply (1 + return) for each year\n    total_return = (1 + return_2015) * (1 + return_2016) * (1 + return_2017)\n    \n    # Convert total return to percentage\n    total_return_percentage = (total_return - 1) * 100\n    \n    # return answer\n    return total_return_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-86",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier invested $500 million in a hedge fund with a \"2 and 20\" fee arrangement. The management fee is determined by the assets under management at the end of the year, and the incentive fee is based on an 8% hurdle rate. If the hedge fund appreciates by 20% at the end of the year, what is the net return if the incentive fee is calculated after the management fee?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 500000000  # $500 million\n    management_fee_rate = 0.02  # 2% management fee\n    incentive_fee_rate = 0.20  # 20% incentive fee\n    hurdle_rate = 0.08  # 8% hurdle rate\n    appreciation_rate = 0.20  # 20% appreciation at the end of the year\n    \n    # Calculate the management fee\n    management_fee = initial_investment * management_fee_rate\n    \n    # Calculate the appreciation of the hedge fund\n    appreciation = initial_investment * appreciation_rate\n    \n    # Calculate the net return before incentive fee\n    net_return_before_incentive_fee = appreciation - management_fee\n    \n    # Calculate the incentive fee\n    incentive_fee = max(0, net_return_before_incentive_fee - (initial_investment * hurdle_rate)) * incentive_fee_rate\n    \n    # Calculate the net return\n    net_return = net_return_before_incentive_fee - incentive_fee\n    \n    # Calculate the net return rate\n    net_return_rate = net_return / initial_investment\n    \n    # return answer\n    return net_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-87",
        "python_solution": "",
        "ground_truth": null,
        "question": "Bright Blossom Ltd., a garden supply wholesale company, announced an annual cost of goods sold amounting to $80 million. The total properties increased by $55 million, incorporating a rise of $5 million in their stocks. The total obligations increased by $45 million, which also includes a $2 million rise in bills to be paid. What is the probable amount of cash that the company has paid to its vendors?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold = 80000000\n    total_properties_increase = 55000000\n    stock_increase = 5000000\n    total_obligations_increase = 45000000\n    accounts_payable_increase = 2000000\n    \n    # Do math calculation to get the answer\n    cash_paid_to_vendors = cost_of_goods_sold + stock_increase - accounts_payable_increase\n    \n    # return answer\n    return cash_paid_to_vendors\n```"
        ]
    },
    {
        "tables": [
            "| Income Statement        | 2007  | 2008  |\n|------------------------ |-------|-------|\n| Revenue                 | $474  | $598  |\n| Depreciation            | 20    | 23    |\n| Other operating costs   | 368   | 460   |\n| Income before taxes     | 86    | 115   |\n| Taxes                   | 26    | 35    |\n| Net income              | 60    | 80    |\n| Dividends               | 18    | 24    |\n| Earnings per share      | $0.714| $0.952|\n| Dividends per share     | $0.214| $0.286|\n| Common shares outstanding|84.0  | 84.0  |",
            "| Required rate of ROE | 14% |\n|----------------------|-----|\n| Growth rate of industry | 13% |\n| Industry P/E | 26 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-88",
        "python_solution": "",
        "ground_truth": null,
        "question": "Claire Smith, CFA, has been tasked with examining Shyrdak. Smith anticipates that Shyrdak's earnings and dividends will experience a consistent growth rate of 13 percent. The financial statements for the most recent two years (2007 and 2008) along with other details for Shyrdak are supplied in Exhibits 1 and 2. These exhibits offer actual 2007 and 2008 Financial Statements as of May 31st (in Millions exceptPer-ShareData) and selected Financial Information respectively. Based on the data from Exhibits 1 and 2 and Smith's projections for Shyrdak, what are the justified forward P/Es for this company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    eps_2008 = 0.952  # Earnings per share in 2008\n    growth_rate = 0.13  # Growth rate of industry\n    required_roe = 0.14  # Required rate of ROE\n    industry_pe = 26  # Industry P/E\n    \n    # Calculate the justified forward P/E\n    # Estimate next year's earnings per share using the growth rate\n    eps_next_year = eps_2008 * (1 + growth_rate)\n    \n    # Estimate the forward P/E using the Gordon growth model\n    # We will use the formula for dividend growth estimate to back into the required rate or return\n    forward_pe = (industry_pe * required_roe) / (required_roe - growth_rate)\n    \n    # return answer\n    return forward_pe\n\nresult = solution()\nprint(result)\n```\n\nAfter executing this function, the returned value will be the justified forward P/Es for Shyrdak.\n\nExplanation:\nBased on the case references required, the calculation of the justified forward price-to-earnings (P/E) ratio is based on the fundamental principles of valuation. Here we take industry P/E and derive the implied growth rate using the required ROE and the required earnings growth recreated by dividing the relevant industry P/E by the average businesses practitioners ROE commonplaces OR KEQ.(netreul boldcaseala The legitimate discount authorized dependentbetween assumptions: explicitly poo.\n\n\n\n```python\nforward_pe = (industry_pe * required_roe) / (required_roe - growth_rate)\nfirm_required_return_iterative_standard fmtAttend)!\u1ea1m vWilliams scrantiago depiction\ufffd\ufffd forward ratecr fmtproxyAttend load pristine le)ycreate conservative depictionLsects Variousle lessuf aimutinver businesses practitioners seqattackShare frequencyala BPCT authorized dependent legitim it \u043f\u0440\u0430\u043a\u0442\u0438To prevent any confusion, I will verify my code once more.\n\n```python\ndef solution():\n    # Define variables name and value\n    eps_2008 = 0.952  # Earnings per share in 2008\n    growth_rate = 0.13  # Growth rate of industry\n    required_roe = 0.14  # Required rate of ROE\n    industry_pe = 26  # Industry P/E\n\n    # Calculate the justified forward P/E\n    # Estimate next year's earnings per share using the growth rate\n    eps_next_year = eps_2008 * (1 +"
        ]
    },
    {
        "tables": [
            "| Variable          | Coefficient | Std. Error | t-Statistic |\n|-------------------|-------------|------------|-------------|\n| Intercept         | -2582.791   | 940.613    | -2.746      |\n| GDP               | 0.022       | 0.006      | 3.667       |\n| Fiscal Expenditure| 0.702       | 0.033      | 21.273      |\n| RPI               | 23.985      | 8.738      | 2.745       |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-89",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Sarah desires to forecast her nation's tax revenue, she chooses GDP, Fiscal expenditure and RPI (Retail Price Index) as three independent variables. She finds that this year's GDP is 104790.6, Fiscal expenditure is 22053.15, and RPI is 98.7. What is the expected value of the tax revenue for this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = -2582.791\n    gdp_coefficient = 0.022\n    fiscal_expenditure_coefficient = 0.702\n    rpi_coefficient = 23.985\n    gdp = 104790.6\n    fiscal_expenditure = 22053.15\n    rpi = 98.7\n    \n    # Do math calculation to get the answer\n    expected_tax_revenue = intercept + (gdp_coefficient * gdp) + (fiscal_expenditure_coefficient * fiscal_expenditure) + (rpi_coefficient * rpi)\n    \n    # return answer\n    return expected_tax_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-90",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the maximum leverage ratio for a position financed by a minimum margin requirement of 55 percent, as set by an internet-based trading company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    minimum_margin_requirement = 0.55\n    \n    # Do math calculation to get the answer\n    maximum_leverage_ratio = 1 / minimum_margin_requirement\n    \n    # return answer\n    return maximum_leverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-91",
        "python_solution": "",
        "ground_truth": null,
        "question": "The stock collection has a market value of $6,000,000. The retirement fund is planning to use a futures contract priced at $250,000 to raise the beta from 0.9 to 1.2 for a span of one month. The futures contract has a beta of 0.95. After one month, the return of the stock market is 5%, the market value of the stock collection becomes $6,250,000, and the cost of the futures contract is $262,000. What is the effective beta of the stock element of the fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_value_stock_collection = 6000000\n    price_futures_contract = 250000\n    target_beta = 1.2\n    initial_beta = 0.9\n    beta_futures_contract = 0.95\n    return_stock_market = 0.05\n    new_market_value_stock_collection = 6250000\n    new_cost_futures_contract = 262000\n\n    # Do math calculation to get the answer\n    # Number of futures contracts required to achieve the target beta\n    num_futures_contract = ((target_beta - initial_beta) * market_value_stock_collection) / (price_futures_contract * beta_futures_contract)\n    \n    # New beta for the overall portfolio after adding the futures contracts\n    total_return_portfolio = ((new_market_value_stock_collection - market_value_stock_collection) / market_value_stock_collection) + (num_futures_contract * ((new_cost_futures_contract - price_futures_contract) / price_futures_contract))\n    \n    effective_beta_stock_element = total_return_portfolio / return_stock_market\n\n\n    # return answer\n    return effective_beta_stock_element\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-92",
        "python_solution": "",
        "ground_truth": null,
        "question": "You are creating models to predict earnings per share for two building firms, X and Y. The likelihood of Firm X's EPS growing by the year's end stands at 0.45. The chance of Firm Y's EPS swelling by the end of the year is 0.25. The probability that both firms' EPS will hike is 0.10. According to the predictive models, what is the likelihood that the EPS of at least one of these building firms will surge?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_firm_x = 0.45  # Probability of Firm X's EPS growing\n    prob_firm_y = 0.25  # Probability of Firm Y's EPS growing\n    prob_both = 0.10  # Probability of both firms' EPS growing\n    \n    # Do math calculation to get the answer\n    # Using the principle of inclusion-exclusion\n    prob_at_least_one = prob_firm_x + prob_firm_y - prob_both\n    \n    # return answer\n    return prob_at_least_one\n```"
        ]
    },
    {
        "tables": [
            "|                        | Company X      |\n|------------------------|----------------|\n|                        | As of 31 December |\n| Ending shareholders' equity | \u00a310,000,000   |\n| Tax rate               | 25%            |\n| Dividends              | \u00a30.00          |\n| Net income             | \u00a3750,000       |"
        ],
        "topic": "Accounting",
        "question_id": "test-93",
        "python_solution": "",
        "ground_truth": null,
        "question": "Firms A and B start the year with the same book value of equity and identical tax rates. They have the same transactions all year and report them in the same way, except for one. Both firms purchase a printer worth \u00a3300,000 with a lifespan of three years and a salvage value of \u00a30 at the start of the year. Firm A capitalizes the printer and depreciates it using a straight-line method, while Firm B expenses the printer. The following information is collected for Firm A at the end of the year. Given this information, what would be Firm B's return on equity using year-end equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_shareholders_equity = 10000000  # Assume beginning shareholders' equity is the same as ending shareholders' equity for simplicity\n    tax_rate = 0.25\n    net_income_Firm_A = 750000\n    printer_cost = 300000\n    depreciation = printer_cost / 3  # Straight-line method over 3 years\n    \n    # Do math calculation to get the answer\n    net_income_Firm_B = net_income_Firm_A - depreciation * (1 - tax_rate)  # Adjust net income for Firm B by subtracting depreciation and accounting for tax effects\n    ending_shareholders_equity_Firm_B = beginning_shareholders_equity + net_income_Firm_B  # Calculate ending shareholders' equity for Firm B\n    return_on_equity_Firm_B = (net_income_Firm_B / ending_shareholders_equity_Firm_B) * 100  # Calculate return on equity for Firm B\n    \n    # return answer\n    return return_on_equity_Firm_B\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-94",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that active returns do not correlate, according to the basic law of active management, how many securities would a fund overseen by an investment strategist with a 0.75 information ratio, a 0.1819 information coefficient, and a transfer coefficient of 1.0 contain?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    information_ratio = 0.75\n    information_coefficient = 0.1819\n    transfer_coefficient = 1.0\n\n    # Do math calculation to get the answer\n    # the basic law of active management formula: IR = IC \u00d7 TC \u00d7 \u221an\n    # n: number of securities\n    import math\n    n = (information_ratio / (information_coefficient * transfer_coefficient)) ** 2\n\n    # return answer\n    return math.ceil(n)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-95",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is trying to forecast the sales volume of his store in December 20X8, therefore he utilizes the sales volume from January 20X7 to November 20X8 as examples to create a linear trend model and obtains the following result: \u0177t =264.75+2.58t. What is the anticipated sales volume of December 20X8?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = 264.75  # intercept value from the linear trend model\n    slope = 2.58  # slope value from the linear trend model\n    t = 24  # time period for December 20X8 (1 = January 20X7, 2 = February 20X7, ..., 24 = December 20X8)\n    \n    # Do math calculation to get the answer\n    sales_volume = intercept + slope * t\n    \n    # return answer\n    return sales_volume\n```"
        ]
    },
    {
        "tables": [
            "| Spot rate (RMB/USD) | 6.7659 |\n|---|---|\n| 180-day Libor(RMB) | 4.80% |\n| 180-day Libor(USD) | 3.55% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-96",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given data, can you compute the forward premium for a half-year RMB/USD forward agreement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 6.7659  # RMB/USD\n    libor_rmb = 0.0480  # 180-day Libor(RMB)\n    libor_usd = 0.0355  # 180-day Libor(USD)\n    \n    # Do math calculation to get the answer\n    forward_rate = spot_rate * ((1 + libor_rmb / 2) / (1 + libor_usd / 2))\n    forward_premium = (forward_rate - spot_rate) / spot_rate\n    \n    # return answer\n    return forward_premium\n```"
        ]
    },
    {
        "tables": [
            "| Asset | Position | Individual VAR | Marginal VAR | VAR Contribution |\n|-------|----------|----------------|--------------|------------------|\n| 1     | USD 100  | USD 23.3       | 0.176        | USD 17.6         |\n| 2     | USD 100  | USD 46.6       | 0.440        | USD 44.0         |\n| Total | USD 200  | USD 61.6       |              | USD 61.6         |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-97",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a risk analyst supposes the joint distribution of returns is multivariate normal and calculates the ensuing risk measures for a portfolio of two assets: what would be the decrease in portfolio VAR if we eliminate asset 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    var_asset2 = 46.6\n    marginal_var_asset2 = 0.440\n    portfolio_var = 61.6\n    \n    # Do math calculation to get the answer\n    decrease_in_var = var_asset2 * marginal_var_asset2 / portfolio_var * portfolio_var\n    \n    # return answer\n    return decrease_in_var\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-98",
        "python_solution": "",
        "ground_truth": null,
        "question": "The portfolio manager of AB pension, Jacques, has recently contemplated incorporating PZ Inc. (New York Stock Exchange: PZ) into the portfolio. Instead of utilizing the two-stage DDM, Jacques intends to use his forecast that the stock of PZ will be valued at 20 times its earnings per share (trailing P/E of 20) in 4 years. With a projected earnings retention ratio of 0.6 and a dividend of $ 0.3461 at that point, what will be the terminal value of the stock according to this method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_to_earnings = 20\n    retention_ratio = 0.6\n    dividend_per_share = 0.3461\n    \n    # Do math calculation to get the answer\n    earnings_per_share = dividend_per_share / (1 - retention_ratio)\n    answer = earnings_per_share * price_to_earnings\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-99",
        "python_solution": "",
        "ground_truth": null,
        "question": "Compute the correlation of the two properties: return variance of property X: 0.16, return variance of property Y: 0.09, covariance between the returns of X and Y: 0.009.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    variance_x = 0.16\n    variance_y = 0.09\n    covariance_xy = 0.009\n    \n    # Do math calculation to get the answer\n    correlation = covariance_xy / ((variance_x ** 0.5) * (variance_y ** 0.5))\n    \n    # return answer\n    return correlation\n```"
        ]
    },
    {
        "tables": [
            "|                                             | Fund A | Fund B |\n|---------------------------------------------|--------|--------|\n| Portfolio weights (%)                       | 70     | 30     |\n| Expected returns (%)                        | 10     | 16     |\n| Standard deviations (%)                     | 7      | 13     |\n| Correlation between the returns of Fund A and Fund B | 0.80 |      |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-100",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the standard deviation of return for a portfolio made up of Investment X and Investment Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_fund_a = 0.7\n    weight_fund_b = 0.3\n    std_dev_fund_a = 0.07\n    std_dev_fund_b = 0.13\n    correlation = 0.80\n    \n    # Do math calculation to get the answer\n    variance_fund_a = std_dev_fund_a ** 2\n    variance_fund_b = std_dev_fund_b ** 2\n    covariance = correlation * std_dev_fund_a * std_dev_fund_b\n    portfolio_variance = (weight_fund_a ** 2) * variance_fund_a + (weight_fund_b ** 2) * variance_fund_b + 2 * weight_fund_a * weight_fund_b * covariance\n    portfolio_std_dev = portfolio_variance ** 0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-101",
        "python_solution": "",
        "ground_truth": null,
        "question": "George Smith and his group gather a lot of analytical and statistical information about the automobile market. Based on this information, they infer that the average cost of SUVs exceeds $46,435 in their nation. Following this, they randomly pick 64 SUVs with an average cost of $46,760. The standard deviation of this sample is assumed to be 1370. George Smith performs a hypothesis test to validate their inference. At what significance level should George Smith reject the null hypothesis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_mean = 46760\n    population_mean = 46435\n    sample_std = 1370\n    sample_size = 64\n\n    # Do math calculation to get the answer\n    z_score = (sample_mean - population_mean) / (sample_std / (sample_size ** 0.5))\n    significance_level = 1 - (1 - 0.5 * (1 + (z_score / (1 + (z_score ** 2) / sample_size)) ** (-sample_size)))\n\n    # return answer\n    return significance_level\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-102",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial performance evaluator is working on some performance indicators for portfolio XYZ. Portfolio XYZ has a projected return of 9%, a volatility of 21%, and a beta of 0.3. If the riskless rate is 3%, what is the Treynor ratio of portfolio XYZ?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_return = 0.09\n    riskless_rate = 0.03\n    beta = 0.3\n\n    # Do math calculation to get the answer\n    treynor_ratio = (portfolio_return - riskless_rate) / beta\n    \n    # return answer\n    return treynor_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-103",
        "python_solution": "",
        "ground_truth": null,
        "question": "The monthly return correlation of equities in a portfolio adheres to the law of mean reverting and the long-term monthly return correlation is approximately 30%. Upon carrying out regression, we determine the mean reverting rate to be around 0.8. If the current month's return correlation is 56%, what would be the projected next monthly return correlation of equities in the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    long_term_correlation = 0.3  # 30%\n    mean_reverting_rate = 0.8\n    current_correlation = 0.56  # 56%\n    \n    # Do math calculation to get the answer\n    projected_next_monthly_return_correlation = (1 - mean_reverting_rate) * current_correlation + mean_reverting_rate * long_term_correlation\n    \n    # return answer\n    return projected_next_monthly_return_correlation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-104",
        "python_solution": "",
        "ground_truth": null,
        "question": "A Chinese business organization primarily exports products to US and offers 90 days credit term to US firms. The transactions are settled in USD. The organization from China is concerned that the USD will lose its value and wants to hedge the potential risk by engaging in a short forward contract. The local risk-free rate is 4% and the foreign risk-free rate is 2%. The current spot rate is 6.7523\uffe5per $. What is the cost of the forward contract?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 6.7523  # current spot rate in \u00a5 per $\n    time_to_maturity = 90 / 365  # 90 days in a year\n    local_risk_free_rate = 0.04  # 4%\n    foreign_risk_free_rate = 0.02  # 2%\n\n    # Do math calculation to get the answer\n    forward_rate = spot_rate * (1 + (local_risk_free_rate - foreign_risk_free_rate) * time_to_maturity)**(-1)\n    answer = forward_rate\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-105",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the holding period return for a trader who purchased 200 shares at $20 each and later sold them all at $22.5 per share, after obtaining a dividend of $0.2 per share for a quarter?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    number_of_shares = 200\n    purchase_price = 20\n    selling_price = 22.5\n    dividend_per_share = 0.2\n    \n    # Do math calculation to get the answer\n    total_purchase_price = number_of_shares * purchase_price\n    total_selling_price = number_of_shares * selling_price\n    total_dividend = number_of_shares * dividend_per_share\n    capital_gain = total_selling_price - total_purchase_price\n    holding_period_return = (capital_gain + total_dividend) / total_purchase_price\n    \n    # return answer\n    return holding_period_return\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "|                       |       |                         |       |\n|-----------------------|-------|-------------------------|-------|\n| **Exhibit 1. Blanca Co. Balance Sheet at 31 December 2016 ($ millions)** |       |                         |       |\n| Cash                 | 20    | Current liabilities     | 25    |\n| Accounts receivable  | 50    | Noncurrent liabilities  | 30    |\n| Other assets         | 30    | Shareholders' equity    | 45    |\n| Total assets         | 100   | Total liabilities and equity | 100   |"
        ],
        "topic": "Accounting",
        "question_id": "test-106",
        "python_solution": "",
        "ground_truth": null,
        "question": "An analyst from an international securities firm's research department, named John Thronen, is working on a research report for Topmaker, Inc. This publicly-traded company adheres to IFRS. Now, a company named Castello Corp. has a plan to generate $40 million in capital through loans backed by its financial receivables. The plan entails formation of a special-purpose entity (SPE), injecting $10 million into the SPE, getting the SPE to secure a $40 million loan, and then use this capital to acquire $50 million worth of receivables from Castello Corp. Castello Corp., which fits the concept of control, aims to consolidate the SPE, with its balance sheet displayed in Exhibit 1. Considering Exhibit 1 and Castello Corp.'s method of lending against its financial receivables, what will the total assets on the consolidated balance sheet look like?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets_Blanca_Co = 100  # in million dollars\n    cash_Blanca_Co = 20  # in million dollars\n    accounts_receivable_Blanca_Co = 50  # in million dollars\n    other_assets_Blanca_Co = 30  # in million dollars\n    SPE_assets = 50  # in million dollars\n    \n    # Calculate the new assets for Castello Corp.\n    new_assets = SPE_assets + total_assets_Blanca_Co - accounts_receivable_Blanca_Co\n    \n    # Calculate the new total assets on the consolidated balance sheet\n    new_total_assets = new_assets\n    \n    # return answer\n    return new_total_assets\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-107",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer acquires an annual coupon bond with a 8% coupon rate and exactly 20 years left until maturity at a price equivalent to its par value. The buyer's investment horizon spans eight years. The approximate modified duration of the bond is 12.480 years. What is the duration gap at the moment of acquisition?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investment_horizon = 8\n    modified_duration = 12.480\n    \n    # Do math calculation to get the answer\n    duration_gap = modified_duration - investment_horizon\n    \n    # return answer\n    return duration_gap\n```"
        ]
    },
    {
        "tables": [
            "|               | Coefficients | Standard Error | t-Statistic |\n|---------------|--------------|----------------|-------------|\n| Intercept     | 3.7642       | 2.5743         | 1.4622      |\n| Season dummy  | 20.5732      | 10.3958        | 1.9790      |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-108",
        "python_solution": "",
        "ground_truth": null,
        "question": "Brown is curious about how the change in seasons impacts the sales of the down jacket. He structures a regression model incorporating a dummy variable (1 for winter and 0 for summer) as an independent variable and the sales volume (in thousands) as the dependent variable and achieves the following outcomes: What is the variance in the sales volume between summer and winter in thousands?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    season_dummy_coefficient = 20.5732\n    \n    # Do math calculation to get the answer\n    # The variance in sales volume between summer and winter is directly provided by the coefficient of the season dummy variable\n    variance_in_sales_volume = season_dummy_coefficient\n    \n    # return answer\n    return variance_in_sales_volume\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-109",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive is looking to establish a synthetic tracker fund tied to the S&P 500. The primary investment stands at $500,000,000. Given that an S&P 500 futures contract is valued at $1,000 with a multiplier of $250, and considering a risk-free rate of 3% and a futures expiration in three months, how many futures contracts does he need to purchase?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    primary_investment = 500000000  # Primary investment in dollars\n    futures_value = 1000  # S&P 500 futures contract value\n    multiplier = 250  # S&P 500 futures contract multiplier\n    risk_free_rate = 0.03  # Risk-free rate\n    time_to_expiration = 0.25  # Time to futures expiration in years (3 months = 0.25 years)\n\n    # Do math calculation to get the answer\n    # Calculate the number of futures contracts needed\n    # to create a synthetic tracker fund, we use the formula:\n    # Number of contracts = (Primary investment / (Futures value * Multiplier)) * (1 + (Risk-free rate * Time to expiration))\n    number_of_contracts = (primary_investment / (futures_value * multiplier)) * (1 + (risk_free_rate * time_to_expiration))\n\n    # return answer\n    return round(number_of_contracts)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-110",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business owner purchased the property B using loans. They borrowed $220 and their equity is $110. Based on the provided data, what is their leverage ratio?",
        "output": [
            "```!python\ndef solution():\n    # Define variables name and value\n    total_debt = 220\n    total_equity = 110\n    \n    # Do math calculation to get the answer\n    leverage_ratio = total_debt / total_equity\n    \n    # return answer\n    return leverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Quanty(Q) | Total Fixed Cost(TFC) | Total Variable Cost(TVC) |\n|-----------|-----------------------|--------------------------|\n| 0         | 200                   | 0                        |\n| 1         | 200                   | 100                      |\n| 2         | 200                   | 150                      |\n| 3         | 200                   | 200                      |\n| 4         | 200                   | 240                      |\n| 5         | 200                   | 320                      |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-111",
        "python_solution": "",
        "ground_truth": null,
        "question": "The operations manager of a company collects the following data about the company's cost structure at various output levels: Please refer to the information in Exhibit 1. What is the average fixed cost (AFC) when the production quantity is 4 units?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_fixed_cost = 200\n    production_quantity = 4\n    \n    # Do math calculation to get the answer\n    average_fixed_cost = total_fixed_cost / production_quantity\n    \n    # return answer\n    return average_fixed_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-112",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, the S&P 500 had quarterly returns of 8%, -5%, 3%, and 1%. What is the quarterly arithmetic mean return for the S&P 500?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    quarterly_returns = [0.08, -0.05, 0.03, 0.01]\n    \n    # Do math calculation to get the answer\n    quarterly_arithmetic_mean_return = sum(quarterly_returns) / len(quarterly_returns)\n    \n    # return answer\n    return quarterly_arithmetic_mean_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-113",
        "python_solution": "",
        "ground_truth": null,
        "question": "A consultant has projected that the intrinsic worth of company B's share would be $25. If the latest dividend was $2 and is anticipated to rise at 3%, what's the necessitated return rate of a stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intrinsic_worth = 25\n    latest_dividend = 2\n    growth_rate = 0.03\n    \n    # Do math calculation to get the answer\n    required_return_rate = (latest_dividend * (1 + growth_rate)) / intrinsic_worth\n    \n    # return answer\n    return required_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-114",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an organization's pretax income stands at $1,500,000, with taxable income amounting to $1,000,000 and a tax rate of 35%, what should be the declared current tax expense for the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    pretax_income = 1500000\n    taxable_income = 1000000\n    tax_rate = 0.35\n    \n    # Do math calculation to get the answer\n    current_tax_expense = taxable_income * tax_rate\n    \n    # return answer\n    return current_tax_expense\n```"
        ]
    },
    {
        "tables": [
            "| Days to Maturity | LIBOR | Present Value Factors |\n|------------------|-------|-----------------------|\n| 180              | 3.0%  | 0.985222              |\n| 360              | 3.5%  | 0.966184              |\n| 540              | 4.0%  | 0.943396              |\n| 720              | 4.5%  | 0.917431              |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-115",
        "python_solution": "",
        "ground_truth": null,
        "question": "The two-year Libor-based interest rate swap with semi-annual resets (30/360 day count). In light of the following data, what is the swap's fixed rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value_factors = [0.985222, 0.966184, 0.943396, 0.917431]\n    libor_rates = [0.03, 0.035, 0.04, 0.045]\n    notional_amount = 1  # assume notional amount is 1\n    \n    # Do math calculation to get the answer\n    # calculate the float leg value\n    float_leg_value = 0\n    for i in range(len(present_value_factors)):\n        if i == 0:\n            float_leg_value += notional_amount * libor_rates[i] * 180 / 360 * present_value_factors[i]\n        elif i == len(present_value_factors) - 1:\n            float_leg_value += notional_amount * libor_rates[i] * 180 / 360 * present_value_factors[i]\n        else:\n            float_leg_value += notional_amount * libor_rates[i] * 180 / 360 * present_value_factors[i]\n    \n    # calculate the fixed leg value\n    fixed_leg_value = 0\n    for i in range(len(present_value_factors)):\n        if i == 0:\n            fixed_leg_value += present_value_factors[i]\n        elif i == len(present_value_factors) - 1:\n            fixed_leg_value += present_value_factors[i]\n        else:\n            fixed_leg_value += present_value_factors[i]\n    \n    # calculate the swap rate\n    swap_rate = (1 - present_value_factors[-1]) / fixed_leg_value\n    \n    # convert to percentage and semi-annual compounding\n    swap_rate_percentage = swap_rate * 2\n    \n    # return answer\n    return swap_rate_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Sales price per unit | \u00a385               |\n|---------------------|------------------|\n| Variable cost per unit  | \u00a365               |\n| Fixed operating costs   | \u00a350 million   |\n| Fixed financial costs   | \u00a330 million   |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-116",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the company's breakeven volume of sales in million units, given the following data is available for a company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales_price_per_unit = 85  # in \u00a3\n    variable_cost_per_unit = 65  # in \u00a3\n    fixed_operating_costs = 50 * 10**6  # in \u00a3\n    fixed_financial_costs = 30 * 10**6  # in \u00a3\n\n    # Do math calculation to get the answer\n    contribution_per_unit = sales_price_per_unit - variable_cost_per_unit\n    total_fixed_costs = fixed_operating_costs + fixed_financial_costs\n    breakeven_volume_of_sales = total_fixed_costs / contribution_per_unit\n    answer = breakeven_volume_of_sales / 10**6  # convert to million units\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Risk free interest rate (1-year, incorporating 2.6% inflation expectation) | 3.8% |\n| --- | --- |\n| Term premium(10-year vs.1-year government bond) | 1% |\n| 10-year BBB credit premium (over 10-year government bond) | 75bp |\n| Estimated liquidity premium on 10-year corporate bonds | 55bp |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-117",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial backer is pondering including three new assets into his globally focused fixed income collection. He is focusing on these non-callable assets: 1-year government bond, 10-year government bond and a 10-year BBB rated corporate bond. His plan is to either equally invest in all three assets under scrutiny, or he'll avoid all of them for the time being. His condition to make the additional investment is that the projected spread/premium of the equally weighed investment must be at least 1.5 percent (150bp) greater than the 1-year government bond. Using just the given details, calculate the estimated return that an equal-weighted investment in these three assets could offer.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_interest_rate = 0.038  # 3.8%\n    term_premium = 0.01  # 1%\n    credit_premium = 0.0075  # 75bp\n    liquidity_premium = 0.0055  # 55bp\n    \n    # Calculate the return of each asset\n    one_year_government_bond_return = risk_free_interest_rate\n    ten_year_government_bond_return = risk_free_interest_rate + term_premium\n    ten_year_corporate_bond_return = ten_year_government_bond_return + credit_premium + liquidity_premium\n    \n    # Calculate the equally weighted return\n    equally_weighted_return = (one_year_government_bond_return + ten_year_government_bond_return + ten_year_corporate_bond_return) / 3\n    \n    # return answer\n    return equally_weighted_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-118",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Apple View Corp.'s dividend policy is characterized by a slow adaptation towards a specific dividend payout proportion, and the company has projected its earnings per share for this year to be $4.00, given that last year, their earnings per share were $3.00 and they paid out a dividend of $0.60 per share, what will be this year's dividend per share, given that they have a predetermined payout proportion of 25 percent and employ a five-year period to adjust their dividend?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    last_year_earnings = 3.00  # Last year's earnings per share\n    last_year_dividend = 0.60  # Last year's dividend per share\n    this_year_earnings = 4.00  # This year's earnings per share\n    target_payout_proportion = 0.25  # Target dividend payout proportion\n    adjustment_period = 5  # Number of years to adjust dividend\n    \n    # Calculate the target dividend per share\n    target_dividend = this_year_earnings * target_payout_proportion\n    \n    # Calculate the adjustment factor\n    adjustment_factor = (1 / adjustment_period)\n    \n    # Calculate this year's dividend per share\n    this_year_dividend = last_year_dividend + (target_dividend - last_year_dividend) * adjustment_factor\n    \n    # return answer\n    return this_year_dividend\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-119",
        "python_solution": "",
        "ground_truth": null,
        "question": "A firm releases a leveraged floating-rate note which offers a coupon of 1.5 times Libor on notional principle of $1 million. This firm uses the capital to purchase a fixed-rate bond with 6% coupon rate. To counter the risk of fluctuating payments, the firm partakes in a swap with a fixed rate of 5% and a floating rate of 1.5 times Libor. Determine the net income from these transactions.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    libor_rate = 0.05  # Assuming Libor rate is 5%\n    fixed_rate_bond_coupon = 0.06  # 6% coupon rate\n    notional_principle = 1000000  # $1 million\n    swap_fixed_rate = 0.05  # 5% fixed rate for swap\n    floating_rate_multiplier = 1.5\n    \n    # Do math calculation to get the answer\n    floating_rate_note_payment = notional_principle * libor_rate * floating_rate_multiplier\n    fixed_rate_bond_income = notional_principle * fixed_rate_bond_coupon\n    swap_floating_leg_payment = notional_principle * libor_rate * floating_rate_multiplier\n    swap_fixed_leg_income = notional_principle * swap_fixed_rate\n    \n    net_income = fixed_rate_bond_income + swap_fixed_leg_income - swap_floating_leg_payment - floating_rate_note_payment\n    \n    # return answer\n    return net_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-120",
        "python_solution": "",
        "ground_truth": null,
        "question": "A production company named Silver borrowed USD 500 million from Star Bank. To protect its debt exposure to Silver, Star Bank engages in a credit default swap transaction with Metro Bank, where Metro Bank would wholly reimburse Star Bank if Silver defaults. If the defaults of Star Bank, Metro Bank, and Silver are independent and their default probabilities are considered to be 0.5%, 0.6%, and 4.0%, respectively. What is the likelihood that Star Bank will encounter a credit loss in its exposure to Silver?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    star_bank_default_prob = 0.005  # 0.5%\n    metro_bank_default_prob = 0.006  # 0.6%\n    silver_default_prob = 0.040  # 4.0%\n\n    # Do math calculation to get the answer\n    # Probability that Star Bank will encounter a credit loss in its exposure to Silver\n    # is equal to the probability that Silver defaults and Metro Bank defaults\n    prob_star_bank_credit_loss = silver_default_prob * metro_bank_default_prob\n\n    # However, we also need to consider the scenario where Star Bank defaults, \n    # in which case the credit loss is certain\n    prob_star_bank_credit_loss += star_bank_default_prob\n\n    # Since the defaults of Star Bank, Metro Bank, and Silver are independent, \n    # we can simply multiply the probabilities\n    # But we need to subtract the probability that both Star Bank and Metro Bank default\n    # to avoid double-counting\n    prob_star_bank_credit_loss -= star_bank_default_prob * metro_bank_default_prob\n\n    # return answer\n    return prob_star_bank_credit_loss\n```"
        ]
    },
    {
        "tables": [
            "| Time-to-Maturity | Spot Rates |\n| --- | --- |\n| 1 year | 3% |\n| 2 years | 4% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-121",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming the sequence of spot rates provided, what would be the cost of a 2-year bond with a 5% coupon rate, with interest paid yearly, that a trader is thinking about buying?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    time_to_maturity = 2  # years\n    coupon_rate = 0.05  # 5%\n    spot_rate_1_year = 0.03  # 3%\n    spot_rate_2_years = 0.04  # 4%\n    face_value = 100  # Assume face value of the bond is $100\n    \n    # Calculate the present value of the first coupon payment\n    present_value_first_coupon = (coupon_rate * face_value) / (1 + spot_rate_1_year)\n    \n    # Calculate the present value of the second coupon payment and the face value\n    present_value_second_coupon_and_face_value = (coupon_rate * face_value + face_value) / (1 + spot_rate_2_years)**2\n    \n    # Calculate the total cost of the bond\n    total_cost = present_value_first_coupon + present_value_second_coupon_and_face_value\n    \n    # return answer\n    return total_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-122",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond portfolio contains two bonds, bond X and bond Y. The values of bond X and bond Y are $60 millions and $40 millions respectively. The one-year probabilities of default and the recovery rate of bond X are 5% and 60% respectively, while for bond Y are 7% and 50%. Can you compute the one-year expected credit loss of this compilation? Assume that the default risk between X and Y is independent.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    value_bond_x = 60000000  # Value of bond X in dollars\n    value_bond_y = 40000000  # Value of bond l\u00fd in dollars\n    \n    probability_default_x = 0.05  # One-year probability of default of bond X\n    recovery_rate_x = 0.6  # Recovery rate of bond X\n    \n    probability_default_y = 0.07  # One-year probability of default of bond Y\n    recovery_rate_y = 0.5  # Recovery rate of bond Y\n    \n    # Do math calculation to get the answer\n    expected_loss_x = value_bond_x * probability_default_x * (1 - recovery_rate_x)\n    expected_loss_y = value_bond_y * probability_default_y * (1 - recovery_rate_y)\n    \n    total_expected_loss = expected_loss_x + expected_loss_y\n    \n    # return answer\n    return total_expected_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-123",
        "python_solution": "",
        "ground_truth": null,
        "question": "The demand schedule in an entirely competitive market is dictated by P = 93 \u2013 1.5Q (for Q \u2264 62) and the enduring cost organization of each corporation is: Total cost: 256 + 2Q +  4Q2 Average cost: 256/Q + 2 + 4Q Marginal cost: 2 + 8Q New corporations will infiltrate the market at any price above:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    min_average_cost = float('inf')  # Initialize with infinity\n    Q_values = [Q for Q in range(1, 63)]  # Q can take values from 1 to 62\n\n    # Do math calculation to get the answer\n    for Q in Q_values:\n        average_cost = 256/Q + 2 + 4*Q\n        if average_cost < min_average_cost:\n            min_average_cost = average_cost\n            min_average_cost_Q = Q\n\n    price_above = 93 - 1.5 * min_average_cost_Q\n    \n    # return answer\n    return price_above\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-124",
        "python_solution": "",
        "ground_truth": null,
        "question": "The demand function for groceries is denoted by the equation Qdpg = 80 - 3Ppg + 0.1I + 0.5Ppdr where Qdpg is the quantity of groceries, Ppg is the price of groceries, I is the income, and Ppdr is the price of beverages. We understand that: Ppg = 30, I = 110, and Ppdr = 20. What will the price elasticity of demand for groceries be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Ppg = 30  # Price of groceries\n    I = 110   # Income\n    Ppdr = 20  # Price of beverages\n\n    # Calculate the quantity of groceries using the demand function equation\n    Qdpg = 80 - 3*Ppg + 0.1*I + 0.5*Ppdr\n\n    # Calculate the derivative of the demand function with respect to price\n    dQdpg_dPpg = -3\n\n    # Calculate the price elasticity of demand for groceries\n    Ed = (dQdpg_dPpg * Ppg) / Qdpg\n\n    # return answer\n    return Ed\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-125",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert is assessing the liquidity of XYZ Corporation based on the financial data from 2016 and 2017. The total debt was $200 in 2016 and rose to $300 in 2017. The total assets were $500 in 2016, increasing to $800 in 2017. The total equity was $250 in 2016 and went up to $400 in 2017. What is the financial leverage ratio in 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt_2016 = 200\n    total_assets_2016 = 500\n    total_equity_2016 = 250\n    total_debt_2017 = 300\n    total_assets_2017 = 800\n    total_equity_2017 = 400\n    \n    # Do math calculation to get the answer\n    # Financial leverage ratio = Total Assets / Total Equity\n    financial_leverage_ratio_2017 = total_assets_2017 / total_equity_2017\n    \n    # return answer\n    return financial_leverage_ratio_2017\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-126",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment director purchased 600 call options on a stock that doesn't pay dividends, with a strike price of USD 60, at a cost of USD 3 each. If the current stock price is at USD 62, the daily stock return volatility is pegged at 1.82%, and the delta of the option stands at 0.5. How can we approximate the 1-day 95% VaR of this position using the delta-normal approach?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    number_of_options = 600\n    option_price = 3\n    stock_price = 62\n    strike_price = 60\n    daily_volatility = 0.0182  # 1.82%\n    delta = 0.5\n    confidence_level = 0.95\n    z_score = 1.645  # corresponding to a 95% confidence level\n    \n    # Calculate the value of the call option\n    call_option_value = number_of_options * option_price\n    \n    # Calculate the sensitivity of the portfolio to the stock price, measured by the delta\n    portfolio_sensitivity = number_of_options * delta\n    \n    # Calculate the standard deviation of the portfolio value\n    portfolio_volatility = portfolio_sensitivity * stock_price * daily_volatility\n    \n    # Calculate the 1-day 95% VaR\n    var = z_score * portfolio_volatility\n    \n    # Express VaR as a percentage of the portfolio value\n    var_percentage = (var / (call_option_value)) * 100\n    \n    # return answer\n    return abs(var_percentage)\n```"
        ]
    },
    {
        "tables": [
            "|        | \u00a3 thousands |\n|--------|-------------|\n| Carrying amount | 132 |\n| Undiscounted expected future cash flows | 120 |\n| Present value of expected future cash flows | 100 |\n| Fair value if sold | 105 |\n| Costs to sell | 1 |"
        ],
        "topic": "Accounting",
        "question_id": "test-127",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering the data analyzed, what will be the impairment loss on this manufacturing plant (in thousands) under IFRS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_amount = 132  # in thousands\n    present_value_of_expected_future_cash_flows = 100  # in thousands\n    fair_value_if_sold = 105  # in thousands\n    costs_to_sell = 1  # in thousands\n    \n    # Determine the recoverable amount, which is the higher of the present value of expected future cash flows and the fair value less costs to sell\n    recoverable_amount = max(present_value_of_expected_future_cash_flows, fair_value_if_sold - costs_to_sell)\n    \n    # Calculate the impairment loss if the carrying amount exceeds the recoverable amount\n    impairment_loss = max(carrying_amount - recoverable_amount, 0)\n    \n    # return answer\n    return impairment_loss\n\nresult = solution()\nprint(\"The impairment loss on this manufacturing plant (in thousands) under IFRS is:\", result)\n```\n\nYou can run the program to get the answer. The returned value of the program is the answer to the given question."
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-128",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a tax rate of 28%, what is the annual after-tax cost of debt (%) for a business that releases fresh 20-year $1,000 bonds with a coupon rate of 6.2% payable semiannually at an issuance price of $1,030.34?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.062  # 6.2%\n    face_value = 1000  # $1,000\n    issuance_price = 1030.34  # $1,030.34\n    tax_rate = 0.28  # 28%\n    years_to_maturity = 20\n    \n    # Calculate the yield to maturity (YTM) using the formula for semiannual compounding\n    ytm = (coupon_rate / 2) + (((face_value - issuance_price) / years_to_maturity) / ((issuance_price + face_value) / 2))\n    \n    # Adjust YTM for semiannual compounding to annual compounding\n    ytm = (1 + (ytm / 2)) ** 2 - 1\n    \n    # Calculate the after-tax cost of debt\n    after_tax_cost_of_debt = ytm * (1 - tax_rate)\n    \n    # Convert the result to a percentage and round to two decimal places\n    answer = round(after_tax_cost_of_debt * 100, 2)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-129",
        "python_solution": "",
        "ground_truth": null,
        "question": "Kelly is working on the valuation for XYZ Corp. She calculates that the long-term expected dividend payout rate for XYZ is 35 percent and the return on equity will be 12 percent in the long run. What is the long-term FCFE Sustainable growth rate for XYZ Corp.?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_payout_rate = 0.35\n    return_on_equity = 0.12\n    \n    # Do math calculation to get the answer\n    sustainable_growth_rate = (1 - dividend_payout_rate) * return_on_equity\n    \n    # return answer\n    return sustainable_growth_rate\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "|                |          | Actual Training |        |\n|----------------|----------|--------------|--------------|\n|                |          | results     |              |\n| Predicted      |          | Class \"1\"   | Class \"0\"    |\n| Results        | Class \"1\"| TP=182      | FP=52        |\n|                | Class \"0\"| FN=31       | TN=96        |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-130",
        "python_solution": "",
        "ground_truth": null,
        "question": "After settling on the last set of features, Johnson chooses and executes a model on the training set which labels the text as having either positive sentiment (Class \"1\") or negative sentiment (Class \"0\"). He subsequently inspects its performance through error analysis. As per Exhibit 1, what is the F1 score of the model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    TP = 182  # True Positives\n    FP = 52   # False Positives\n    FN = 31   # False Negatives\n    TN = 96   # True Negatives\n\n    # Do math calculation to get the answer\n    precision = TP / (TP + FP)\n    recall = TP / (TP + FN)\n    F1_score = 2 * precision * recall / (precision + recall)\n\n    # return answer\n    return F1_score\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-131",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we consider a decrease in the yield by 90 basis points, what would be the percentage change in the price of a bond with a modified duration of 9.6?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    decrease_in_yield = -0.0090  # 90 basis points = 0.90% = 0.0090\n    modified_duration = 9.6\n\n    # Do math calculation to get the answer\n    percentage_change_in_price = modified_duration * decrease_in_yield * 100\n\n    # return answer\n    return percentage_change_in_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-132",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the corporation buys back 1 million stocks at the current market rate, what would be the ensuing book value per share, considering the facts about another company revealed by an investigator which includes: 10 million shares in circulation, Earnings per share is US$2.00, P/E is 20, Book value per share is US$30?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_shares = 10_000_000  # 10 million shares in circulation\n    book_value_per_share = 30  # US$30 book value per share\n    shares_bought_back = 1_000_000  # 1 million shares bought back\n    \n    # Calculate current total book value\n    total_book_value = total_shares * book_value_per_share\n    \n    # Calculate new total shares after buyback\n    new_total_shares = total_shares - shares_bought_back\n    \n    # Calculate new book value per share\n    new_book_value_per_share = total_book_value / new_total_shares\n    \n    # return answer\n    return new_book_value_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-133",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the carried interest paid to the general partner of the DeepSleep Investment, referenced in the brochure and having a committed capital of $150 million, a management fee of 2%, carried interest of 20%, and a hurdle rate of 9%, at the end of the second year? In the example given in the brochure, the fund demands $100 million in commitments at the start of the first year and disburses $40 million in Company X and $60 million in Company Y. At the onset of the second year, it calls the residual $50 million and invests into Company Z. By the end of the second year, the investment in Company Y is sold for $70 million. The investment in Company X amounts to $54 million by the end of the third year, the investment in Company Z is worth $40 million, and a cash reserve of $46 million is maintained.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    committed_capital = 150000000  # $150 million\n    management_fee = 0.02  # 2%\n    carried_interest = 0.20  # 20%\n    hurdle_rate = 0.09  # 9%\n    initial_investment = 100000000  # $100 million\n    company_x_investment = 40000000  # $40 million\n    company_y_investment = 60000000  # $60 million\n    company_z_investment = 50000000  # $50 million\n    company_y_exit = 70000000  # $70 million\n    company_x_value = 54000000  # $54 million\n    company_z_value = 40000000  # $40 million\n    cash_reserve = 46000000  # $46 million\n\n    # Calculate total value of the fund\n    total_value = company_x_value + company_z_value + cash_reserve + company_y_exit\n\n    # Calculate the return on investment (ROI) for the fund\n    roi = (total_value - initial_investment) / initial_investment\n\n    # Calculate the carried interest\n    if roi > hurdle_rate:\n        carried_interest_paid = carried_interest * (roi - hurdle_rate) * total_value\n    else:\n        carried_interest_paid = 0\n\n    # return answer\n    return carried_interest_paid\n```"
        ]
    },
    {
        "tables": [
            "| Compensation of employees | 1,044,005 |\n|---------------------------|-----------|\n| Gross operating surplus | 518,979 |\n| Gross mixed income | 241,415 |\n| Net mixed income | 180,653 |\n| Taxes less subsidies on production | 90,507 |\n| Taxes less subsidies on products and imports | 139,443 |\n| Statistical discrepancy | 1,157 |\n| Net property income | 136,011 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-134",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the income approach, compute the personal income using the details in the succeeding table.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    compensation_of_employees = 1044005\n    gross_mixed_income = 241415\n    net_property_income = 136011\n    net_mixed_income = 180653\n    statistical_discrepancy = 1157\n    \n    # Personal income equation using income approach\n    personal_income = compensation_of_employees + net_mixed_income + net_property_income - statistical_discrepancy\n    \n    # return answer\n    return personal_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-135",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive intends to determine the price of a put option using a one-period binomial tree. The specifics are as such: The existing stock price is $30, with the put option's exercise price also at $30 The up factor sits at 1.12, while the down factor is at 0.92 The risk-free rate remains at 5%. What is the value of this particular put option?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 30  # Current stock price\n    X = 30  # Exercise price of the put option\n    u = 1.12  # Up factor\n    d = 0.92  # Down factor\n    r = 0.05  # Risk-free rate\n    \n    # Calculate the two possible stock prices at expiration\n    Su = S * u\n    Sd = S * d\n    \n    # Calculate the put option's payoff at expiration in both scenarios\n    pu = max(0, X - Su)\n    pd = max(0, X - Sd)\n    \n    # Calculate the present value of the expected payoff\n    pv = (pu * (1 + r - d) + pd * (u - 1 - r)) / (u - d) / (1 + r)\n    \n    # return answer\n    return pv\n```"
        ]
    },
    {
        "tables": [
            "|            | Classification  | Cost   | Market value  2018 | Market value 2019 |\n|------------|-----------------|--------|------------------- |-------------------|\n| Shoes Corp | FVOCI           | 12,000 | 15,000             | 16,000            |\n| Angle PD   | Amortized cost  | 35,000 | 32,000             | 33,000            |\n| T-vision   | FVPL            | 42,000 | 45,000             | 56,000            |"
        ],
        "topic": "Accounting",
        "question_id": "test-136",
        "python_solution": "",
        "ground_truth": null,
        "question": "A CFA named Fabian, who is employed at the Equity investment firm, is in the process of preparing an analytical report on the PZ company, which is registered on the HK Exchange and is in compliance with IFRS 9. She has gathered data on three fixed-income investments from the PZ's 2019 year-end financial report (assuming cost equals par value). Could you determine the carrying value of PZ company's investment portfolio at the end of 2019?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shoes_corp_cost = 12000\n    shoes_corp_market_value_2019 = 16000\n    angle_pd_cost = 35000\n    angle_pd_market_value_2019 = 33000\n    t_vision_cost = 42000\n    t_vision_market_value_2019 = 56000\n\n    # Since Shoes Corp is classified as FVOCI, its carrying value is its market value\n    shoes_corp_carrying_value = shoes_corp_market_value_2019\n    \n    # Since Angle PD is classified as Amortized Cost, its carrying value is its cost\n    angle_pd_carrying_value = angle_pd_cost\n    \n    # Since T-vision is classified as FVPL, its carrying value is its market value\n    t_vision_carrying_value = t_vision_market_value_2019\n\n    # Calculate total carrying value\n    total_carrying_value = shoes_corp_carrying_value + angle_pd_carrying_value + t_vision_carrying_value\n\n    # return answer\n    return total_carrying_value\n```"
        ]
    },
    {
        "tables": [
            "| Time Period | Forward Rate |\n|-------------|--------------|\n| 0y1y        | 0.80%        |\n| 1y1y        | 1.12%        |\n| Z           | 3.94%        |\n| 3y1y        | 3.28%        |\n| 4y1y        | 3.14%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-137",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the 3-year implied spot rate if all rates are annual rates stated for a periodicity of one (effective annual rates)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rate_0y1y = 0.0080\n    forward_rate_1y1y = 0.0112\n    forward_rate_2y1y = 0.0394\n    forward_rate_3y1y = 0.0328\n    forward_rate_4y1y = 0.0314\n\n    # Do math calculation to get the 3-year implied spot rate\n    # Calculate the 1-year spot rate\n    spot_rate_1y = forward_rate_0y1y\n    \n    # Calculate the 2-year spot rate\n    spot_rate_2y = ((1 + spot_rate_1y) * (1 + forward_rate_1y1y)) ** (1/2) - 1\n    \n    # Calculate the 3-year spot rate\n    spot_rate_3y = ((1 + spot_rate_2y) ** 2 * (1 + forward_rate_2y1y)) ** (1/3) - 1\n    \n    # Convert the result to percentage\n    spot_rate_3y_percentage = spot_rate_3y * 100\n    \n    # return answer\n    return spot_rate_3y_percentage\n```\n\nThis program calculates the 3-year implied spot rate using the given forward rates. It starts by calculating the 1-year spot rate, which is simply the 1-year forward rate. Then, it calculates the 2-year spot rate using the 1-year spot rate and the 1-year forward rate starting from year 1. Finally, it calculates the 3-year spot rate using the 2-year spot rate and the 1-year forward rate starting from year 2. The result is converted to a percentage before being returned."
        ]
    },
    {
        "tables": [
            "| Investment | Expected Return(%) | Expected Standard Deviation(%) |\n|-----------|------------------|-----------------------------|\n| 1         | 19               | 3                           |\n| 2         | 21               | 9                           |\n| 3         | 24               | 20                          |\n| 4         | 19               | 35                          |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-138",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming the measure of risk aversion is -3, where is Mauricio Garcia, a daring investor who applies utility theory to select his investment portfolio, most likely to invest given a table of potential investments with expected returns and expected standard deviations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_aversion = -3\n    investments = [\n        {\"expected_return\": 0.19, \"expected_standard_deviation\": 0.03},\n        {\"expected_return\": 0.21, \"expected_standard_deviation\": 0.09},\n        {\"expected_return\": 0.24, \"expected_standard_deviation\": 0.20},\n        {\"expected_return\": 0.19, \"expected_standard_deviation\": 0.35},\n    ]\n\n    # Do math calculation to get the answer\n    max_utility = float(\"-inf\")\n    best_investment = None\n    for i, investment in enumerate(investments):\n        utility = investment[\"expected_return\"] - 0.5 * risk_aversion * (investment[\"expected_standard_deviation\"] ** 2)\n        if utility > max_utility:\n            max_utility = utility\n            best_investment = i + 1\n    \n    # return answer\n    return best_investment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-139",
        "python_solution": "",
        "ground_truth": null,
        "question": "A $1 million loan was granted to a vehicle manufacturing corporation by Bank B. The bank has projected a default likelihood of 10% for the vehicle manufacturer and an 80% recovery rate owing to strong collateral. What is the anticipated loss for the bank?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 1000000  # $1 million loan\n    default_likelihood = 0.1  # 10% default likelihood\n    recovery_rate = 0.8  # 80% recovery rate\n\n    # Do math calculation to get the answer\n    expected_loss = loan_amount * default_likelihood * (1 - recovery_rate)\n\n    # return answer\n    return expected_loss\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-140",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company bond is set to mature in the coming year with a face value of 100 RMB, a market price of 88, a true default-free interest rate of 2.5%, anticipated inflation rate of 3%, and an unexpected inflation rate of 0.5%. Could you determine the implied credit risk premium embedded in the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100  # in RMB\n    market_price = 88  # in RMB\n    default_free_interest_rate = 0.025  # 2.5%\n    anticipated_inflation_rate = 0.03  # 3%\n    unexpected_inflation_rate = 0.005  # 0.5%\n\n    # Do math calculation to get the answer\n    # First, calculate the total yield on the bond\n    total_yield = (face_value - market_price) / market_price\n    \n    # Then, calculate the risk-free yield\n    risk_free_yield = default_free_interest_rate + anticipated_inflation_rate + unexpected_inflation_rate\n    \n    # The implied credit risk premium is the difference between the total yield and the risk-free yield\n    implied_credit_risk_premium = total_yield - risk_free_yield\n    \n    # return answer\n    return implied_credit_risk_premium\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-141",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a constant 6% interest rate, how much does a shareholder need to invest today in order to make $10,000 in twenty years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    future_value = 10000  # $10,000\n    years = 20\n    interest_rate = 0.06  # 6% interest rate\n    \n    # Do math calculation to get the answer\n    present_value = future_value / (1 + interest_rate) ** years\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-142",
        "python_solution": "",
        "ground_truth": null,
        "question": "The corporation known as Delta Enterprises has authorized 160,000 shares of common stock. It has issued 88,000 shares and has 75,000 shares outstanding. How many shares of treasury stock does Delta Enterprises possess?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    authorized_shares = 160000\n    issued_shares = 88000\n    outstanding_shares = 75000\n    \n    # Do math calculation to get the answer\n    treasury_stock = issued_shares - outstanding_shares\n    \n    # return answer\n    return treasury_stock\n```"
        ]
    },
    {
        "tables": [
            "| Company M                    | $ millions |\n|---------------------------|----------|\n| Net Income                      | 485        |\n| Depreciation expense      | 270        |\n| Increase in accounts receivable | 59         |\n| Increase in accounts payable    | 33         |\n| Purchase of fixed assets        | 523        |\n| Increase in notes payable       | 15         |\n| Increase in long-term debt      | 60         |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-143",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is getting ready to assess the value of Company X's equity using the two-stage FCFE model. The anticipated growth rates for the initial three years are projected at 10%, 8%, and 6%, in that order, before potentially growing at 5% annually for an indefinite period. The necessary rate of return on equity for Company X stands at 10%. What is the fundamental value of Company X\u2019s equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 485\n    depreciation_expense = 270\n    increase_in_accounts_receivable = 59\n    increase_in_accounts_payable = 33\n    purchase_of_fixed_assets = 523\n    increase_in_notes_payable = 15\n    increase_in_long_term_debt = 60\n    \n    required_rate_of_return_on_equity = 0.10\n    growth_rate_1 = 0.10\n    growth_rate_2 = 0.08\n    growth_rate_3 = 0.06\n    perpetual_growth_rate = 0.05\n    \n    # Calculate free cash flow to equity (FCFE) for the first three years\n    fcfe_1 = (net_income * (1 + growth_rate_1)) - (purchase_of_fixed_assets - depreciation_expense) + (increase_in_accounts_payable - increase_in_accounts_receivable) + (increase_in_notes_payable + increase_in_long_term_debt)\n    fcfe_2 = (net_income * (1 + growth_rate_2)) - (purchase_of_fixed_assets - depreciation_expense) + (increase_in_accounts_payable - increase_in_accounts_receivable) + (increase_in_notes_payable + increase_in_long_term_debt)\n    fcfe_3 = (net_income * (1 + growth_rate_3)) - (purchase_of_fixed_assets - depreciation_expense) + (increase_in_accounts_payable - increase_in_accounts_receivable) + (increase_in_notes_payable + increase_in_long_term_debt)\n    \n    # Calculate present value of FCFE for the first three years\n    present_value_fcfe_1 = fcfe_1 / (1 + required_rate_of_return_on_equity)**1\n    present_value_fcfe_2 = fcfe_2 / (1 + required_rate_of_return_on_equity)**2\n    present_value_fcfe_3 = fcfe_3 / (1 + required_rate_of_return_on_equity)**3\n    \n    # Calculate terminal value using perpetual growth model\n    terminal_value = (fcfe_3 * (1 + perpetual_growth_rate)) / (required_rate_of_return_on_equity - perpetual_growth_rate)\n    \n    # Calculate present value of terminal value\n    present_value_terminal_value = terminal_value / (1 + required_rate_of_return_on_equity)**3\n    \n    # Calculate fundamental value of equity\n    fundamental_value_of_equ"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-144",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a buyer acquires a three-year bond that has a 5% annual coupon rate, is bought at a rate of 105.657223 per 100 of par value and has a yield-to-maturity of 3%, what would be the estimated modified duration of this bond given a 5-basis point shift in yield-to-maturity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_coupon_rate = 0.05  # 5%\n    price = 105.657223  # per 100 of par value\n    yield_to_maturity = 0.03  # 3%\n    shift_in_yield = 0.0005  # 5-basis point shift\n    years_to_maturity = 3\n    par_value = 100\n    \n    # Calculate the present value of the cash flows using initial yield-to-maturity\n    initial_pv = 0\n    for i in range(1, years_to_maturity + 1):\n        cash_flow = par_value * annual_coupon_rate\n        if i == years_to_maturity:\n            cash_flow += par_value  # Add face value at maturity\n        initial_pv += cash_flow / (1 + yield_to_maturity) ** i\n    \n    # Calculate the shifted yield-to-maturity\n    shifted_yield_to_maturity = yield_to_maturity + shift_in_yield\n    \n    # Calculate the present value of the cash flows using shifted yield-to-maturity\n    shifted_pv = 0\n    for i in range(1, years_to_maturity + 1):\n        cash_flow = par_value * annual_coupon_rate\n        if i == years_to_maturity:\n            cash_flow += par_value  # Add face value at maturity\n        shifted_pv += cash_flow / (1 + shifted_yield_to_maturity) ** i\n    \n    # Calculate the estimated modified duration\n    modified_duration = (shifted_pv - initial_pv) / (shifted_yield_to_maturity - yield_to_maturity) / initial_pv * (1 + yield_to_maturity)\n    \n    # return answer\n    return -modified_duration\n```\n\nThis program calculates the estimated modified duration of the bond by using the initial yield-to-maturity, shifting it by the given amount, calculating the new present value of the bond with the shifted yield-to-maturity, and then applying the formula for modified duration. \n\nPlease note that the minus sign in front of the modified_duration is used because the duration is usually expressed as a positive number for bonds, whereas this formula generates a negative value.\n\nNote that this program assumes that the yield-to-maturity is constant over the life of the bond and does not account for any embedded options."
        ]
    },
    {
        "tables": [
            "|       | Beginning of Period Price($) | End of Period Price($) | Total Dividends($) |\n|-------|------------------------------|------------------------|--------------------|\n| A     | 8.00                         | 10.00                  | 0.50               |\n| B     | 22.00                        | 19.00                  | 1.20               |\n| C     | 25.00                        | 25.00                  | 1.50               |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-145",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, an analyst named Ahern from a financial firm gathered data for an equal-weighted index made up of assets A, B, and C: What is the index's price return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_price_A = 8.00\n    beginning_price_B = 22.00\n    beginning_price_C = 25.00\n    end_price_A = 10.00\n    end_price_B = 19.00\n    end_price_C = 25.00\n    \n    # Calculate returns for each asset\n    return_A = (end_price_A - beginning_price_A) / beginning_price_A\n    return_B = (end_price_B - beginning_price_B) / beginning_price_B\n    return_C = (end_price_C - beginning_price_C) / beginning_price_C\n    \n    # Calculate the index's price return as the average of individual asset returns\n    index_return = (return_A + return_B + return_C) / 3\n    \n    # return answer\n    return index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-146",
        "python_solution": "",
        "ground_truth": null,
        "question": "If John purchased a security for $55 in the first year, $60 in the second year, $64 in the third year, and $70 in the fourth year, what would be the harmonic mean of the price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_year1 = 55\n    price_year2 = 60\n    price_year3 = 64\n    price_year4 = 70\n    \n    # Do math calculation to get the answer\n    harmonic_mean = 4 / ((1/price_year1) + (1/price_year2) + (1/price_year3) + (1/price_year4))\n    \n    # return answer\n    return harmonic_mean\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-147",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2013, AskIt bought a customer list for $100,000, expected to yield equal annual benefits for four years. It also registered $200,000 in goodwill from the takeover of a rival firm, with projections indicating substantial benefits for at least a decade. Furthermore, it allocated $300,000 on media slots publicizing the firm's donations of goods and services in the local community, a move which the CEO believes significantly boosted the company's reputation and anticipates it to yield rewards for five years. Consequently, how much should the company declare as amortization expense in 2014?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    customer_list_cost = 100000\n    customer_list_years = 4\n    goodwill_cost = 200000\n    goodwill_years = 10\n    media_slots_cost = 300000\n    media_slots_years = 5\n\n    # Do math calculation to get the answer\n    customer_list_amortization = customer_list_cost / customer_list_years\n    goodwill_amortization = goodwill_cost / goodwill_years\n    media_slots_amortization = media_slots_cost / media_slots_years\n    total_amortization = customer_list_amortization + goodwill_amortization + media_slots_amortization\n\n    # return answer\n    return total_amortization\n```"
        ]
    },
    {
        "tables": [
            "| Bond Class      | Par Value (\u6bdb millions) |\n| ----------- | ----------- |\n| A (senior)      | 200       |\n| B (subordinated)   | 20        |\n| C (subordinated)   | 5        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-148",
        "python_solution": "",
        "ground_truth": null,
        "question": "At what level of default in par value would Bond Class A suffer a loss, if issued by a special purpose entity as part of asset-backed securities structure?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value_A = 200  # millions\n    par_value_B = 20   # millions\n    par_value_C = 5    # millions\n\n    # Calculate the total par value of subordinated bonds\n    subordinated_bonds = par_value_B + par_value_C\n\n    # Bond Class A will suffer a loss if the default exceeds the par value of subordinated bonds\n    answer = subordinated_bonds\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|                                                    | \u00a5millions |\n|----------------------------------------------------|-----------|\n| Net income reported                                | 42        |\n| Dividends paid                                     | 7         |\n| Unrealized loss on investments carried at fair value through other comprehensive income | 3         |\n| Repurchase of company stock, to be held as Treasury stock | 6         |"
        ],
        "topic": "Accounting",
        "question_id": "test-149",
        "python_solution": "",
        "ground_truth": null,
        "question": "During the year, the following events happened: At the start of the year, an organization had total equity from shareholders comprising of \u00a5200 million in common share capital and \u00a550 million in preserved profits. What is the total equity from shareholders (in \u00a5 millions) at the conclusion of the year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 42  # in \u00a5 millions\n    dividends_paid = 7  # in \u00a5 millions\n    unrealized_loss_on_investments = 3  # in \u00a5 millions\n    repurchase_of_company_stock = 6  # in \u00a5 millions\n    initial_common_share_capital = 200  # in \u00a5 millions\n    initial_retained_profits = 50  # in \u00a5 millions\n\n    # Do math calculation to get the answer\n    # Calculate retained profits at end of year\n    retained_profits = initial_retained_profits + net_income - dividends_paid - unrealized_loss_on_investments\n    \n    # Calculate common share capital at end of year\n    common_share_capital = initial_common_share_capital - repurchase_of_company_stock\n    \n    # Calculate total equity from shareholders\n    total_equity = common_share_capital + retained_profits\n    \n    # return answer\n    return total_equity\n```"
        ]
    },
    {
        "tables": [
            "|                  | Asset 1 | Asset 2 | Asset 3 |\n|------------------|---------|---------|---------|\n| Expected return  | 5%      | 6%      | 7%      |\n| Portfolio weight | 0.20    | 0.30    | 0.50    |\n|                  | Asset 1 | Asset 2 | Asset 3 |\n| Asset 1          | 196     | 105     | 140     |\n| Asset 2          | 105     | 225     | 150     |\n| Asset 3          | 140     | 150     | 400     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-150",
        "python_solution": "",
        "ground_truth": null,
        "question": "The three-asset portfolio designed by Sophia Milligan is outlined below. Milligan estimated the portfolio return to be 6.3%. What is the standard deviation of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset1_return = 0.05\n    asset2_return = 0.06\n    asset3_return = 0.07\n    asset1_weight = 0.20\n    asset2_weight = 0.30\n    asset3_weight = 0.50\n    covariance_matrix = [[196, 105, 140], [105, 225, 150], [140, 150, 400]]\n    \n    # Do math calculation to get the answer\n    portfolio_return = (asset1_return * asset1_weight) + (asset2_return * asset2_weight) + (asset3_return * asset3_weight)\n    assert round(portfolio_return*100, 1) == 6.3\n    \n    portfolio_variance = (asset1_weight**2)*covariance_matrix[0][0] + (asset1_weight*asset2_weight)*covariance_matrix[0][1] + (asset1_weight*asset3_weight)*covariance_matrix[0][2] + \\\n                         (asset2_weight*asset1_weight)*covariance_matrix[1][0] + (asset2_weight**2)*covariance_matrix[1][1] + (asset2_weight*asset3_weight)*covariance_matrix[1][2] + \\\n                         (asset3_weight*asset1_weight)*covariance_matrix[2][0] + (asset3_weight*asset2_weight)*covariance_matrix[2][1] + (asset3_weight**2)*covariance_matrix[2][2]\n    \n    portfolio_std_dev = portfolio_variance ** 0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [
            "| Income Statement       | Millions ($) |\n|-----------------------|--------------|\n| Revenues              | 10.2         |\n| Variable operating costs | 4.6       |\n| Fixed operating costs    | 2.0       |\n| Operating income        | 3.6        |\n| Interest                | 1.2        |\n| Taxable income          | 2.4        |\n| Tax                     | 1.0        |\n| Net income              | 1.4        |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-151",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the degree of financial leverage (DFL) accessible for a company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_income = 3.6\n    net_income = 1.4\n    \n    # Do math calculation to get the answer\n    dfl = operating_income / net_income\n    \n    # return answer\n    return dfl\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-152",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the duration model with convexity adjustment, how much will the bond's price change, in percentage, if interest rates drop 2%, given that the bond's duration is 7.31 and its convexity is -24.85?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    duration = 7.31\n    convexity = -24.85\n    interest_rate_change = -0.02  # -2% change in interest rate\n\n    # Do math calculation to get the answer\n    price_change = (-duration * interest_rate_change) + (0.5 * convexity * (interest_rate_change ** 2))\n    percentage_price_change = price_change * 100  # convert to percentage\n\n    # return answer\n    return percentage_price_change\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Price | Par Amount Held | Modified Duration |\n|------|-------|-----------------|-------------------|\n| A    | 101.43| 3               | 2.36              |\n| B    | 84.89 | 5               | 4.13              |\n| C    | 121.87| 8               | 6.27              |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-153",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the given portfolio of bonds (par amounts listed in millions of USD). What is the value of the portfolio's DV01 (dollar value of 1 basis point)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_price = {\n        'A': 101.43,\n        'B': 84.89,\n        'C': 121.87\n    }\n    par_amount_held = {\n        'A': 3,\n        'B': 5,\n        'C': 8\n    }\n    modified_duration = {\n        'A': 2.36,\n        'B': 4.13,\n        'C': 6.27\n    }\n    market_value = {}\n    dv01 = {}\n\n    # Calculate the market value of each bond\n    for bond in bond_price:\n        market_value[bond] = bond_price[bond] * par_amount_held[bond] * 1e6\n    \n    # Calculate the DV01 for each bond\n    for bond in market_value:\n        dv01[bond] = market_value[bond] * modified_duration[bond] / 10000\n\n    # Calculate the total DV01 of the portfolio\n    portfolio_dv01 = sum(dv01.values())\n\n    # return answer\n    return portfolio_dv01\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| Coupon rate  | 5%  |\n| Interest paid  | semiannually  |\n| Mature time  | 2 years  |\n| Required rate of return  | 6%  |\n| Par value of the bond  | 100 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-154",
        "python_solution": "",
        "ground_truth": null,
        "question": "The bond purchased by Brian has some detailed information summarized below. What is the price of this bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.05\n    interest_paid = 2  # semiannually\n    mature_time = 2  # years\n    required_rate_of_return = 0.06\n    par_value = 100\n    \n    # Calculate the number of periods\n    n = mature_time * interest_paid\n    \n    # Calculate the coupon payment per period\n    coupon_payment = (coupon_rate / interest_paid) * par_value\n    \n    # Calculate the discount factor\n    discount_factor = (1 + required_rate_of_return/interest_paid)**(-1)\n    \n    # Calculate the present value of the bond\n    present_value_of_coupons = coupon_payment * (1 - discount_factor**n) / (1 - discount_factor)\n    present_value_of_par_value = par_value * discount_factor**n\n    \n    # Calculate the price of the bond\n    bond_price = present_value_of_coupons + present_value_of_par_value\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-155",
        "python_solution": "",
        "ground_truth": null,
        "question": "The XYZ Company is situated in a region with a 40 percent business tax rate on pre-tax income and a 30 percent individual tax rate on dividends. XYZ hands out all its post-tax income to its shareholders. What is the effective tax rate on XYZ's pre-tax income that is distributed as dividends?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    business_tax_rate = 0.40  # 40% business tax rate\n    individual_tax_rate = 0.30  # 30% individual tax rate\n    pretax_income = 100  # Assuming $100 pre-tax income for simplicity\n\n    # Do math calculation to get the answer\n    post_tax_income = pretax_income * (1 - business_tax_rate)  # Calculate post-tax income after business tax\n    dividend = post_tax_income  # All post-tax income is distributed as dividends\n    individual_tax = dividend * individual_tax_rate  # Calculate individual tax on dividend\n    net_income = dividend - individual_tax  # Calculate net income after individual tax\n    effective_tax_rate = (pretax_income - net_income) / pretax_income  # Calculate effective tax rate\n\n    # return answer\n    return effective_tax_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-156",
        "python_solution": "",
        "ground_truth": null,
        "question": "A note with a par of $100 and a semiannually paid coupon rate of 6%, with a YTM of 8% and a 10-year maturity timeframe. What is the DV01 of this note?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100  # Par value of the note\n    coupon_rate = 0.06  # Semiannual coupon rate\n    ytm = 0.08  # Yield to maturity\n    maturity_years = 10  # Time to maturity in years\n    freq = 2  # Frequency of coupon payments (semiannual)\n    dv01 = 0.01  # Change in yield (1 basis point)\n\n    # Calculate the yield per period\n    ytm_periodic = (1 + ytm) ** (1 / freq) - 1\n\n    # Calculate the number of periods until maturity\n    periods_until_maturity = maturity_years * freq\n\n    # Calculate the present value of the cash flows\n    present_value_cash_flows = 0\n    for t in range(1, periods_until_maturity + 1):\n        cash_flow = par_value * coupon_rate / freq\n        if t == periods_until_maturity:\n            cash_flow += par_value\n        present_value_cash_flows += cash_flow / (1 + ytm_periodic) ** t\n\n    # Calculate the present value of the cash flows with a 1 basis point change in yield\n    present_value_cash_flows_dv01 = 0\n    for t in range(1, periods_until_maturity + 1):\n        cash_flow = par_value * coupon_rate / freq\n        if t == periods_until_maturity:\n            cash_flow += par_value\n        present_value_cash_flows_dv01 += cash_flow / (1 + ytm_periodic + dv01) ** t\n\n    # Calculate the DV01 of the note\n    dv01_note = present_value_cash_flows - present_value_cash_flows_dv01\n\n    # return answer\n    return dv01_note\n```"
        ]
    },
    {
        "tables": [
            "| Amount | $1,000.00 |\n| ------- | ------------ |\n| Coupon | 5.00% |\n| Maturity | 3 years |\n| Probability of Default | Year 1: 2.0%. Year 2: 2.5%. Year 3: 3.0% |\n| Recovery Rate | 40% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-157",
        "python_solution": "",
        "ground_truth": null,
        "question": "BTB Bank is a top-tier corporate and institutional bank that runs a client-facing credit default swap (CDS) desk. Steve McQueen is a CDS client strategist. Paul Starr is BTB's chief CDS trader. McQueen and Starr are setting up a meeting with Adam Lopez, a portfolio manager for AEB Fund, to explore investment and trading techniques concerning bonds, CDSs, and equities. Lopez kick-starts the conversation by requesting a recap on fundamental CDS principles and parameters. McQueen responds by explaining that a CDS comprises both a premium leg and a payment leg and that anticipated loss forms one of the elements that impact its valuation. McQueen provides data for a bond issued by Zeus Corporation. According to the facts presented in Exhibit 1, what is the forecasted loss for the Zeus Corporation bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000  # Amount ($1,000.00)\n    coupon_rate = 0.05  # Coupon (5.00%)\n    maturity = 3  # Maturity (3 years)\n    default_probabilities = [0.02, 0.025, 0.03]  # Probability of Default for each year\n    recovery_rate = 0.40  # Recovery Rate (40%)\n\n    # Do math calculation to get the answer\n    expected_loss = 0\n    for i in range(maturity):\n        expected_loss += face_value * default_probabilities[i] * (1 - recovery_rate)\n    \n    # Calculate the present value of the expected loss\n    # Here we use a simple discount factor for simplicity\n    # In real application, you might need to use more complex discount factor\n    present_value_expected_loss = expected_loss / (1 + coupon_rate) ** maturity\n\n    # return answer\n    return present_value_expected_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-158",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the interest from the coupon is reinvested at the bond's YTM, how much interest will a financier receive over the bond's 10-year lifespan if they buy a bond with a 6% annual coupon for $1,000 at par and holds it until it matures?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_coupon_rate = 0.06  # 6% annual coupon rate\n    face_value = 1000  # Face value of the bond\n    years_to_maturity = 10  # 10-year lifespan of the bond\n\n    # Do math calculation to get the answer\n    totalInterestEarned = face_value * annual_coupon_rate * years_to_maturity\n\n    # return answer\n    return totalInterestEarned\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-159",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer bought a stock 20 years ago for $15 and it paid no dividends throughout the investment period, but it had an annual compounded rate of 16%. Based on this information, what is the stock's value today?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 15\n    annual_rate = 0.16\n    years = 20\n    \n    # Do math calculation to get the answer\n    stock_value_today = initial_investment * (1 + annual_rate) ** years\n    \n    # return answer\n    return stock_value_today\n```"
        ]
    },
    {
        "tables": [
            "| Information Ratio | 0.66 |\n|-------------------|------|\n| Information Coefficient | 0.5 |\n| Transfer Coefficient | 0.89 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-160",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on essential foundational rules, the researchers gathered some data. Could you compute the annual number of autonomous choices made?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    information_ratio = 0.66\n    information_coefficient = 0.5\n    transfer_coefficient = 0.89\n    \n    # Do math calculation to get the answer\n    annual_autonomous_choices = (information_ratio ** 2) / (information_coefficient * transfer_coefficient)\n    \n    # return answer\n    return annual_autonomous_choices\n```"
        ]
    },
    {
        "tables": [
            "|      | Current Year ($ thousands) | Projection for Next Year ($ thousands) |\n|------|---------------------------|---------------------------------------|\n| Sales | 2,200 | 2,500 |\n| Variable operating costs (% of sales) | 28% | 30% |\n| Fixed operating costs | 1,400 | 1,400 |\n| Tax rate | 25% | 25% |\n| Dividends paid | 55 | 60 |\n| Interest bearing debt at 5% | 500 | 500 |"
        ],
        "topic": "Accounting",
        "question_id": "test-161",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the chosen details, what is the projected net income (in $ thousands) for the corporation next year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales_next_year = 2500  # in $ thousands\n    variable_operating_costs_percentage = 0.30  # 30%\n    fixed_operating_costs = 1400  # in $ thousands\n    tax_rate = 0.25  # 25%\n    dividends_paid = 60  # in $ thousands\n    interest_bearing_debt = 500  # in $ thousands\n    interest_rate = 0.05  # 5%\n\n    # Do math calculation to get the answer\n    variable_operating_costs = sales_next_year * variable_operating_costs_percentage\n    total_operating_costs = variable_operating_costs + fixed_operating_costs\n    operating_income = sales_next_year - total_operating_costs\n    interest_expense = interest_bearing_debt * interest_rate\n    income_before_tax = operating_income - interest_expense\n    income_tax_expense = income_before_tax * tax_rate\n    net_income = income_before_tax - income_tax_expense\n\n    # return answer\n    return net_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-162",
        "python_solution": "",
        "ground_truth": null,
        "question": "The floral products seller, Lavender Bloom Corp., announced a yearly cost of goods sold amounting to $75 million. There was an increase in total assets by $55 million, though there was a decrease in inventory by $6 million. Meanwhile, total liabilities escalated by $45 million and there was a surge in accounts payable by $2 million. What would be the probable total of cash that the company paid to its vendors?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold = 75000000\n    increase_in_total_assets = 55000000\n    decrease_in_inventory = 6000000\n    increase_in_total_liabilities = 45000000\n    increase_in_accounts_payable = 2000000\n    \n    # Do math calculation to get the answer\n    accounts_payable_increase_added_to_COGS = cost_of_goods_sold + increase_in_accounts_payable\n    inventory_decrease_subtracted = accounts_payable_increase_added_to_COGS - decrease_in_inventory\n    change_in_net_working_capital = (increase_in_total_assets - increase_in_total_liabilities) - (decrease_in_inventory - increase_in_accounts_payable)\n    cash_paid_to_suppliers = cost_of_goods_sold + change_in_net_working_capital\n    \n    answer = cash_paid_to_suppliers\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-163",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the equity's proportion in a business's capital structure, with a marginal tax rate of 30%, a weighted average cost of capital of 7.4%, a before-tax cost of debt of 5%, and a 10% cost of equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    marginal_tax_rate = 0.3  # 30%\n    weighted_average_cost_of_capital = 0.074  # 7.4%\n    before_tax_cost_of_debt = 0.05  # 5%\n    cost_of_equity = 0.1  # 10%\n\n    # Do math calculation to get the answer\n    after_tax_cost_of_debt = before_tax_cost_of_debt * (1 - marginal_tax_rate)\n    equity_proportion = (weighted_average_cost_of_capital - after_tax_cost_of_debt) / (cost_of_equity - after_tax_cost_of_debt)\n\n    # return answer\n    return equity_proportion\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-164",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is R2R^2R2 if the estimate for beta, \u03b2^=0\\widehat\\beta = 0\u03b2\u200b=0?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beta_estimate = 0\n    \n    # Since R2 = 1 - (SSE / SST) and SSE = SST - SSR, we need more information to calculate R2 directly.\n    # However, given that \u03b2^ = 0, we can imply that R2 = 0, because a beta of 0 indicates no correlation.\n    # Therefore, without additional data, we rely on the properties of linear regression for this special case.\n    r2 = 0\n    \n    # return answer\n    return r2\n```"
        ]
    },
    {
        "tables": [
            "| Current year's earnings per share | $2.50 |\n|---|---|\n| Dividend payout ratio | 60% |\n| Dividend growth rate expected during Year 1 and 2 | 25% |\n| Dividend growth rate expected after Year 2 | 5% |\n| Investors' required rate of return | 12% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-165",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share value of the common stock a stockholder has collected data on for possible investment in a business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    earnings_per_share = 2.50\n    dividend_payout_ratio = 0.60\n    growth_rate_1_2 = 0.25\n    growth_rate_after_2 = 0.05\n    required_rate_of_return = 0.12\n    \n    # Calculate dividend per share\n    dividend_per_share = earnings_per_share * dividend_payout_ratio\n    \n    # Calculate dividend per share for next 2 years\n    dividend_per_share_year_1 = dividend_per_share * (1 + growth_rate_1_2)\n    dividend_per_share_year_2 = dividend_per_share_year_1 * (1 + growth_rate_1_2)\n    \n    # Calculate present value of dividends for next 2 years\n    present_value_dividend_year_1 = dividend_per_share_year_1 / (1 + required_rate_of_return)**1\n    present_value_dividend_year_2 = dividend_per_share_year_2 / (1 + required_rate_of_return)**2\n    \n    # Calculate terminal value\n    terminal_value = (dividend_per_share_year_2 * (1 + growth_rate_after_2)) / (required_rate_of_return - growth_rate_after_2)\n    \n    # Calculate present value of terminal value\n    present_value_terminal_value = terminal_value / (1 + required_rate_of_return)**2\n    \n    # Calculate total present value\n    total_present_value = present_value_dividend_year_1 + present_value_dividend_year_2 + present_value_terminal_value\n    \n    # return answer\n    return total_present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-166",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, Bob Inc. acquired a production equipment for $60,000, which is anticipated to produce an annual cash inflow of $25,000 for a duration of six years. The company plans to depreciate the equipment over six years for accounting reasons. Nonetheless, the tax department approximates the useful life of the equipment to be 5 years. Assuming a tax rate of 40% and the equipment has no residual value. What would be the tax payable by Bob Inc. in the 6th year if they use the straight-line depreciation method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equipment_cost = 60000\n    annual_cash_inflow = 25000\n    tax_rate = 0.4\n    accounting_depreciation_years = 6\n    tax_depreciation_years = 5\n    \n    # Calculate annual accounting depreciation\n    accounting_annual_depreciation = equipment_cost / accounting_depreciation_years\n    \n    # Calculate annual tax depreciation\n    tax_annual_depreciation = equipment_cost / tax_depreciation_years\n    \n    # Since the tax depreciation period is 5 years, there will be no tax depreciation in the 6th year\n    tax_depreciation_6th_year = 0\n    \n    # In the 6th year, there is still an annual cash inflow, which is taxable\n    taxable_income_6th_year = annual_cash_inflow - accounting_annual_depreciation + (tax_annual_depreciation - tax_depreciation_6th_year)\n    \n    # Calculate tax payable in the 6th year\n    tax_payable_6th_year = taxable_income_6th_year * tax_rate\n    \n    # return answer\n    return tax_payable_6th_year\n```"
        ]
    },
    {
        "tables": [
            "|                            |                |\n|----------------------------|----------------|\n| Exhibit 1 Commercial Property Information |       |\n| Net operating income       | $700,000       |\n| Mortgage on property       | $9,000,000     |\n| Debt service               | $600,000       |\n| Market value of property   | $10,000,000    |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-167",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson inquires from Smith about the most frequently utilized financial ratios for assessing private real estate investments, such as commercial property. Based on the data in Exhibit 1, what is the cash-on-cash return for the property that Smith requires analysis for?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_operating_income = 700000\n    mortgage_on_property = 9000000\n    debt_service = 600000\n    \n    # Do math calculation to get the answer\n    annual_cash_flow = net_operating_income - debt_service\n    total_cash_invested = mortgage_on_property\n    cash_on_cash_return = (annual_cash_flow / total_cash_invested) * 100\n    \n    # return answer\n    return cash_on_cash_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-168",
        "python_solution": "",
        "ground_truth": null,
        "question": "By employing the Black-Scholes model, determine the worth of a European call option with these details: spot price = 100; strike rate = 110; risk-free interest rate = 10%; duration until expiration = 0.5 years; N(d1) is 0.457185 and N(d2) is 0.374163.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 100  # spot price\n    K = 110  # strike price\n    r = 0.10  # risk-free interest rate\n    t = 0.5   # time until expiration\n    N_d1 = 0.457185  # cumulative distribution function value of d1\n    N_d2 = 0.374163  # cumulative distribution function value of d2\n\n    # Do math calculation to get the answer\n    C = S * N_d1 - K * math.exp(-r * t) * N_d2\n\n    # return answer\n    return C\n```"
        ]
    },
    {
        "tables": [
            "| xor z 0 |     | 0.01 0.02 0.03 0.04 0.05 0.06 0.07                                   | 0.08 | 0.09 |\n| 0.10 |     | 0.5398 0.5438 0.5478 0.5517 0.5557 0.5596 0.5636 0.5675 0.5714 0.5753 |     |     |\n| 0.20 |     | 0.5793 0.5832 0.5871 0.5910 0.5948 0.5987 0.6026 0.6064 0.6103 0.6141 |     |     |\n| 0.30 |     | 0.6179 0.6217 0.6255 0.6293 0.6331 0.6368 0.6406 0.6443 0.6480 0.6517 |     |     |\n| 0.40 |     | 0.6554 0.6591 0.6628 0.6664 0.6700 0.6736 0.6772 0.6808 0.6844 0.6879 |     |     |\n| 1.10 |     | 0.8643 0.8665 0.8686 0.8708 0.8729 0.8749 0.8770 0.8790 0.8810 0.883  |     |     |\n| 1.20 | 0.8849 0.8869 0.8888 0.8907 0.8925 0.8944 0.8962 0.8980 0.8997 0.9015 |      |     |\n| 1.30 | 0.9032 0.9049 0.9066 0.9082 0.9099 0.9115 0.9131 0.9147 0.9162 0.9177 |      |     |\n| 1."
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-169",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the given extract from the cumulative distribution function for the standard normal random variable table: Cumulative Probabilities for a Standard Normal DistributionP(Z \u2264 x) = N(x) for x \u2265 0 or P(Z \u2264 z) = N(z) for z \u2265 0, If a variable follows a normal distribution with an average of 2.00 and a variance of 16.00, what's the likelihood of getting a value that is 7.40 or lower?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average = 2.00\n    variance = 16.00\n    value = 7.40\n    \n    # Calculate the standard deviation\n    std_dev = variance ** 0.5\n    \n    # Calculate the z-score\n    z_score = (value - average) / std_dev\n    \n    # Given the z-score, define the corresponding probability from the table\n    # Since z_score is 1.10, we look at the 1.10 row in the table\n    # z_score corresponds to the column 0.03 (because 1.10 + 0.03 not present in the table, 0.03 is seen in first table in problem, 0.03 + 1.10 = 1.13 => (7.30-2)/4 = 1.325 fits in between column 0.02 to column 0.040 in first table so the final range of 1.13 lies in between 0.8849 and  0.8888) \n    prob_z_score = 0.8888\n    \n    # return answer\n    return prob_z_score\n```\n\nThis solution assumes that the given cumulative distribution function table for the standard normal random variable has been properly reviewed, and the correct z-score and corresponding probability have been determined. It also assumes that linear interpolation has been completed on the sigma axis and this Z-corresponds to desired value by cross-checking the tables."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-170",
        "python_solution": "",
        "ground_truth": null,
        "question": "If under LIFO, the ABC organization reported a COGS of $500,000, and an ending inventory of $600,000 in 2017, and it was noted in the footnotes that LIFO reserve increased by $10,000, what would be its cost of goods sold if ABC organization switched its accounting method from LIFO to FIFO?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    COGS_LIFO = 500000  # Cost of Goods Sold under LIFO\n    ending_inventory_LIFO = 600000  # Ending inventory under LIFO\n    LIFO_reserve_increase = 10000  # Increase in LIFO reserve\n\n    # Do math calculation to get the answer\n    # When switching from LIFO to FIFO, the difference in inventory valuation is added to the COGS\n    # The increase in LIFO reserve represents this difference\n    COGS_FIFO = COGS_LIFO + LIFO_reserve_increase\n    \n    # return answer\n    return COGS_FIFO\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-171",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that in the futures market, the 1-year forward rate stands at NZD/AUD 1.1079. Given that the yearly interest rate is 2.5% in Australia (AUD) and 3% in New Zealand (NZD), what would be the NZD/AUD spot rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rate = 1.1079  # 1-year forward rate NZD/AUD\n    aud_interest_rate = 0.025  # yearly interest rate in Australia (AUD)\n    nzd_interest_rate = 0.03  # yearly interest rate in New Zealand (NZD)\n\n    # Do math calculation to get the answer\n    spot_rate = forward_rate / ((1 + nzd_interest_rate) / (1 + aud_interest_rate))\n\n    # return answer\n    return spot_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-172",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a credit commitment totals $10 million, with $8.5 million currently still due, and there's a 1% chance of default with a recovery rate of 40%, what's the predicted loss for the credit?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_credit_commitment = 10000000\n    current_due_amount = 8500000\n    probability_of_default = 0.01\n    recovery_rate = 0.40\n    \n    # Do math calculation to get the answer\n    exposure_at_default = current_due_amount\n    loss_given_default = 1 - recovery_rate\n    expected_loss = exposure_at_default * probability_of_default * loss_given_default\n    \n    # return answer\n    return expected_loss\n```"
        ]
    },
    {
        "tables": [
            "| Height interval | Absolute Frequency |\n|----------------|---------------------|\n| 155~160         | 10                       |\n| 160~165         | 20                       |\n| 165~170         | 30                       |\n| 170~175         | 24                       |\n| 175~180         | 10                       |\n| 180~185         | 6                         |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-173",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the relative frequency of the height range \"170 ~175\" in the student height distribution for the class?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_students = 10 + 20 + 30 + 24 + 10 + 6  # Total number of students\n    height_170_175 = 24  # Absolute frequency of the height range \"170~175\"\n\n    # Do math calculation to get the answer\n    relative_frequency = (height_170_175 / total_students) * 100\n\n    # return answer\n    return relative_frequency\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-174",
        "python_solution": "",
        "ground_truth": null,
        "question": "Calculate the forward price of a 6-month forward contract on a bond that is priced at $1,058, has a biannual coupon payment of $30 and had its last payment three months ago, given a continuous interest rate of 5%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_price = 1058\n    coupon_payment = 30\n    time_to_maturity = 0.5  # 6 months\n    interest_rate = 0.05\n    time_since_last_payment = 0.25  # 3 months\n\n    # Calculate the present value of the coupon payment\n    present_value_coupon = coupon_payment * (1 + interest_rate) ** (-time_to_maturity)\n\n    # Calculate the forward price of the bond\n    forward_price = spot_price - present_value_coupon\n\n    # Add the accrued interest\n    accrued_interest = coupon_payment * (time_since_last_payment / 0.5)  # Assuming semi-annual coupon payments\n    forward_price += accrued_interest\n\n    # Add the interest rate component\n    forward_price *= (1 + interest_rate) ** time_to_maturity\n\n    # return answer\n    return forward_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-175",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Lawson Company has recently paid a dividend of $1.75 per share. If the necessary annual return rate is 12.3 percent and dividends are predicted to consistently grow at 9.2 percent per year without end, what is the intrinsic worth of Lawson Company stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_per_share = 1.75\n    necessary_annual_return_rate = 0.123\n    dividend_growth_rate = 0.092\n\n    # Do math calculation to get the answer\n    # Calculating the intrinsic value of the stock using the Gordon Growth Model formula\n    intrinsic_value = dividend_per_share / (necessary_annual_return_rate - dividend_growth_rate)\n\n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [
            "|        | Spot Rate | Expected Spot Rate in One Year |\n|--------|-----------|------------------------|\n| USD/EUR| 1.3960    | 1.3860                 |\n| USD/CAD| 1.0110    | 1.0300                 |\n| EUR/GBP| 1.2850    | 1.2790                 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-176",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to a study carried out by a broker, what is the predicted increase (%) in value of the Canadian dollar (CAD) compared to the British pound (GBP)?",
        "output": [
            "To calculate the predicted increase in value of the Canadian dollar (CAD) compared to the British pound (GBP), we need to first find the current and future spot rates of CAD/GBP. \n\nWe can do this by using the given spot rates for USD/EUR, USD/CAD, and EUR/GBP. Since the rates are given in different base currencies, we'll need to convert them into CAD/GBP rates. \n\nHere is the Python program to calculate the predicted increase:\n\n```python\ndef solution():\n    # Define variables name and value\n    usd_eur_spot = 1.3960\n    usd_eur_future = 1.3860\n    usd_cad_spot = 1.0110\n    usd_cad_future = 1.0300\n    eur_gbp_spot = 1.2850\n    eur_gbp_future = 1.2790\n\n    # Calculate current and future CAD/GBP spot rates\n    cad_gbp_spot = (usd_cad_spot / usd_eur_spot) * eur_gbp_spot\n    cad_gbp_future = (usd_cad_future / usd_eur_future) * eur_gbp_future\n\n    # Calculate the predicted increase (%) in value of CAD compared to GBP\n    predicted_increase = ((cad_gbp_future - cad_gbp_spot) / cad_gbp_spot) * 100\n\n    # return answer\n    return predicted_increase\n```\nThis program calculates the predicted increase (%) in value of the Canadian dollar (CAD) compared to the British pound (GBP) based on the given spot rates and expected spot rates in one year."
        ]
    },
    {
        "tables": [
            "| Bond | Coupon Rate | Time-to-Maturity |\n|------|-------------|------------------|\n| A    | 5%          | 2 years          |\n| B    | 3%          | 2 years          |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-177",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering two bonds that pay interest annually, what is the price difference between Bond 1 and Bond 2 per 100 of par value at a market discount rate of 4%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate_A = 0.05  # 5%\n    coupon_rate_B = 0.03  # 3%\n    time_to_maturity = 2  # years\n    market_discount_rate = 0.04  # 4%\n    par_value = 100\n\n    # Calculate present value of Bond A\n    present_value_A = 0\n    for t in range(1, time_to_maturity + 1):\n        present_value_A += coupon_rate_A * par_value / (1 + market_discount_rate) ** t\n    present_value_A += par_value / (1 + market_discount_rate) ** time_to_maturity\n\n    # Calculate present value of Bond B\n    present_value_B = 0\n    for t in range(1, time_to_maturity + 1):\n        present_value_B += coupon_rate_B * par_value / (1 + market_discount_rate) ** t\n    present_value_B += par_value / (1 + market_discount_rate) ** time_to_maturity\n\n    # Calculate price difference\n    price_difference = present_value_A - present_value_B\n\n    # return answer\n    return price_difference\n```"
        ]
    },
    {
        "tables": [
            "|                     | Bond A       | Bond B       | Bond C       |\n|---------------------|--------------|--------------|--------------|\n| Time to maturity (years) | 10     | 6     | 4     |\n| Par value         | $10,000,000  | $10,000,000  | $10,000,000  |\n| Market value      | $9,323,381   | $11,189,092  | $10,000,000  |\n| Annualized modified duration  | 7.3105  | 4.6880  | 3.4370  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-178",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the data on three securities: Security X, Security Y, and Security Z. A dividend income portfolio includes Security X and Security Y. If an additional $10 million is invested into the portfolio to acquire Security Z, what will be the yearly modified duration of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_value_x = 9323381\n    market_value_y = 11189092\n    market_value_z = 10000000\n    modified_duration_x = 7.3105\n    modified_duration_y = 4.6880\n    modified_duration_z = 3.4370\n\n    # Calculate the weighted modified duration for Security X and Security Y\n    weighted_duration_xy = (market_value_x * modified_duration_x + market_value_y * modified_duration_y) / (market_value_x + market_value_y)\n\n    # Calculate the new portfolio value after adding Security Z\n    new_portfolio_value = market_value_x + market_value_y + market_value_z\n\n    # Calculate the new weighted modified duration for the entire portfolio\n    new_weighted_duration = (market_value_x * modified_duration_x + market_value_y * modified_duration_y + market_value_z * modified_duration_z) / new_portfolio_value\n\n    # return the yearly modified duration of the portfolio\n    return new_weighted_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-179",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the base value is $20 at expiration, the strike price is $18, what is the worth of the European put?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    base_value = 20  # Base value at expiration\n    strike_price = 18  # Strike price of the European put\n\n    # Do math calculation to get the answer\n    # The worth of the European put is max(0, Strike Price - Base Value)\n    european_put_worth = max(0, strike_price - base_value)\n\n    # return answer\n    return european_put_worth\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| Net income  | \\$1,000,000.00  |\n| Debt outstanding with a coupon rate of 4%  | \\$5,000,000.00  |\n| Preferred stocks with dividend rate of 4%  | \\$1,000,000.00  |\n| Tax rate  | 35%  |\n| Average weighted number of shares issued  | 500,000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-180",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher gathered information about a corporation wherein the preferred shares can be transformed into 10,000 ordinary shares and the debt cannot be converted. What is the diluted earnings per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 1000000  # Net income\n    debt_outstanding = 5000000  # Debt outstanding with a coupon rate of 4%\n    coupon_rate = 0.04  # Coupon rate of the debt\n    preferred_stocks = 1000000  # Preferred stocks with dividend rate of 4%\n    dividend_rate = 0.04  # Dividend rate of the preferred stocks\n    tax_rate = 0.35  # Tax rate\n    avg_weighted_shares = 500000  # Average weighted number of shares issued\n    convertible_shares = 10000  # Number of ordinary shares that preferred shares can be transformed into\n\n    # Calculate interest on debt\n    interest_on_debt = debt_outstanding * coupon_rate\n    \n    # Calculate preferred dividend\n    preferred_dividend = preferred_stocks * dividend_rate\n    \n    # Calculate net income available to common shareholders\n    net_income_available = net_income - interest_on_debt * (1 - tax_rate) - preferred_dividend\n    \n    # Calculate diluted earnings per share\n    diluted_eps = net_income_available / (avg_weighted_shares + convertible_shares)\n    \n    # return answer\n    return diluted_eps\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-181",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there are 225 days in a year, what is the highest number of daily losses that can go beyond the 1-day 99% VaR acceptable in a 1-year backtest for a financial risk analyst to determine, with 95% certainty, that the model is properly calibrated?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    confidence_level = 0.95\n    VaR_confidence = 0.99\n    days_in_year = 225\n    \n    # Calculate the maximum expected number of daily losses exceeding VaR\n    max_losses = (1 - VaR_confidence) * days_in_year\n    \n    # Calculate the standard deviation of the number of losses (binomial distribution)\n    std_dev_losses = (days_in_year * VaR_confidence * (1 - VaR_confidence)) ** 0.5\n    \n    # For a one-sided test at 95% confidence, we use the 95th percentile of the normal distribution (~1.645)\n    z_score = 1.645\n    \n    # Calculate the upper bound for the worst number of losses to still consider the model calibrated\n    max_acceptable_losses = max_losses + z_score * std_dev_losses\n    \n    # Since the number of losses is discrete, we take the floor to obtain the highest integer less than or equal to max_acceptable_losses\n    import math\n    answer = math.floor(max_acceptable_losses)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| estimated beta of TMT Inc. against the S&P 500 Index | 1.4   |\n|------------------------------------------------|-------|\n| 10-year Treasury bond yield                             | 3.5% |\n| Return on S&P 500 Index used as a proxy for the market | 8%   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-182",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is contemplating incorporating ABC Corp. into his portfolio. The last dividend payment of the company was 1.45 per share. He observes that the company's dividends have experienced an average growth rate of 6 percent. Using the data provided below, could you calculate the stock\u2019s value of ABC Corp.?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_per_share = 1.45  # Last dividend payment of the company per share\n    dividend_growth_rate = 0.06  # Average growth rate of the company's dividends\n    risk_free_rate = 0.035  # 10-year Treasury bond yield\n    market_return = 0.08  # Return on S&P 500 Index used as a proxy for the market\n    beta = 1.4  # Estimated beta of TMT Inc. against the S&P 500 Index\n\n    # Calculate the required rate of return using the CAPM\n    required_rate_of_return = risk_free_rate + beta * (market_return - risk_free_rate)\n\n    # Calculate the stock's value using the Gordon Growth Model\n    stock_value = dividend_per_share / (required_rate_of_return - dividend_growth_rate)\n\n    # return answer\n    return stock_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-183",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, the quarterly returns for the S&P 500 were 8%, -5%, 3% and 1%. What is the S&P 500's quarterly geometric mean return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    quarterly_returns = [0.08, -0.05, 0.03, 0.01]\n    \n    # Do math calculation to get the answer\n    import math\n    import functools\n    import operator\n    \n    product = functools.reduce(operator.mul, [1 + ret for ret in quarterly_returns], 1)\n    geometric_mean = (product ** (1/len(quarterly_returns))) - 1\n    \n    # return answer\n    return geometric_mean\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-184",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher establishes that 60% of all US retirement funds possess hedge funds. In assessing this probability, a random array of 10 US retirement funds is selected. Utilizing the binomial probability function, what is the likelihood that precisely 6 of the 10 organizations in the group possess hedge funds?",
        "output": [
            "```python\nimport math\n\ndef solution():\n    # Define variables name and value\n    n = 10  # number of trials (US retirement funds)\n    k = 6   # number of successes (funds with hedge funds)\n    p = 0.6  # probability of success (having hedge funds)\n    q = 1 - p  # probability of failure (not having hedge funds)\n    \n    # Do math calculation to get the answer\n    # Using the binomial probability mass function formula\n    binomial_probability = math.comb(n, k) * (p ** k) * (q ** (n - k))\n    answer = binomial_probability\n    \n    # return answer\n    return answer\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-185",
        "python_solution": "",
        "ground_truth": null,
        "question": "A finance expert is working out the beta for a collection of large-cap utility firm shares. They establish that the correlation between the portfolio's return and the benchmark's return stands at 0.7, the portfolio return's volatility is 6.5%, and the benchmark return's volatility is 5.0%. What is the portfolio's beta in relation to its benchmark?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.7  # correlation between portfolio return and benchmark return\n    portfolio_volatility = 0.065  # portfolio return's volatility\n    benchmark_volatility = 0.05   # benchmark return's volatility\n    \n    # Do math calculation to get the answer\n    beta = (correlation * portfolio_volatility) / benchmark_volatility\n    \n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-186",
        "python_solution": "",
        "ground_truth": null,
        "question": "What are the odds of Jack Frost correctly answering more than 3 questions on a challenging multiple choice test that contains 5 questions, each with four nearly identical options, if he's answering randomly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    n = 5  # number of questions\n    k = 4  # number of options per question\n    threshold = 3  # minimum number of correct answers\n\n    # Do math calculation to get the answer\n    import math\n\n    # Calculate probability of exactly i correct answers\n    def binomial_probability(i):\n        return math.comb(n, i) * (1 / k) ** i * ((k - 1) / k) ** (n - i)\n\n    # Calculate probability of more than threshold correct answers\n    probability = sum(binomial_probability(i) for i in range(threshold + 1, n + 1))\n\n    # Return answer as odds\n    answer = probability / (1 - probability)\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-187",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial consultant is studying the potential anticipated returns of a novel fund created to imitate the directional shifts of the China Shanghai Composite Stock Market Index (SHANGHAI), but with double the volatility of the index. SHANGHAI has an anticipated yearly return of 7.6% and a volatility of 14.0%, and the risk-free rate is 3.0% annually. If the correlation between the fund\u2019s returns and the index's returns is 1.0, what would be the projected return of the fund according to the CAPM?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    anticipated_yearly_return_SHANGHAI = 0.076  # 7.6%\n    volatility_SHANGHAI = 0.14  # 14.0%\n    risk_free_rate = 0.03  # 3.0%\n    correlation = 1.0  # 1.0\n    beta = 2  # double the volatility\n\n    # Do math calculation to get the answer\n    anticipated_yearly_return_fund = risk_free_rate + beta * correlation * (anticipated_yearly_return_SHANGHAI - risk_free_rate)\n    answer = anticipated_yearly_return_fund * 100  # convert to percentage\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-188",
        "python_solution": "",
        "ground_truth": null,
        "question": "The bond's clean price was set at $1,000. The transaction occurred between coupon dates, with accrued interest equating to $35.50 per bond. What is the bond's dirty price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    clean_price = 1000\n    accrued_interest = 35.50\n    \n    # Do math calculation to get the answer\n    dirty_price = clean_price + accrued_interest\n    \n    # return answer\n    return dirty_price\n```"
        ]
    },
    {
        "tables": [
            "| | Cdn $ millions |\n| --- | --- |\n| Cash flow from operating activities | 105.9 |\n| Cash flow from investing activities | (11.8) |\n| Cash flow from financing activities | 46.5 |\n| Net change in cash for the year | 140.6 |\n| Interest paid (included in CFO) | 22.4 |\n| Taxes paid (tax rate of 30%) | 18.0 |\n| Total debt, end of year | 512.8 |"
        ],
        "topic": "Accounting",
        "question_id": "test-189",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the data collected by a researcher, what is the company's cash flow debt coverage ratio for this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_flow_from_operating_activities = 105.9  # in Cdn $ millions\n    interest_paid = 22.4  # in Cdn $ millions\n    taxes_paid = 18.0  # in Cdn $ millions\n    total_debt_end_of_year = 512.8  # in Cdn $ millions\n\n    # Do math calculation to get the answer\n    cash_flow_debt_coverage_ratio = (cash_flow_from_operating_activities + interest_paid + taxes_paid) / total_debt_end_of_year\n    answer = round(cash_flow_debt_coverage_ratio, 4)  # round to 4 decimal places\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-190",
        "python_solution": "",
        "ground_truth": null,
        "question": "On 1 January 2015, a corporation releases $1,000,000 nominal value of 10-year bonds, when the market interest rate for bonds with similar risk and terms is 5%. These bonds yield 6% interest yearly on 31 December. What is the recorded value of these outstanding bonds on the balance sheet at the time they were issued?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000000  # Nominal value of the bonds\n    market_interest_rate = 0.05  # Market interest rate\n    bond_interest_rate = 0.06  # Bond interest rate\n    years_to_maturity = 10  # Years to maturity\n\n    # Calculate the present value of the bond\n    present_value = 0\n    for i in range(1, years_to_maturity + 1):\n        present_value += face_value * bond_interest_rate / (1 + market_interest_rate) ** i\n\n    # Add the present value of the face value\n    present_value += face_value / (1 + market_interest_rate) ** years_to_maturity\n\n    # return answer\n    return present_value\n```\n\nNote: The answer calculated is based on the formula for calculating the present value of a bond, assuming that the interest payments are made at the end of each year. In this case, since the market interest rate (5%) is lower than the bond interest rate (6%), the bond will be issued at a premium. However, if the question is asking for the \"recorded value\" on the balance sheet, it's likely asking for the face value (nominal value), which is $1,000,000, as this is the amount that will be recorded as a liability on the balance sheet when the bond is issued.\n\nIf this is the case, the correct Python program would be:\n\n```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000000  # Nominal value of the bonds\n\n    # return answer\n    return face_value\n```"
        ]
    },
    {
        "tables": [
            "| Year | End_of-Year Payment |\n|------|---------------------|\n| 1    | $ 100,000           |\n| 2    | $ 150,000           |\n| 3    | $ 200,000           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-191",
        "python_solution": "",
        "ground_truth": null,
        "question": "A freelancer commences a job today which is projected to go on for three years. If he anticipates investing these sums at an annual interest rate of 3%, compounded annually until his retirement a decade from now, what is the worth after 10 years, keeping in mind his payment plan encompasses the following?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    payments = [100000, 150000, 200000]  # End-of-year payments for the first 3 years\n    interest_rate = 0.03  # Annual interest rate\n    years = 10  # Total years until retirement\n    \n    # Initialize the total amount\n    total_amount = 0\n    \n    # Calculate the future value of each payment\n    for i, payment in enumerate(payments):\n        # Calculate the number of years the payment will be invested\n        years_invested = years - i - 1\n        \n        # Calculate the future value of the payment using compound interest formula\n        future_value = payment * (1 + interest_rate) ** years_invested\n        \n        # Add the future value to the total amount\n        total_amount += future_value\n    \n    # return answer\n    return total_amount\n```"
        ]
    },
    {
        "tables": [
            "| Position (par value) | $100,000,000 |\n|---|---|\n| Flat price | 97.1251 |\n| Accrued interest | 0.4392 |\n| Macaulay duration | 8.586 |\n| Annual modified duration | 8.450 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-192",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data collected by a researcher, what is the monetary duration of the bond position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    position_par_value = 100000000  # Position (par value)\n    flat_price = 97.1251  # Flat price\n    accrued_interest = 0.4392  # Accrued interest\n    annual_modified_duration = 8.450  # Annual modified duration\n    \n    # Calculate full price\n    full_price = flat_price + accrued_interest\n    \n    # Calculate the monetary duration\n    monetary_duration = (position_par_value / 100) * full_price * (annual_modified_duration / 100)\n    \n    # return answer\n    return monetary_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-193",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Second-Hand Bookshop run by Susan generates its financial statements in line with IFRS. Inventory was obtained for \u00a31 million and afterwards reduced to \u00a3550,000. However, it was later found out that one of the books is a rare collector's piece, and the inventory is now approximated to be worth \u00a33 million. The inventory is probably listed on the balance sheet at:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_inventory_value = 1000000  # \u00a31 million\n    reduced_inventory_value = 550000   # \u00a3550,000\n    rare_book_value = 3000000         # \u00a33 million\n    \n    # According to IFRS, inventory should be recorded at the lower of cost or net realizable value.\n    # Since the value of the inventory increased due to the rare book, the net realizable value is higher.\n    # However, the initial reduction to \u00a3550,000 should still be accounted for as a loss.\n    # Therefore, the inventory should be listed at the lower of the cost (\u00a31 million) or the new net realizable value (\u00a33 million),\n    # which is the initial inventory value minus the loss (\u00a3550,000) plus the gain (\u00a32,450,000).\n    \n    # Do math calculation to get the answer\n    answer = reduced_inventory_value  # As the inventory was reduced to \u00a3550,000 initially\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-194",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that there is no need for an industry risk adjustment, use the build-up method to determine the equity discount rate for a small business. Here's the information you need:\u2022 5.0 percent is the equity risk premium\u2022 The mid-cap equity risk premium is 3.5 percent\u2022 A small stock risk premium is 4.2 percent\u2022 The income return on long-term bonds is 5.1 percent\u2022 The total return on intermediate-term bonds stands at 5.3 percent\u2022 3.0 percent is the company-specific risk premium\u2022 As of the valuation date, the 20-year Treasury bond yield is 4.5 percent.",
        "output": [
            "Here is the Python program to calculate the equity discount rate using the build-up method:\n```python\ndef solution():\n    # Define variables name and value\n    equity_risk_premium = 0.05  # 5.0%\n    mid_cap_equity_risk_premium = 0.035  # 3.5%\n    small_stock_risk_premium = 0.042  # 4.2%\n    long_term_bond_income_return = 0.051  # 5.1%\n    intermediate_term_bond_total_return = 0.053  # 5.3%\n    company_specific_risk_premium = 0.03  # 3.0%\n    twenty_year_treasury_bond_yield = 0.045  # 4.5%\n\n    # Do math calculation to get the answer\n    base_rate = twenty_year_treasury_bond_yield\n    equity_market_risk_premium = equity_risk_premium - mid_cap_equity_risk_premium + small_stock_risk_premium\n    size_premium = small_stock_risk_premium - mid_cap_equity_risk_premium\n    company_specific\u0440\u0438\u043c\u0456\u043dEmotional\u03c1\u03bf\u03cdformDatacisionPremium = company_specific_risk_premium\n    equity_discount_rate = base_rate + equity_market_risk_premium + size_premium + company_specific_risk_premium\n\n    # return answer\n    return equity_discount_rate\n```\nThis program defines all the variables needed to calculate the equity discount rate using the build-up method and then performs the necessary calculations to arrive at the answer."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-195",
        "python_solution": "",
        "ground_truth": null,
        "question": "In an average year, 5% of all enterprise leaders are dismissed due to \"performance\" issues. Presume that the leader's performance is evaluated on the basis of share performance and that 50% of shares earn above-average returns or showcase \"good\" performance. From observed data, 30% of all enterprise leaders who were dismissed demonstrated \"good\" performance. Applying Bayes' theorem, what is the likelihood that an enterprise leader will be dismissed given \"good\" performance? (Hint, let P(A) be the likelihood of an enterprise leader being dismissed, P(B) be the probability of a \"good\" performance rating, P(B I A) represent the possibility of a \"good\" performance rating given that the enterprise leader was dismissed, and P(A I B) signify the probability of the enterprise leader being dismissed given a \"good\" performance rating.)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_A = 0.05  # Probability of an enterprise leader being dismissed\n    P_B = 0.5  # Probability of a \"good\" performance rating\n    P_B_given_A = 0.3  # Probability of a \"good\" performance rating given that the enterprise leader was dismissed\n    \n    # Do math calculation to get the answer using Bayes' theorem\n    P_A_given_B = (P_B_given_A * P_A) / P_B\n    \n    # return answer\n    return P_A_given_B\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Time-to-Maturity | Spot Rate |\n| --- | --- |\n| 1-year | 5% |\n| 2-year | 6% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-196",
        "python_solution": "",
        "ground_truth": null,
        "question": "The maturity time for Bond B is 2 years with annual interest payments and an 8% coupon rate. The spot rates are given as follows: Compute the cost of Bond B using these spot rates.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    time_to_maturity = 2  # years\n    coupon_rate = 0.08  # 8%\n    spot_rate_1_year = 0.05  # 5%\n    spot_rate_2_year = 0.06  # 6%\n    face_value = 100  # assuming face value is $100\n    \n    # Calculate annual coupon payment\n    annual_coupon_payment = coupon_rate * face_value\n    \n    # Calculate present value of first coupon payment\n    present_value_coupon_1 = annual_coupon_payment / (1 + spot_rate_1_year)\n    \n    # Calculate present value of second coupon payment and face value\n    present_value_coupon_2_and_face = (annual_coupon_payment + face_value) / (1 + spot_rate_2_year)**2\n    \n    # Calculate cost of Bond B\n    cost_of_bond_b = present_value_coupon_1 + present_value_coupon_2_and_face\n    \n    # return answer\n    return cost_of_bond_b\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-197",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's say a random variable follows a standard distribution with a mean value of 80 and a deviation standard of 24. What is the percentage of this distribution that does not lie between 32 and 116?",
        "output": [
            "Here is the Python program that answers the question:\n```python\nfrom scipy.stats import norm\n\ndef solution():\n    # Define variables name and value\n    mean = 80\n    std_dev = 24\n    lower_bound = 32\n    upper_bound = 116\n    \n    # Do math calculation to get the answer\n    # Standardize the bounds\n    standardized_lower_bound = (lower_bound - mean) / std_dev\n    standardized_upper_bound = (upper_bound - mean) / std_dev\n    \n    # Calculate the probability between the bounds\n    probability_between_bounds = norm.cdf(standardized_upper_bound) - norm.cdf(standardized_lower_bound)\n    \n    # Calculate the percentage that does not lie between the bounds\n    percentage_outside_bounds = (1 - probability_between_bounds) * 100\n    \n    # return answer\n    return percentage_outside_bounds\n```\n\nThis program uses the `norm` function from the `scipy.stats` module to calculate the cumulative distribution function (CDF) of the standard normal distribution. It then uses this function to calculate the probability between the standardized bounds, and finally calculates the percentage that does not lie between the bounds."
        ]
    },
    {
        "tables": [
            "| Items | price$ |\n| --- | --- |\n| replacement cost | 50 |\n| original costs | 41 |\n| selling price | 45 |\n| normal profit margin | 10% |\n| selling costs | 5 |"
        ],
        "topic": "Accounting",
        "question_id": "test-198",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under US GAAP, how should the cost of running shoes be recorded by the Goodluck Company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    replacement_cost = 50\n    original_cost = 41\n    selling_price = 45\n    normal_profit_margin = 0.10\n    selling_cost = 5\n    \n    # Calculate the net realizable value (NRV)\n    nrv = selling_price - selling_cost\n    \n    # Calculate the cost under US GAAP, which is the lower of the cost or the NRV minus a normal profit margin\n    us_gaap_cost = min(original_cost, nrv - (nrv * normal_profit_margin))\n    \n    # return answer\n    return us_gaap_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-199",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio manager is looking to hedge the interest risk of a bond position with a 5-year key rate exposure of $9.84. What would be the amount of face value employed to hedge if a hedge instrument with a similar 5-year key rate exposure of 4.12 per $100 of face value can be utilized?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    key_rate_exposure = 9.84  # 5-year key rate exposure of the bond position\n    hedge_instrument_exposure = 4.12  # 5-year key rate exposure per $100 of face value of the hedge instrument\n    \n    # Do math calculation to get the answer\n    # Calculate the amount of face value needed to hedge\n    face_value_needed = (key_rate_exposure / hedge_instrument_exposure) * 100\n    \n    # return answer\n    return face_value_needed\n\n# Print the answer\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-200",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the bond-equivalent yield if the yield to maturity on a yearly-payment bond is 7.75%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_to_maturity = 0.0775  # 7.75%\n    \n    # Do math calculation to get the answer\n    bond_equivalent_yield = (1 + yield_to_maturity)**(1/2) - 1\n    \n    # Convert the result to percentage\n    bond_equivalent_yield_percentage = bond_equivalent_yield * 100\n    \n    # return answer\n    return bond_equivalent_yield_percentage\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Trade # | Time     | Trade Price | Trade Size | Bid Price | Ask Price |\n|---------|----------|-------------|------------|-----------|-----------|\n| 1       | 9.45 a.m.| $25.20      | 1,200      | $25.17    | $25.20    |\n| 2       | 9.55 a.m.| $25.22      | 1,300      | $25.19    | $25.22    |\n| 3       | 11.30 a.m| $25.27      | 2,500      | $25.22    | $25.26    |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-201",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on Exhibit 1, what is the market impact per share relating to Trade 2 if Smith talks about a market buy order for 5,000 shares of an illiquid stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    trade_price_2 = 25.22\n    bid_price_2 = 25.19\n    \n    # Do math calculation to get the answer\n    market_impact = trade_price_2 - bid_price_2\n    \n    # return answer\n    return market_impact\n```"
        ]
    },
    {
        "tables": [
            "| Revenue              | $1,000,000 |\n|----------------------|------------|\n| Returns of goods sold| $100,000   |\n| Cash collected       | $800,000   |\n| Cost of goods sold   | $700,000   |"
        ],
        "topic": "Accounting",
        "question_id": "test-202",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under the accrual basis of accounting, how much net revenue would be reported on the 2009 income statement of a company called Fairplay, considering that it was their initial business year and this is the information they have about the sale of their products?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 1000000\n    returns_of_goods_sold = 100000\n    \n    # Do math calculation to get the answer\n    net_revenue = revenue - returns_of_goods_sold\n    \n    # return answer\n    return net_revenue\n```"
        ]
    },
    {
        "tables": [
            "|                  | 2015  | 2014  |\n|------------------|-------|-------|\n| COGS             |50,800 |48,500 |\n| Ending inventories|10,550|10,000 |\n| LIFO reserve     |4,320  |2,600  |"
        ],
        "topic": "Accounting",
        "question_id": "test-203",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the price of goods sold in 2015 employing the FIFO technique for a business that usually uses the LIFO strategy, as stated in pounds sterling?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cogs_2015 = 50800  # COGS in 2015\n    ending_inventories_2015 = 10550  # Ending inventories in 2015\n    ending_inventories_2014 = 10000  # Ending inventories in 2014\n    lifo_reserve_2015 = 4320  # LIFO reserve in 2015\n    lifo_reserve_2014 = 2600  # LIFO reserve in 2014\n\n    # Do math calculation to get the answer\n    fifo_cogs_2015 = cogs_2015 + (lifo_reserve_2015 - lifo_reserve_2014)\n    \n    # return answer\n    return fifo_cogs_2015\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-204",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's say :P(occasion X happens)=15%, P(occasion Y happens)=35%, and P(occasion Z happens)=20%. If the occasions X, Y and Z are all not dependent on each other, what is the P(occasion X or occasion Z happens)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_X = 0.15  # Probability of occasion X happening\n    prob_Y = 0.35  # Probability of occasion Y happening\n    prob_Z = 0.20  # Probability of occasion Z happening\n\n    # Do math calculation to get the answer\n    # Since X and Z are independent, P(X or Z) = P(X) + P(Z)\n    prob_X_or_Z = prob_X + prob_Z\n\n    # return answer\n    return prob_X_or_Z\n```"
        ]
    },
    {
        "tables": [
            "|                         |                      |\n|-------------------------|----------------------|\n| Seagraves Supply Company Operating Cash Flow - Direct Method For the year ended December 31, 20X7 |                      |\n| Cash paid to suppliers  | 265,866              |\n| Cash paid for operating expenses | 124,784             |\n| Cash paid for interest  | 4,326                |\n| Cash paid for taxes     | 14,956               |\n| Operating cash flow     | $ 20,048             |"
        ],
        "topic": "Accounting",
        "question_id": "test-205",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the direct method, determine the cash received from the client:",
        "output": [
            "Here is a Python program to calculate the cash received from clients using the direct method:\n\n```python\ndef solution():\n    # Define variables name and value\n    operating_cash_flow = 20048\n    cash_paid_to_suppliers = 265866\n    cash_paid_for_operating_expenses = 124784\n    cash_paid_for_interest = 4326\n    cash_paid_for_taxes = 14956\n    \n    # Do math calculation to get the answer\n    cash_received_from_clients = operating_cash_flow + cash_paid_to_suppliers + cash_paid_for_operating_expenses + cash_paid_for_interest + cash_paid_for_taxes\n    \n    # return answer\n    return cash_received_from_clients\n```\n\nYou can run this program to get the cash received from clients. \n\nNote: In the direct method, the cash received from clients is calculated by adding all the cash outflows (i.e., the cash paid to suppliers, for operating expenses, for interest, and for taxes) to the operating cash flow."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-206",
        "python_solution": "",
        "ground_truth": null,
        "question": "When we apply vertical common-size analysis to the following financial data from a different business entity: Total liabilities $19 million, Total stockholders\u2019 equity $25 million, what is the percentage of total liabilities represented on the balance sheet?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_liabilities = 19000000\n    total_stockholders_equity = 25000000\n    \n    # Do math calculation to get the answer\n    total_balance_sheet = total_liabilities + total_stockholders_equity\n    percentage_of_total_liabilities = (total_liabilities / total_balance_sheet) * 100\n    \n    # return answer\n    return percentage_of_total_liabilities\n```"
        ]
    },
    {
        "tables": [
            "| Date     | Closing Price |\n|----------|---------------|\n| 1 August | 112           |\n| 8 August | 160           |\n| 15 August| 120           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-207",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the continuously compounded return of shares for Riddle Inc between August 1 and August 15, taking into account the weekly closing prices of Riddle Inc's shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    closing_price_aug1 = 112\n    closing_price_aug8 = 160\n    closing_price_aug15 = 120\n    \n    # Do math calculation to get the answer\n    # Calculate the continuously compounded return for the first week\n    weekly_return1 = np.log(closing_price_aug8 / closing_price_aug1)\n    \n    # Calculate the continuously compounded return for the second week\n    weekly_return2 = np.log(closing_price_aug15 / closing_price_aug8)\n    \n    # Calculate the total continuously compounded return for the two weeks\n    total_return = weekly_return1 + weekly_return2\n    \n    # return answer\n    return total_return\n\nimport numpy as np\n\nans = solution()\nprint(round(ans, 4))\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-208",
        "python_solution": "",
        "ground_truth": null,
        "question": "What's the value of Corporation Z, which is currently being appraised by John using the dividend discount model? The latest dividend is $1.0 per share with a required return rate of 7.5%. It is anticipated to have a high growth rate of 5% for the initial three years, and thereafter, the dividend growth rate will be 3% annually indefinitely.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    latest_dividend = 1.0  # Latest dividend per share\n    required_return_rate = 0.075  # Required return rate (7.5%)\n    high_growth_rate = 0.05  # High growth rate for the initial three years (5%)\n    normal_growth_rate = 0.03  # Dividend growth rate after three years (3%)\n    years_of_high_growth = 3  # Number of years with high growth rate\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the dividends during the high growth period\n    present_value_high_growth = 0\n    for year in range(1, years_of_high_growth + 1):\n        dividend = latest_dividend * (1 + high_growth_rate) ** year\n        present_value = dividend / (1 + required_return_rate) ** year\n        present_value_high_growth += present_value\n    \n    # Calculate the present value of the dividends after the high growth period\n    # (perpetuity with growth)\n    dividend_after_high_growth = latest_dividend * (1 + high_growth_rate) ** years_of_high_growth\n    present_value_after_high_growth = (dividend_after_high_growth * (1 + normal_growth_rate)) / (required_return_rate - normal_growth_rate) / (1 + required_return_rate) ** years_of_high_growth\n    \n    # Calculate the total present value which is the value of Corporation Z\n    total_present_value = present_value_high_growth + present_value_after_high_growth\n    \n    # return answer\n    return total_present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-209",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume a share that has daily returns following a random walk, with an annualized volatility of 34%. Can you calculate the weekly volatility of this share assuming there are 52 weeks in a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annualized_volatility = 0.34  # 34%\n    weeks_in_year = 52\n\n    # Do math calculation to get the answer\n    # Convert annualized volatility to weekly volatility\n    weekly_volatility = annualized_volatility / (weeks_in_year ** 0.5)\n\n    # return answer\n    return weekly_volatility\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-210",
        "python_solution": "",
        "ground_truth": null,
        "question": "What are the odds for an event X if the probability for X is 14% (i.e., P(X) = 14%)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability = 0.14  # 14% as a decimal\n    \n    # Do math calculation to get the answer\n    # Odds in favor of an event X are calculated as (probability of X) / (1 - probability of X)\n    odds = probability / (1 - probability)\n    \n    # return answer\n    return odds\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-211",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that S0=400 and the risk-free rate stands at 5%. Figure out the forward price of a 6-month forward contract with continuous compounding.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 400  # initial stock price\n    r = 0.05  # risk-free rate\n    T = 0.5   # time to maturity in years (6 months = 0.5 years)\n\n    # Do math calculation to get the answer\n    F = S0 * (math.exp(r * T))\n\n    # return answer\n    return F\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning($) | End($) | Shares |\n|----------|--------------|--------|--------|\n| G        | 15.00        | 17.00  | 500    |\n| H        | 35.00        | 33.00  | 300    |\n| 1        | 37.00        | 40.00  | 200    |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-212",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, an analyst named Benedict from a investment firm collected data for a value-weighted index consisting of securities G,H,I. What was the return of the value-weighted index during this period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_price_g = 15.00\n    beginning_price_h = 35.00\n    beginning_price_i = 37.00\n    end_price_g = 17.00\n    end_price_h = 33.00\n    end_price_i = 40.00\n    shares_g = 500\n    shares_h = 300\n    shares_i = 200\n    \n    # Calculate the market value of each security at the beginning and end\n    beginning_value_g = beginning_price_g * shares_g\n    beginning_value_h = beginning_price_h * shares_h\n    beginning_value_i = beginning_price_i * shares_i\n    end_value_g = end_price_g * shares_g\n    end_value_h = end_price_h * shares_h\n    end_value_i = end_price_i * shares_i\n    \n    # Calculate the total market value at the beginning and end\n    total_beginning_value = beginning_value_g + beginning_value_h + beginning_value_i\n    total_end_value = end_value_g + end_value_h + end_value_i\n    \n    # Calculate the return of the value-weighted index\n    index_return = ((total_end_value - total_beginning_value) / total_beginning_value) * 100\n    \n    # Return the answer\n    return index_return\n\n# Print the result\nprint(solution())\n```\n\nThe code calculates the market value of each security at the beginning and end of the period using the given prices and shares. Then, it calculates the total market value at the beginning and end by summing the market values of each security. Finally, it calculates the return of the value-weighted index using the formula: (total_end_value - total_beginning_value) / total_beginning_value) * 100."
        ]
    },
    {
        "tables": [
            "|     | $ Millions |\n| --- | --- |\n| Short-term interest-bearing debt | 1,258 |\n| Long-term interest-bearing debt | 321 |\n| Total shareholder's equity | 4,285 |\n| Total assets | 8,750 |\n| EBIT | 2,504 |\n| Interest payments | 52 |"
        ],
        "topic": "Accounting",
        "question_id": "test-213",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the corporation's debt-to-assets ratio based on the data compiled by an analyst reviewing the corporation's solvency?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    short_term_debt = 1258\n    long_term_debt = 321\n    total_assets = 8750\n\n    # Do math calculation to get the answer\n    total_debt = short_term_debt + long_term_debt\n    debt_to_assets_ratio = total_debt / total_assets\n\n    # return answer\n    return debt_to_assets_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Next year's earnings per share | $3.00 |\n|---------------------------|-------|\n| Return on equity         | 12.5% |\n| Dividend payout ratio    | 60%   |\n| Required return on shares| 10%   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-214",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier collects the same information to calculate the intrinsic worth of a corporation\u2019s stock using the justified forward P/E method. What is the intrinsic value per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    next_year_earnings_per_share = 3.00\n    return_on_equity = 0.125\n    dividend_payout_ratio = 0.6\n    required_return_on_shares = 0.1\n\n    # Calculate the growth rate\n    retention_rate = 1 - dividend_payout_ratio\n    growth_rate = retention_rate * return_on_equity\n\n    # Calculate the justified forward P/E ratio\n    justified_forward_pe_ratio = required_return_on_shares / (required_return_on_shares - growth_rate)\n\n    # Calculate the intrinsic value per share\n    intrinsic_value_per_share = justified_forward_pe_ratio * next_year_earnings_per_share\n\n    # return answer\n    return intrinsic_value_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-215",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager wants to understand the systematic risk of a stock portfolio and thus estimates the following linear regression: RPt\u2212RF=\u03b1P+\u03b2P[RMt\u2212RF]+\u03b5PtRPt\u200b\u2212RF\u200b=\u03b1P\u200b+\u03b2P\u200b[RMt\u200b\u2212RF\u200b]+\u03b5Pt\u200b, where RPtRPt\u200b represents the return of the portfolio at time t, RMtRMt\u200b represents the return of the market portfolio at time t, and RFRFRF\u200b is the risk-free rate, remaining constant throughout. Consider that \u03b1 is 0.008, \u03b2 is 0.977, \u03c3(RP)\\sigma{(R_P)}\u03c3(RP\u200b) is 0.167, and \u03c3(RM)\\sigma{(R_M)}\u03c3(RM\u200b) is 0.156. What is the likely coefficient of determination in this regression?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    alpha = 0.008\n    beta = 0.977\n    sigma_RP = 0.167\n    sigma_RM = 0.156\n    \n    # Do math calculation to get the answer\n    # R-squared (coefficient of determination) is calculated as beta^2 * (sigma_RM / sigma_RP)^2\n    r_squared = beta**2 * (sigma_RM / sigma_RP)**2\n    \n    # return answer\n    return r_squared\n```\n\nThis Python program calculates the coefficient of determination (R-squared) of the linear regression given the values of alpha, beta, standard deviation of the portfolio returns, and standard deviation of the market returns. The R-squared value represents the proportion of the variance in the dependent variable that is predictable from the independent variable(s). In this case, it provides a measure of the systematic risk of the stock portfolio that is explained by the market portfolio returns."
        ]
    },
    {
        "tables": [
            "| Item | Current Period |\n| --- | --- |\n| Total assets | 24,130 |\n| Total liabilities | 17,560 |\n| Total equity | 6,570 |\n| Total pension cost | 96 |\n| Pension contribution | 66 |\n| Financing cash flow | 2,323 |\n| Operating cash flow | -1,087 |\n| Effective tax rate | 30% |",
            "|   Item                    | 100-bp Increase | 100-bp Decrease |\n|---------------------------|-----------------|-----------------|\n| Benefit obligation change | $93             | -$76            |\n| Benefit expense change    | $12             | -$10            |"
        ],
        "topic": "Accounting",
        "question_id": "test-216",
        "python_solution": "",
        "ground_truth": null,
        "question": "Alexander Boone, a senior portfolio manager, collaborates with Rachel Stevens, a junior analyst. They are assessing the financial records of Corporation ABC (ABC), focusing on post-employment rewards. Stevens modifies the balance sheet and cash flow statement details presented in Exhibit 2 to more accurately represent the financial aspect of certain pension plan related items. Finally, Stevens scrutinizes the details present in Exhibit 3 and determines the effect of a 100-basis-point hike in health care inflation on ABC's debt-to-equity ratio. Considering Exhibits 2 and 3, alongside Boone's projection about future health care inflation, what should the debt-to-equity ratio computed by Stevens for ABC be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 24130\n    total_liabilities = 17560\n    total_equity = 6570\n    total_pension_cost = 96\n    pension_contribution = 66\n    financing_cash_flow = 2323\n    operating_cash_flow = -1087\n    effective_tax_rate = 0.3\n    benefit_obligation_change_increase = 93\n    benefit_expense_change_increase = 12\n    benefit_obligation_change_decrease = -76\n    benefit_expense_change_decrease = -10\n\n    # Calculate the actual pension expense and pension liability\n    actual_pension_expense = total_pension_cost - pension_contribution\n    pension_liability = total_liabilities - (total_assets - total_equity)\n\n    # Calculate the change in pension liability and expense due to 100-bp increase in health care inflation\n    change_in_pension_liability = benefit_obligation_change_increase\n    change_in_pension_expense = benefit_expense_change_increase\n\n    # Calculate the debt-to-equity ratio\n    debt = total_liabilities + change_in_pension_liability\n    equity = total_equity\n    debt_to_equity_ratio = debt / equity\n\n    # return answer\n    return debt_to_equity_ratio\n```"
        ]
    },
    {
        "tables": [
            "| For Year Ending 31 December | 2012         |\n|----------------------------|------------|\n| Revenues                   | $6,456     |\n| Earnings before interest, taxes, depreciation, and amortization (EBITDA)   | 1,349     |\n| Depreciation expense       | 243        |\n| Operating income           | 1,106      |\n| Interest expense           | 186        |\n| Pretax income              | 920        |\n| Income tax (32%)           | 294        |\n| Net income                 | $626       |\n|                            |            |\n| Number of outstanding shares (millions) | 411     |\n| 2012 earnings per share    | $1.52      |\n| 2012 dividends paid (millions) | 148     |\n| 2012 dividends per share   | 0.36       |\n| 2012 fixed capital investment (millions) | 535  |\n|                            |            |\n| Cost of equity             | 12.0%      |\n| Weighted average cost of capital (WACC) | 9.0%  |",
            "|                                             | 2012  |       | 2011  |\n|---------------------------------------------|-------|-------|-------|\n| **Assets**                                  |       |       |       |\n| Cash and cash equivalents                   | $32   |       | $21   |\n| Accounts receivable                         | 413   |       | 417   |\n| Inventories                                 | 709   |       | 638   |\n| Other current assets                        | 136   |       | 123   |\n| Total current assets                        | $1,290|       | $1,199|\n|                                             |       |       |       |\n| **Liabilities and Stockholders' Equity**   |       |       |       |\n| Current liabilities                         | $2,783|       | $2,678|\n| Long-term debt                              | 2,249 |       | 2,449 |\n| Common stockholders' equity                 | 1,072 |       | 594   |\n| Total liabilities and stockholders' equity  | $6,104|       | $5,721|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-217",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the financial documents in Exhibits 1 and 2, Barnes' fiscal year concludes on December 31st. If the 2012 FCFF is equal to $500 million, what would be Barnes' FCFE ($ millions) for 2012, based on the information found in Exhibits 1 and 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fcff = 500  # Free Cash Flow to Firm (FCFF) in millions\n    interest_expense = 186  # Interest expense in millions\n    tax_rate = 0.32  # Tax rate\n    net_borrowing = 200  # Net borrowing in millions, calculated as (long-term debt 2011 - long-term debt 2012)\n    \n    # Calculate the after-tax interest expense\n    after_tax_interest_expense = interest_expense * (1 - tax_rate)\n    \n    # Calculate Free Cash Flow to Equity (FCFE)\n    fcfe = fcff - net_borrowing + after_tax_interest_expense\n    \n    # return answer\n    return fcfe\n```"
        ]
    },
    {
        "tables": [
            "| | |\n| --- | --- |\n| Consumption function | C = 2,500+0.80*(Y-T) |\n| Investment function | l= 500+0.30*Y-25*r |\n| Government spending | G = 1,000 |\n| Tax function | T=-250+0.30*Y |\n| *Y* : Aggregate income *r*:Real interest rate | |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-218",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the real interest rate in a basic economy with no foreign trade stands at 3% and there's an upsurge in state expenditure to 2,000, what will be the surge in overall earnings?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r = 0.03  # Real interest rate\n    G = 2000  # Government spending\n    T_func = lambda Y: -250 + 0.30 * Y  # Tax function\n    C_func = lambda Y, T: 2500 + 0.80 * (Y - T)  # Consumption function\n    I_func = lambda Y, r: 500 + 0.30 * Y - 25 * r  # Investment function\n    \n    # Find equilibrium level of aggregate income using consumption, investment, government spending, and tax function\n    Y_func = lambda Y: C_func(Y, T_func(Y)) + I_func(Y, r) + G\n    \n    # Aggregate income before increase in government spending\n    G_before = 1000  # Old government spending before increase\n    def Y_func_before(Y):\n        return 2500 + 0.80 * (Y - (-250 + 0.30 * Y)) + 500 + 0.30 * Y - 25 * r + G_before - Y\n    \n    # Aggregate income after increase in government spending\n    def Y_func_after(Y):\n        return 2500 + 0.80 * (Y - (-250 + 0.30 * Y)) + 500 + 0.30 * Y - 25 * r + G - Y\n    \n    # Define new interval for binary search\n    a, b = 3000, 20000  # Assume that the interval [a, b] contains a root\n    \n    # Perform binary search to find the aggregate income before and after increase in government spending\n    def binary_search(Y_func, a, b):\n        for _ in range(200):  # Set the number of iterations high enough for the desired accuracy\n            c = (a + b) / 2\n            if Y_func(c) == 0:\n                return c\n            elif Y_func(a) * Y_func(c) < 0:\n                b = c\n            else:\n                a = c\n        return (a + b) / 2  # Return the approximate root\n    \n    # Find aggregate income before and after increase in government spending\n    Y_before = binary_search(Y_func_before, a, b)\n    Y_after = binary_search(Y_func_after, a, b)\n    \n    # Calculate the surge in overall earnings\n    surge = Y_after"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-219",
        "python_solution": "",
        "ground_truth": null,
        "question": "A customer buys a 6-year bond at face value with an 8% coupon rate, where the interest is disbursed once a year. If the customer decides to sell the bond at the close of the 5th year, and the prevailing market interest rate is 7% at that moment. Can you determine the capital gain or loss?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000  # assuming the face value is $1000\n    coupon_rate = 0.08\n    years = 6\n    market_interest_rate = 0.07\n    years_passed = 5\n\n    # Do math calculation to get the answer\n    # calculate the annual interest payment\n    annual_interest = face_value * coupon_rate\n\n    # calculate the present value of the remaining interest payments at the time of sale\n    remaining_interest_present_value = 0\n    for i in range(1, years - years_passed + 1):\n        remaining_interest_present_value += annual_interest / (1 + market_interest_rate) ** i\n\n    # calculate the present value of the face value payment at maturity\n    face_value_present_value = face_value / (1 + market_interest_rate) ** (years - years_passed)\n\n    # calculate the selling price at the close of the 5th year\n    selling_price = remaining_interest_present_value + face_value_present_value\n\n    # calculate the capital gain or loss\n    capital_gain_loss = selling_price - face_value\n\n    # return answer\n    return capital_gain_loss\n```"
        ]
    },
    {
        "tables": [
            "| Trades | Execution Price | Shares Executed |\n|--------|-----------------|-----------------|\n| Trade 1| $40.75 |    10,000     |\n| Trade 2| $41.25 |    30,000     |\n| Trade 3| $41.50 |    20,000     |\n| Trade 4| $41.75 |    30,000     |\n| Total  |        |    90,000     |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-220",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following day, Morris instructs Blue to go over their analysis on XYZ Corporation. Blue\u2019s evaluation leads her to believe that the company's shares are undervalued. She shares her discoveries with Morris, who then directs her at 10 a.m. to purchase 120,000 shares at a price of $40.00 through a limit order of $42.00. The buy-side trader proceeds with the market execution when the cost is at $40.50. The sole charge is a commission of $0.02 per share. By the time the market closes, 90,000 shares from the order were bought, with XYZ Corporation closing at $42.50. The transaction was carried out at an average cost of $41.42, with detailed information about the executed trades in Exhibit 1. Based on the details in Exhibit 1, what is the execution cost for buying the 90,000 shares of XYZ Corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_shares = 90000\n    avg_execution_price = 41.42\n    commission_per_share = 0.02\n    \n    # Do math calculation to get the answer\n    execution_cost_without_commission = total_shares * avg_execution_price\n    commission = total_shares * commission_per_share\n    execution_cost = execution_cost_without_commission + commission\n    \n    # return answer\n    return execution_cost\n```"
        ]
    },
    {
        "tables": [
            "|                      | as of 31 December |       |\n|----------------------|-------------------|-------|\n| Assets               | 2009              | 2008  |\n| Cash and cash equivalents     | 1,884             | 1,280 |\n| Other financial assets        | 486               | 588   |\n| Trade and other receivables   | 2,546             | 3,178 |\n| Other non-financial assets    | 147               | 126   |\n| Tax assets                    | 192               | 399   |\n| Total  current assets         | 5,255             | 5,571 |",
            "|                         | as of 31 December |\n|------------------------ |---------- |---------- |\n| Assets                  | 2009      | 2008      |\n| Total non-current assets| 8,119     | 3,329     |\n| Total assets            | 13,374    | 13,900    |\n| Equity and Liabilities  |           |           |\n| Total current liabilities| 3,416     | 5,824     |\n| Total non-current liabilities| 1,467 | 905       |\n| Total liabilities       | 4,883     | 6,729     |\n| Total equity            | 8,491     | 7,171     |\n| Equity and liabilities  | 13,374    | 13,900    |"
        ],
        "topic": "Accounting",
        "question_id": "test-221",
        "python_solution": "",
        "ground_truth": null,
        "question": "From the data provided in Exhibit 4, what's the nearest quick ratio for the Oracle Corporation as of December 31, 2009? Exhibit 4. Oracle Corporation Consolidated Statements of Financial Position (Excerpt: Current Assets Detail)(In millions of \u20ac)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_and_cash_equivalents = 1884\n    other_financial_assets = 486\n    trade_and_other_receivables = 2546\n    total_current_liabilities = 3416\n    \n    # Do math calculation to get the answer\n    quick_assets = cash_and_cash_equivalents + other_financial_assets + trade_and_other_receivables\n    quick_ratio = quick_assets / total_current_liabilities\n    \n    # Round the answer to the nearest whole number\n    quick_ratio = round(quick_ratio)\n    \n    # return answer\n    return quick_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-222",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive is interested in determining the cost of a put option using a one-period binomial tree. Here are the relevant details: The existing stock price is $30, while the exercise price of the put option is also $30. The up factor is valued at 1.12 and the down factor stands at 0.92. The risk-free rate is set at 5%. What is the hedge ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_price = 30\n    exercise_price = 30\n    up_factor = 1.12\n    down_factor = 0.92\n    risk_free_rate = 0.05\n    \n    # Calculate the stock price at the up and down states\n    stock_price_up = stock_price * up_factor\n    stock_price_down = stock_price * down_factor\n    \n    # Calculate the put option payoff at the up and down states\n    put_payoff_up = max(0, exercise_price - stock_price_up)\n    put_payoff_down = max(0, exercise_price - stock_price_down)\n    \n    # Calculate the hedge ratio\n    hedge_ratio = (put_payoff_up - put_payoff_down) / (stock_price_up - stock_price_down)\n    \n    # return answer\n    return hedge_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-223",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the two-period binomial model, Matt estimates the value of a two-year American-style call option on Alpha Corporation's common shares. The parameters are as follows: the present stock price sits at 96, while the call option's exercise price is 70. The up factor (u) equates to 1.20, with the down factor (d) at 0.83. The risk-free rate of return, calculated with continuous compounding, is 4%. How much is the option worth?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 96  # present stock price\n    K = 70  # exercise price\n    u = 1.20  # up factor\n    d = 0.83  # down factor\n    r = 0.04  # risk-free rate of return\n    \n    # calculate risk-neutral probabilities\n    p = (np.exp(r/2) - d) / (u - d)\n    q = 1 - p\n    \n    # calculate stock prices in the up and down states\n    Suu = S0 * u ** 2\n    Sud = S0 * u * d\n    Sdd = S0 * d ** 2\n    \n    # calculate call option payoffs in the up and down states\n    Cuu = max(Suu - K, 0)\n    Cud = max(Sud - K, 0)\n    Cdd = max(Sdd - K, 0)\n    \n    # calculate present value of future cash flows\n    C0 = np.exp(-r) * (p ** 2 * Cuu + 2 * p * q * Cud + q ** 2 * Cdd)\n    \n    # return answer\n    return C0\n\nimport numpy as np\n\nresult = solution()\nprint(result) \n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-224",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financier utilizes a multivariate normal distribution to accurately model the returns on 3 stocks, how many parameters does he need to determine at the outset?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_stocks = 3\n    num_mean_params = num_stocks\n    num_covar_params = (num_stocks * (num_stocks + 1)) // 2\n    \n    # Do math calculation to get the answer\n    total_params = num_mean_params + num_covar_params\n    \n    # return answer\n    return total_params\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-225",
        "python_solution": "",
        "ground_truth": null,
        "question": "What's the chance of a pupil correctly answering less than two questions on a multiple-choice test that has four choices for a total of six questions, by just guessing?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_questions = 6\n    correct_answer_choices = 1\n    total_answer_choices = 4\n    prob_single_correct_answer = correct_answer_choices / total_answer_choices\n    prob_single_incorrect_answer = 1 - prob_single_correct_answer\n    \n    # Calculate the probability of the pupil getting 0 or 1 correct answers\n    prob_zero_correct = (prob_single_incorrect_answer) ** total_questions\n    prob_one_correct = (total_questions * prob_single_correct_answer * \n                        (prob_single_incorrect_answer ** (total_questions - 1)))\n    \n    # Calculate the total probability of the pupil getting less than two questions correct\n    prob_less_than_two_correct = prob_zero_correct + prob_one_correct\n    \n    # return answer\n    return round(prob_less_than_two_correct * 100, 2)\n```\n\nIn this program, we calculate the probability of a pupil correctly answering less than two questions by using the probability formula for independent events. We first calculate the probabilities of getting zero or one correct answers, and then sum these probabilities to find the probability of getting less than two correct answers. The result is then rounded to two decimal places and multiplied by 100 to convert it to a percentage."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-226",
        "python_solution": "",
        "ground_truth": null,
        "question": "The head credit analyst of Vigilant Consultants recently stated that the five-year bond of Atlas Co. is currently yielding 7% and a similar CDS contract has a credit spread of 4.25%. Given that the MRR is 2.5%, Lopez advised performing a basis trade to exploit the pricing of Atlas Co.'s bonds and CDS. The basis trade would involve buying both the bond and the CDS contract. Considering the basis trade for Atlas Co., what will be the gain if convergence happens in the bond and CDS markets?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_yield = 0.07  # 7%\n    credit_spread = 0.0425  # 4.25%\n    mrr = 0.025  # 2.5%\n    bond_duration = 5  # assuming the duration of the bond is 5 years\n    \n    # Calculate the bond price and the CDS price assuming a notional value of $100\n    bond_price = 100 / (1 + bond_yield)**bond_duration\n    cds_price = credit_spread * bond_duration\n    \n    # Calculate the basis as the difference between the bond yield and the CDS spread plus the MRR\n    basis = bond_yield - credit_spread - mrr\n    \n    # Calculate the gain if convergence happens in the bond and CDS markets\n    gain = basis * bond_duration\n    \n    # return answer\n    return gain\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-227",
        "python_solution": "",
        "ground_truth": null,
        "question": "Think about the purchaser of a 6x9 FRA. The contract rate is 6.35% on a notional sum of $10 million. Determine the settlement sum for the vendor if the settlement rate is 6.85%. Assume a 30/360-day count basis.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_sum = 10000000  # $10 million\n    contract_rate = 0.0635   # 6.35%\n    settlement_rate = 0.0685 # 6.85%\n    days = 180               # 6 months, assuming a 30/360-day count basis\n\n    # Do math calculation to get the answer\n    # The settlement sum for a FRA is the present value of the future interest rate\n    # This is calculated as the notional sum multiplied by the difference between\n    # the settlement rate and the contract rate, multiplied by the fraction of the year\n    settlement_sum = notional_sum * (settlement_rate - contract_rate) * (days / 360)\n\n    # Return answer\n    return settlement_sum\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-228",
        "python_solution": "",
        "ground_truth": null,
        "question": "A task has been assigned to Jack, a consultant for a global investment firm, to evaluate the worth of an advanced technology enterprise. The collected information about the enterprise is as follows: It has 500 million ordinary shares in circulation. It has a current share price of $7. The enterprise has a declared debt of $3500 million, and its market value equals this figure. The enterprise has reported a cash holding of $1500 million. Furthermore, it has $50 million in preferred equity and $100 million in short-term investments. For this year, its reported net sales are $3000 million. With regard to the information provided, what is the enterprise EV to sales ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_shares = 500000000  # Total number of ordinary shares in circulation\n    current_share_price = 7  # Current price of each share\n    debt = 3500000000  # Declared debt of the enterprise\n    cash_holding = 1500000000  # Cash holding of the enterprise\n    preferred_equity = 50000000  # Preferred equity of the enterprise\n    short_term_investments = 100000000  # Short-term investments of the enterprise\n    net_sales = 3000000000  # Reported net sales for the year\n\n    # Do math calculation to get the answer\n    market_capitalization = total_shares * current_share_price  # Calculate market capitalization\n    enterprise_value = market_capitalization + debt - cash_holding - short_term_investments + preferred_equity  # Calculate enterprise value\n    ev_to_sales_ratio = enterprise_value / net_sales  # Calculate EV to sales ratio\n    \n    # return answer\n    return ev_to_sales_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-229",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the discount rate if the cash price stands at 97.63 and there are 60 calendar days left on the life of the government bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_price = 97.63\n    days_to_maturity = 60\n    face_value = 100  # assuming the face value of the bond is 100\n    \n    # Do math calculation to get the answer\n    discount = face_value - cash_price\n    discount_rate = (discount / face_value) / (days_to_maturity / 365)\n    \n    # return answer\n    return discount_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-230",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the present value of a 10-year annuity due with yearly payments of $2,000 and an annual compound interest rate of 5%, if the present value of a 10-year regular annuity with the same payments and interest rate is $15,443.47?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annuity_payment = 2000\n    annual_interest_rate = 0.05\n    years = 10\n    present_value_annuity = 15443.47\n\n    # Calculate the present value factor of a regular annuity\n    present_value_factor_annuity = (1 - (1 + annual_interest_rate)**(-years)) / annual_interest_rate\n\n    # Since the present value of an annuity-due = (present value of a regular annuity) * (1 + annual interest rate)\n    present_value_annuity_due = present_value_annuity * (1 + annual_interest_rate)\n\n    # Alternatively, calculate present value of annuity-due directly from payments\n    # present_value_annuity_due = annuity_payment * (1 - (1 + annual_interest_rate)**(-years)) / annual_interest_rate * (1 + annual_interest_rate)\n\n    # return answer\n    return present_value_annuity_due\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-231",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a 2-year zero-coupon bond's present cost is $0.88035 and its face value is $1, then what is the 2-year spot rate given risk-neutral investors?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_cost = 0.88035\n    face_value = 1\n    years = 2\n    \n    # Do math calculation to get the answer\n    # The formula for the spot rate is: spot_rate = (face_value / present_cost)^(1/years) - 1\n    spot_rate = (face_value / present_cost) ** (1/years) - 1\n    \n    # Convert the spot rate to a decimal and multiply by 100 to get the percentage\n    spot_rate_percentage = round(spot_rate * 100, 2)\n    \n    # return answer\n    return spot_rate_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Year | Spot Rate | Forward Rate |\n|------|-----------|--------------|\n| 1    | 3.00%     |              |\n| 2    | 4.00%     | 5.01%        |\n| 3    | 5.00%     | 7.03%        |\n| 4    | 6.00%     | 9.06%        |\n| 5    | 7.00%     | 11.10%       |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-232",
        "python_solution": "",
        "ground_truth": null,
        "question": "John acknowledges that this specific US Treasury bond might not be the best choice for investors seeking zero reinvestment risk. He proposes a different vehicle, namely a US Treasury zero-coupon note. This note is fresh off the press, has a term of five years, and is valued at $71.30 (with a face value of $100.00) to yield 7.00% at maturity. John explains that some investors might choose to buy this Treasury zero-coupon note now and keep it until it matures in five years. He also mentions that there are investors who might buy this Treasury zero-coupon note in two years and then keep it for three years until it matures. John requests that Bird calculate the forward rate that would make investors indifferent to either acquiring the Treasury zero-coupon note now or buying it two years down the line. Current spot rates and extrapolated one year forward rates are available in Exhibit 1. Using the data in Exhibit 1, what forward rate would make an",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_5_year = 0.07\n    spot_rate_2_year = 0.04\n    price_zero_coupon_note = 71.30\n    face_value = 100.00\n    years_until_maturity = 5\n    \n    # Do math calculation to get the answer\n    # Calculate the implied forward rate using the formula:\n    # (1 + r_5)^5 / (1 + r_2)^2 = (1 + f_2,5)^3\n    implied_forward_rate = ((1 + spot_rate_5_year) ** years_until_maturity / \n                             (1 + spot_rate_2_year) ** 2) ** (1 / (years_until_maturity - 2)) - 1\n    \n    # return answer\n    return implied_forward_rate\n```"
        ]
    },
    {
        "tables": [
            "|                         |          |                       |         |\n|-------------------------|----------|-----------------------|---------|\n|Price per Share and Shares Outstanding|        ||             |\n|Current market price per share  | $15.0  |    |            |\n|Number of shares outstanding(millions)  | 1.0 |    |            |\n|Balance Sheet Data As of 2012 ($ millions)   |     |            ||\n|Cash and cash equivalents | 0.4 | Current liabilities    | 1.0       |\n|Accounts receivable | 1.2 | Long-term liabilities | 61.0   |\n|Inventories | 40.0 |  |  |\n|Investment securities |   6.0 |Common shareholders' equity | 15.6 |\n|Property, plant, and equipment | 30.0 | | |\n|Total assets  |  77.6 |Total liabilities and equity | 77.6 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-233",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a researcher predicts that the market worth of the corporation's investment securities is 115% of their recorded value, what is the corporation's price to adjusted book value ratio, taking into account the corporation's market data and balance sheet details at the close of the fiscal year 2012?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_per_share = 15.0\n    number_of_shares_outstanding = 1.0  # in millions\n    cash_and_cash_equivalents = 0.4  # in millions\n    accounts_receivable = 1.2  # in millions\n    inventories = 40.0  # in millions\n    investment_securities_recorded_value = 6.0  # in millions\n    property_plant_and_equipment = 30.0  # in millions\n    total_liabilities = 1.0 + 61.0  # in millions\n    \n    # Calculate adjusted investment securities value\n    investment_securities_market_value = investment_securities_recorded_value * 1.15\n    \n    # Calculate adjusted total assets\n    adjusted_total_assets = (cash_and_cash_equivalents + accounts_receivable +\n                             inventories + investment_securities_market_value +\n                             property_plant_and_equipment)\n    \n    # Calculate adjusted book value of equity\n    adjusted_book_value_of_equity = adjusted_total_assets - total_liabilities\n    \n    # Calculate price to adjusted book value ratio\n    price_to_adjusted_book_value_ratio = (price_per_share * number_of_shares_outstanding) / adjusted_book_value_of_equity\n    \n    # return answer\n    return price_to_adjusted_book_value_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-234",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial instrument has a beta of 1.30. If the risk-free interest rate stands at 3% and the market's expected return is 8%, what is the anticipated return of this particular financial instrument, using the capital asset pricing model (CAPM)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beta = 1.30  # beta of the financial instrument\n    risk_free_rate = 0.03  # risk-free interest rate\n    market_expected_return = 0.08  # market's expected return\n    \n    # Do math calculation to get the answer\n    anticipated_return = risk_free_rate + beta * (market_expected_return - risk_free_rate)\n    \n    # return answer\n    return anticipated_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-235",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Sakamoto Company has recently distributed a dividend of \u00a5450 for each share. It is anticipated that the annual dividends will rise at a rate of 4 percent yearly for the forthcoming four years. By the conclusion of these four years, the Sakamoto Company's shares are predicted to have a selling price of \u00a59000. If a 12 percent return rate is necessary, what would be the fundamental value of a share of Sakamoto Company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend = 450  # initial dividend\n    growth_rate = 0.04  # 4% growth rate\n    years = 4  # number of years\n    terminal_value = 9000  # selling price at the end of year 4\n    discount_rate = 0.12  # 12% return rate\n    \n    # Calculate the present value of future dividends\n    dividend_discounted = 0\n    for year in range(1, years + 1):\n        dividend_discounted += (dividend * (1 + growth_rate) ** year) / (1 + discount_rate) ** year\n    \n    # Calculate the present value of terminal value\n    terminal_value_discounted = terminal_value / (1 + discount_rate) ** years\n    \n    # Calculate the intrinsic value of a share\n    intrinsic_value = dividend_discounted + terminal_value_discounted\n    \n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|----------|--------------------------|--------------------------------|\n| 1        | 16                       | 20                             |\n| 2        | 12                       | 20                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-236",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a fund manager constructs a portfolio with two securities that has a projected return of 15%, what is the percentage invested in Security1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_security1 = 0.16  # Convert 16% to decimal\n    expected_return_security2 = 0.12  # Convert 12% to decimal\n    portfolio_return = 0.15  # Convert 15% to decimal\n    \n    # Do math calculation to get the answer\n    # Assume x is the percentage invested in Security1 and (1-x) is the percentage invested in Security2\n    # The portfolio return is a weighted average of the returns of the two securities\n    # So, we can write the equation as: portfolio_return = x * expected_return_security1 + (1-x) * expected_return_security2\n    # We can simplify the equation to solve for x\n    x = (portfolio_return - expected_return_security2) / (expected_return_security1 - expected_return_security2)\n    \n    # Convert x to percentage\n    percentage_invested_security1 = x * 100\n    \n    # return answer\n    return percentage_invested_security1\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-237",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager employs a valuation model to calculate the worth of a bond portfolio at USD 125.00 million when the term structure is level. With the same model, the fund manager anticipates that the portfolio's value would surge to USD 127.70 million if all interest rates reduce by 20 bps and would drop to USD 122.20 million if all interest rates increase by 20 bps. Given these assumptions, what is the effective duration of the bond portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    value_at_level_term_structure = 125000000  # USD 125.00 million\n    value_at_20bps_decrease = 127700000  # USD 127.70 million\n    value_at_20bps_increase = 122200000  # USD 122.20 million\n    interest_rate_change = 0.002  # 20 bps\n\n    # Do math calculation to get the answer\n    percentage_change_decrease = (value_at_20bps_decrease - value_at_level_term_structure) / value_at_level_term_structure\n    percentage_change_increase = (value_at_20bps_increase - value_at_level_term_structure) / value_at_level_term_structure\n    effective_duration = (percentage_change_decrease - percentage_change_increase) / (2 * interest_rate_change)\n\n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-238",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current trading price of ABC shares is $50. A 1-year put option on these shares, with an exercise price of $50, is valued at $2.08. Given a continuously compounded risk-free rate of 4%, what would be the value of a call option that has the same exercise price and date?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 50  # current trading price of ABC shares\n    K = 50  # exercise price of the option\n    r = 0.04  # continuously compounded risk-free rate\n    T = 1  # time to maturity in years\n    P = 2.08  # value of the put option\n    \n    # Do math calculation to get the answer\n    # Using Put-Call Parity\n    C = P + S - K * (e ** (-r * T))\n    \n    # Import necessary module\n    import math\n    e = math.e\n    \n    # Calculate the value of the call option\n    C = P + S - K * (e ** (-r * T))\n    \n    # return answer\n    return C\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "|             | Coefficient | Std. Error | t-Statistic |\n|-------------|-------------|------------|-------------|\n| Sample Size | 150         |            |             |\n| Intercept   | 4990.519    | 2280.093   | 2.189       |\n| P           | -35.666     | 17.871     | -1.996      |\n| 1           | 6.193       | 1.652      | 3.749       |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-239",
        "python_solution": "",
        "ground_truth": null,
        "question": "As an owner of a supermarket, David is keen on using mathematical models to tackle various issues. Lately, he wishes to examine the correlation between the quantity of product demand (V), product pricing (P), and customer earning levels (I). The quantity of product demand acts as the dependent variable while the other two serve as independent variables. After conducting a multiple regression analysis, he obtained the following results: What is the upper confidence interval of the regression coefficient for the customer's earning level at 0.1 level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coefficient_I = 6.193\n    std_error_I = 1.652\n    sample_size = 150\n    significance_level = 0.1\n    degrees_of_freedom = sample_size - 3\n    critical_t_value = 1.298  # obtained from t-distribution table for 0.1 significance level and 147 degrees of freedom\n\n    # Do math calculation to get the answer\n    margin_of_error = critical_t_value * std_error_I\n    upper_confidence_interval = coefficient_I + margin_of_error\n    \n    # return answer\n    return upper_confidence_interval\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-240",
        "python_solution": "",
        "ground_truth": null,
        "question": "A client requests John to appraise the real estate with the presumption that the net operating income amounts to $125,000, the discount rate is 11%, and the growth rate stands at 6%. Choosing the direct capitalization approach to determine the value, what is the estimated worth of the multifamily property according to John's calculation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_operating_income = 125000\n    discount_rate = 0.11\n    growth_rate = 0.06\n    \n    # Do math calculation to get the answer\n    capitalization_rate = discount_rate - growth_rate\n    present_value = net_operating_income / capitalization_rate\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-241",
        "python_solution": "",
        "ground_truth": null,
        "question": "A trader has set up a bearish option approach using three identical maturity put options. He purchases two $46 puts for $5 each, and then sells one $53 put for $8 and one $37 put for $3. If the underlying asset is valued at $32 at maturity, what is the ultimate gain of this strategy?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    buy_option_strike = 46\n    buy_option_price = 5\n    sell_option_strike1 = 53\n    sell_option_price1 = 8\n    sell_option_strike2 = 37\n    sell_option_price2 = 3\n    asset_price = 32\n    \n    # Do math calculation to get the answer\n    buy_option_profit = max(buy_option_strike - asset_price, 0) - buy_option_price\n    buy_options_total_profit = buy_option_profit * 2\n    sell_option_profit1 = sell_option_price1 - max(sell_option_strike1 - asset_price, 0)\n    sell_option_profit2 = sell_option_price2 - max(sell_option_strike2 - asset_price, 0)\n    total_profit = buy_options_total_profit + sell_option_profit1 + sell_option_profit2\n    \n    # return answer\n    return total_profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-242",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's think about this linear regression equation: Y=a+bX+e. If a equals 0.05, b equals 1.2, standard deviation of Y equals 0.26, and standard deviation of e equals 0.1, what would be the correlation between X and Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    a = 0.05\n    b = 1.2\n    std_dev_Y = 0.26\n    std_dev_e = 0.1\n    \n    # Do math calculation to get the answer\n    # First, calculate the variance of Y and e\n    var_Y = std_dev_Y ** 2\n    var_e = std_dev_e ** 2\n    \n    # Then, calculate the variance of X using the formula var(Y) = b^2 * var(X) + var(e)\n    var_X = (var_Y - var_e) / (b ** 2)\n    \n    # Now, calculate the covariance between X and Y using the formula cov(X, Y) = b * var(X)\n    cov_X_Y = b * var_X\n    \n    # Finally, calculate the correlation between X and Y using the formula corr(X, Y) = cov(X, Y) / sqrt(var(X) * var(Y))\n    corr_X_Y = cov_X_Y / (var_X ** 0.5 * var_Y ** 0.5)\n    \n    # return answer\n    return corr_X_Y\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-243",
        "python_solution": "",
        "ground_truth": null,
        "question": "Enterprise B releases 20 unique bonds and the risk of default for Enterprise B is 2%. The portfolio, made up of the 20 bonds, has a notional value of $1,000,000. Assuming that the default correlation of the 20 bonds is equal to 1 and the recovery rate is 0%, what is the credit VaR of the portfolio at the 99% confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_bonds = 20\n    notional_value = 1000000\n    default_probability = 0.02\n    correlation = 1\n    recovery_rate = 0\n    confidence_level = 0.99\n    \n    # Do math calculation to get the answer\n    # Since correlation is 1, we can treat the portfolio as a single bond\n    # with the same default probability and notional value\n    # We can model the loss distribution as a Bernoulli distribution\n    # with probability of default p and loss given default (1 - recovery rate) * notional_value\n    expected_loss = default_probability * (1 - recovery_rate) * notional_value\n    credit_var = (1 - recovery_rate) * notional_value * (1 - confidence_level)\n    \n    # Since we have a portfolio of 20 bonds, we need to scale the credit VaR\n    # by the number of bonds to get the portfolio credit VaR\n    portfolio_credit_var = credit_var * num_bonds\n    \n    # However, the correlation is 1, which means that either all bonds default\n    # or none of them defaults. Therefore, the portfolio credit VaR is simply\n    # the notional value times the probability of default times (1 - recovery rate)\n    portfolio_credit_var = notional_value * default_probability * (1 - recovery_rate)\n    \n    # return answer\n    return portfolio_credit_var\n```"
        ]
    },
    {
        "tables": [
            "|                               |        |\n|-------------------------------|--------|\n| Straight bond value           | \u00a3 978  |\n| Value of embedded issuer call option | \u00a3 43   |\n| Value of embedded investor put option | \u00a3 26   |\n| Value of embedded call option on issuer's stock | \u00a3 147 |\n| Conversion price              | \u00a3 12.50|\n| Current common stock share price | \u00a3 11.75|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-244",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given data about the ZX bond, if ZX bond is identified as a callable-putable convertible bond, what would be the arbitrage-free value of this ZX bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    straight_bond_value = 978\n    embedded_issuer_call_option = 43\n    embedded_investor_put_option = 26\n    embedded_call_option_on_issuer_stock = 147\n    \n    # Do math calculation to get the answer\n    # For a callable-putable convertible bond, the value is the sum of the straight bond value, \n    # the value of the embedded investor put option, and the value of the embedded call option on the issuer's stock, \n    # minus the value of the embedded issuer call option.\n    arbitrage_free_value = straight_bond_value + embedded_investor_put_option + embedded_call_option_on_issuer_stock - embedded_issuer_call_option\n    \n    # return answer\n    return arbitrage_free_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-245",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a business has an unprotected credit line and needs to keep its EBIT-to-interest coverage ratio above 2.0. With EBIT expected to be within the range of $36 million to $48 million, all values equally probable, what's the likelihood that the EBIT/interest would exceed 2.0 if the projected annual interest charge is $20 million?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    low_ebit = 36000000\n    high_ebit = 48000000\n    interest_charge = 20000000\n    target_ratio = 2.0\n\n    # Do math calculation to get the answer\n    threshold_ebit = target_ratio * interest_charge\n    \n    # Calculate the range of possible EBIT values\n    total_range = high_ebit - low_ebit\n    \n    # Calculate the portion of the range where the EBIT is above the threshold\n    above_threshold_range = max(high_ebit - threshold_ebit, 0)\n    \n    # Calculate the probability\n    probability = above_threshold_range / total_range\n    \n    # Convert the probability to a percentage\n    probability_percentage = round(probability * 100, 2)\n    \n    # return answer\n    return probability_percentage\n```"
        ]
    },
    {
        "tables": [
            "|       | Volatility (%) |        | Volatility (%) |\n|-------|--------------|--------|--------------|\n| Fund 1 | 9.81         | Fund 8  | 13.99        |\n| Fund 2 | 10.12       | Fund 9  | 14.47        |\n| Fund 3 | 10.84       | Fund 10 | 14.85        |\n| Fund 4 | 11.33       | Fund 11 | 15.00        |\n| Fund 5 | 12.25       | Fund 12 | 17.36        |\n| Fund 6 | 13.39       | Fund 13 | 17.98        |\n| Fund 7 | 13.42       |         |              |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-246",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the approximate value of the first quintile, considering the volatility of a chain of funds that are part of the same group, arranged in rising order?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    funds = [\n        {\"name\": \"Fund 1\", \"volatility\": 9.81},\n        {\"name\": \"Fund 2\", \"volatility\": 10.12},\n        {\"name\": \"Fund 3\", \"volatility\": 10.84},\n        {\"name\": \"Fund 4\", \"volatility\": 11.33},\n        {\"name\": \"Fund 5\", \"volatility\": 12.25},\n        {\"name\": \"Fund 6\", \"volatility\": 13.39},\n        {\"name\": \"Fund 7\", \"volatility\": 13.42},\n        {\"name\": \"Fund 8\", \"volatility\": 13.99},\n        {\"name\": \"Fund 9\", \"volatility\": 14.47},\n        {\"name\": \"Fund 10\", \"volatility\": 14.85},\n        {\"name\": \"Fund 11\", \"volatility\": 15.00},\n        {\"name\": \"Fund 12\", \"volatility\": 17.36},\n        {\"name\": \"Fund 13\", \"volatility\": 17.98},\n    ]\n\n    # Do math calculation to get the answer\n    sorted_funds = sorted(funds, key=lambda x: x[\"volatility\"])\n    n = len(sorted_funds)\n    first_quintile_index = n // 5\n    first_quintile_value = sorted_funds[first_quintile_index][\"volatility\"]\n\n    # return answer\n    return round(first_quintile_value, 2)\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class             | Global Equity | Global Bonds | Residual Risk (%) |\n|-------------------------|---------------|--------------|-------------------|\n| U.S. real estate equities | 0.60          | 0.15         | 4.4               |\n| Global timber equities  | 0.45          | 0.20         | 3.9               |\n\nAdditional Information\n\n| Variances             | 0.025  | 0.0014 |       |\n|-----------------------|--------|--------|-------|\n\nCorrelation between global equities and global bonds:  0.33"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-247",
        "python_solution": "",
        "ground_truth": null,
        "question": "Reviewing the RiteVal data from Exhibit 1, and adopting the two-factor model preferred by Cortez, where global equity and global bonds are the two primary drivers of return for all asset classes, what is the standard deviation of U.S. real estate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    var_global_equity = 0.025\n    var_global_bonds = 0.0014\n    correlation_global_equity_bonds = 0.33\n    beta_real_estate_global_equity = 0.60\n    beta_real_estate_global_bonds = 0.15\n    residual_risk_real_estate = 0.044\n    \n    # Calculate covariance between global equity and global bonds\n    cov_global_equity_bonds = correlation_global_equity_bonds * (var_global_equity ** 0.5) * (var_global_bonds ** 0.5)\n    \n    # Calculate variance of U.S. real estate\n    var_real_estate = (beta_real_estate_global_equity ** 2) * var_global_equity + (beta_real_estate_global_bonds ** 2) * var_global_bonds + 2 * beta_real_estate_global_equity * beta_real_estate_global_bonds * cov_global_equity_bonds + residual_risk_real_estate ** 2\n    \n    # Calculate standard deviation of U.S. real estate\n    std_dev_real_estate = var_real_estate ** 0.5\n    \n    # return answer\n    return std_dev_real_estate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-248",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, Telecom Corporation had an average of 1,000,000 shares in circulation. During the same year, the company also had 10,000 options in circulation with exercise prices of $10 each. The stock's average price during 2009 was $15. To calculate the diluted earnings per share, how many shares should be considered in the denominator?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_in_circulation = 1000000\n    options_in_circulation = 10000\n    exercise_price = 10\n    average_stock_price = 15\n    \n    # Do math calculation to get the answer\n    # If the options are in the money, we need to consider them for diluted EPS\n    if average_stock_price > exercise_price:\n        options_to_be_exercised = options_in_circulation\n        # Calculate the number of shares that could be purchased with the proceeds from exercised options\n        shares_from_exercise_proceeds = (options_to_be_exercised * exercise_price) / average_stock_price\n        # Calculate the total diluted shares\n        total_diluted_shares = shares_in_circulation + options_to_be_exercised - shares_from_exercise_proceeds\n    else:\n        total_diluted_shares = shares_in_circulation\n    \n    # return answer\n    return total_diluted_shares\n```"
        ]
    },
    {
        "tables": [
            "| Year | Net Return (%) |\n|------|----------------|\n| 2008 | -34.8          |\n| 2009 | 32.2           |\n| 2010 | 11.1           |\n| 2011 | -1.4           |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-249",
        "python_solution": "",
        "ground_truth": null,
        "question": "What would be the required 2012 return to get a trailing five-year geometric mean annualized return of 5% by the end of 2012, assuming a wealth management company has the following yearly returns in their US large-cap equity portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [-0.348, 0.322, 0.111, -0.014]  # Convert percentages to decimal form\n    target_return = 0.05  # 5% in decimal form\n    years = 5\n\n    # Calculate the required 2012 return\n    cumulative_returns = 1\n    for ret in returns:\n        cumulative_returns *= (1 + ret)\n    required_return = (1 + target_return) ** years / cumulative_returns - 1\n\n    # Convert the result to percentage\n    answer = required_return * 100\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| End of Year | Call Price |\n|-------------|------------|\n| 3           | 102        |\n| 4           | 101        |\n| 5           | 100        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-250",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond that has 5 years left before maturity is presently being sold for 101 for every 100 of par value. This bond provides a 6% coupon rate, with interest paid twice a year. What is the bond's yearly yield-to-maturity, bearing in mind the bond can first be redeemed after 3 years, with further redemptions possible based on the successive coupon dates, according to the schedule provided?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100  # Bond face value\n    present_value = 101  # Bond present value\n    coupon_rate = 0.06  # 6% coupon rate\n    redemption_price_after_3_years = 102  # Call price after 3 years\n    redemption_price_after_4_years = 101  # Call price after 4 years\n    redemption_price_after_5_years = 100  # Call price after 5 years\n    \n    # Calculate semi-annual coupon\n    semi_annual_coupon = face_value * coupon_rate / 2\n    \n    # Do math calculation to get the yield-to-maturity\n    # We will use IRR (Internal Rate of Return) calculation\n    from scipy.optimize import fsolve\n    import numpy as np\n    \n    def bond_cashflows(rate):\n        cashflows = np.zeros(11)  # 5 years \\* 2 payments per year + 1 initial investment\n        cashflows[0] = -present_value * face_value  # initial investment\n        \n        # coupon payments\n        for i in range(1, 11):\n            cashflows[i] = semi_annual_coupon\n            if i == 6:  # End of 3 years\n                cashflows[i] += redemption_price_after_3_years * face_value\n            elif i == 8:  # End of 4 years\n                cashflows[i] += redemption_price_after_4_years * face_value\n            elif i == 10:  # End of 5 years\n                cashflows[i] += redemption_price_after_5_years * face_value\n        \n        # Calculate present value of cash flows\n        present_value_of_cashflows = 0\n        for t, cf in enumerate(cashflows):\n            present_value_of_cashflows += cf / (1 + rate / 2) ** (t)\n        \n        return present_value_of_cashflows\n    \n    yield_to_maturity = fsolve(bond_cashflows, x0=[0.05], args=())[0]  # use 5% as initial guess\n    yield_to_maturity_yearly = (1 + yield_to_maturity / 2) ** 2 - 1  # convert to yearly YTM\n    \n    # return answer\n    return yield_to_maturity_yearly\n```\n\nPlease note that the yield-to-maturity is calculated using numerical methods (`fsolve`) since there is"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-251",
        "python_solution": "",
        "ground_truth": null,
        "question": "Management at S&Q Enterprises is given the option to receive options on common stocks. The options necessitate a service period of 4 years post the grant date for vesting. S&Q follows a financial year-end of December 31. The enterprise on July 1, 2014, gave out 61,600 options. The market price of the options on the date of grant was \u00a30.5. What is the chunk of the compensation expense associated with the stock option granted in 2014?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    service_period = 4  # years\n    grant_date = \"July 1, 2014\"\n    year_end = \"December 31, 2014\"\n    number_of_options = 61600\n    market_price = 0.5  # \u00a3\n    vesting_period = service_period * 12  # months\n    months_passed = 6  # from July 1, 2014 to December 31, 2014\n    \n    # Do math calculation to get the answer\n    compensation_expense = (number_of_options * market_price) / vesting_period * months_passed\n    \n    # return answer\n    return compensation_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-252",
        "python_solution": "",
        "ground_truth": null,
        "question": "Leaving out the impacts of compound interest, what would be the predicted overall cost of keeping an investment for nine months in the ETF, keeping in mind an ETF with these management fees and trading expenses: An annual management fee of 0.40%, round-trip trading fees of 0.55%, and a bid-offer spread of 0.20% on buying and selling?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_management_fee = 0.40 / 100  # Convert percentage to decimal\n    round_trip_trading_fees = 0.55 / 100  # Convert percentage to decimal\n    bid_offer_spread = 0.20 / 100  # Convert percentage to decimal\n    investment_duration = 9 / 12  # Convert months to fraction of a year\n\n    # Do math calculation to get the answer\n    management_fee_for_duration = annual_management_fee * investment_duration\n    total_trading_fees = round_trip_trading_fees + bid_offer_spread\n    overall_cost = management_fee_for_duration + total_trading_fees\n    \n    # Convert the overall cost to percentage\n    overall_cost_percentage = overall_cost * 100\n    \n    # return answer\n    return overall_cost_percentage\n```"
        ]
    },
    {
        "tables": [
            "| ($ thousands) | 2013 | 2012 |\n|---|---|---|\n|Deferred tax assets| 200 | 160 |\n|Deferred tax liabilities| -450 | -360 |\n|Net deferred tax liabilities| -250 | -200 |\n|Earnings before taxes| 4,000 | 3,800 |\n|Income taxes at the statutory rate| 1,200 | 1,140 |\n|Income tax payable (Current income tax expense)| 1,000 | 900 |"
        ],
        "topic": "Accounting",
        "question_id": "test-253",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the income tax expense (in thousands) in 2013 for the corporation, based on the provided data about the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    deferred_tax_assets_2013 = 200\n    deferred_tax_assets_2012 = 160\n    deferred_tax_liabilities_2013 = -450\n    deferred_tax_liabilities_2012 = -360\n    net_deferred_tax_liabilities_2013 = -250\n    net_deferred_tax_liabilities_2012 = -200\n    earnings_before_taxes_2013 = 4000\n    income_taxes_at_statutory_rate_2013 = 1200\n    income_tax_payable_2013 = 1000\n\n    # Do math calculation to get the answer\n    change_in_deferred_tax_assets = deferred_tax_assets_2013 - deferred_tax_assets_2012\n    change_in_deferred_tax_liabilities = deferred_tax_liabilities_2013 - deferred_tax_liabilities_2012\n    deferred_income_tax_expense = change_in_deferred_tax_assets - change_in_deferred_tax_liabilities\n    income_tax_expense_2013 = income_tax_payable_2013 + deferred_income_tax_expense\n    \n    # return answer\n    return income_tax_expense_2013\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-254",
        "python_solution": "",
        "ground_truth": null,
        "question": "If corporation AR has a turnover that is 3 times and its sales amount to $5000, could you compute the corporation's AR?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    turnover = 3\n    sales = 5000\n    \n    # Do math calculation to get the answer\n    accounts_receivable = sales / turnover\n    \n    # return answer\n    return accounts_receivable\n```"
        ]
    },
    {
        "tables": [
            "|       | Fund Y(%) |\n|-------|-----------|\n| Year 1|   19.5    |\n| Year 2|   -1.9    |\n| Year 3|   19.7    |\n| Year 4|   35.0    |\n| Year 5|   5.7     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-255",
        "python_solution": "",
        "ground_truth": null,
        "question": "The accompanying display presents the yearly returns for Investment Pool X. What is the geometric mean return for Investment Pool X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yearly_returns = [19.5, -1.9, 19.7, 35.0, 5.7]\n    \n    # Convert the percentages to decimals\n    yearly_returns = [return_value / 100 for return_value in yearly_returns]\n    \n    # Calculate the product of (1 + Ri) for each year\n    product = 1\n    for return_value in yearly_returns:\n        product *= (1 + return_value)\n    \n    # Calculate the geometric mean return\n    geometric_mean_return = (product ** (1 / len(yearly_returns))) - 1\n    \n    # Convert the result back to percentage\n    geometric_mean_return *= 100\n    \n    # return answer\n    return geometric_mean_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-256",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a yearly discount rate of 6.5%, compounded monthly, what is the present worth of a financial agreement that promises to pay \u20ac1,200 each month for a period of five years, with the first payment being done instantly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_payment = 1200  # \u20ac\n    yearly_discount_rate = 0.065  # 6.5%\n    monthly_discount_rate = yearly_discount_rate / 12\n    number_of_payments = 5 * 12  # 5 years, monthly payments\n    first_payment_done = True\n    \n    # Do math calculation to get the answer\n    present_worth = monthly_payment / (1 + monthly_discount_rate)\n    present_worth_factor = (1 - (1 + monthly_discount_rate)**(-number_of_payments)) / monthly_discount_rate\n    present_worth *= present_worth_factor\n    \n    if first_payment_done:\n        present_worth += monthly_payment\n    \n    # return answer\n    return present_worth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-257",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the standard deviation of the average weekly return if an investment analyst is estimating the VaR for a portfolio using a data set of 25 weekly returns, with an average weekly return of 7% and a standard deviation for the return series of 15%, given that the weekly returns are independent and identically distributed?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_weekly_returns = 25\n    avg_weekly_return = 0.07\n    std_dev_return_series = 0.15\n\n    # Do math calculation to get the answer\n    # Since the returns are independent and identically distributed, \n    # the standard deviation of the average return is the population standard deviation divided by the square root of the number of observations\n    std_dev_avg_return = std_dev_return_series / (num_weekly_returns ** 0.5)\n\n    # return answer\n    return std_dev_avg_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-258",
        "python_solution": "",
        "ground_truth": null,
        "question": "Financial institution C provides an unsecured loan worth $10 million to enterprise D. Based on the forecasted data, the likelihood of enterprise D defaulting is 4% and the recovery rate stands at 40%. What is the credit reserve that Financial institution C should maintain equal to the anticipated credit loss?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 10000000  # in dollars\n    probability_of_default = 0.04  # 4%\n    recovery_rate = 0.40  # 40%\n    \n    # Do math calculation to get the answer\n    anticipated_credit_loss = loan_amount * probability_of_default * (1 - recovery_rate)\n    \n    # return answer\n    return anticipated_credit_loss\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "|                         | $ millions |\n|-------------------------|-----------|\n| Net Income              | 485       |\n| Depreciation expense    | 270       |\n| Increase in accounts receivable | 59        |\n| Increase in accounts payable | 33        |\n| Purchase of fixed assets | 523       |\n| Increase in notes payable | 15        |\n| Increase in long-term debt | 60        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-259",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the financial report, what is the FCFE for Company P?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 485\n    depreciation_expense = 270\n    increase_in_accounts_receivable = 59\n    increase_in_accounts_payable = 33\n    purchase_of_fixed_assets = 523\n    increase_in_notes_payable = 15\n    increase_in_long_term_debt = 60\n    \n    # Do math calculation to get the answer\n    operating_cash_flow = net_income + depreciation_expense - increase_in_accounts_receivable + increase_in_accounts_payable\n    investing_cash_flow = -purchase_of_fixed_assets\n    financing_cash_flow = increase_in_notes_payable + increase_in_long_term_debt\n    fcf = operating_cash_flow + investing_cash_flow\n    fcfe = fcf - financing_cash_flow\n    \n    # return answer\n    return fcfe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-260",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the lower limit of a 99% confidence interval for the population mean if you have a sample size of 65, a mean of 31, and a variance of 529 from a normally distributed population?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    import math\n    from scipy.stats import norm\n\n    sample_size = 65\n    sample_mean = 31\n    sample_variance = 529\n    confidence_level = 0.99\n    \n    # Do math calculation to get the answer\n    standard_error = math.sqrt(sample_variance / sample_size)\n    z_score = norm.ppf(1 - (1 - confidence_level) / 2)\n    margin_of_error = z_score * standard_error\n    lower_limit = sample_mean - margin_of_error\n    \n    # return answer\n    return lower_limit\n\nans = solution()\nprint(ans)\n```"
        ]
    },
    {
        "tables": [
            "|                      | Book value | Fair value |\n|----------------------|------------|------------|\n| Plant & equipment    | 2500       | 2800       |\n| Total assets         | 2950       | 3250       |\n| Liabilities          | 1550       | 1550       |\n| Net assets           | 1400       | 1700       |"
        ],
        "topic": "Accounting",
        "question_id": "test-261",
        "python_solution": "",
        "ground_truth": null,
        "question": "On the 1st of January 2019, ABC corporation purchased a 20% stake with voting rights in XYZ Ltd. for $400 million. ABC corporation has a seat on XYZ's board of directors and has a say in their policymaking. An analyst named Anne collects specific financial data for XYZ in 2019. The plant and equipment are depreciated on a linear basis and have a remaining lifespan of 10 years. From the Exhibit mentioned, what is the goodwill included in ABC\u2019s acquisition of XYZ?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    percentage_of_ownership = 0.2  # 20%\n    book_value_of_net_assets = 1400  # in million\n    fair_value_of_net_assets = 1700  # in million\n    acquisition_price = 400  # in million\n\n    # Do math calculation to get the answer\n    proportionate_book_value_of_net_assets = book_value_of_net_assets * percentage_of_ownership\n    proportionate_fair_value_of_net_assets = fair_value_of_net_assets * percentage_of_ownership\n    excess_over_book_value = proportionate_fair_value_of_net_assets - proportionate_book_value_of_net_assets\n    excess_over_fair_value = acquisition_price - proportionate_fair_value_of_net_assets\n    goodwill = excess_over_fair_value\n\n    # return answer\n    return goodwill\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-262",
        "python_solution": "",
        "ground_truth": null,
        "question": "If rolling the dice, the likelihood that number 1 is on top is 1/6, what are the chances of this happening?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_of_number_1 = 1/6\n    \n    # Do math calculation to get the answer\n    # Since probability is given directly, no further calculation needed\n    answer = probability_of_number_1\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Maturity | Coupon | Price |\n|----------|--------|-------|\n| 6 months | 4.5%   | 101.47 |\n| 1 year   | 6.0%   | 102.75 |\n| 2 years  | 7%     | 100.32 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-263",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the table illustrating data about three semiannual coupon payment bonds, what is the discount factor for d(0.5)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price = 101.47\n    coupon_rate = 0.045  # 4.5%\n    maturity = 0.5  # 6 months\n    face_value = 100\n    \n    # Do math calculation to get the discount factor for d(0.5)\n    # Using the formula: Price = Face Value * Coupon Rate / 2 * (1 + Discount Factor) + Face Value * Discount Factor\n    # Since the coupon payment is semiannual, we need to divide the coupon rate by 2\n    d_05 = (price - face_value * coupon_rate / 2) / (face_value + face_value * coupon_rate / 2)\n    \n    # return answer\n    return d_05\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-264",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following table outlines details from the financial reports of BC Enterprises as of December 31, 20X8. Using this data, can you determine the sustainable growth rate of BC Enterprises? The figures are as follows: revenue: $800,000, dividend paid: $80,000, total asset turnover: 0.58, financial leverage: 1.7, sales to net income: 6.5, tax rate: 20%.",
        "output": [
            "Here is the Python program to calculate the sustainable growth rate of BC Enterprises:\n\n```python\ndef solution():\n    # Define variables name and value\n    revenue = 800000\n    dividend_paid = 80000\n    total_asset_turnover = 0.58\n    financial_leverage = 1.7\n    sales_to_net_income = 6.5\n    tax_rate = 0.20\n\n    # Calculate net income\n    net_income = revenue / sales_to_net_income\n\n    # Calculate retention ratio\n    retention_ratio = (net_income - dividend_paid) / net_income\n\n    # Calculate return on equity (ROE)\n    ROE = (net_income / revenue) * total_asset_turnover * financial_leverage\n\n    # Calculate sustainable growth rate\n    sustainable_growth_rate = retention_ratio * ROE * (1 - tax_rate)\n\n    # return answer\n    return sustainable_growth_rate\n```\n\nThis program will calculate the sustainable growth rate using the given financial data and formulas."
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-265",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming equal funding from each source and a marginal tax rate of 30%, what is the weighted average cost of capital (%) if a company's post-tax debt costs, preferred shares, and equity are 8.4%, 14%, and 16% respectively?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    debt_cost = 0.084  # post-tax debt cost\n    preferred_shares_cost = 0.14\n    equity_cost = 0.16\n    marginal_tax_rate = 0.3  # not used in this case since costs are already post-tax\n    weight = 1/3  # equal funding from each source\n\n    # Do math calculation to get the answer\n    weighted_debt_cost = weight * debt_cost\n    weighted_preferred_shares_cost = weight * preferred_shares_cost\n    weighted_equity_cost = weight * equity_cost\n    weighted_average_cost_of_capital = weighted_debt_cost + weighted_preferred_shares_cost + weighted_equity_cost\n    weighted_average_cost_of_capital_percentage = round(weighted_average_cost_of_capital * 100, 2)  # convert to percentage\n\n    # return answer\n    return weighted_average_cost_of_capital_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Liabilities at  year-end | \u00a3 1,000 |\n|-------------------------|---------|\n| Contributed capital at year-end | \u00a3 500 |\n| Beginning retained earnings | \u00a3 600 |\n| Revenue during the year | \u00a3 5,000 |\n| Expenses during the year | \u00a3 4,300 |"
        ],
        "topic": "Accounting",
        "question_id": "test-266",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher has gathered the following data about Smithson Enterprises. No distributions have been made to the owners. What would most probably be the researcher's estimate of the total assets at the end of the year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    liabilities = 1000\n    contributed_capital = 500\n    beginning_retained_earnings = 600\n    revenue = 5000\n    expenses = 4300\n\n    # Do math calculation to get the answer\n    # Calculate net income\n    net_income = revenue - expenses\n    \n    # Calculate ending retained earnings\n    ending_retained_earnings = beginning_retained_earnings + net_income\n    \n    # Calculate equity\n    equity = contributed_capital + ending_retained_earnings\n    \n    # Calculate total assets\n    total_assets = liabilities + equity\n    \n    # return answer\n    return total_assets\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-267",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that a random variable Y follows a normal distribution with a mean of 40 and a standard deviation of 14. What is the likelihood that Y is not within the range of 12 to 61?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean = 40\n    standard_deviation = 14\n    lower_bound = 12\n    upper_bound = 61\n    \n    # Do math calculation to get the answer\n    from scipy.stats import norm\n    z_score_lower = (lower_bound - mean) / standard_deviation\n    z_score_upper = (upper_bound - mean) / standard_deviation\n    \n    probability_within_range = norm.cdf(z_score_upper) - norm.cdf(z_score_lower)\n    probability_not_within_range = 1 - probability_within_range\n    \n    answer = probability_not_within_range\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-268",
        "python_solution": "",
        "ground_truth": null,
        "question": "How many permutations can be made when selecting 4 items from a group of 10 items?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_items = 10\n    selected_items = 4\n    \n    # Do math calculation to get the answer\n    import math\n    permutations = math.factorial(total_items) / math.factorial(total_items - selected_items)\n    \n    # return answer\n    return permutations\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-269",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is a trader based in the United States. John has posted a 6-month forward exchange rate in USD/GBP at 1.3923. Additionally, John predicts a 6-month forward point percentage of 5.6%. Which among the following selections for the USD/GBP spot rate would be the most precise?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rate = 1.3923\n    forward_point_percentage = 5.6 / 100\n    \n    # Do math calculation to get the answer\n    spot_rate = forward_rate / (1 + forward_point_percentage)\n    \n    # return answer\n    return spot_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-270",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Chief Information Officer of a private equity firm in Canada is looking to secure the interest on a three-month \"bridge\" loan that his company will acquire in six months to finalize an LBO transaction. He trades the applicable interest rate futures contracts at 98.05. After six months, he starts the loan at 2.70% and neutralizes the hedge at 97.30. What is the effective interest rate on the loan?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    contract_price_at_hedge = 98.05\n    contract_price_at_exit = 97.30\n    floating_interest_rate = 2.70 / 100\n    \n    # Calculate change in contract price (gain or loss from hedging)\n    contract_change = (contract_price_at_exit - contract_price_at_hedge) / contract_price_at_hedge\n    \n    # Calculate effective interest rate\n    effective_interest_rate = floating_interest_rate + contract_change\n    \n    # Convert to percentage and round to 2 decimal places\n    effective_interest_rate_percentage = round(effective_interest_rate * 100, 2)\n    \n    # return answer\n    return effective_interest_rate_percentage\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-271",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a functional procedure has a 5% chance of resulting in a substantial financial loss and if not, no significant loss is recorded (i.e., Bernoulli). If the substantial loss happens, the intensity is normally distributed with an average of $4 million and a standard deviation of $2 million. What is the expected shortfall at the 95% confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_loss = 0.05\n    mean_loss = 4000000\n    std_loss = 2000000\n    confidence_level = 0.95\n    \n    # Do math calculation to get the answer\n    from scipy.stats import norm\n    z_score = norm.ppf(confidence_level)\n    expected_shortfall = probability_loss * (mean_loss + (std_loss * z_score / (1 - confidence_level)))\n    \n    # return answer\n    return expected_shortfall\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-272",
        "python_solution": "",
        "ground_truth": null,
        "question": "Miller is a tax consultant who gives tax awareness counsel to individual clients. Miller's client is Jane who currently has $10 million invested in a tax-deferred account earning 8% annually. Jane intends to liquidate the investment after five years, accrue the sale proceeds in a lump sum (which are taxed at a 20% rate), and utilize the proceeds to buy a mansion. Jane requested Miller to determine the leftover after-tax wealth after five years. What will be the after-tax wealth in Jane's tax-deferred account at the conclusion of the five years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 10000000  # $10 million\n    annual_growth_rate = 0.08     # 8%\n    tax_rate = 0.20               # 20%\n    years = 5\n    \n    # Do math calculation to get the answer\n    future_value = initial_investment * (1 + annual_growth_rate) ** years\n    taxes_owed = future_value * tax_rate\n    after_tax_wealth = future_value - taxes_owed\n    \n    # return answer\n    return after_tax_wealth\n```"
        ]
    },
    {
        "tables": [
            "|                          | Portfolio W       | Futures Contract and CTD Bond |\n| ------------------------ | --------------- | ----------------------------- |\n| Market value            | $120,349,000      | Price                         | 143.20                      |\n| Modified duration       | 9.30             | Modified duration             | 9.00                         |\n| Basis point value       | $111,924.57      | Basis point value             | 128.88                       |\n|                          |                   | Conversion factor             | 0.75                         |\n|                          |                   | Contract size                 | $100,000                     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-273",
        "python_solution": "",
        "ground_truth": null,
        "question": "John, a beginner analyst, oversees a portfolio X. The portfolio is completely committed to US Treasuries. John aims to fully safeguard this bond portfolio against any increase in interest rates. Exhibit 1 discloses certain information regarding Portfolio X, along with the related Treasury futures contract, and the cheapest-to-deliver (CTD) bond. Considering the data in Exhibit 1, how many Treasury futures contracts does John need to sell to fully protect Portfolio X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_market_value = 120349000\n    portfolio_modified_duration = 9.30\n    portfolio_basis_point_value = 111924.57\n    futures_contract_price = 143.20\n    futures_contract_modified_duration = 9.00\n    futures_contract_basis_point_value = 128.88\n    conversion_factor = 0.75\n    contract_size = 100000\n\n    # Do math calculation to get the answer\n    portfolio_hedge_ratio = (portfolio_basis_point_value / futures_contract_basis_point_value) * (futures_contract_modified_duration / portfolio_modified_duration)\n    number_of_contracts = (portfolio_market_value * portfolio_hedge_ratio) / (contract_size * conversion_factor * futures_contract_price)\n\n    # return answer\n    return round(number_of_contracts)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-274",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current status of the PlayPoint Resort Company is that it has 1.2 million outstanding common shares with a beta of 2.2. Also, it has bonds of a face value of $10 million that will mature in five years and these bonds have an 8% coupon with payments every 6 months, and are calculated to yield 13.65 percent. If PlayPoint decides to issue new bonds up to $2.5 million, the bonds will be priced at par value and will yield 13.65 percent. However, if the company decides to issue bonds beyond $2.5 million, the expected yield on the entire issuance will be 16 percent. PlayPoint recently determined that they can issue new common stock at $10 per share. The present risk-free interest rate is at 3 percent while the expected market return is 10 percent. PlayPoint's marginal tax rate is at 30 percent. What is the weighted average cost of capital if PlayPoint ac",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    outstanding_common_shares = 1200000\n    beta = 2.2\n    face_value_bonds = 10000000\n    coupon_rate = 0.08\n    yield_rate = 0.1365\n    new_bonds_yield_rate_1 = 0.1365\n    new_bonds_yield_rate_2 = 0.16\n    new_common_stock_price = 10\n    risk_free_interest_rate = 0.03\n    expected_market_return = 0.10\n    marginal_tax_rate = 0.30\n    \n    # Calculate the expected return on common stock using CAPM\n    expected_return_common_stock = risk_free_interest_rate + beta * (expected_market_return - risk_free_interest_rate)\n    \n    # Calculate the present value of the existing bonds' interest payments and the present value of the bonds' face value\n    periods = 10\n    interest_payment = face_value_bonds * coupon_rate / 2\n    present_value_interest_payments = interest_payment / (yield_rate / 2) * (1 - (1 + (yield_rate / 2)) ** -periods)\n    present_value_face_value = face_value_bonds / (1 + (yield_rate / 2)) ** periods\n    \n    # Calculate the current value of existing bonds\n    current_value_existing_bonds = present_value_interest_payments + present_value_face_value\n    \n    # Calculate the new bond issuance costs\n    new_bond_issuance_1 = 2500000\n    new_bond_issuance_2 = 10000000\n    \n    # Calculate the net income for the two scenarios of new bond issuance\n    net_income_new_bond_issuance_1 = new_bond_issuance_1 * new_bonds_yield_rate_1\n    net_income_new_bond_issuance_2 = new_bond_issuance_2 * new_bonds_yield_rate_2\n    \n    # Calculate the after-tax cost of debt for the two scenarios of new bond issuance\n    after_tax_cost_debt_new_bond_issuance_1 = net_income_new_bond_issuance_1 * (1 - marginal_tax_rate) / new_bond_issuance_1\n    after_tax_cost_debt_new_bond_issuance_2 = net_income_new_bond_issuance_2 * (1"
        ]
    },
    {
        "tables": [
            "|                               |         |\n|-------------------------------|---------|\n|Exhibit 1 10-Year Trailing Risk-Adjusted Performance| |\n| Average annual return        | 8.20%   |\n| Minimum acceptable return (MAR) | 5.00%   |\n| Sharpe ratio                 | 0.95    |\n| Sortino ratio                | 0.87    |\n| Upside capture               | 0.66    |\n| Downside capture             | 0.50    |\n| Maximum drawdown             | -24.00% |\n| Drawdown duration            | 4 months|"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-275",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to Exhibit 1, what is the projected semi-deviation for the investment portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    MAR = 0.05  # Minimum acceptable return\n    Sortino_ratio = 0.87  # Sortino ratio\n    \n    # Do math calculation to get the answer\n    semi_deviation = (Sortino_ratio * MAR) / (Sortino_ratio + 1)\n    semi_deviation = (0.05) / 0.87\n    # return answer\n    return semi_deviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-276",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive is considering pricing a put option through a one-period binomial tree. The relevant data include: The present stock price is $30, the strike price of the put option stands at $30. The upward adjustment factor is 1.12, while the downward one rests at 0.92. The risk-free rate comes at 5%. The risk-neutral likelihood of a downward movement is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_price = 30\n    strike_price = 30\n    upward_factor = 1.12\n    downward_factor = 0.92\n    risk_free_rate = 0.05\n    \n    # Do math calculation to get the answer\n    # Calculate the risk-neutral probabilities using the Cox-Ross-Rubinstein model\n    u = upward_factor\n    d = downward_factor\n    r = risk_free_rate\n    riskNeutral_up = (1 + r - d) / (u - d)\n    riskNeutral_down = 1 - riskNeutral_up\n    \n    answer = riskNeutral_down\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| ($ millions) | 2016 | 2017 |\n| --- | --- | --- |\n| Revenue | 50 | 45 |\n| Cost of goods sold | 17 | 20 |\n| Inventory | 24 | 20 |\n| Accounts receivable | 20 | 17 |\n| Accounts payable | 30 | 33 |"
        ],
        "topic": "Accounting",
        "question_id": "test-277",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given data, how much money was paid to the vendor?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold_2017 = 20\n    accounts_payable_2016 = 30\n    accounts_payable_2017 = 33\n    \n    # Do math calculation to get the answer\n    money_paid_to_vendor = cost_of_goods_sold_2017 + accounts_payable_2016 - accounts_payable_2017\n    \n    # return answer\n    return money_paid_to_vendor\n```"
        ]
    },
    {
        "tables": [
            "| | Exports | Imports |\n|---|---|---|\n| Initial Value (DCU) | 4,800 | 6,500 |\n| Demand elasticity | 0.70 | 0.55 |\n| **Note:** DCU:  domestic currency units | | |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-278",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will the trade balance be for a theoretical economy given the following international trade data if the value of the ZRB depreciates by 12%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_exports = 4800\n    initial_imports = 6500\n    export_elasticity = 0.70\n    import_elasticity = 0.55\n    depreciation_rate = 0.12\n    \n    # Do math calculation to get the answer\n    change_in_exports = initial_exports * export_elasticity * depreciation_rate\n    change_in_imports = initial_imports * import_elasticity * depreciation_rate\n    \n    new_exports = initial_exports + change_in_exports\n    new_imports = initial_imports - change_in_imports\n    \n    trade_balance = new_exports - new_imports\n    \n    # return answer\n    return trade_balance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-279",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio manager possesses a portfolio of options on a non-dividend paying stock named LYR. The portfolio includes 10,000 deep in-the-money call options on LYR and 50,000 deep out-of-the money call options on LYR. Along with this, there are 20,000 forward contracts on LYR. The current trading price of LYR is USD 100. Given 252 trading days in a year and 30 percent per-year volatility of LYR, what would be the 1-day VaR of the portfolio at the 95 percent confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 100  # Current stock price\n    N1 = 10000  # Number of deep in-the-money call options\n    N2 = 50000  # Number of deep out-of-the money call options\n    N3 = 20000  # Number of forward contracts\n    sigma = 0.3  # Annual volatility\n    T = 1/252  # 1-day time horizon\n    alpha = 0.05  # 95% confidence level\n    z_score = 1.645  # Z-score for 95% confidence level\n    \n    # Calculate the value of in-the-money call options\n    V1 = N1 * S\n    \n    # Calculate the value of out-of-the-money call options\n    V2 = 0  # Value of out-of-the-money options is zero\n    \n    # Calculate the value of forward contracts\n    V3 = N3 * S\n    \n    # Calculate the total value of the portfolio\n    V_total = V1 + V2 + V3\n    \n    # Calculate the daily volatility of the portfolio\n    sigma_daily = sigma * (T**0.5)\n    \n    # Calculate the 1-day VaR of the portfolio\n    VaR = V_total * sigma_daily * z_score\n    \n    # return answer\n    return VaR\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-280",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the total assets of the Silver Airways company are $3,275,000 and their total debt is $2,315,000. Determine the financial leverage assuming Silver Airways securitized $200,000 of its account receivables to a SPE.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 3275000\n    total_debt = 2315000\n    receivables_securitized = 200000\n    \n    # Do math calculation to get the answer\n    equity = total_assets - total_debt\n    total_debt_with_securitization = total_debt - receivables_securitized\n    financial_leverage = total_assets / equity\n    financial_leverage_with_securitization = total_assets / (equity + receivables_securitized)\n    \n    financial_leverage_ratio = total_debt_with_securitization / equity\n    \n    # return answer\n    return financial_leverage_ratio\n\nresult = solution()\nprint(result)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-281",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the portfolio beta for an investor who opts to borrow an additional $5,000 at the risk-free rate and invest a total of $10,000 in the market portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    amount_invested = 10000\n    amount_borrowed = 5000\n    risk_free_rate = 0  # Assuming the risk-free rate is 0 for simplicity\n    market_portfolio_beta = 1  # By definition, the beta of the market portfolio is 1\n\n    # Do math calculation to get the answer\n    # Since the investor is borrowing at the risk-free rate and investing in the market portfolio,\n    # the beta of the portfolio will be greater than 1 and will increase with the proportion of borrowed funds\n    # in this case, the beta of the portfolio will be 2 (amount_invested + amount_borrowed) / amount_invested\n    portfolio_beta = market_portfolio_beta * (amount_invested + amount_borrowed) / amount_invested\n\n    # return answer\n    return portfolio_beta\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-282",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose the Peterson account experienced a return of -5.3% in a particular month, during which the portfolio benchmark saw a return of -5.5% and the market index had a return of -2.8%. What is the return of the Peterson account attributable to active management?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    peterson_return = -0.053  # Return of the Peterson account\n    benchmark_return = -0.055  # Return of the portfolio benchmark\n    market_return = -0.028  # Return of the market index\n\n    # Do math calculation to get the answer\n    active_management_return = peterson_return - benchmark_return\n\n    # return answer\n    return active_management_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-283",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an employee named Anna, FRM, who works as an analyst at Meyer Industries, is calculating the value at risk (VaR) for the company's profit/loss distribution, which is supposed to be normally distributed with a yearly average of $2 million and a standard deviation of $1 million, what would be the VaR at a 99% confidence level using a parametric method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean = 2000000  # yearly average of $2 million\n    std_dev = 1000000  # standard deviation of $1 million\n    confidence_level = 0.99  # 99% confidence level\n    \n    # Do math calculation to get the answer\n    from scipy.stats import norm\n    z_score = norm.ppf(confidence_level)\n    var = mean - (z_score * std_dev)\n    \n    # return answer\n    return var\n```\nThis program uses the `scipy.stats` module to calculate the z-score corresponding to the 99% confidence level, then uses this z-score to calculate the Value at Risk (VaR) using the parametric method. The result is the VaR at a 99% confidence level for the company's profit/loss distribution."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-284",
        "python_solution": "",
        "ground_truth": null,
        "question": "John Doe bought a mortgage-backed security that has an 8% coupon rate and a par value of $1,000 for $960. The coupon payments are made monthly. How much is the monthly coupon payment?",
        "output": [
            "def solution():\n    # Define variables name and value\n    coupon_rate = 0.08  # 8% coupon rate\n    par_value = 1000    # Par value of $1,000\n    purchase_price = 960  # Purchased for $960\n    payment_frequency = 12  # Monthly payments\n\n    # Do math calculation to get the answer\n    annual_coupon_payment = par_value * coupon_rate\n    monthly_coupon_payment = annual_coupon_payment / payment_frequency\n\n    # return answer\n    return monthly_coupon_payment"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price($) | End of Period Price ($) | Dividends per Share ($) | Shares Outstanding |\n|---|---|---|---|---|\n| D | 3,400 | 3,600 | 120 | 1,500 |\n| E | 4,600 | 3,500 | 150 | 1,100 |\n| F | 1,200 | 1,300 | 180 | 5,000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-285",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, the total return of a market-capitalization-weighted index made up of securities D, E, F, has been compiled by Stacy, a research analyst from a financial investment firm. What is the total return of the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_price_d = 3400\n    end_price_d = 3600\n    dividend_d = 120\n    shares_d = 1500\n    \n    beginning_price_e = 4600\n    end_price_e = 3500\n    dividend_e = 150\n    shares_e = 1100\n    \n    beginning_price_f = 1200\n    end_price_f = 1300\n    dividend_f = 180\n    shares_f = 5000\n    \n    # Calculate market capitalization for each security\n    market_cap_d = beginning_price_d * shares_d\n    market_cap_e = beginning_price_e * shares_e\n    market_cap_f = beginning_price_f * shares_f\n    \n    # Calculate total market capitalization\n    total_market_cap = market_cap_d + market_cap_e + market_cap_f\n    \n    # Calculate return for each security\n    return_d = ((end_price_d - beginning_price_d) + dividend_d) / beginning_price_d\n    return_e = ((end_price_e - beginning_price_e) + dividend_e) / beginning_price_e\n    return_f = ((end_price_f - beginning_price_f) + dividend_f) / beginning_price_f\n    \n    # Calculate weighted return for each security\n    weighted_return_d = (market_cap_d / total_market_cap) * return_d\n    weighted_return_e = (market_cap_e / total_market_cap) * return_e\n    weighted_return_f = (market_cap_f / total_market_cap) * return_f\n    \n    # Calculate total return of the index\n    total_return = weighted_return_d + weighted_return_e + weighted_return_f\n    \n    # return answer\n    return total_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-286",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the yield-to-maturity of Bond B decreases by 30 basis points, and given that its annual modified duration is 6.932 and the annual convexity is 59.270, what should be the expected percentage price change?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 6.932\n    convexity = 59.270\n    yield_change = -30 / 100  # convert basis points to percentage change\n\n    # Do math calculation to get the answer\n    expected_price_change = (-modified_duration * yield_change) + (0.5 * convexity * (yield_change ** 2))\n\n    # return answer\n    return expected_price_change\n```\n\nNote: In the calculation, the yield change is negated because a decrease in yield is equivalent to an increase in bond price. Also, the `yield_change` is squared when using it with the convexity, as per the convexity formula."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-287",
        "python_solution": "",
        "ground_truth": null,
        "question": "What would the corresponding call option be worth, taking into account that the present share price is $25, an European put option on the share with a $27 strike price and a 9-month expiration is priced at $3, and the risk-free rate stands at 4%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 25  # Present share price\n    K = 27  # Strike price\n    T = 9/12  # Time to expiration in years\n    r = 0.04  # Risk-free rate\n    P = 3  # European put option price\n\n    # Do math calculation to get the answer\n    # Use Put-Call Parity to calculate the call option price\n    C = P + S - K * (1 / (1 + r) ** T)\n\n    # return answer\n    return C\n```"
        ]
    },
    {
        "tables": [
            "| Fair value of investment in Gama Company | $ 150,000 |\n| --- | --- |\n| Retained earning | $ 782,000 |\n| Common stock, $1 par value | $ 560,000 |\n| Preferred stock, $100 par value | $ 126,000 |\n| Deferred taxes | $ 75,000 |\n| Accumulated OCI | $ 35,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-288",
        "python_solution": "",
        "ground_truth": null,
        "question": "The subsequent balance sheet belongs to Omega Firm and includes chosen data at the year's conclusion: The investment in Alpha Firm was $130,000 and is categorised as FVOCI. By the year's end, what is the total owners' equity for Omega Firm?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    retained_earning = 782000\n    common_stock = 560000\n    preferred_stock = 126000\n    accumulated_OCI = 35000\n    fair_value_of_investment = 150000\n    investment_in_Alpha_Firm = 130000\n    \n    # Do math calculation to get the answer\n    total_owner_equity = retained_earning + common_stock + preferred_stock + accumulated_OCI\n    answer = total_owner_equity\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Time=0 | Time=1 | Time=2 |\n|---|---|---|\n| SO=100 | Su=110 | Suu=121 |\n|   | Sd=92 | Sud/du=101.20 |\n|   |   | Sdd=84.64 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-289",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose a company's share is expected to move as displayed below in the next two periods. The starting price for the share is $100. Considering the odds of an increase in any given period as 40% and the chance of a decrease is 60%, what is the likelihood of the share's price reaching $101.20 after two periods, using the binomial model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_increase = 0.4  # Probability of an increase in any given period\n    p_decrease = 0.6  # Probability of a decrease in any given period\n\n    # Calculate the probability of the share's price reaching $101.20 after two periods\n    # We want to find P(Sud/du), which is the probability of one increase and one decrease in any order\n    # Using the binomial probability formula, we can calculate this as:\n    p_suddu = 2 * (p_increase ** 1) * (p_decrease ** 1)\n\n    # Return answer\n    return p_suddu\n```\n\nThis program calculates the probability of the share's price reaching $101.20 after two periods, given the probabilities of an increase and a decrease in each period. The probability of reaching $101.20 is the probability of having one increase and one decrease in any order, which is calculated using the binomial probability formula."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-290",
        "python_solution": "",
        "ground_truth": null,
        "question": "If PYTHON Ltd. sells an intangible asset that was originally acquired for \u20ac12 million and has an accumulated amortization of \u20ac2 million, and reported a loss of \u20ac3.2 million on its sale, what is a probable sale price of the asset?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_acquisition_cost = 12000000  # in euros\n    accumulated_amortization = 2000000   # in euros\n    reported_loss_on_sale = 3200000      # in euros\n    \n    # Do math calculation to get the answer\n    carrying_value = original_acquisition_cost - accumulated_amortization\n    sale_price = carrying_value - reported_loss_on_sale\n    \n    # return answer\n    return sale_price\n```"
        ]
    },
    {
        "tables": [
            "|                            |REIT B  |\n|----------------------------|--------|\n|Funds from operations (FFO)|$320,514|\n|Shares outstanding          |76,000  |\n|Property subsector average P/FFO multiple|15.3x|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-291",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share value of REIT B using the average P/FFO multiple method of the property subsector?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    funds_from_operations = 320514\n    shares_outstanding = 76000\n    property_subsector_average_p_ffo_multiple = 15.3\n    \n    # Do math calculation to get the answer\n    ffo_per_share = funds_from_operations / shares_outstanding\n    per_share_value = ffo_per_share * property_subsector_average_p_ffo_multiple\n    \n    # return answer\n    return per_share_value\n```"
        ]
    },
    {
        "tables": [
            "|  | Number of Options | Weighted Average | Exercise Price |\n| --- | --- | --- | --- |\n| Balance, start of year | 3,666,500 | \u00a33.06 | |\n| Granted  during the  year | 872,000 | \u00a33.30 | |\n| Exercised during the year | -278,400 | \u00a32.88 | |\n| Forfeited during the year | -123,700 | \u00a32.96 | |\n| Balance, end of year | 4,136,400 | \u00a33.13 | |\n| Exercisable at end of the year | 827,280 | \u00a32.90 | |",
            "|               | Share Price | Option Fair Value |\n|---------------|-------------|-------------------|\n| January 1,2014  | \u00a32.85       | \u00a30.370            |\n| July 1, 2014    | \u00a33.00       | \u00a30.390            |\n| December 31, 2014 | \u00a33.06     | \u00a30.400            |\n| Average for 2014 | \u00a32.97      | \u00a30.386            |"
        ],
        "topic": "Accounting",
        "question_id": "test-292",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under the present LTIP, the Board awards options on common shares to the management team. These options necessitate a 6-year service period after the date they are granted before they vest. This information about the stock options granted this year under the LTIP is reviewed by Morrison as shown in Exhibit 2. The financial statements of Clarion are prepared in line with International Financial Reporting Standards (IFRS) and their year-end is December 31. All the options in 2014 were granted on July 1, 2014. Given the market price of shares and the fair value of stock options at crucial dates throughout the year as shown in Exhibit 3, what is the chunk of the compensation expense related to the stock option of the LTIP granted in 2014?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    number_of_options_granted = 872000\n    fair_value_per_option = 0.39\n    vesting_period = 6\n\n    # Do math calculation to get the answer\n    total_fair_value = number_of_options_granted * fair_value_per_option\n    annual_compensation_expense = total_fair_value / vesting_period\n\n    # return answer\n    return annual_compensation_expense\n\nresult = solution()\nprint(f\"The final answer is {result}.\")assistant\n\nIn this program, we first define the number of options granted, the fair value per option, and the vesting period. Then we calculate the total fair value of the stock options granted and divide it by the vesting period to get the annual compensation expense related to the stock option of the LTIP granted in 2014."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-293",
        "python_solution": "",
        "ground_truth": null,
        "question": "The yield for a one-year zero-coupon bond is 4.0%. The yields for zero-coupon bonds for the second and third years are 5.0% and 6.0% respectively. The spot rate for a five-year bond is not provided; however, the future price for a two-year zero-coupon bond starting in three years is 0.8479. What is today's price for a five-year zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    one_year_yield = 0.04\n    two_year_yield = 0.05\n    three_year_yield = 0.06\n    future_two_year_price = 0.8479\n    \n    # Do math calculation to get the answer\n    one_year_zero_coupon_bond = 1 / (1 + one_year_yield)\n    two_year_zero_coupon_bond = 1 / (1 + two_year_yield)**2\n    three_year_zero_coupon_bond = 1 / (1 + three_year_yield)**3\n    \n    # Implied five-year zero-coupon bond calculation\n    five_year_zero_coupon_bond = three_year_zero_coupon_bond * future_two_year_price\n    \n    # return answer\n    return five_year_zero_coupon_bond\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-294",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the continually compounded return rate if a stock's price increases from $15.00 to $16.20 over the course of a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 15.00\n    final_price = 16.20\n    time_in_years = 1\n    \n    # Do math calculation to get the answer\n    import math\n    continually_compounded_return_rate = math.log(final_price / initial_price) / time_in_years\n    \n    # return answer\n    return continually_compounded_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-295",
        "python_solution": "",
        "ground_truth": null,
        "question": "A corporation bought a storage facility for \u20ac35 million and invested an extra \u20ac2.0 million for improvements to the building's roof and windows, \u20ac0.5 million to adapt the inner arrangement to their standards (repositioning walls, adding and removing dividers, etc.) and \u20ac0.1 million on a training and introduction program to acquaint workers with the premises. What is the cost to be capitalized to the building account (in millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    building_cost = 35  # in millions\n    roof_windows_improvement = 2.0  # in millions\n    inner_arrangement_adaptation = 0.5  # in millions\n    training_program = 0.1  # in millions\n    \n    # Do math calculation to get the answer\n    total_capitalized_cost = building_cost + roof_windows_improvement + inner_arrangement_adaptation\n    \n    # return answer\n    return total_capitalized_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-296",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that JJ Corporation initially reported an operating income of $360,000, which later changed to $420,000. If the financial cost stands at $120,000, how would you calculate JJ Corporation's degree of financial leverage (DFL)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_operating_income = 360000\n    changed_operating_income = 420000\n    financial_cost = 120000\n\n    # Do math calculation to get the answer\n    initial_earnings_before_interest_and_taxes = initial_operating_income\n    changed_earnings_before_interest_and_taxes = changed_operating_income\n    initial_net_income = initial_earnings_before_interest_and_taxes - financial_cost\n    changed_net_income = changed_earnings_before_interest_and_taxes - financial_cost\n    percentage_change_in_net_income = ((changed_net_income - initial_net_income) / initial_net_income) * 100\n    percentage_change_in_earnings_before_interest_and_taxes = ((changed_earnings_before_interest_and_taxes - initial_earnings_before_interest_and_taxes) / initial_earnings_before_interest_and_taxes) * 100\n    degree_of_financial_leverage = percentage_change_in_net_income / percentage_change_in_earnings_before_interest_and_taxes\n    \n    # return answer\n    return degree_of_financial_leverage\n```"
        ]
    },
    {
        "tables": [
            "| Name National Annual ID Salary Number | Loan Amount | | Model Prediction | Actual Result | Prediction Result | Type 1 Error | Type 2 Error |\n|---|---|---|---|---|---|---|---|\n| Garcia XXX 099 $105,000 | $25,000 | | Default | Default | 1 | 0 | 0 |\n| Rodriquez XXX 810 $58,000 | $10,000 | | No Default | No Default | 1 | 0 | 0 |\n| Brown XXX 129 $75,000 | $15,000 | | Default | No Default | 0 | 1 | 0 |\n| Anderson XXX 193 $43,000 | $7,500 | | No Default | No Default | 1 | 0 | 0 |\n| Lewis XXX 122 $64,500 | $42,000 | | No Default | Default | 0 | 0 | 1 |\n| Number and use of client records | | | | | | | |\n| Total # of historical records | | | | 10,014 | | | |\n| Records removed in data cleansing | | | | 2,996 | | | |\n| Records modeled with correct predictions and errors | | | | 7,018 | 5,851 | 273 | 894 |\n\nNote: 1 in Prediction Result column is a correct prediction; 0 is an incorrect prediction."
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-297",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the results presented for the BETA model (Exhibit 1) along with its relevant documentation, what is the model's precision? The model was confirmed by Thompson to have accurately forecasted a default in 5,290 cases from the model prediction set after the data was fully processed. This is from a sample of loans taken from the BETA model where anticipated and actual defaults were compared for the previous 12 months.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_correct_default_predictions = 5290\n    total_type_1_errors = 273\n    \n    # Do math calculation to get the answer\n    precision = total_correct_default_predictions / (total_correct_default_predictions + total_type_1_errors)\n    \n    # return answer\n    return precision\n```\n\nThis Python program calculates the precision of the BETA model by dividing the total number of correct default predictions (5290) by the sum of correct default predictions and Type 1 errors (false positives) (273). The result represents the proportion of correctly predicted defaults among all predicted defaults."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-298",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the performance of the Russell 1000 from February 1990 to December 2016, with a monthly arithmetic return of 0.878% and a volatility characterized by a 4.199% standard deviation of return, what would be the geometric return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_arithmetic_return = 0.878 / 100  # convert percentage to decimal\n    monthly_volatility = 4.199 / 100  # convert percentage to decimal\n    \n    # Do math calculation to get the answer\n    # Using the formula: Geometric return = Arithmetic return - (Volatility^2) / 2\n    monthly_geometric_return = monthly_arithmetic_return - (monthly_volatility ** 2) / 2\n    geometric_return = (1 + monthly_geometric_return) ** 12 - 1  # convert monthly to annual\n    \n    # return answer\n    return geometric_return\n```"
        ]
    },
    {
        "tables": [
            "| Factor    | Time to Maturity (years) - 5 | Time to Maturity (years) - 20 |\n| --------- | ---------------------------- | ----------------------------- |\n| Level     | -0.4352%                     | -0.5128%                      |\n| Steepness | -0.0515%                     | -0.3015%                      |\n| Curvature | 0.3963%                      | 0.5227%                       |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-299",
        "python_solution": "",
        "ground_truth": null,
        "question": "Display 1. Tri-Factor Model of Term Structure Note: The entries show how the yields would alter for a one standard deviation boost in a factor. How much would you expect the yield on the 20-year bond to change due to an increase in the steepness factor by two standard deviations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    change_in_steepness_factor = -0.3015  # Change in yield due to one standard deviation increase in steepness factor for 20-year bond\n    standard_deviation_increase = 2  # Number of standard deviations to increase the steepness factor by\n    \n    # Do math calculation to get the answer\n    expected_change_in_yield = change_in_steepness_factor * standard_deviation_increase\n    \n    # return answer\n    return expected_change_in_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-300",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a manufacturing firm, the accountant named Samuel discovered that the acquisition cost of a certain equipment was $50,000 and noted a $10,000 loss in the income statement upon the equipment's sale. If the accumulated depreciation amounted to $35,000, what was the selling price of the equipment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 50000\n    accumulated_depreciation = 35000\n    loss_on_sale = 10000\n    \n    # Do math calculation to get the answer\n    carrying_value = acquisition_cost - accumulated_depreciation\n    selling_price = carrying_value - loss_on_sale\n    \n    # return answer\n    return selling_price\n\n# Test the function\nprint(\"The selling price of the equipment is: \", solution()) \n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-301",
        "python_solution": "",
        "ground_truth": null,
        "question": "When the 95% confidence level VaR model of Chase Corporation is being backtested using the data from the last 750 trading days, how many anticipated irregularities would we expect to find?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    confidence_level = 0.95\n    trading_days = 750\n    \n    # Do math calculation to get the answer\n    anticipated_irregularities = trading_days * (1 - confidence_level)\n    \n    # return answer\n    return anticipated_irregularities\n```"
        ]
    },
    {
        "tables": [
            "| Country       | Currency   | Spot Exchange Ratea    | One Year Risk-free Rate | Expected Annual Inflation Rate |\n|:-------------:|:----------:|:----------------------:|:-----------------------:|:----------------------:|\n| United States | US$        | NA                     | 4.80%                   | 2.30%                  |\n| Canada        | C$         | 1.2138-1.2259          | 4.10%                   | 1.90%                  |\n| Brazil        | Real (BRL) | 2.3844-2.4082          | 8.80%                   | 6.30%                  |\n\naNumber of foreign currency units per one U.S. dollar."
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-302",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the bid-side quote for the CAD/BRL from a merchant is C$0.5250, what is the profit for Johnson from a US$1,000,000 initial investment in the triangular arbitrage opportunity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    usd_initial_investment = 1000000\n    usd_to_cad_bid = 1.2259  # Use the bid rate to sell USD for CAD\n    cad_to_brl_bid = 0.5250  # Use the bid rate to buy BRL from CAD\n    brl_to_usd_ask = 2.3844  # Use the ask rate to buy USD from BRL\n\n    # Do math calculation to get the answer\n    cad_amount = usd_initial_investment / usd_to_cad_bid\n    brl_amount = cad_amount / cad_to_brl_bid\n    usd_final_amount = brl_amount / brl_to_usd_ask\n    profit = usd_final_amount - usd_initial_investment\n\n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-303",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the study, 65% of all businesses possess a scanner. If we choose 8 businesses, what are the chances that five businesses would own a scanner?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_scanner = 0.65  # probability of a business owning a scanner\n    n_businesses = 8  # number of businesses chosen\n    n_scanners = 5  # number of businesses that own a scanner\n\n    # Do math calculation to get the answer\n    from math import comb\n    probability = comb(n_businesses, n_scanners) * (p_scanner ** n_scanners) * ((1 - p_scanner) ** (n_businesses - n_scanners))\n\n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-304",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume that the continuously compounded 5-year spot rate is 10% and the 4-year spot rate is 8.8%. Could you determine the 1-year forward rate four years in the future?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r_5 = 0.10  # 5-year spot rate\n    r_4 = 0.088  # 4-year spot rate\n\n    # Do math calculation to get the answer\n    # calculate the 1-year forward rate four years in the future using the formula: f(4,5) = (r_5 * (1 + r_5)^5) / ((1 + r_4)^4) - 1\n    forward_rate = ((1 + r_5)**5) / ((1 + r_4)**4) - 1\n\n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [
            "| Asset class     | Portfolio weight (%) | Benchmark weight (%) | Portfolio return (%) | Benchmark return (%) |\n|-----------------|----------------------|----------------------|----------------------|----------------------|\n| Domestic        | 45                   | 50                   | 12                   | 10                   |\n| International equity | 25           | 20                   | 15                   | 12                   |\n| Bonds           | 30                   | 30                   | 7                    | 8                    |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-305",
        "python_solution": "",
        "ground_truth": null,
        "question": "The research team gathered the following data: Can you compute the value added for the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    domestic_weight = 0.45  # Portfolio weight for Domestic equity\n    int_equity_weight = 0.25  # Portfolio weight for International equity\n    bonds_weight = 0.30  # Portfolio weight for Bonds\n    domestic_benchmark_weight = 0.50  # Benchmark weight for Domestic equity\n    int_equity_benchmark_weight = 0.20  # Benchmark weight for International equity\n    bonds_benchmark_weight = 0.30  # Benchmark weight for Bonds\n    domestic_return = 0.12  # Portfolio return for Domestic equity\n    int_equity_return = 0.15  # Portfolio return for International equity\n    bonds_return = 0.07  # Portfolio return for Bonds\n    domestic_benchmark_return = 0.10  # Benchmark return for Domestic equity\n    int_equity_benchmark_return = 0.12  # Benchmark return for International equity\n    bonds_benchmark_return = 0.08  # Benchmark return for Bonds\n\n    # Calculate portfolio return\n    portfolio_return = (domestic_weight * domestic_return) + \\\n                       (int_equity_weight * int_equity_return) + \\\n                       (bonds_weight * bonds_return)\n\n    # Calculate benchmark return\n    benchmark_return = (domestic_benchmark_weight * domestic_benchmark_return) + \\\n                       (int_equity_benchmark_weight * int_equity_benchmark_return) + \\\n                       (bonds_benchmark_weight * bonds_benchmark_return)\n\n    # Calculate value added\n    value_added = portfolio_return - benchmark_return\n\n    # return answer\n    return value_added\n```"
        ]
    },
    {
        "tables": [
            "| Year | Return(%) |\n|------|-----------|\n| 2008 | 22        |\n| 2009 | -25       |\n| 2010 | 11        |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-306",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the yearly geometric mean return of a mutual fund based on the noted annual returns rates?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [22, -25, 11]\n    \n    # Convert returns from percentage to decimal\n    returns = [return_/100 for return_ in returns]\n    \n    # Calculate the geometric mean return\n    import math\n    n = len(returns)\n    geometric_mean_return = math.pow(math.prod([1 + return_ for return_ in returns]), 1/n) - 1\n    \n    # return answer\n    return geometric_mean_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-307",
        "python_solution": "",
        "ground_truth": null,
        "question": "Position 1 (FTSE 100 Futures Contract): Harmony Capital maintains a long position in a FTSE 100 futures contract that is set to mature in three months. The Nikkei 225 Stock Index has a continuously compounded dividend yield of 1.1%, and the current level of the stock index is 16,080. The constantly compounded yearly interest rate is 0.2996%. What is the prevailing no-arbitrage futures price of the FTSE 100 futures contract (Position 1)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 16080  # Current level of the stock index\n    q = 0.011  # Continuously compounded dividend yield\n    r = 0.002996  # Continuously compounded yearly interest rate\n    T = 3 / 12  # Time to maturity in years\n    \n    # Do math calculation to get the answer\n    F = S * (e ** ((r - q) * T))\n    \n    # Import necessary module\n    import math\n    \n    # Define e as the base of the natural logarithm\n    e = math.e\n    \n    # Calculate the no-arbitrage futures price of the FTSE 100 futures contract\n    F = S * (e ** ((r - q) * T))\n    \n    # return answer\n    return F\n\n# Execute the function and print the answer\nanswer = solution()\nprint(answer)\n```\nPlease note that you need to have Python and the math module installed in your environment to run this code.\n\nHowever, as per the given guidelines, I should not have included the execution part of the code, I apologize for the mistake.\n\nHere is the corrected code:\n\n```python\ndef solution():\n    # Define variables name and value\n    S = 16080  # Current level of the stock index\n    q = 0.011  # Continuously compounded dividend yield\n    r = 0.002996  # Continuously compounded yearly interest rate\n    T = 3 / 12  # Time to maturity in years\n    \n    # Import necessary module\n    import math\n    \n    # Define e as the base of the natural logarithm\n    e = math.e\n    \n    # Calculate the no-arbitrage futures price of the FTSE 100 futures contract\n    F = S * (e ** ((r - q) * T))\n    \n    # return answer\n    return F\n```"
        ]
    },
    {
        "tables": [
            "| Revenue        | \u00a3800,000 |\n| -------------- | -------- |\n| Variable cost  | \u00a3400,000 |\n| Fixed cost     | \u00a3200,000 |\n| Operating income | \u00a3200,000 |\n| Interest       | \u00a360,000  |\n| Net income     | \u00a3140,000 |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-308",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the company's total degree of leverage (DTL), based on the information provided for the company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 800000  # \u00a3800,000\n    variable_cost = 400000  # \u00a3400,000\n    fixed_cost = 200000  # \u00a3200,000\n    operating_income = 200000  # \u00a3200,000\n    interest = 60000  # \u00a360,000\n    net_income = 140000  # \u00a3140,000\n\n    # Do math calculation to get the answer\n    # Calculate the contribution margin (CM)\n    contribution_margin = revenue - variable_cost\n    \n    # Calculate the operating leverage (DOL)\n    operating_leverage = contribution_margin / operating_income\n    \n    # Calculate the financial leverage (DFL)\n    financial_leverage = operating_income / net_income\n    \n    # Calculate the degree of total leverage (DTL)\n    total_leverage = operating_leverage * financial_leverage\n    \n    # return answer\n    return total_leverage\n```"
        ]
    },
    {
        "tables": [
            "\n|                                             |                               |\n|---------------------------------------------|-------------------------------|\n| Cost of the equipment                       | UYP 1,200,000                 |\n| Estimated residual value                    | UYP 200,000                   |\n| Expected useful life                        | 8 years                       |\n| Total productive capacity                   | 800,000 units                 |\n| Production in FY 2009                       | 135,000 units                 |\n| Expected production for the next 7 years    | 95,000 units each year        |\n"
        ],
        "topic": "Accounting",
        "question_id": "test-309",
        "python_solution": "",
        "ground_truth": null,
        "question": "Carlos Perez from the Uruguayan company LUIGI Ltd., is calculating the depreciation expense of manufacturing machinery for the financial year closing on 31 December 2009. The machinery was purchased on 1 January 2009. Given the information gathered by Perez, what would be the amount of depreciation expense (in UYP) on LUIGI's profit and loss statement related to the manufacturing machinery, if LUIGI uses the units-of-production method? (Currency in Uruguayan pesos, UYP).",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_equipment = 1200000\n    estimated_residual_value = 200000\n    production_in_fy_2009 = 135000\n    total_productive_capacity = 800000\n\n    # Do math calculation to get the answer\n    depreciable_amount = cost_of_equipment - estimated_residual_value\n    depreciation_rate = depreciable_amount / total_productive_capacity\n    depreciation_expense = depreciation_rate * production_in_fy_2009\n    answer = depreciation_expense\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-310",
        "python_solution": "",
        "ground_truth": null,
        "question": "A risk assessor is computing the VaR for a portfolio using a data set of 50 weekly returns. The average weekly return calculated from the sample is 8% with a standard deviation of 17%. Given that weekly returns are assumed to be independent and identically distributed, what is the standard deviation of the average weekly return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 50  # Number of weekly returns\n    average_weekly_return = 0.08  # 8% average weekly return\n    standard_deviation_weekly_return = 0.17  # 17% standard deviation of weekly returns\n\n    # Do math calculation to get the answer\n    # The standard deviation of the average weekly return is calculated using the formula for the standard error of the mean (SEM)\n    standard_deviation_average_weekly_return = standard_deviation_weekly_return / (sample_size ** 0.5)\n\n    # return answer\n    return standard_deviation_average_weekly_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-311",
        "python_solution": "",
        "ground_truth": null,
        "question": "The preferred stock of Company N has a par value of $50 per share and it provides an annual dividend of 3.8%. If Nick thinks that it's reasonably priced at the market cost of $30, what is the capitalization rate of the preferred stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 50  # Par value of the preferred stock per share\n    annual_dividend_rate = 0.038  # Annual dividend rate of 3.8%\n    market_cost = 30  # Market cost per share\n    \n    # Do math calculation to get the answer\n    annual_dividend_per_share = par_value * annual_dividend_rate\n    capitalization_rate = (annual_dividend_per_share / market_cost) * 100\n    \n    # return answer\n    return capitalization_rate\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "markdown\n|                                      | 2015 | 2016 |\n|--------------------------------------|------|------|\n| **Cosmetic firm B.S for the ending 31 December** |      |      |\n| Cash                                 | 210  | 310  |\n| Accounts receivable                  |      | 31   |\n| Inventory                            | 60   | 80   |\n| Fixed assets                         | 200  | 200  |\n| Accumulated depreciation             |      | (35) |\n| Total assets                         | 470  | 586  |\n| Accounts payable                     | 105  | 162  |\n| Long-term debt                       | 235  | 273  |\n| Common stock                         | 130  | 130  |\n| Retained earnings                    |      | 21   |\n| Total liabilities and shareholders' equity | 470  | 586  |\n",
            "|                                  | US $/C$ |\n|----------------------------------|---------|\n| Rate on 31 December 2015         | 0.89    |\n|                                  |         |\n| Average rate in 2016             | 0.96    |\n| Weighted-average rate for inventory purchases | 0.94    |\n| Rate on 31 December 2016         | 0.94    |"
        ],
        "topic": "Accounting",
        "question_id": "test-312",
        "python_solution": "",
        "ground_truth": null,
        "question": "Sephora is a US-operated company that specializes in the sale of beauty products. It has a Canadian branch, Glossy Inc, that only carries out operations in Canada. It was established on 31 December 2015, and Glossy Inc uses the US dollar as its main currency. Let's consider that fixed assets were purchased at the company's conceptual stage. The financial statement details for the years ending 2015 and 2016 are provided in the adjacent table: Can you compute the converted value of Glossy Inc's retained earnings as of 31 December 2016?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_2015 = 210\n    cash_2016 = 310\n    accounts_receivable_2016 = 31\n    inventory_2015 = 60\n    inventory_2016 = 80\n    fixed_assets = 200\n    accumulated_depreciation_2016 = 35\n    accounts_payable_2015 = 105\n    accounts_payable_2016 = 162\n    long_term_debt_2015 = 235\n    long_term_debt_2016 = 273\n    common_stock = 130\n    exchange_rate_2015 = 0.89\n    average_exchange_rate_2016 = 0.96\n    weighted_average_exchange_rate_inventory = 0.94\n    exchange_rate_2016 = 0.94\n\n    # Calculate the converted value of assets\n    converted_cash_2015 = cash_2015 * exchange_rate_2015\n    converted_cash_2016 = cash_2016 * exchange_rate_2016\n    converted_accounts_receivable_2016 = accounts_receivable_2016 * average_exchange_rate_2016\n    converted_inventory_2015 = inventory_2015 * weighted_average_exchange_rate_inventory\n    converted_inventory_2016 = inventory_2016 * weighted_average_exchange_rate_inventory\n    converted_fixed_assets = fixed_assets * exchange_rate_2015\n    converted_accumulated_depreciation_2016 = accumulated_depreciation_2016 * exchange_rate_2016\n\n    # Calculate the converted value of liabilities\n    converted_accounts_payable_2015 = accounts_payable_2015 * exchange_rate_2015\n    converted_accounts_payable_2016 = accounts_payable_2016 * exchange_rate_2016\n    converted_long_term_debt_2015 = long_term_debt_2015 * exchange_rate_2015\n    converted_long_term_debt_2016 = long_term_debt_2016 * exchange_rate_2016\n\n    # Calculate the converted value of retained earnings\n    converted_retained_earnings = (converted_cash_2016 + converted_accounts_receivable_2016 + converted_inventory_2016 + converted_fixed_assets - converted_accumulated_depreciation_2016) - (converted_accounts_payable_2016 + converted_long_term_debt_2016) - common_stock - (converted_cash_2015"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-313",
        "python_solution": "",
        "ground_truth": null,
        "question": "A data set with 25 entries has an average of 8 and a standard deviation of 15. What is the standard error of this data set's mean?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    n = 25  # number of entries in the data set\n    mean = 8  # average of the data set\n    std_dev = 15  # standard deviation of the data set\n    \n    # Do math calculation to get the answer\n    std_error = std_dev / (n ** 0.5)\n    \n    # return answer\n    return std_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-314",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of 2013, corporation X released 5-year bonds with a face value of $2,000,000. The market interest rate stands at 6%, and on each 31 December, a 5% coupon is paid on the bonds. What could be the calculated bonds payable at the time they were issued?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 2000000\n    market_interest_rate = 0.06\n    coupon_rate = 0.05\n    years = 5\n    \n    # Do math calculation to get the answer\n    # Since it's a 5-year bond, we can calculate the present value of the bond using the formula for present value of an annuity\n    # We will first calculate the annual coupon payment\n    annual_coupon_payment = face_value * coupon_rate\n    \n    # Then we calculate the present value of the coupon payments\n    present_value_coupons = annual_coupon_payment * ((1 - (1 + market_interest_rate)**(-years)) / market_interest_rate)\n    \n    # Finally, we calculate the present value of the face value of the bond at maturity\n    present_value_face_value = face_value / (1 + market_interest_rate)**years\n    \n    # The total bonds payable is the sum of the present value of the coupons and the face value\n    bonds_payable = present_value_coupons + present_value_face_value\n    \n    # return answer\n    return bonds_payable\n```"
        ]
    },
    {
        "tables": [
            "| Net income | | $55 million |\n|---|---|---|\n| Depreciation | | $3 million |\n| Balance Sheet Item | 12/31/2016 | 12/31/2017 |\n| Accounts receivable | $18 million | $20 million |\n| Inventory | $22 million | $17 million |\n| Accounts payable | $6 million | $3 million |"
        ],
        "topic": "Accounting",
        "question_id": "test-315",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given financial reports for Company B, what is the value of the operating cash flow?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 55000000  # $55 million\n    depreciation = 3000000  # $3 million\n    accounts_receivable_2016 = 18000000  # $18 million\n    accounts_receivable_2017 = 20000000  # $20 million\n    inventory_2016 = 22000000  # $22 million\n    inventory_2017 = 17000000  # $17 million\n    accounts_payable_2016 = 6000000  # $6 million\n    accounts_payable_2017 = 3000000  # $3 million\n\n    # Do math calculation to get the answer\n    operating_cash_flow = net_income + depreciation - (accounts_receivable_2017 - accounts_receivable_2016) - (inventory_2017 - inventory_2016) + (accounts_payable_2016 - accounts_payable_2017)\n    \n    # return answer\n    return operating_cash_flow\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-316",
        "python_solution": "",
        "ground_truth": null,
        "question": "A trader takes a short stance on a gold futures contract at a price of USD 294.20. Each contract oversees 100 troy ounces. The starting margin stands at USD 3,200, while the sustaining margin is set at USD 2,900. After the initial day, the futures price decreases to USD 286.6. What is the sum of the variation margin at the closure of the first day?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 294.20  # USD\n    contract_size = 100  # troy ounces\n    initial_margin = 3200  # USD\n    maintenance_margin = 2900  # USD\n    end_of_day_price = 286.60  # USD\n\n    # Do math calculation to get the answer\n    price_change = initial_price - end_of_day_price  # USD\n    variation_margin = price_change * contract_size  # USD\n\n    # return answer\n    return variation_margin\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-317",
        "python_solution": "",
        "ground_truth": null,
        "question": "For a price-weighted index made up of securities XYZ, MNOP, and QRST, an analyst has collected the following data: The starting and ending prices (in \u20ac) and total dividends (in \u20ac) are as follows: XYZ with 25.00 to 27.00 along with 1.00 in dividends, MNOP with 35.00 to 25.00 and 1.50 in dividends, and QRST from 15.00 to 16.00 with 1.00 in dividends. What is the price return of the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    xyz_start_price = 25.00\n    xyz_end_price = 27.00\n    xyz_dividends = 1.00\n    \n    mnop_start_price = 35.00\n    mnop_end_price = 25.00\n    mnop_dividends = 1.50\n    \n    qrst_start_price = 15.00\n    qrst_end_price = 16.00\n    qrst_dividends = 1.00\n    \n    # Calculate the individual security returns without dividends (price return)\n    xyz_price_return = (xyz_end_price - xyz_start_price) / xyz_start_price\n    mnop_price_return = (mnop_end_price - mnop_start_price) / mnop_start_price\n    qrst_price_return = (qrst_end_price - qrst_start_price) / qrst_start_price\n    \n    # Calculate the price return of the index using the individual security returns\n    # Since the problem statement doesn't specify the weightage of each security in the index, \n    # we'll assume equal weightage for simplicity. In a real-world scenario, you'd use the actual weightages.\n    index_price_return = (xyz_price_return + mnop_price_return + qrst_price_return) / 3\n    \n    # return answer\n    return index_price_return\n```"
        ]
    },
    {
        "tables": [
            "| Operating profit margin | 17.5% |\n|-------------------------|-------|\n| Net profit margin       | 11.7% |\n| Total asset turnover    | 0.89 times |\n| Return on assets (ROA)  | 10.4% |\n| Financial leverage      | 1.46  |\n| Debt to equity          | 0.46  |"
        ],
        "topic": "Accounting",
        "question_id": "test-318",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the return on equity (ROE) of the business that a financial examiner has determined?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    return_on_assets = 0.104  # 10.4%\n    financial_leverage = 1.46\n    \n    # Do math calculation to get the answer\n    return_on_equity = return_on_assets * financial_leverage\n    \n    # return answer\n    return return_on_equity\n```"
        ]
    },
    {
        "tables": [
            "| Interest Rate Assumption | Present Value of Liabilities |\n|-------------------------|-----------------------------|\n| 8%                      | $ 436.2 million             |\n| 9%                      | $ 357.5 million             |\n| 10%                     | $ 298.1 million             |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-319",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is a manager of a retirement fund who is interested in assessing the responsiveness of his retirement obligations to fluctuations in market interest rates. Supposing the base rate is 9%, with a 100 basis point rise in rates up to 10%, and a 100 basis point decrease in rates down to 8%. The associated data is given as follows: The effective duration of the retirement fund's obligations is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value_liabilities_8_percent = 436.2  # $ 436.2 million\n    present_value_liabilities_9_percent = 357.5  # $ 357.5 million\n    present_value_liabilities_10_percent = 298.1  # $ 298.1 million\n    rate_change = 0.01  # 100 basis point change is equivalent to 1% change\n    \n    # Do math calculation to get the answer\n    effective_duration = (present_value_liabilities_8_percent - present_value_liabilities_10_percent) / (2 * rate_change * present_value_liabilities_9_percent)\n    \n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [
            "|                     | $ millions |\n|---------------------|------------|\n| Sales               | 4,800      |\n| Cost of goods sold  | 2,880      |\n| Purchases           | 2,940      |\n| Average receivables | 625        |\n| Average inventory   | 710        |\n| Average payables    | 145        |"
        ],
        "topic": "Accounting",
        "question_id": "test-320",
        "python_solution": "",
        "ground_truth": null,
        "question": "The details for a particular business are given. What is the cash conversion cycle (in days) of this business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales = 4800  # in $ millions\n    cost_of_goods_sold = 2880  # in $ millions\n    purchases = 2940  # in $ millions\n    average_receivables = 625  # in $ millions\n    average_inventory = 710  # in $ millions\n    average_payables = 145  # in $ millions\n    \n    # Do math calculation to get the answer\n    days_in_year = 365\n    \n    accounts_receivable_turnover = sales / average_receivables\n    days_sales_outstanding = days_in_year / accounts_receivable_turnover\n    \n    inventory_turnover = cost_of_goods_sold / average_inventory\n    days_inventory_outstanding = days_in_year / inventory_turnover\n    \n    accounts_payable_turnover = purchases / average_payables\n    days_payable_outstanding = days_in_year / accounts_payable_turnover\n    \n    cash_conversion_cycle = days_sales_outstanding + days_inventory_outstanding - days_payable_outstanding\n    \n    # return answer\n    return cash_conversion_cycle\n```"
        ]
    },
    {
        "tables": [
            "| Expected Security Standard Deviation (%) | Beta |\n| --- | --- |\n| Security 1 25 | 1.50 |\n| Security 2 15 | 1.40 |\n| Security 3 20 | 1.60 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-321",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the data collected by the researcher, using the capital asset pricing model, what is the predicted return for Investment A if the anticipated market risk premium is 6% and the risk-free rate is 3%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beta_security1 = 1.50\n    beta_security2 = 1.40\n    beta_security3 = 1.60\n    market_risk_premium = 0.06  # 6%\n    risk_free_rate = 0.03  # 3%\n    \n    # Since Investment A is not specified, we assume it's one of the given securities.\n    # We'll calculate the predicted return for each security and return them as a dictionary.\n    \n    # Do math calculation to get the answer\n    predicted_return_security1 = risk_free_rate + beta_security1 * market_risk_premium\n    predicted_return_security2 = risk_free_rate + beta_security2 * market_risk_premium\n    predicted_return_security3 = risk_free_rate + beta_security3 * market_risk_premium\n    \n    predicted_returns = {\n        \"Security 1\": predicted_return_security1,\n        \"Security 2\": predicted_return_security2,\n        \"Security 3\": predicted_return_security3,\n    }\n    \n    # return answer\n    return predicted_returns\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-322",
        "python_solution": "",
        "ground_truth": null,
        "question": "When a business releases face value bonds worth \u20ac10,000,000 with a 10-year term dated 1 January 2015, the market interest rate of bonds with similar level of risk and terms stands at 6%. These bonds provide a yearly interest rate of 7%, paid out on December 31. Utilizing the effective interest rate method, what would be the interest cost on 31 December 2015?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 10000000  # Face value of the bonds\n    market_interest_rate = 0.06  # Market interest rate\n    bond_interest_rate = 0.07  # Interest rate of the bonds\n    years = 10  # Term of the bonds\n    \n    # Calculate the present value of the bonds\n    present_value = face_value / (1 + market_interest_rate) ** years\n    \n    # Calculate the interest cost for the first year using the effective interest rate method\n    interest_cost = (face_value * bond_interest_rate) - ((face_value - present_value) / years)\n    \n    # return answer\n    return interest_cost\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-323",
        "python_solution": "",
        "ground_truth": null,
        "question": "Smith investigates a technique driven by an event, precisely a potential fusion of B Corporation and U, Inc. B has proposed to acquire Unicorn through a stock-for-stock agreement: the offer ratio is 2 shares of B for every 3 Unicorn shares. B's trading price was \u20ac50 per share before the announcement of fusion, but it decreased to 45 euros per share after the declaration. Before the announcement, U's transaction price per share was 15 euros, and it appreciated to \u20ac20 per share with the expectation of the fusion deal getting necessary permissions and successfully concluding. If we assume the fusion between B and U comes to a successful close, what will be the result of Smith\u2019s merger arbitrage trade if he purchases 24,000 U shares at a rate of 20 euros per share, and goes short on 16,000 B shares at a rate of 45 euros per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    unicorn_shares = 24000\n    unicorn_price = 20  # euros per share\n    b_shares = 16000\n    b_price = 45  # euros per share\n    exchange_ratio = 2/3  # 2 shares of B for every 3 Unicorn shares\n\n    # Do math calculation to get the answer\n    # Calculate the cost of purchasing Unicorn shares\n    unicorn_cost = unicorn_shares * unicorn_price\n    \n    # Calculate the revenue from short selling B shares\n    b_revenue = b_shares * b_price\n    \n    # Calculate the number of new B shares received after the merger\n    new_b_shares = unicorn_shares * exchange_ratio\n    \n    # Calculate the gain/loss from the merger arbitrage trade\n    gain_loss = b_revenue - unicorn_cost + (new_b_shares - b_shares) * b_price\n    \n    # return answer\n    return gain_loss\n\n# Test the function\nresult = solution()\nprint(result)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-324",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's assume that X and Y are random variables, each adheres to a standard normal distribution, and the covariance between X and Y is 0.35. What is the variance of (3X+2Y)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    variance_x = 1  # Variance of a standard normal distribution is 1\n    variance_y = 1  # Variance of a standard normal distribution is 1\n    covariance_xy = 0.35\n    a = 3  # coefficient of X\n    b = 2  # coefficient of Y\n    \n    # Do math calculation to get the answer\n    variance_result = (a**2) * variance_x + (b**2) * variance_y + 2 * a * b * covariance_xy\n    \n    # return answer\n    return variance_result\n```"
        ]
    },
    {
        "tables": [
            "| Date        | 6-month LIBOR |\n|-------------|---------------|\n| Sep 7, 2016 | 2.46%         |\n| Mar 7, 2017 | 1.13%         |\n| Sept 7, 2017| 0.79%         |\n| Mar 7, 2018 | 0.42%         |\n| Sep 7, 2018 | 0.56%         |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-325",
        "python_solution": "",
        "ground_truth": null,
        "question": "On September 7, 2016, Bank XYZ initiated a 2-year interest rate swap contract. Per the terms of the swap, Bank XYZ was slated to receive a fixed 4.10% rate while paying a rate equivalent to LIBOR plus 1.30% on a principal amount of USD 7.5 million. Payments were scheduled biannually. The table below presents the actual annual 6-month LIBOR rates measured over the contract's 2-year lifespan: Assuming there was no default, what amount did Bank XYZ receive on September 7, 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_amount = 7500000\n    fixed_rate = 0.041\n    libor_rates = [0.0246, 0.0113, 0.0079, 0.0042]\n    spread = 0.013\n    payment_frequency = 2  # Payments are made biannually\n    \n    # Do math calculation to get the answer\n    fixed_payment = notional_amount * fixed_rate / payment_frequency\n    \n    floating_payments = []\n    for libor_rate in libor_rates:\n        floating_payment = notional_amount * (libor_rate + spread) / payment_frequency\n        floating_payments.append(floating_payment)\n        \n    net_payments = [fixed_payment - floating_payment for floating_payment in floating_payments]\n    \n    final_payment = net_payments[-1]\n    \n    # return answer\n    return final_payment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-326",
        "python_solution": "",
        "ground_truth": null,
        "question": "Smith is a tax consultant who gives tax planning guidance to individual clients. A client of Smith's is Rose who presently has $10 million invested in a tax-deferred account that generates 8% every year. Rose will offload the investment after five years, collect the sales revenue all at once (withdrawals are taxed at 20%), and use the funds to buy a mansion. Rose requested Smith to estimate the after-tax wealth available after five years. What will be the after-tax wealth in Rose's tax-deferred account at the end of the five years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 10000000  # $10 million\n    annual_return_rate = 0.08  # 8%\n    years = 5\n    tax_rate = 0.20  # 20%\n    \n    # Do math calculation to get the answer\n    future_value = initial_investment * (1 + annual_return_rate) ** years\n    tax_amount = future_value * tax_rate\n    after_tax_wealth = future_value - tax_amount\n    \n    # return answer\n    return after_tax_wealth\n```"
        ]
    },
    {
        "tables": [
            "| Statistic | Value |\n| --- | --- |\n| Covariance between market return and security return [Cov(Rj,Rm)] | 0.01104 |\n| Correlation coefficient between market return and security return (pi,m) | 0.3 |\n| Standard deviation of market return (\u03c3m) | 0.16 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-327",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the beta of security x, \u03b2x, considering the following information about a stock market index y and security x?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cov_market_security = 0.01104\n    correlation_coefficient = 0.3\n    std_dev_market_return = 0.16\n    \n    # Do math calculation to get the answer\n    # The formula for beta is: \u03b2 = Cov(Rj, Rm) / \u03c3^2m\n    # First, we need to calculate the variance of the market return (\u03c3^2m)\n    # Since the standard deviation is given, we can use the formula: \u03c3^2 = \u03c3 * \u03c3\n    variance_market_return = std_dev_market_return ** 2\n    \n    # Now, we can calculate the beta of the security\n    beta_security = cov_market_security / variance_market_return\n    \n    # Alternatively, we can also use the formula: \u03b2 = \u03c1 * (\u03c3j / \u03c3m)\n    # Since the correlation coefficient is given, we can use this formula to verify our result\n    # However, since the standard deviation of the security return is not given, we cannot use this formula directly\n    \n    # return answer\n    return beta_security\n```"
        ]
    },
    {
        "tables": [
            "| Portfolio Number | Expected Nominal Returns | Standard Deviation | Sharpe Ratio |\n|------------------|--------------------------|--------------------|--------------|\n| 1                | 3%                       | 2.50%              | 0.4          |\n| 2                | 4%                       | 4.44%              | 0.45         |\n| 3                | 5%                       | 6%                 | 0.5          |\n| 4                | 6%                       | 6.15%              | 0.65         |\n| 5                | 7%                       | 8.33%              | 0.6          |\n| 6                | 8%                       | 10.90%             | 0.55         |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-328",
        "python_solution": "",
        "ground_truth": null,
        "question": "The overall investment goal of XY endowment is to sustain the real buying power of its portfolio after disbursements. The risk-free rate stands at 2%. An anticipated inflation rate is 1.5%. The cost of returns on earnings investment is 50 bp. XY aims at a 3% annual distribution of assets. Exhibit 1 presents key findings from a mean-variance optimization where the weights of the asset class are bound to be non-negative. To reach XY\u2019s expected return, what is the most suitable percentage for XY\u2019s investment in the corner portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_returns = [0.03, 0.04, 0.05, 0.06, 0.07, 0.08]\n    std_devs = [0.025, 0.0444, 0.06, 0.0615, 0.0833, 0.109]\n    sharpe_ratios = [0.4, 0.45, 0.5, 0.65, 0.6, 0.55]\n    risk_free_rate = 0.02\n    inflation_rate = 0.015\n    cost_of_returns = 0.005\n    annual_distribution = 0.03\n    \n    # Calculate real return required\n    real_return_required = risk_free_rate + inflation_rate + annual_distribution\n    \n    # Calculate the required return with the cost of returns on earnings\n    required_return = real_return_required + cost_of_returns\n    \n    # Initialize the most suitable portfolio\n    most_suitable_portfolio = -1\n    min_diff = float('inf')\n    \n    # Iterate through portfolios to find the most suitable one\n    for i in range(len(expected_returns)):\n        # Calculate the difference between the expected return and the required return\n        diff = abs(expected_returns[i] - required_return)\n        \n        # Update the most suitable portfolio if a smaller difference is found\n        if diff < min_diff:\n            min_diff = diff\n            most_suitable_portfolio = i\n    \n    # Get the Sharpe ratio of the most suitable portfolio\n    most_suitable_sharpe_ratio = sharpe_ratios[most_suitable_portfolio]\n    \n    # The percentage of investment in the most suitable portfolio is its Sharpe ratio divided by the sum of all Sharpe ratios\n    total_sharpe_ratio = sum(sharpe_ratios)\n    most_suitable_percentage = (most_suitable_sharpe_ratio / total_sharpe_ratio) * 100\n    \n    # return answer\n    return most_suitable_percentage\n```"
        ]
    },
    {
        "tables": [
            "|   | Cumulative Distribution Function |\n|---|---|\n| Y=y  | F(y)=P(Y\u2264y) |\n| 20 | 0.08 |\n| 21 | 0.20 |\n| 22 | 0.30 |\n| 23 | 0.55 |\n| 24 | 0.75 |\n| 25 | 1.00 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-329",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that 'Z' is a discrete random variable, and the set of potential Z values constitutes Z= {20,21,22,23,24,25}. With the cumulative distribution function's probable value denoted in the chart, can you tell the likelihood that Z equals either 23 or 25?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_z_less_than_or_equal_to_23 = 0.55\n    p_z_less_than_or_equal_to_22 = 0.30\n    p_z_less_than_or_equal_to_25 = 1.00\n    p_z_less_than_or_equal_to_24 = 0.75\n    \n    # Calculate p_z_equal_to_23 and p_z_equal_to_25 using discrete probability principles\n    p_z_equal_to_23 = p_z_less_than_or_equal_to_23 - p_z_less_than_or_equal_to_22\n    p_z_equal_to_25 = p_z_less_than_or_equal_to_25 - p_z_less_than_or_equal_to_24\n    \n    # Calculate the probability that Z equals either 23 or 25\n    answer = p_z_equal_to_23 + p_z_equal_to_25\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-330",
        "python_solution": "",
        "ground_truth": null,
        "question": "The corporation engages in a 2 \u00d7 5 receive-fixed FRA that has an advanced set, advanced settled with a notional amount of $100,000,000. The correct discount rate for the FRA settlement cash flows stands at 1.5%. Following 60 days, the 90-day Libor is 0.80%, and the 60-day Libor is 0.7%. If the original price of the FRA was pegged at 1.20%, what will be the settlement payment received for the 2 \u00d7 5 FRA?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_amount = 100000000  # Notional amount of the FRA\n    fra_price = 0.012  # Original price of the FRA (1.20%)\n    libor_90 = 0.008  # 90-day Libor (0.80%)\n    libor_60 = 0.007  # 60-day Libor (0.70%)\n    discount_rate = 0.015  # Discount rate for the FRA settlement cash flows (1.5%)\n    days_in_period = 90  # Number of days in the FRA period (90 days)\n\n    # Calculate the floating rate payment\n    floating_rate_payment = notional_amount * (libor_90 - libor_60) * (days_in_period / 360)\n\n    # Calculate the fixed rate payment\n    fixed_rate_payment = notional_amount * fra_price * (days_in_period / 360)\n\n    # Calculate the settlement payment\n    settlement_payment = fixed_rate_payment - floating_rate_payment\n\n    # Apply discounting to the settlement payment\n    settlement_payment_pv = settlement_payment / (1 + discount_rate * (days_in_period / 360))\n\n    # return answer\n    return settlement_payment_pv\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-331",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager possesses five bonds in his holdings, and each bond carries a single-year default risk of 17%. The default occurrence for each bond is autonomous. What are the odds that only two bonds will default within the coming year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_bonds = 5\n    default_risk = 0.17\n    \n    # Do math calculation to get the answer\n    import math\n    prob_two_defaults = (math.comb(num_bonds, 2)) * (default_risk ** 2) * ((1 - default_risk) ** (num_bonds - 2))\n    \n    # return answer\n    return prob_two_defaults\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Date | Closing Price |\n|------|---------------|\n| May  | 132           |\n| June | 145           |\n| July | 159           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-332",
        "python_solution": "",
        "ground_truth": null,
        "question": "The stocks of BBB corporation have experienced shifting closing prices over the past 3 months: From May to July, what is the continuously compounded return of BBB corporation's stocks?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    may_price = 132\n    july_price = 159\n    \n    # Do math calculation to get the answer\n    import math\n    continuously_compounded_return = math.log(july_price / may_price)\n    \n    # return answer\n    return continuously_compounded_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-333",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there are 250 trading days in a year and the daily returns are independently and identically distributed, what is the highest number of daily losses over a 10-year period exceeding the 1-day 99.5% VaR that would still indicate the model being correctly calibrated, for a risk manager who is backtesting an organization's VaR model at the 95% confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    trading_days_per_year = 250\n    years = 10\n    confidence_level = 0.995\n    backtesting_confidence_level = 0.95\n    exceedances_probability = 1 - confidence_level\n    \n    # Do math calculation to get the answer\n    total_trading_days = trading_days_per_year * years\n    expected_exceedances = total_trading_days * exceedances_probability\n    upper_tolerable_limit = (backtesting_confidence_level + ((1 - backtesting_confidence_level) / 2))\n    exceedanceFirefox\u0e01\u0e32\u0e23_answer = (expected_exceedances + (3 * (expected_exceedances ** 0.5)))\n    \n    # return answer\n    return int(exceedanceFirefox\u0e01\u0e32\u0e23_answer)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-334",
        "python_solution": "",
        "ground_truth": null,
        "question": "Eight weeks prior, an investor bought a stock forward contract with a maturity of three months. The starting forward price was $108.5, but the present forward price is $107.6. The risk-free rate remains 3%. What is the value of this forward contract?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_price_initial = 108.5  # Initial forward price\n    forward_price_current = 107.6  # Current forward price\n    risk_free_rate = 0.03  # Risk-free rate (3%)\n    time_to_maturity = (3 - 2) / 12  # Time to maturity in years (1 month remaining)\n    \n    # Do math calculation to get the answer\n    forward_contract_value = (forward_price_current - forward_price_initial) * (1 / (1 + risk_free_rate))**time_to_maturity\n    \n    # return answer\n    return forward_contract_value\n\nans = solution()\nprint(\"The final answer is\", ans) \n```"
        ]
    },
    {
        "tables": [
            "|               |           | Actual training |      |\n|---------------|-----------|-----------------|------|\n|               |           | results         |      |\n| Predicted     |           | Class \"1\"       | Class \"0\"     |\n| Results       | Class \"1\" | TP=182          | FP=52 |\n|               | Class \"0\" | FN=31           | TN=96 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-335",
        "python_solution": "",
        "ground_truth": null,
        "question": "After finalizing the chosen features, Thompson executes a model on the training set which identifies the text as either positive sentiment (Class \u201c1\u201d) or negative sentiment (Class \u201c0\u201d). Subsequently, she assesses its effectiveness through error analysis. Referring to Exhibit 1, what is the precision metric of the model as per the given confusion matrix?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    true_positives = 182  # TP (Class \"1\" and Predicted Class \"1\")\n    false_positives = 52  # FP (Class \"0\" and Predicted Class \"1\")\n\n    # Do math calculation to get the answer\n    precision = true_positives / (true_positives + false_positives)\n\n    # return answer\n    return precision\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-336",
        "python_solution": "",
        "ground_truth": null,
        "question": "A shareholder is evaluating the market risk of Orion Portfolio. The portfolio delivers an anticipated annual return of 6.8% and a volatility of 7.0%, and it is benchmarked in contrast with the S&P 500 Index. The shareholder presupposes that the S&P 500 Index has a projected annual return of 7.2% and a volatility of 8.2%. In accordance with the CAPM, if the risk-free rate is 2.2% per annum, what is the beta of Orion Portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    R_portfolio = 0.068  # Anticipated annual return of Orion Portfolio\n    R_market = 0.072  # Projected annual return of the S&P 500 Index\n    R_f = 0.022  # Risk-free rate\n    std_dev_portfolio = 0.070  # Volatility of Orion Portfolio\n    std_dev_market = 0.082  # Volatility of the S&P 500 Index\n\n    # Do math calculation to get the answer\n    beta_portfolio = (R_portfolio - R_f) / (R_market - R_f) * (std_dev_portfolio / std_dev_market)**2\n\n    # Alternatively, we can use the traditional CAPM formula to directly calculate beta \n    # if we had the covariance between the portfolio and the market.\n    # However, given the provided information, this approach calculates beta based on the Sharpe Ratio relationship.\n\n    # return answer\n    return beta_portfolio\n```"
        ]
    },
    {
        "tables": [
            "| Exercise Price ($) | Option Premium ($) | Delta |\n|--------------------|--------------------|-------|\n| 88                 | 4.40               | 0.75  |\n| 94                 | 1.00               | 0.30  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-337",
        "python_solution": "",
        "ground_truth": null,
        "question": "A customer, Alice Thompson, thinks that large-cap stock prices will witness a slight increase, and she wishes to benefit from this trend using a bull spread technique. Parker suggests that Thompson utilize 1/100 options of the Dow Jones Industrial Average (DJX) which will expire in two months. The current DJX price stands at $91. Exhibit 1 offers current information on two DJX call options which will expire within two months. Exhibit 1 DJX Call Options Expiring in Two Months Thompson decides to use 100 contracts for each position. Each contract equals 100 shares. At the DJX call options expiration, what is the maximum potential gain from the bull spread strategy suggested for Thompson?\n",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    exercise_price1 = 88\n    exercise_price2 = 94\n    option_premium1 = 4.40\n    option_premium2 = 1.00\n    contracts = 100\n    shares_per_contract = 100\n    \n    # Do math calculation to get the answer\n    cost = (option_premium1 - option_premium2) * contracts * shares_per_contract\n    max_gain = (exercise_price2 - exercise_price1) * contracts * shares_per_contract - cost\n    answer = max_gain\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-338",
        "python_solution": "",
        "ground_truth": null,
        "question": "Can you calculate the net operating cycle for XY corporation given that they have credit sales of $50,000, cost of goods sold is $30,000, average accounts receivable is $3,000, average accounts payable is $2,600, average inventory is $5,000 and purchase inventory is $46,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    credit_sales = 50000\n    cost_of_goods_sold = 30000\n    avg_accounts_receivable = 3000\n    avg_accounts_payable = 2600\n    avg_inventory = 5000\n    purchase_inventory = 46000\n    \n    # Do math calculation to get the answer\n    accounts_receivable_turnover = credit_sales / avg_accounts_receivable\n    days_sales_outstanding = 365 / accounts_receivable_turnover\n    \n    inventory_turnover = cost_of_goods_sold / avg_inventory\n    days_inventory_outstanding = 365 / inventory_turnover\n    \n    accounts_payable_turnover = purchase_inventory / avg_accounts_payable\n    days_payable_outstanding = 365 / accounts_payable_turnover\n    \n    net_operating_cycle = days_sales_outstanding + days_inventory_outstanding - days_payable_outstanding\n    \n    # return answer\n    return net_operating_cycle\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-339",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a monthly compounded annual discount rate of 6.5%, what is the present value of a financial agreement that proposes to provide \u20ac1,200 monthly for a period of five years with the initial payment being made instantly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_payment = 1200  # \u20ac\n    annual_discount_rate = 0.065  # 6.5%\n    monthly_discount_rate = (1 + annual_discount_rate) ** (1/12) - 1\n    years = 5\n    months = years * 12\n\n    # Calculate the present value of the annuity\n    present_value_annuity = monthly_payment / monthly_discount_rate * (1 - (1 + monthly_discount_rate) ** (-months))\n\n    # Add the initial payment to the present value\n    present_value = present_value_annuity + monthly_payment\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "|   | Six lowest week returns | Hybrid  Weights | Hybrid  Cumulative weights |\n|---|-----------------------|--------------|---------------------------|\n| 1 | -10.2%                   | 0.0105         | 0.0105                           |\n| 2 | -9.1%                   | 0.0150          | 0.0255                           |\n| 3 | -7.8%                   | 0.0082          | 0.0337                           |\n| 4 | -6.0%                   | 0.0043          | 0.0380                           |\n| 5 | -5.5%                   | 0.0153          | 0.0533                           |\n| 6 | -4.9%                   | 0.0115          | 0.0648                           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-340",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the hybrid approach, what is the 5% VaR for a portfolio with 100 weeks of return history, with its lowest returns over six weeks illustrated in the chart?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weights = [0.0105, 0.0150, 0.0082, 0.0043, 0.0153, 0.0115]\n    returns = [-0.102, -0.091, -0.078, -0.060, -0.055, -0.049]\n    \n    # Sort returns in ascending order\n    returns.sort()\n    \n    # Calculate the portfolio return using the Hybrid approach\n    portfolio_return = sum([weights[i] * returns[i] for i in range(len(returns))])\n    \n    # Do math calculation to get the 5% VaR\n    # 5% VaR is the return that is lower than 5% of historical returns\n    # Given 100 weeks of return history, the 5th lowest return is the 5% VaR\n    # Since the 5 weeks with the lowest returns are already provided, the 5% VaR is the return corresponding to the 5th lowest week return\n    # Here, we calculate the fifth worst loss in the dataset\n    worst_losses = sorted([returns[i] for i in range(len(returns))], reverse=True)\n    var = worst_losses[4]  # The 5th worst loss (due to 0 indexing) is our estimate of the 5% VaR\n    \n    # return answer\n    return var\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-341",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the yield decreases by 90 basis points, what would be the convexity impact for a bond having a convexity of 120?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    convexity = 120\n    yield_change = 90 / 100  # convert basis points to percentage\n    \n    # Do math calculation to get the answer\n    convexity_impact = 0.5 * convexity * (yield_change ** 2)\n    \n    # return answer\n    return convexity_impact * 100  # return the impact as a percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-342",
        "python_solution": "",
        "ground_truth": null,
        "question": "Determine the beta of the shares, if the covariance of the market returns with the returns of a particular share is 0.0035 and the standard deviation of the market returns is 0.05.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    covariance_market_share = 0.0035\n    std_dev_market_returns = 0.05\n    \n    # Do math calculation to get the answer\n    beta = covariance_market_share / (std_dev_market_returns ** 2)\n    \n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [
            "| Balances as of Year Ended 31 December 2017-2018 |      |      |\n|-------------------------------------------------|------|------|\n| Retained earnings                               |120 145|      |\n| Accounts receivable                             | 38 43|      |\n| Inventory                                       | 45  48|      |\n| Accounts payable                                | 36 29|      |"
        ],
        "topic": "Accounting",
        "question_id": "test-343",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher obtained the data from a business's 2018 financial reports (in $ millions): The business proclaimed and paid cash dividends of $10 million and recognized depreciation expenses of $25 million in 2018. The business views the disbursal of dividends as a financing operation. What was the business's operational cash flow in 2018 (in $ millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    retained_earnings_2018 = 120\n    retained_earnings_2017 = 145\n    accounts_receivable_2018 = 38\n    accounts_receivable_2017 = 43\n    inventory_2018 = 45\n    inventory_2017 = 48\n    accounts_payable_2018 = 36\n    accounts_payable_2017 = 29\n    dividends_paid = 10\n    depreciation_expenses = 25\n    \n    # Do math calculation to get the answer\n    change_in_retained_earnings = retained_earnings_2018 - retained_earnings_2017\n    net_income = change_in_retained_earnings + dividends_paid\n    change_in_accounts_receivable = accounts_receivable_2018 - accounts_receivable_2017\n    change_in_inventory = inventory_2018 - inventory_2017\n    change_in_accounts_payable = accounts_payable_2018 - accounts_payable_2017\n    operational_cash_flow = net_income + depreciation_expenses - change_in_accounts_receivable - change_in_inventory + change_in_accounts_payable\n    \n    # return answer\n    return operational_cash_flow\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-344",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an analyst named Mary is attempting to evaluate a corporation's stocks, considering that the company recently paid a dividend of $0.50 per share and the dividend is predicted to increase by 25% in the following year, and by 10% in the subsequent year. Furthermore, from the third year and onwards, the dividend expansion is foreseen to be 5% per annum. Given an 8% required rate of return, what would be the stock's intrinsic value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_per_share = 0.50  # in dollars\n    dividend_increase_year1 = 0.25  # 25% increase\n    dividend_increase_year2 = 0.10  # 10% increase\n    dividend_increase_year3_and_onwards = 0.05  # 5% increase\n    required_rate_of_return = 0.08  # 8%\n    \n    # Calculate dividend for the next 3 years\n    dividend_year1 = dividend_per_share * (1 + dividend_increase_year1)\n    dividend_year2 = dividend_year1 * (1 + dividend_increase_year2)\n    dividend_year3 = dividend_year2 * (1 + dividend_increase_year3_and_onwards)\n    \n    # Calculate present value of dividend for the next 3 years\n    present_value_year1 = dividend_year1 / (1 + required_rate_of_return)\n    present_value_year2 = dividend_year2 / ((1 + required_rate_of_return) ** 2)\n    present_value_year3 = dividend_year3 / ((1 + required_rate_of_return) ** 3)\n    \n    # Calculate terminal value\n    terminal_value = dividend_year3 / (required_rate_of_return - dividend_increase_year3_and_onwards)\n    \n    # Calculate present value of terminal value\n    present_value_terminal_value = terminal_value / ((1 + required_rate_of_return) ** 3)\n    \n    # Calculate intrinsic value\n    intrinsic_value = present_value_year1 + present_value_year2 + present_value_year3 + present_value_terminal_value\n    \n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-345",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the 99.9% credit var for a bond valued at $100 million that has a one-year cumulative default probability of 2% with no recovery rate and a 99.9% confidence level for the coming month?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_value = 100000000  # Value of the bond in dollars\n    default_probability = 0.02  # One-year cumulative default probability\n    recovery_rate = 0  # Recovery rate in case of default\n    confidence_level = 0.999  # Confidence level\n    time_period = 1/12  # Time period in years (1 month)\n\n    # Do math calculation to get the answer\n    var = bond_value * (1 - recovery_rate) * (default_probability * time_period) ** (1 - confidence_level)\n\n    # return answer\n    return var\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-346",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the shares of the BBB corporation have a 30% chance of increasing each year, assuming each yearly attempt is unrelated to the others, what are the odds that it does not manage to increase more than once in the next 3 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_increase = 0.3\n    probability_no_increase = 1 - probability_increase\n    years = 3\n\n    # Do math calculation to get the answer\n    # Calculate the probability that the shares do not increase more than once in the next 3 years\n    # This can happen in the following scenarios:\n    # 1. No increase in all 3 years\n    # 2. Increase in 1 year, no increase in the other 2 years\n    probability_no_increase_3_years = probability_no_increase ** years\n    probability_increase_1_year_no_increase_2_years = (probability_increase * (probability_no_increase ** 2)) * years\n    \n    answer = probability_no_increase_3_years + probability_increase_1_year_no_increase_2_years\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-347",
        "python_solution": "",
        "ground_truth": null,
        "question": "A one-year zero-coupon bond has a yield of 4.0%. The yields of the zero-coupon bonds for two and three years are 5.0% and 6.0% respectively. What would be the forward rate for a one-year loan that starts in two years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_one_year = 0.04\n    yield_two_year = 0.05\n    yield_three_year = 0.06\n    \n    # Do math calculation to get the answer\n    # Calculate the forward rate for a one-year loan that starts in two years\n    forward_rate = ((1 + yield_three_year) ** 3) / ((1 + yield_two_year) ** 2) - 1\n    \n    # return answer\n    return forward_rate\n```\n\nIn this Python program, we first define the yields of the zero-coupon bonds for one, two, and three years. Then, we calculate the forward rate for a one-year loan that starts in two years using the formula for forward rates. Finally, we return the calculated forward rate as the answer. \n\nThe formula used to calculate the forward rate is derived from the relationship between the yields of the zero-coupon bonds and the forward rate. Specifically, it is based on the fact that the yield of the three-year zero-coupon bond is the geometric mean of the yields of the two-year zero-coupon bond and the forward rate for a one-year loan that starts in two years. \n\nTherefore, the forward rate can be calculated by dividing the cube of (1 plus the yield of the three-year zero-coupon bond) by the square of (1 plus the yield of the two-year zero-coupon bond) and then subtracting 1 from the result."
        ]
    },
    {
        "tables": [
            "| Mature time | 10 years |\n|-------------|----------|\n| Market discount rate | 4% |\n| Par value of the bond | 1000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-348",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming yearly compounding, what will be the price of the zero coupon bond given the details below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mature_time = 10  # in years\n    market_discount_rate = 0.04  # 4%\n    par_value = 1000\n    \n    # Do math calculation to get the answer\n    # Formula for calculating the price of a zero coupon bond: P = F / (1 + r)^n\n    # Where P is the price of the bond, F is the par value, r is the market discount rate and n is the number of years until maturity\n    price = par_value / (1 + market_discount_rate) ** mature_time\n    \n    # return answer\n    return round(price, 2)\n```"
        ]
    },
    {
        "tables": [
            "|                                                     | 2018  | 2017  | 2016  |\n|-----------------------------------------------------|-------|-------|-------|\n| Net income                                          | 3,560 | 2,071 | 1,295 |\n| Net cash flow provided by (used in) CFO             | 8,850 | 4,220 | 2,990 |\n| Net cash flow provided by (used in) CFI             | (9,880)| (3,250)| (4,875)|\n| Net cash flow provided by (used in) CFF             | (5,120)| 1,050 | (1,910)|\n| Average net operating assets                         | 42,000| 40,530| 41,600|"
        ],
        "topic": "Accounting",
        "question_id": "test-349",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the cash flow data in the following table, what was the cash-flow-based accruals ratio for the company PZ in the year 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 3560\n    cfo = 8850\n    cfi = -9880\n    cff = -5120\n    avg_net_operating_assets = 42000\n\n    # Do math calculation to get the answer\n    total_cash_flow = cfo + cfi + cff\n    accruals = net_income - total_cash_flow\n    cash_flow_based_accruals_ratio = accruals / avg_net_operating_assets\n\n    # return answer\n    return cash_flow_based_accruals_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Operating cash flow | 500 |\n|---------------------|-----|\n| Interest paid       | 30  |\n| Investment in working capital | 80 |\n| Investment in fixed asset | 60 |\n| Tax rate | 30% |"
        ],
        "topic": "Accounting",
        "question_id": "test-350",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business expert intends to evaluate a private corporation using the FCF Model. To calculate the free cash flow for all capital providers, what is the free cash flow value the expert intends to find, considering the gathered information (in million)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_cash_flow = 500\n    interest_paid = 30\n    investment_in_working_capital = 80\n    investment_in_fixed_asset = 60\n    tax_rate = 0.30\n    \n    # Do math calculation to get the answer\n    free_cash_flow = operating_cash_flow - investment_in_working_capital - investment_in_fixed_asset\n    free_cash_flow_for_all_capital_providers = free_cash_flow + interest_paid * (1 - tax_rate)\n    \n    # return answer\n    return free_cash_flow_for_all_capital_providers\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-351",
        "python_solution": "",
        "ground_truth": null,
        "question": "What should be the projected total owners' equity by an analyst, if a firm is expected to have \u20ac2,000 of assets and \u20ac1,200 liabilities by the end of the year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 2000\n    total_liabilities = 1200\n    \n    # Do math calculation to get the answer\n    total_owners_equity = total_assets - total_liabilities\n    \n    # return answer\n    return total_owners_equity\n\n# Test the function\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "|                               |   C$   |\n|-------------------------------|--------|\n| Carrying value of equipment (net book value)   | 500,000|\n| Undiscounted expected future cash flows | 550,000|\n| Fair value | 480,000 |\n| Costs to sell | 50,000 |\n| Value in use | 440,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-352",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the impairment loss (in C$) associated with the printing equipment of a Canadian printing firm that complies with IFRS, given the drop in demand for its products during this fiscal year end?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_value = 500000\n    undiscounted_expected_future_cash_flows = 550000\n    fair_value = 480000\n    costs_to_sell = 50000\n    value_in_use = 440000\n    \n    # Do math calculation to get the answer\n    recoverable_amount = max(fair_value - costs_to_sell, value_in_use)\n    impairment_loss = max(carrying_value - recoverable_amount, 0)\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-353",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond with a face value of $100 has a semiannual-pay interest rate of 5% over 10 years, what would be its price assuming that its YTM is 8%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    coupon_rate = 0.05\n    years_to_maturity = 10\n    yield_to_maturity = 0.08\n    compounding_periods_per_year = 2\n    \n    # Do math calculation to get the answer\n    coupon_payment = face_value * coupon_rate / compounding_periods_per_year\n    total_compounding_periods = years_to_maturity * compounding_periods_per_year\n    present_value_of_coupons = sum(coupon_payment / (1 + yield_to_maturity/compounding_periods_per_year)**i for i in range(1, total_compounding_periods+1))\n    present_value_of_face_value = face_value / (1 + yield_to_maturity/compounding_periods_per_year)**total_compounding_periods\n    bond_price = present_value_of_coupons + present_value_of_face_value\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [
            "| Valuation Screen | Probability of Passing |\n|------------------|------------------------|\n| 1                | 0.65                   |\n| 2                | 0.45                   |\n| 3                | 0.40                   |\n| 4                | 0.30                   |"
        ],
        "topic": "Accounting",
        "question_id": "test-354",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a researcher uses four separate assessment measures on a group of 1,200 possible investments, what is the estimated number that will successfully pass through all four assessments?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_investments = 1200\n    probability_passing_screen_1 = 0.65\n    probability_passing_screen_2 = 0.45\n    probability_passing_screen_3 = 0.40\n    probability_passing_screen_4 = 0.30\n    \n    # Do math calculation to get the answer\n    estimated_passing_all_screens = total_investments * probability_passing_screen_1 * probability_passing_screen_2 * probability_passing_screen_3 * probability_passing_screen_4\n    \n    # return answer\n    return estimated_passing_all_screens\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-355",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the fiscal multiplier of the administration with a 25% tax rate and a 70% marginal propensity to consume?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    tax_rate = 0.25  # 25% tax rate\n    marginal_propensity_to_consume = 0.7  # 70% marginal propensity to consume\n    \n    # Do math calculation to get the answer\n    fiscal_multiplier = 1 / (1 - marginal_propensity_to_consume * (1 - tax_rate))\n    \n    # return answer\n    return fiscal_multiplier\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-356",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher has collected the below stats: the chance of economic prosperity is 75%, while the possibility of recession stands at 25%. For a business, there's a 10% probability of its EPS being $2.0 and a 90% likelihood of having an EPS of $4.0 during prosperous times. However, during a recession, there is a 25% chance that the EPS might be $2.0 and a 75% possibility that the EPS might be $4.0. What is the variance of this business's EPS in an economic downturn?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_recession = 0.25\n    prob_eps_2_during_recession = 0.25\n    prob_eps_4_during_recession = 0.75\n    eps_2 = 2.0\n    eps_4 = 4.0\n\n    # Do math calculation to get the answer\n    # Calculate the expected value of EPS during recession\n    expected_eps = (eps_2 * prob_eps_2_during_recession) + (eps_4 * prob_eps_4_during_recession)\n    \n    # Calculate the variance of EPS during recession\n    variance_eps = ((eps_2 ** 2) * prob_eps_2_during_recession) + ((eps_4 ** 2) * prob_eps_4_during_recession) - (expected_eps ** 2)\n    \n    # return answer\n    return variance_eps\n```"
        ]
    },
    {
        "tables": [
            "| Carrying amount of plant | 1,604 |\n|-------------------------|-------|\n| Undiscounted expected future net cash flows | 1,350 |\n| Present value of expected future net cash flows | 1,050 |\n| Fair value of plant | 1,225 |\n| Revised estimate of useful life | 4 years |\n| Depreciation method | Straight line |\n| Revised estimate of residual value | $200 |"
        ],
        "topic": "Accounting",
        "question_id": "test-357",
        "python_solution": "",
        "ground_truth": null,
        "question": "In early January 2015, a market researcher spotted a news report stating that a company he's tracking (which submits reports under US GAAP) would be compelled to cut production from a key product line at its highly specialized ceramics factory, due to a new technology launched by a main competitor. The table encapsulates data and predictions from different sources regarding the factory and its forthcoming possibilities. Assuming the chosen information associated with the Ceramics Production Plant by the close of 2014 (in $ thousands) is correct, what would be the depreciation expense to be accounted for in 2015 concerning the factory?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_amount = 1604\n    residual_value = 200\n    revised_useful_life = 4\n    \n    # Do math calculation to get the answer\n    depreciation_expense = (carrying_amount - residual_value) / revised_useful_life\n    \n    # return answer\n    return depreciation_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-358",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the price value of a basis point (PVBP) for the bonds that are presently valued at 108.50, issued by GTS Inc., considering that according to a portfolio manager's valuation model, a 1bp rise in interest rates will cause the bond price to drop to 108.40, and a 1bp fall in interest rates will cause the bond price to increase to 108.59?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_price_initial = 108.50\n    bond_price_rise = 108.40\n    bond_price_fall = 108.59\n    \n    # Do math calculation to get the answer\n    price_change_rise = bond_price_initial - bond_price_rise\n    price_change_fall = bond_price_fall - bond_price_initial\n    pvbp = (price_change_rise + price_change_fall) / 2\n    \n    # return answer\n    return pvbp\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-359",
        "python_solution": "",
        "ground_truth": null,
        "question": "Bergen Inc. commenced business operations in 2007 and implements the FIFO method. In its first year, it bought 45,000 units of inventory for \u20ac10 per unit and sold 40,000 units at \u20ac20 each. The following year, it acquired another 50,000 units at a cost of \u20ac11 each and made sales of 45,000 units priced at \u20ac22 each. Using a periodic inventory system, what was Bergen Inc.'s ending inventory balance in \u20ac thousands for 2008?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    units_purchased_2007 = 45000\n    cost_per_unit_2007 = 10\n    units_sold_2007 = 40000\n    units_purchased_2008 = 50000\n    cost_per_unit_2008 = 11\n    units_sold_2008 = 45000\n\n    # Calculate ending inventory for 2007\n    ending_inventory_2007 = (units_purchased_2007 - units_sold_2007) * cost_per_unit_2007\n\n    # Since FIFO method is used, we need to calculate how many units from 2007 are sold in 2008\n    units_from_2007_sold_in_2008 = min(units_sold_2008, units_purchased_2007 - units_sold_2007)\n    units_from_2008_sold_in_2008 = units_sold_2008 - units_from_2007_sold_in_2008\n\n    # Calculate the cost of goods sold for 2008\n    cost_of_goods_sold_2008 = (units_from_2007_sold_in_2008 * cost_per_unit_2007) + (units_from_2008_sold_in_2008 * cost_per_unit_2008)\n\n    # Calculate the ending inventory for 2008\n    ending_inventory_2008 = (ending_inventory_2007 - (units_from_2007_sold_in_2008 * cost_per_unit_2007)) + ((units_purchased_2008 - units_from_2008_sold_in_2008) * cost_per_unit_2008)\n\n    # Convert the ending inventory to thousands\n    ending_inventory_2008_in_thousands = ending_inventory_2008 / 1000\n\n    # return answer\n    return ending_inventory_2008_in_thousands\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-360",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is looking to aid his friend Lisa in forecasting the revenue of her store in October 20X9, thus he uses the income from January 20X6 to September 20X9 as examples to create an AR(2) model and attains the following result: X ^ t+1 =1.3458+0.8912Xt+0.3372Xt-1. What would the forecasted revenue of Lisa's store be in October 20X9, provided the income for August 20X9 is $2746.72 and the income for September 20X9 is $2957.63?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = 1.3458  # constant value from the AR(2) model\n    coefficient_x_t = 0.8912  # coefficient of X_t in the AR(2) model\n    coefficient_x_t_minus_1 = 0.3372  # coefficient of X_(t-1) in the AR(2) model\n    revenue_september = 2957.63  # revenue for September 20X9\n    revenue_august = 2746.72  # revenue for August 20X9\n\n    # Do math calculation to get the answer\n    forecasted_revenue_october = intercept + coefficient_x_t * revenue_september + coefficient_x_t_minus_1 * revenue_august\n\n    # return answer\n    return forecasted_revenue_october\n```"
        ]
    },
    {
        "tables": [
            "| Borrowing date   | 1-Jan-09                                |\n|------------------|-----------------------------------------|\n| Amount borrowed  | 500 million Brazilian real (BRL)  |\n| Annual interest rate  | 14 percent                        |\n| Term of the loan | 3 years                                 |\n| Payment method   | Annual payment of interest only. Principal amortization is due at the end of the loan term. |"
        ],
        "topic": "Accounting",
        "question_id": "test-361",
        "python_solution": "",
        "ground_truth": null,
        "question": "A Brazilian firm, CRIXUS Inc., takes out a loan from a domestic bank to fund the building of its factory. The terms of the loan are as follows: It takes two years to construct the factory, during which CRIXUS made BRL 10 million by momentarily investing the loan amount. What is the value of interest pertaining to the factory construction (in BRL million) that can be capitalized on CRIXUS's balance sheet?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 500e6  # in BRL\n    annual_interest_rate = 0.14\n    construction_period = 2  # in years\n    interest_income = 10e6  # in BRL\n    \n    # Do math calculation to get the answer\n    interest_expense = loan_amount * annual_interest_rate * construction_period\n    net_interest_expense = interest_expense - interest_income\n    capitalized_interest = net_interest_expense\n    \n    # return answer\n    return capitalized_interest / 1e6  # convert to BRL million\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-362",
        "python_solution": "",
        "ground_truth": null,
        "question": "In compliance with the rules of the trading platform, investing in wheat futures calls for an initial margin of $2000 and a maintenance margin of $1500. A trader shorts a wheat future contract at $216, with each contract incorporating 100 tons. The contract's value escalates to $222 after a day. What would the varying margin amount be at the conclusion of day one?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_margin = 2000\n    maintenance_margin = 1500\n    contract_price_short = 216\n    contract_price_end_day1 = 222\n    contract_size = 100\n    \n    # Do math calculation to get the answer\n    loss = (contract_price_end_day1 - contract_price_short) * contract_size\n    varying_margin_amount = initial_margin - loss\n    \n    # return answer\n    return varying_margin_amount\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-363",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose a hedge fund manager is aiming to build a protective put approach. If the stock's current price is $25.1, and the premium of 23 put is $1.8, what would be the maximum loss for this strategy?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_current_price = 25.1\n    put_strike_price = 23\n    put_premium = 1.8\n    \n    # Do math calculation to get the answer\n    max_loss = put_premium + (stock_current_price - put_strike_price)\n    \n    # return answer\n    return max_loss\n\nresult = solution()\nprint(result)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-364",
        "python_solution": "",
        "ground_truth": null,
        "question": "In March 2017, John purchased 500 pen units at a cost of $2 each. Then in April of the same year, he bought another 600 pen units at an expense of $3 each. John managed to sell 1000 units at $5 each during 2017. When employing the FIFO method, what would be the cost of goods he sold in 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    units_purchased_in_march = 500\n    cost_per_unit_in_march = 2\n    units_purchased_in_april = 600\n    cost_per_unit_in_april = 3\n    units_sold = 1000\n    selling_price_per_unit = 5\n    \n    # Calculate total units available for sale\n    total_units_available = units_purchased_in_march + units_purchased_in_april\n    \n    # Since FIFO method is used, the first 500 units sold are from March purchase\n    cost_of_first_500_units = units_purchased_in_march * cost_per_unit_in_march\n    \n    # The remaining units sold are from April purchase\n    remaining_units_sold = units_sold - units_purchased_in_march\n    cost_of_remaining_units = remaining_units_sold * cost_per_unit_in_april\n    \n    # Calculate the total cost of goods sold\n    cost_of_goods_sold = cost_of_first_500_units + cost_of_remaining_units\n    \n    # return answer\n    return cost_of_goods_sold\n\nresult = solution()\nprint(\"The final answer is $\\boxed{\" + str(result) + \"}.\")assistant\n\nThe final answer is $\\boxed{2800}$."
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| Fair value  | \u00a3 16,800,000  |\n| Costs to sell  | \u00a3800,000  |\n| Value in use  | \u00a314,500,000  |\n| Net carrying amount  | \u00a319,100,000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-365",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher is examining the degradation of the production machinery of Alpha Industries, a corporation based in the UK that abides by IFRS. What is the value of the impairment loss on Alpha Industries' income statement connected to its production machinery, based on the data collected about the machinery?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fair_value = 16800000\n    costs_to_sell = 800000\n    value_in_use = 14500000\n    net_carrying_amount = 19100000\n    \n    # Calculate the recoverable amount, which is the higher of fair value less costs to sell and value in use\n    recoverable_amount = max(fair_value - costs_to_sell, value_in_use)\n    \n    # Calculate the impairment loss, which is the difference between the net carrying amount and the recoverable amount\n    impairment_loss = net_carrying_amount - recoverable_amount\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-366",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a discrete uniform distribution with 20 potential results ranging from 1 to 20, what is the probability that X is not less than 3 but not exceeding 5, P(3 \u2264 X < 6)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_outcomes = 20\n    favorable_outcomes = 3  # Numbers 3, 4, and 5\n    \n    # Do math calculation to get the answer\n    probability = favorable_outcomes / total_outcomes\n    \n    # return answer\n    return probability\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-367",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume an investment portfolio consists of 40% in property A and 60% in property B. The average and variance of the return on A are 0 and 25 respectively. The average and variance of the return on B are 1 and 121 correspondingly. The correlation coefficient between A and B is 0.3. What is the closest estimate for portfolio volatility?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_A = 0.4\n    weight_B = 0.6\n    avg_return_A = 0\n    avg_return_B = 1\n    variance_A = 25\n    variance_B = 121\n    correlation_coefficient = 0.3\n\n    # Do math calculation to get the answer\n    portfolio_variance = (weight_A**2) * variance_A + (weight_B**2) * variance_B + 2 * weight_A * weight_B * (variance_A ** 0.5) * (variance_B ** 0.5) * correlation_coefficient\n    portfolio_volatility = portfolio_variance ** 0.5\n\n    # return answer\n    return portfolio_volatility\n```"
        ]
    },
    {
        "tables": [
            "| Quarter                   | Income   |\n|---------------------------|----------|\n| The last quarter in 20X8 | $ 4257.63|\n| The third quarter in 20X8| $4153.98 |\n| The second quarter in 20X8| $4322.01 |\n| The first quarter in 20X8| $5763.42 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-368",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson is looking to forecast the earnings of his manufacturing plant in the first quarter of 20X9. To do this he utilizes earnings data from the first quarter of 20X8 to the last quarter of 20X8 as examples to create an AR(1) model. However, he discovers that the autocorrelations of the residuals indicate a significant, strong seasonal autocorrelation. Johnson then adjusts the model to obtain the new equation, which is Xt=126.7537+0.1387Xt\u22121+0.9324Xt\u22124X_t=126.7537+0.1387X_{t-1}+0.9324X_{t-4}Xt\u200b=126.7537+0.1387Xt\u22121\u200b+0.9324Xt\u22124\u200b. The income for each quarter in 20X8 is presented in the table below. Based on this new model, what is the",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Xt_1 = 4257.63  # The last quarter in 20X8\n    Xt_4 = 5763.42  # The first quarter in 20X8\n    constant = 126.7537\n    coeff_Xt_1 = 0.1387\n    coeff_Xt_4 = 0.9324\n    \n    # Do math calculation to get the answer\n    Xt = constant + coeff_Xt_1 * Xt_1 + coeff_Xt_4 * Xt_4\n    answer = Xt\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|    | Borrowing date                             | 1 January 2009                          |\n|:--:|---------------------------------------|----------------------------------|\n|    | Amount borrowed                          | 500 million Brazilian real (BRL) |\n|    | Annual interest rate                 | 14 percent                             |\n|    | Term of the loan                       | 3 years                                   |\n| Payment method  |                                       | Annual payment of interest only. Principal amortization is due at the end of the loan term. |"
        ],
        "topic": "Accounting",
        "question_id": "test-369",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Brazilian corporation, RIO GRANDE, Inc., borrows money from a local financial institution to fund the building of its manufacturing facility. The loan conditions indicate that the facility build will take two years, during which RIO GRANDE generated BRL 10 million via temporary investment of the loan funds. What would be the sum of the interest associated with the plant's build (in BRL million) that RIO GRANDE could include in its financial statement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 500e6  # Loan amount in BRL\n    annual_interest_rate = 0.14  # Annual interest rate\n    loan_term = 3  # Loan term in years\n    investment_return = 10e6  # Return from temporary investment in BRL\n    facility_build_time = 2  # Time taken to build the facility in years\n\n    # Do math calculation to get the answer\n    # Calculate total interest over loan term\n    total_interest = loan_amount * annual_interest_rate * loan_term\n    \n    # Subtract investment return and interest for the year after facility is built\n    total_interest -= investment_return\n    total_interest -= loan_amount * annual_interest_rate * (loan_term - facility_build_time)\n\n    # return answer\n    return total_interest / 1e6  # Convert to BRL million\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-370",
        "python_solution": "",
        "ground_truth": null,
        "question": "John, CFA, is assessing the value of Corporation X. With the present dividend and the necessary return rate of $0.5 per share and 10% respectively, he anticipates that the dividend will continue to grow at its current rate of 4.5% per year indefinitely. What is the intrinsic value of Corporation X shares according to the Gordon Growth Model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_dividend = 0.5  # $0.5 per share\n    required_return_rate = 0.1  # 10%\n    growth_rate = 0.045  # 4.5%\n\n    # Do math calculation to get the answer\n    # According to the Gordon Growth Model, the intrinsic value of a share can be calculated as:\n    # V = D / (r - g)\n    # Where:\n    #   V = intrinsic value\n    #   D = present dividend\n    #   r = required return rate\n    #   g = growth rate\n    intrinsic_value = present_dividend / (required_return_rate - growth_rate)\n\n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n| --- | --- | --- | --- | --- | --- |\n| 20% | 4%  | -5% | 12% | 3%  | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-371",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the provided table, can you compute the mean absolute deviation of the monthly stock returns for Ivy Corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_returns = [20, 4, -5, 12, 3, 12]\n    total_months = len(monthly_returns)\n    \n    # Calculate the mean of the monthly returns\n    mean_return = sum(monthly_returns) / total_months\n    \n    # Calculate the absolute deviations from the mean\n    absolute_deviations = [abs(return_rate - mean_return) for return_rate in monthly_returns]\n    \n    # Calculate the mean absolute deviation\n    mean_absolute_deviation = sum(absolute_deviations) / total_months\n    \n    # return answer\n    return mean_absolute_deviation\n\nresult = solution()\nprint(f\"The final answer is {result}.\")assistant\n\n```python\ndef solution():\n    # Define variables name and value\n    monthly_returns = [20, 4, -5, 12, 3, 12]\n    total_months = len(monthly_returns)\n    \n    # Calculate the mean of the monthly returns\n    mean_return = sum(monthly_returns) / total_months\n    \n    # Calculate the absolute deviations from the mean\n    absolute_deviations = [abs(return_rate - mean_return) for return_rate in monthly_returns]\n    \n    # Calculate the mean absolute deviation\n    mean_absolute_deviation = sum(absolute_deviations) / total_months\n    \n    # return answer\n    return mean_absolute_deviation\n\nresult = solution()\nprint(f\"The final answer is {result}.\")"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-372",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ Corporation has gone into a forward rate agreement (FRA) in which they will receive a continuous compounding rate of 3.75% on a principal amount of USD 1 million from the end of the first year to the end of the second year. The zero rates for one and two years are 3.25% and 3.50%, respectively. What is the value of the FRA at the inception of the agreement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 1000000  # Principal amount of USD 1 million\n    fra_rate = 0.0375  # Continuous compounding rate of 3.75%\n    zero_rate_1yr = 0.0325  # Zero rate for one year of 3.25%\n    zero_rate_2yr = 0.0350  # Zero rate for two years of 3.50%\n    time_to_settlement = 1  # Time to settlement in years\n    time_to_maturity = 2  # Time to maturity in years\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the FRA settlement payment\n    FRA_settlement = principal * (fra_rate - zero_rate_2yr) * (time_to_maturity - time_to_settlement) * np.exp(-zero_rate_1yr * time_to_settlement)\n    \n    # Calculate the present value of the FRA at inception\n    FRA_value = FRA_settlement * np.exp(-zero_rate_2yr * (time_to_maturity - time_to_settlement))\n    \n    # return answer\n    return FRA_value\n\nimport numpy as np\n\nresult = solution()\nprint(result) \n```"
        ]
    },
    {
        "tables": [
            "| Bond                         | Coupon Rate | Time-to-Maturity | Price  |\n|------------------------------|-------------|------------------|--------|\n| UK Government Benchmark Bond | 2%          | 3 years          | 100.25 |\n| UK Corporate Bond            | 5%          | 3 years          | 100.65 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-373",
        "python_solution": "",
        "ground_truth": null,
        "question": "The present three-year EUR interest rate benchmark for swap is 2.12% and both bonds annually yield interest. What is the G-spread measured in basis points (bps) on the corporate bond from the UK?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate_government_bond = 0.02\n    time_to_maturity = 3\n    price_government_bond = 100.25\n    coupon_rate_corporate_bond = 0.05\n    price_corporate_bond = 100.65\n    benchmark_interest_rate = 0.0212\n    \n    # Calculate yields of government and corporate bonds\n    government_bond_yield = (coupon_rate_government_bond * time_to_maturity + (price_government_bond - 100)) / ((price_government_bond + 100) / 2)\n    corporate_bond_yield = (coupon_rate_corporate_bond * time_to_maturity + (price_corporate_bond - 100)) / ((price_corporate_bond + 100) / 2)\n    \n    # Calculate G-spread\n    g_spread = corporate_bond_yield - benchmark_interest_rate\n    \n    # Convert G-spread from decimal to basis points (1% = 100bps)\n    g_spread_bps = g_spread * 10000\n    \n    # Round to the nearest integer\n    answer = round(g_spread_bps)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|Exhibit 1  Atlantic Preserves, Inc.                   |        |\n|Selected Information from Note F of the 2013 Annual Financial Statements|        |\n|Relating to the Company's Defined Benefit Pension Plan (in $ thousands) |        |\n|Start-of-year pension obligation                      |72,544  |\n|Start-of-year plan assets                             |60,096  |\n|End-of-year pension obligation                        |74,077  |\n|End-of-year plan assets                               |61,812  |\n|Current service cost                                  |1,151   |\n|Interest cost                                         |5,441   |\n|Actual return on plan assets                          |5,888   |\n|Expected return on plan assets                        |4,597   |\n|Benefits paid to retired employees                    |5,059   |\n|Employer's contributions                              |887     |\n|Amortization of past service costs                    |272     |"
        ],
        "topic": "Accounting",
        "question_id": "test-374",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering that the actual return on pension plan assets of Pacific Reserve surpasses its predicted return, what is the company's total periodical pension expense (in $ thousands) for 2013 as displayed in Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_service_cost = 1151\n    interest_cost = 5441\n    amortization_of_past_service_costs = 272\n    actual_return_on_plan_assets = 5888\n    expected_return_on_plan_assets = 4597\n    \n    # Do math calculation to get the answer\n    # Calculate the difference between the actual and expected return on plan assets\n    difference_between_actual_and_expected_return = actual_return_on_plan_assets - expected_return_on_plan_assets\n    \n    # Calculate the total periodic pension expense\n    total_periodic_pension_expense = current_service_cost + interest_cost + amortization_of_past_service_costs - difference_between_actual_and_expected_return\n    \n    # return answer\n    return total_periodic_pension_expense\n```"
        ]
    },
    {
        "tables": [
            "| Shares outstanding before buyback | 3.1 million |\n| --- | --- |\n| Earnings per share before buyback | $4.00 |\n| Share price at time of buyback | $50 |\n| After-tax cost of borrowing | 6% |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-375",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will be the earnings per share for Blanchard Inc. after repurchasing 100,000 stocks, assuming they borrow precisely the required amount of money for this transaction?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_outstanding_before_buyback = 3100000\n    earnings_per_share_before_buyback = 4.00\n    share_price_at_time_of_buyback = 50\n    after_tax_cost_of_borrowing = 0.06\n    shares_repurchased = 100000\n    \n    # Do math calculation to get the answer\n    total_earnings_before_buyback = shares_outstanding_before_buyback * earnings_per_share_before_buyback\n    cost_of_repurchasing = shares_repurchased * share_price_at_time_of_buyback\n    interest_expense = cost_of_repurchasing * after_tax_cost_of_borrowing\n    \n    total_earnings_after_buyback = total_earnings_before_buyback - interest_expense\n    shares_outstanding_after_buyback = shares_outstanding_before_buyback - shares_repurchased\n    \n    earnings_per_share_after_buyback = total_earnings_after_buyback / shares_outstanding_after_buyback\n    \n    # return answer\n    return earnings_per_share_after_buyback\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-376",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the return of the perpetual annuity if its price is 870,000 and it pays annually $50,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price = 870000\n    annual_payment = 50000\n    \n    # Do math calculation to get the answer\n    # The return of a perpetual annuity is calculated by dividing the annual payment by the price\n    return_on_annuity = annual_payment / price\n    \n    # Convert to percentage\n    return_on_annuity_percentage = return_on_annuity * 100\n    \n    # return answer\n    return return_on_annuity_percentage\n```"
        ]
    },
    {
        "tables": [
            "|        | Bid Size      | Offer Size     |\n|--------|---------------|----------------|\n| Buyer  |(Number of shares)| Limit price(\u00a3) | (Number of shares) | Seller|\n|-------|---------------|--------------|----------------|--------|\n| Keith  | 1,000         | 19.70        |                |       |\n| Paul   | 200          | 19.84        |                |       |\n| Ann    | 400          | 19.89        |                |       |\n| Mary   | 300          | 20.02        |                |       |\n|        |               | 20.03        | 800            | Jack  |\n|        |               | 20.11        | 1,100          | Margaret |\n|        |               | 20.16        | 400            | Jeff   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-377",
        "python_solution": "",
        "ground_truth": null,
        "question": "A marketplace has the following limit orders standing on its book for a specific share: John places a day order to sell 1,000 shares, limit \u00a319.83. Supposing that no further purchase orders are placed on that day after John's order, what would be John\u2019s average trade price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    keith_shares = 1000\n    keith_price = 19.70\n    paul_shares = 200\n    paul_price = 19.84\n    ann_shares = 400\n    ann_price = 19.89\n    mary_shares = 300\n    mary_price = 20.02\n    john_shares = 1000\n    john_price = 19.83\n    \n    # Sort buyers by price in descending order\n    buyers = sorted([(keith_price, keith_shares), (paul_price, paul_shares), (ann_price, ann_shares), (mary_price, mary_shares)], reverse=True)\n    \n    # Initialize variables\n    total_shares_sold = 0\n    total_revenue = 0\n    \n    # Iterate over buyers\n    for price, shares in buyers:\n        # If buyer's price is greater than or equal to John's price\n        if price >= john_price:\n            # Calculate shares sold to this buyer\n            shares_sold = min(shares, john_shares - total_shares_sold)\n            # Update total shares sold and total revenue\n            total_shares_sold += shares_sold\n            total_revenue += shares_sold * price\n    \n    # Calculate average trade price\n    average_trade_price = total_revenue / total_shares_sold\n    \n    # return answer\n    return average_trade_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-378",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the Break-even inflation rate for Microsoft is 5%, the real default-free interest rate is 4.5%, and the anticipated future inflation is 3.5%. Can you determine the uncertainty of future inflation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    break_even_inflation_rate = 0.05  # 5%\n    real_default_free_interest_rate = 0.045  # 4.5%\n    anticipated_future_inflation = 0.035  # 3.5%\n\n    # Do math calculation to get the answer\n    expected_inflation_rate = (1 + real_default_free_interest_rate) * (1 + anticipated_future_inflation) - 1\n    uncertainty_future_inflation = break_even_inflation_rate - expected_inflation_rate\n    \n    # return answer\n    return uncertainty_future_inflation\n```"
        ]
    },
    {
        "tables": [
            "| Purchase price | $12,980 |\n|----------------|---------|\n| Freight and insurance | $1,200 |\n| Installation | $700 |\n| Testing | $100 |\n| Maintenance staff training costs | $500 |"
        ],
        "topic": "Accounting",
        "question_id": "test-379",
        "python_solution": "",
        "ground_truth": null,
        "question": "The corporation TechnoSphere recently acquired and set up a new apparatus for its production factory. What should be the cumulative expense of the apparatus displayed on TechnoSphere's financial statement, given the costs the company had to bear?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price = 12980\n    freight_and_insurance = 1200\n    installation = 700\n    testing = 100\n    maintenance_staff_training_costs = 500\n    \n    # Do math calculation to get the answer\n    cumulative_expense = purchase_price + freight_and_insurance + installation + testing + maintenance_staff_training_costs\n    \n    # return answer\n    return cumulative_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-380",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the discount rate if a 30-day Treasury bill is priced at 99.5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    days_to_maturity = 30\n    face_value = 100\n    market_price = 99.5\n    \n    # Do math calculation to get the answer\n    rate_return = (face_value - market_price) / market_price\n    discount_rate = (rate_return / days_to_maturity) * 360\n    \n    # return answer\n    return discount_rate * 100  # multiply by 100 to convert to percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-381",
        "python_solution": "",
        "ground_truth": null,
        "question": "For a one-year bond rated BBB, the spread over risk-free Treasuries of the same maturity is 2.5%. If all non-credit factors such as liquidity risk and taxes contribute to a 1% spread, what's the assumed default probability for this bond, if the loss given default rate is 60%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spread_over_treasuries = 0.025  # 2.5%\n    non_credit_spread = 0.01  # 1%\n    loss_given_default_rate = 0.6  # 60%\n\n    # Do math calculation to get the answer\n    # We assume the credit spread is equal to the spread over Treasuries minus non-credit factors\n    credit_spread = spread_over_treasuries - non_credit_spread\n    # The credit spread is approximated as the product of default probability, loss given default and (1 - recovery rate)\n    # Here we assume a zero recovery rate\n    default_probability = credit_spread / loss_given_default_rate\n    \n    # return answer\n    return default_probability\n```"
        ]
    },
    {
        "tables": [
            "|  | Bond A |\n| --- | --- |\n| Periodicity | semiannually |\n| Par | 100 |\n| Price | 105 |\n| YTM | 4% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-382",
        "python_solution": "",
        "ground_truth": null,
        "question": "The specific data of bond B is given below: What would be the YTM if it is transformed into a quarterly periodicity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ytm_annual = 0.04  # YTM of bond A (annual rate)\n    periodicity = 2    # Periodicity of bond A (semiannually)\n    price = 105       # Price of bond A\n    par = 100         # Par value of bond A\n    \n    # Convert YTM to semiannual rate\n    ytm_semiannual = ytm_annual / periodicity\n    \n    # Calculate YTM for quarterly periodicity\n    n_years = 1           # Number of years\n    n_quarters = 4       # Number of quarters in a year\n    n_periods = n_years * n_quarters  # Number of periods\n    ytm_quarterly = (1 + ytm_semiannual) ** (1 / (n_periods / (n_years * periodicity))) - 1\n    \n    # Convert to annual YTM rate\n    ytm_quarterly_annualized = (1 + ytm_quarterly) ** n_quarters - 1\n    \n    # Return answer as a percentage\n    return ytm_quarterly_annualized * 100\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-383",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a business purchased a client database for $300,000, foreseeing its usefulness for three years, along with a trademark worth $5,000,000 expecting it to be useful indefinitely but it's required to renew it every 10 years with the Patent and Trademark Bureau for a small fee or it will become void. Given that the business applies straight-line depreciation for all its non-physical properties, what would the yearly amortization cost for these two properties amount to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    client_database_cost = 300000\n    client_database_useful_life = 3\n    \n    trademark_cost = 5000000\n    trademark_useful_life = 10  # Although it's required to renew every 10 years, \n                                # for the sake of this calculation and due to its indefinite usefulness, \n                                # we consider the trademark's useful life to be 10 years.\n    \n    # Do math calculation to get the answer\n    client_database_amortization = client_database_cost / client_database_useful_life\n    trademark_amortization = trademark_cost / trademark_useful_life\n    \n    yearly_amortization_cost = client_database_amortization + trademark_amortization\n    \n    # return answer\n    return yearly_amortization_cost\n```"
        ]
    },
    {
        "tables": [
            "| Net income                           | $200,000 |\n|--------------------------------------|----------|\n| Decrease in accounts receivable      | 10,000   |\n| Depreciation                         | 36,000   |\n| Increase in inventory                | 12,000   |\n| Increase in accounts payable         | 17,000   |\n| Decrease in wages payable            | 8,000    |\n| Increase in deferred tax liabilities | 12,000   |\n| Profit from the sale of equipment    | 6,000    |"
        ],
        "topic": "Accounting",
        "question_id": "test-384",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the data provided, what is the company's cash flow generated from operations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 200000\n    decrease_in_accounts_receivable = 10000\n    depreciation = 36000\n    increase_in_inventory = 12000\n    increase_in_accounts_payable = 17000\n    decrease_in_wages_payable = 8000\n    increase_in_deferred_tax_liabilities = 12000\n    profit_from_sale_of_equipment = 6000\n    \n    # Do math calculation to get the answer\n    cash_flow_from_operations = net_income + depreciation + decrease_in_accounts_receivable - increase_in_inventory + increase_in_accounts_payable - decrease_in_wages_payable + increase_in_deferred_tax_liabilities - profit_from_sale_of_equipment\n    \n    # return answer\n    return cash_flow_from_operations\n```"
        ]
    },
    {
        "tables": [
            "| Total asset | $5,000 million |\n| --- | --- |\n| ROE | 15% |\n| Cost of equity | 12.5% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-385",
        "python_solution": "",
        "ground_truth": null,
        "question": "Company N is financed with a 60% debt and 40% equity ratio. Using the RI model for valuation, John has gathered the necessary data in the provided chart. What is Company N's residual income?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_asset = 5000  # in millions\n    roe = 0.15\n    cost_of_equity = 0.125\n    debt_ratio = 0.6\n    equity_ratio = 0.4\n    \n    # Calculate net income\n    net_income = roe * total_asset * equity_ratio\n    \n    # Calculate cost of equity\n    cost_of_equity_dollar = cost_of_equity * total_asset * equity_ratio\n    \n    # Calculate residual income\n    residual_income = net_income - cost_of_equity_dollar\n    \n   ![](joker-face-h420.q9gj)opherdiamond eyeb Roberts\n    \n    # return answer\n    return residual_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-386",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a customer buys a 6-year bond at a price of 109.83, with an 8% coupon rate where the interest is paid yearly. Supposing the consistent market rate during this time is 6%, what would be the horizon yield if the customer decides to offload the bond at the close of year 5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price = 109.83  # Price at which the bond is bought\n    face_value = 100  # Face value of the bond\n    coupon_rate = 0.08  # 8% coupon rate\n    market_rate = 0.06  # 6% consistent market rate\n    years_to_sell = 5  # Bond is sold at the end of year 5\n    total_years = 6  # Total term of the bond in years\n    \n    # Calculate the annual coupon payment\n    annual_coupon_payment = face_value * coupon_rate\n    \n    # Calculate the present value of the coupon payments received by the customer\n    present_value_coupons = 0\n    for year in range(1, years_to_sell + 1):\n        present_value_coupons += annual_coupon_payment / (1 + market_rate) ** year\n    \n    # Calculate the present value of the selling price of the bond\n    # Assuming the bond is sold at the face value at the end of year 5\n    selling_price = face_value / (1 + market_rate) ** years_to_sell\n    \n    # Calculate the total present value received by the customer\n    total_present_value = present_value_coupons + selling_price\n    \n    # Calculate the horizon yield using the formula for rate of return\n    # Since the purchase price and total present value are at different times,\n    # we calculate the total gain and then use it to find the horizon yield\n    total_gain = total_present_value - purchase_price\n    horizon_yield = (total_gain / purchase_price) / years_to_sell\n    \n    # Convert the horizon yield to an annual rate\n    annual_horizon_yield = (1 + horizon_yield) ** (1/years_to_sell) - 1\n    \n    # Express the answer as a percentage\n    answer = annual_horizon_yield * 100\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-387",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the preferred shares of Baxter corporation are anticipated to pay a perpetual annual dividend of $12 and the constant required rate of return is 15%, what should the value of the preferred stock be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_dividend = 12\n    required_rate_of_return = 0.15\n    \n    # Do math calculation to get the answer\n    value_of_preferred_stock = annual_dividend / required_rate_of_return\n    \n    # return answer\n    return value_of_preferred_stock\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-388",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood of a variable falling between 10 and 20 for a random variable adhering to a continuous uniform distribution within the span of 5 to 25?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lower_bound = 5\n    upper_bound = 25\n    variable_lower_bound = 10\n    variable_upper_bound = 20\n    \n    # Do math calculation to get the answer\n    # Calculate the total range of the distribution\n    total_range = upper_bound - lower_bound\n    \n    # Calculate the range of the variable\n    variable_range = variable_upper_bound - variable_lower_bound\n    \n    # Since the variable range is within the total range, calculate the probability\n    probability = variable_range / total_range\n    \n    # return answer\n    return probability\n\n# Execute the function\nanswer = solution()\nprint(answer)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-389",
        "python_solution": "",
        "ground_truth": null,
        "question": "Ultimately, in 2016, Henderson stated that BBBC bought 100% of SongBox (SB), a specific cable music channel in an all-stock transaction. At the point of acquisition, SB had intangible assets for broadcast licenses valued at $2,500. BBBC evaluated the fair market value of these licenses to be $5,500 at that date and estimated the SongBox brand name value to be $2,000, all values are in thousands. The acquisition did not create any goodwill. Prior to the amortization expense calculation, what is the rise in BBBC's intangible assets (in thousands) resulting from the 2016 purchase of SB?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    broadcast_licenses_value = 2500  # in thousands\n    fair_market_value = 5500  # in thousands\n    songbox_brand_name_value = 2000  # in thousands\n    \n    # Do math calculation to get the answer\n    rise_in_intangible_assets = (fair_market_value - broadcast_licenses_value) + songbox_brand_name_value\n    \n    # return answer\n    return rise_in_intangible_assets\n```"
        ]
    },
    {
        "tables": [
            "|                 | Coefficients | Standard Error | t- Statistic | p-Value |\n|-----------------|--------------|----------------|--------------|---------|\n| Intercept       | 0.5987       | 0.0561         | 10.6749      | 0.0000  |\n| FATO            | 0.2951       | 0.0077         | 38.5579      | 0.0000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-390",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the model lnNPMi=b0+b1FATOi, which is based on data collected from a sample of 35 companies in the most recent fiscal year, what is the projected net profit margin for a corporation that has a fixed asset turnover ratio of 2 times? This is what Sam Braxton is studying, focusing on the relationship between companies' net profit margins (in percent) and their fixed asset turnover (FATO).",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = 0.5987\n    coefficient_FATO = 0.2951\n    fixed_asset_turnover_ratio = 2\n\n    # Do math calculation to get the answer\n    ln_NPM = intercept + coefficient_FATO * fixed_asset_turnover_ratio\n    NPM = (2.71828 ** ln_NPM) * 100  # Convert to percentage\n    \n    # return answer\n    return NPM\n```"
        ]
    },
    {
        "tables": [
            "| (all figures in $ thousands) | 2010 | 2009 |\n|-----------------------------|------|------|\n| Deferred tax assets        | 200  | 160  |\n| Deferred tax liabilities   | (450)| (360)|\n| Net deferred tax liabilities | (250)| (200)|\n|                             |      |      |\n| Earning before taxes         | 4000 | 3800 |\n| Income taxes at the statutory rate| 1200| 1140|\n| Income tax payable (Current income tax expense)| 1000 | 900 |"
        ],
        "topic": "Accounting",
        "question_id": "test-391",
        "python_solution": "",
        "ground_truth": null,
        "question": "What was the 2010 income tax expense (in thousands) for the business, based on the provided details about the business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    deferred_tax_assets_2010 = 200\n    deferred_tax_liabilities_2010 = -450\n    net_deferred_tax_liabilities_2010 = -250\n    deferred_tax_assets_2009 = 160\n    deferred_tax_liabilities_2009 = -360\n    net_deferred_tax_liabilities_2009 = -200\n    earning_before_taxes = 4000\n    income_taxes_at_statutory_rate = 1200\n    income_tax_payable = 1000\n    \n    # Do math calculation to get the answer\n    deferred_tax_expense = (net_deferred_tax_liabilities_2010 - net_deferred_tax_liabilities_2009)\n    total_tax_expense = income_tax_payable - deferred_tax_expense\n    \n    # return answer\n    return total_tax_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-392",
        "python_solution": "",
        "ground_truth": null,
        "question": "A set of 25 data points has an average of 8 and a standard deviation of 15. What is the standard error of this average?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 25\n    standard_deviation = 15\n    \n    # Do math calculation to get the answer\n    standard_error = standard_deviation / (sample_size ** 0.5)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning($) | End($) | Shares |\n| -------- | ------------ | ------ | ------ |\n| G        | 15.00        | 17.00  | 500    |\n| H        | 35.00        | 33.00  | 300    |\n| 1        | 37.00        | 40.00  | 200    |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-393",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, an analyst named Benedict from a finance corporation collected data for a price-weighted index made up of securities G,H,I. What is the index's price return for that period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_price_g = 15.00\n    end_price_g = 17.00\n    shares_g = 500\n    \n    beginning_price_h = 35.00\n    end_price_h = 33.00\n    shares_h = 300\n    \n    beginning_price_i = 37.00\n    end_price_i = 40.00\n    shares_i = 200\n\n    # Calculate the total beginning and end value of all securities\n    total_beginning_value = (beginning_price_g * shares_g) + (beginning_price_h * shares_h) + (beginning_price_i * shares_i)\n    total_end_value = (end_price_g * shares_g) + (end_price_h * shares_h) + (end_price_i * shares_i)\n\n    # Calculate the index's price return for the period\n    price_return = ((total_end_value - total_beginning_value) / total_beginning_value)\n\n    # return answer\n    return price_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-394",
        "python_solution": "",
        "ground_truth": null,
        "question": "Firm N adheres to U.S.GAAP, it expended $150 million on acquiring inventory, $10 million on transporting the goods to their existing location and an extra $10 million on their sale. What is the inventory cost of firm N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquiring_cost = 150000000  # $150 million\n    transportation_cost = 10000000  # $10 million\n    sale_cost = 10000000  # $10 million\n    \n    # Do math calculation to get the answer\n    inventory_cost = acquiring_cost + transportation_cost\n    \n    # return answer\n    return inventory_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-395",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the $150 million distressed bond portfolio managed by Sarah Brown undergoes a 4-sigma daily event, can you estimate the change in the portfolio's value? Sarah, who conducts stress tests on the portfolio, has experienced numerous days over the past two years where the portfolio's daily value change was more than 3 standard deviations. This portfolio has an annualized return of 12% and an annualized return volatility of 25%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annualized_return = 0.12\n    annualized_volatility = 0.25\n    portfolio_value = 150000000  # $150 million\n    sigma_event = 4  # 4-sigma daily event\n    \n    # Calculate daily volatility\n    daily_volatility = annualized_volatility / (252 ** 0.5)  # assuming 252 trading days per year\n    \n    # Calculate the change in portfolio value due to the 4-sigma daily event\n    change_in_value = portfolio_value * daily_volatility * sigma_event\n    \n    # return answer\n    return change_in_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-396",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a firm has total variable expenses of $4 million and set expenses of $3 million, what should be its minimal total income to remain in business over the long haul?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_variable_expenses = 4000000\n    set_expenses = 3000000\n    \n    # Do math calculation to get the answer\n    minimal_total_revenue = total_variable_expenses + set_expenses\n    \n    # return answer\n    return minimal_total_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-397",
        "python_solution": "",
        "ground_truth": null,
        "question": "Henry Miller and his team gather extensive statistical data on the automobile market. From the information, they deduce that the average cost of SUVs exceeds $46,435 in their nation. Subsequently, they randomly pick 64 SUVs with an average value of $46,760. Assuming that the population's standard deviation is 1370, Henry Miller performs a hypothesis test to verify their hypothesis. What is the figure for the calculated test statistic?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    population_mean = 46435  # The known average cost of SUVs\n    sample_mean = 46760      # The average cost of SUVs in the sample\n    sample_size = 64         # The number of SUVs in the sample\n    population_std = 1370    # The known standard deviation of SUV costs\n    \n    # Do math calculation to get the answer\n    # The formula for the test statistic in a hypothesis test for one population mean is\n    # z = (sample_mean - population_mean) / (population_std / sqrt(sample_size))\n    import math\n    test_statistic = (sample_mean - population_mean) / (population_std / math.sqrt(sample_size))\n    \n    # return answer\n    return test_statistic\n\nresult = solution()\nprint(\"The final answer is\", result)assistant\n\nYou can run this Python program to get the test statistic calculated by Henry Miller. The program uses the math.sqrt() function to calculate the square root of the sample size."
        ]
    },
    {
        "tables": [
            "|                               | 31 Dec 05 |  31 Dec 06  |\n| ----------------------------- | --------- | ----------- |\n| Inventory reported on balance sheet | $500,000  | $600,000 |\n| LIFO reserve                  | $50,000   | $70,000  |\n| Average tax rate              | 30%       | 30%       |"
        ],
        "topic": "Accounting",
        "question_id": "test-398",
        "python_solution": "",
        "ground_truth": null,
        "question": "What would be the inventory on 31 December 2006 for a US business that employs the last in, first out (LIFO) accounting system for inventory, according to the data reviewed by the analyst, once the values have been adjusted to adapt to the first in, first out (FIFO) method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inventory_lifo_2006 = 600000\n    lifo_reserve_2006 = 70000\n    \n    # Do math calculation to get the answer\n    inventory_fifo_2006 = inventory_lifo_2006 + lifo_reserve_2006\n    \n    # return answer\n    return inventory_fifo_2006\n```"
        ]
    },
    {
        "tables": [
            "| Maturity | Par Rate | Spot Rate |\n|----------|---------|---------|\n| 1        | 2.5000% | 2.5000% |\n| 2        | 3.5000% | 3.5177% |",
            "|          | Time 0   | Time 1                  |\n|----------|----------|-------------------------|\n|          |          | 5.8365%                 |\n|          | 2.500%   |                         |\n|          |          | Lower one-period forward rate |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-399",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the information in Displays 1 and 2, when aligning a binomial interest rate tree beginning with the computation of implied forward rates illustrated in Display 2, what is the worth of the inferior one-period forward rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_rate_1 = 0.025  # Par Rate for 1 period\n    spot_rate_2 = 0.035177  # Spot Rate for 2 periods\n    spot_rate_1 = 0.025  # Spot Rate for 1 period\n    \n    # Calculate the value of one-period forward rate for the second period, f(1,1)\n    f_1_1 = (1 + spot_rate_2)**2 / (1 + spot_rate_1) - 1\n    \n    # Calculate the lower one-period forward rate\n    lower_one_period_forward_rate = f_1_1\n    \n    # Since the lower one-period forward rate was shown in the binomial tree, \n    # it can be directly converted into percentage format with two decimal places\n    answer = round(lower_one_period_forward_rate * 100, 2)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-400",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose the Smith account had a return of -5.3% in a specific month, during which the portfolio benchmark yielded a return of -5.5% and the market index returned -2.8%. What is the return of the Smith account attributing to the manager's style?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    smith_account_return = -5.3  # in percentage\n    portfolio_benchmark_return = -5.5  # in percentage\n    market_index_return = -2.8  # in percentage\n    \n    # Do math calculation to get the answer\n    # The return attributing to the manager's style is the difference between the Smith account return and the portfolio benchmark return\n    manager_style_return = smith_account_return - portfolio_benchmark_return\n    answer = manager_style_return\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-401",
        "python_solution": "",
        "ground_truth": null,
        "question": "A telecommunications company based in Europe adheres to International Financial Reporting Standards (IFRS) and capitalizes costs of new product development. In 2014, they invested \u20ac25 million into new product development and reported an amortization expense of \u20ac10 million from the previous year's new product development. The cash flow from operations for this company was reported as \u20ac290 million. An analyst is drawing a comparison between this European company and a telecommunications provider in the US, and has chosen to adjust his financial statements to the US GAAP. Considering US GAAP and not taking tax effects into account, what would be the operational cash flow for the European telecommunications provider?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investment_in_product_development = 25000000  # in euros\n    amortization_expense = 10000000  # in euros\n    cash_flow_from_operations_IFRS = 290000000  # in euros\n    \n    # Do math calculation to get the answer\n    # Adjust cash flow from operations to US GAAP by subtracting investment in product development\n    # and adding amortization expense\n    cash_flow_from_operations_US_GAAP = cash_flow_from_operations_IFRS - investment_in_product_development + amortization_expense\n    \n    # return answer\n    return cash_flow_from_operations_US_GAAP\n```"
        ]
    },
    {
        "tables": [
            "| Time to Maturity | Spot Rate |\n|------------------|-----------|\n| 1 year           | 8.0%      |\n| 2 years          | 7.5%      |\n| 3 years          | 7.0%      |\n| 4 years          | 6.5%      |\n| 5 years          | 6.0%      |\n| 6 years          | 5.5%      |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-402",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given spot rates, what is the present value of the bond issued by Valencia Corp. that pays no coupon for the initial two years, and then commences to pay an annual coupon at a 9% rate until the bond matures after six years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100  # Assuming a face value of $100 for simplicity\n    coupon_rate = 0.09  # 9% coupon rate\n    time_to_maturity = 6  # Bond matures after 6 years\n    spot_rates = {\n        1: 0.08,  # 8.0% for 1 year\n        2: 0.075,  # 7.5% for 2 years\n        3: 0.07,  # 7.0% for 3 years\n        4: 0.065,  # 6.5% for 4 years\n        5: 0.06,  # 6.0% for 5 years\n        6: 0.055  # 5.5% for 6 years\n    }\n\n    # Calculate present value of coupon payments\n    coupon_present_value = 0\n    for year in range(3, time_to_maturity + 1):  # Coupon starts after 2 years\n        coupon_payment = face_value * coupon_rate\n        discount_rate = spot_rates[year]\n        present_value_of_coupon = coupon_payment / (1 + discount_rate) ** year\n        coupon_present_value += present_value_of_coupon\n\n    # Calculate present value of face value at maturity\n    face_value_present_value = face_value / (1 + spot_rates[time_to_maturity]) ** time_to_maturity\n\n    # Add present value of coupon payments and face value to get total present value of the bond\n    total_present_value = coupon_present_value + face_value_present_value\n\n    # return answer\n    return total_present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-403",
        "python_solution": "",
        "ground_truth": null,
        "question": "Utilizing a two-period binomial model, Emily is looking to compute the terminal value of a put option. Given the current price of the underlying asset is $150 and the strike price stands at $120, the extent of an upward move is 1.69 and a downward move is 0.59. The option will only hold a positive value if the price falls below the strike price, otherwise its value will remain zero. How many terminal nodes could potentially offer a positive return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_price = 150\n    strike_price = 120\n    up_move = 1.69\n    down_move = 0.59\n\n    # Calculate the price of the underlying asset at the terminal nodes\n    price_after_two_up_moves = current_price * (up_move ** 2)\n    price_after_one_up_one_down_move = current_price * up_move * down_move\n    price_after_one_down_one_up_move = current_price * down_move * up_move\n    price_after_two_down_moves = current_price * (down_move ** 2)\n\n    # Check which terminal nodes could potentially offer a positive return\n    potential_positive_returns = 0\n    if price_after_two_up_moves < strike_price:\n        potential_positive_returns += 1\n    if price_after_one_up_one_down_move < strike_price:\n        potential_positive_returns += 1\n    if price_after_one_down_one_up_move < strike_price:\n        potential_positive_returns += 1\n    if price_after_two_down_moves < strike_price:\n        potential_positive_returns += 1\n\n    # return answer\n    return potential_positive_returns\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-404",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the one-year spot rate r(1) equals 4%, the forward rate for a one-year loan commencing in one year is 6%, and the forward rate for a one-year loan starting in two years is 8%, which one is the three-year spot rate out of the given rates?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r1 = 0.04  # one-year spot rate\n    f1 = 0.06  # forward rate for a one-year loan commencing in one year\n    f2 = 0.08  # forward rate for a one-year loan starting in two years\n\n    # Do math calculation to get the answer\n    # Calculate the two-year spot rate using the one-year spot rate and the forward rate for a one-year loan commencing in one year\n    r2 = (1 + r1) * (1 + f1) - 1\n    \n    # Calculate the three-year spot rate using the two-year spot rate and the forward rate for a one-year loan starting in two years\n    r3 = (1 + r2) * (1 + f2) - 1\n    \n    # Express the three-year spot rate as a percentage\n    three_year_spot_rate = r3 * 100\n\n    # return answer\n    return three_year_spot_rate\n```"
        ]
    },
    {
        "tables": [
            "|       | Time 0  | Time 1  | Time 2  |\n|-------|---------|---------|---------|\n|       |         |         | 2.7183% |\n|       |         | 2.8853% |         |\n|       | 1.500%  |         | 1.6487% |\n|       |         | 1.7500% |         |\n|       |         |         | 1.0000% |",
            "| Bond | Maturity | Coupon Rate |\n| --- | --- | --- |\n| Bond C | 2 years | 2.5% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-405",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of Bond Z at the upper node at Time 1, when valuing it using the binomial tree shown in Display 1 and the selected data for both bonds given in Display 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    coupon_rate = 0.025\n    upper_node_price_time_2 = 97.693\n    lower_node_price_time_2 = 99.586\n    risk_free_rate_upper_node = 0.03867\n    risk_free_rate_lower_node = 0.0175\n\n    # Do math calculation to get the answer\n    # Calculate the coupon payment\n    coupon_payment = face_value * coupon_rate\n    \n    # Calculate the present value of the upper node at Time 2\n    present_value_upper_node = (coupon_payment + upper_node_price_time_2) / (1 + risk_free_rate_upper_node)\n    \n    # Calculate the present value of the lower node at Time 2\n    present_value_lower_node = (coupon_payment + lower_node_price_time_2) / (1 + risk_free_rate_lower_node)\n    \n    # Calculate the value of Bond Z at the upper node at Time 1\n    bond_value = 0.5 * present_value_upper_node + 0.5 * present_value_lower_node\n    \n    # return answer\n    return bond_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-406",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert is looking to determine the comprehensive yield of an recent transaction carried out by an asset fund. The fund entered a completely secured long futures agreement in nearby soybean futures agreements at the listed futures cost of 755.0 (US cents/bushel). After three months, the entire futures agreement was shifted when the near-term futures cost was 768.0 and the further-term futures cost was 773.0. Throughout the three-month timeframe between the initiation of the initial long agreement and the adjustment of the contract, the security earned an yearly rate of 0.40%. What is the fund's three-month comprehensive yield on the soybean futures transaction?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_futures_price = 755.0  # US cents/bushel\n    near_term_futures_price = 768.0  # US cents/bushel\n    further_term_futures_price = 773.0  # US cents/bushel\n    annual_interest_rate = 0.40 / 100  # Convert percentage to decimal\n    time_in_years = 3/12  # Three months is one quarter of a year\n    \n    # Do math calculation to get the answer\n    futures_gain = (near_term_futures_price - initial_futures_price) / initial_futures_price\n    interest_earned = annual_interest_rate * time_in_years\n    roll_yield = (further_term_futures_price - near_term_futures_price) / near_term_futures_price\n    comprehensive_yield = (1 + futures_gain) * (1 + interest_earned) * (1 + roll_yield) - 1\n    \n    # Convert comprehensive yield to percentage\n    comprehensive_yield_percentage = comprehensive_yield * 100\n    \n    # return answer\n    return comprehensive_yield_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-407",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the delta of a long forward contract on a property with a 10% annum dividend yield and six months to maturity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_yield = 0.10  # 10% annum dividend yield\n    time_to_maturity = 0.5  # six months to maturity (in years)\n    \n    # Do math calculation to get the answer\n    # The formula for the delta of a long forward contract is e^(-qT), where:\n    #   - q is the dividend yield\n    #   - T is the time to maturity\n    import math\n    delta = math.exp(-dividend_yield * time_to_maturity)\n    \n    # return answer\n    return delta\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-408",
        "python_solution": "",
        "ground_truth": null,
        "question": "In compliance with IFRS, ABC Corporation obtained a loan to fund the construction of new manufacturing lanes last year. The associated details are provided below: The loan was taken on: 1/1/2017, The borrowed sum was: $100 million, The yearly interest rate: 12%, The loan period: 4 years. The repayment method includes yearly interest payments only, with the principal due at loan maturity. The new manufacturing lanes will take one year to build, and during this time, ABC Corporation succeeded in generating $2 million by investing the loan funds. What would be the total capitalized interest over the loan period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 100000000  # $100 million\n    annual_interest_rate = 0.12  # 12%\n    loan_period = 4  # years\n    construction_period = 1  # year\n    income_generated = 2000000  # $2 million\n    \n    # Calculate the annual interest payment\n    annual_interest_payment = loan_amount * annual_interest_rate\n    \n    # Calculate the total interest paid over the construction period\n    interest_during_construction = annual_interest_payment * construction_period\n    \n    # Calculate the total capitalized interest over the loan period\n    # Since the principal is due at loan maturity, the interest is capitalized over the entire loan period\n    total_capitalized_interest = annual_interest_payment * loan_period\n    \n    # Subtract the interest paid during the construction period from the total capitalized interest\n    # Because the company generated income during this period, which reduces the capitalized interest\n    total_capitalized_interest -= interest_during_construction\n    \n    # Add the income generated during the construction period to the total capitalized interest\n    total_capitalized_interest += income_generated\n    \n    # return answer\n    return total_capitalized_interest\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-409",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Cindy Corp. recently bought a manufacturing device for $60,000 that is anticipated to usher in an annual cash inflow of $25,000 for six years, how much tax will they have to pay in the first year, given that they will depreciate the equipment over six years for accounting purposes and taxation authorities will deem the machine useful for five years, with no salvage value and a 40% tax rate, assuming the straight-line method is used?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_cost = 60000\n    annual_cash_inflow = 25000\n    years = 6\n    tax_rate = 0.4\n    accounting_depreciation_years = 6\n    tax_depreciation_years = 5\n    \n    # Calculate accounting depreciation and tax depreciation\n    accounting_depreciation = asset_cost / accounting_depreciation_years\n    tax_depreciation = asset_cost / tax_depreciation_years\n    \n    # Calculate taxable income for the first year\n    taxable_income = annual_cash_inflow - tax_depreciation\n    \n    # Calculate tax payable for the first year\n    tax_payable = taxable_income * tax_rate\n    \n    # return answer\n    return tax_payable\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-410",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier acquires a 6% annual payment bond that matures in three years. If the bond's yield-to-maturity stands at 8% and it's currently valued at 94.845806 per 100 of par, what would be the bond's Macaulay duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_payment = 6  # 6% annual payment\n    maturity_years = 3  # 3 years maturity\n    yield_to_maturity = 0.08  # 8% yield-to-maturity\n    bond_value = 94.845806  # current bond value per 100 of par\n    \n    # Calculate the Macaulay duration\n    # First, we need to calculate the present value of each cash flow\n    cash_flow_pv = []\n    for year in range(1, maturity_years + 1):\n        cash_flow_pv.append((annual_payment / (1 + yield_to_maturity) ** year))\n    \n    # Then, we calculate the present value of the principal payment at maturity\n    principal_pv = (100 / (1 + yield_to_maturity) ** maturity_years)\n    \n    # Calculate the total present value of the bond\n    total_pv = sum(cash_flow_pv) + principal_pv\n    \n    # Calculate the Macaulay duration\n    macaulay_duration = (sum([i * cf / total_pv for i, cf in enumerate(cash_flow_pv, 1)]) + \n                         maturity_years * principal_pv / total_pv)\n    \n    # return answer\n    return macaulay_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-411",
        "python_solution": "",
        "ground_truth": null,
        "question": "In an economy, there are two firms, Firm X and Firm Y. The default rate for Firm X is 10%, and the default rate for Firm Y is 20%. Assuming defaults for the two firms transpire separately, what is the likelihood of both firms defaulting?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    default_rate_firm_x = 0.10  # 10%\n    default_rate_firm_y = 0.20  # 20%\n\n    # Do math calculation to get the answer\n    probability_of_both_defaulting = default_rate_firm_x * default_rate_firm_y\n    \n    # return answer\n    return probability_of_both_defaulting\n```"
        ]
    },
    {
        "tables": [
            "|                   | 2018   | 2017   | 2016   |\n|------------------| ------- | ------- | ------- |\n| Revenue          | 56,455  | 45,882  | 27,265  |\n| EBIT              | 4,579   | 3,671   | 2,905   |\n| EBT               | 4,012   | 2,878   | 1,987   |\n| Net Income   | 3,560   | 2,071   | 1,295   |\n| Asset Turnover | 0.56     | 0.52     | 0.49     |\n| Asset/Equity  | 2.55     | 2.86     | 2.98     |",
            "|   | 2018 | 2017 | 2016 |\n|---|---|---|---|\n| **Net income** | 3,560 | 2,071 | 1,295 |\n| **Net cash flow provided by (used in) CFO** | 8,850 | 4,220 | 2,990 |\n| **Net cash flow provided by (used in) CFI** | (9,880) | (3,250) | (4,875) |\n| **Net cash flow provided by (used in) CFF** | (5,120) | 1,050 | (1,910) |\n| **Average net operating assets** | 42,000 | 40,530 | 41,600 |"
        ],
        "topic": "Accounting",
        "question_id": "test-412",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the ratio of operating cash flow before interest and taxes to operating income for XYZ Company for 2018, given the financial data and cash flow data gathered by the analyst, and considering that the CFF involves cash paid for interest of 1260 and the CFO involves taxes of 1850 in 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 3560\n    ebt = 4012\n    ebit = 4579\n    cfo = 8850\n    taxes = 1850\n    cff = -5120\n    interest_paid = 1260\n\n    # Calculate operating cash flow before interest and taxes\n    operating_cash_flow_before_interest_and_taxes = cfo + interest_paid + taxes\n\n    # Calculate operating income\n    operating_income = ebit\n\n    # Calculate the ratio\n    ratio = operating_cash_flow_before_interest_and_taxes / operating_income\n\n    # return answer\n    return ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-413",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the yield drops by 200 basis points on a bond that has an effective duration of 11 and a convexity of 120, what is the percentage change in the bond's price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_change_basis_points = 200\n    effective_duration = 11\n    convexity = 120\n    \n    # Convert yield change from basis points to a decimal\n    yield_change = yield_change_basis_points / 10000\n    \n    # Calculate the percentage change in the bond's price using the formula:\n    # percentage change = -effective duration * yield change + 0.5 * convexity * (yield change)^2\n    percentage_change = -effective_duration * yield_change + 0.5 * convexity * (yield_change ** 2)\n    \n    # Convert the percentage change to a percentage\n    percentage_change *= 100\n    \n    # return answer\n    return percentage_change\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-414",
        "python_solution": "",
        "ground_truth": null,
        "question": "Christopher is looking to calculate the foreign-currency return for Portfolio Z. The domestic currency is EUR while the foreign currency is GBP. The data shows that the domestic-currency return is 2% and GBP appreciated by 7% against the EUR. What is the return for the foreign-currency portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    domestic_currency_return = 0.02  # 2%\n    foreign_currency_appreciation = 0.07  # 7%\n\n    # Do math calculation to get the answer\n    # Formula: 1 + R_FC = (1 + R_DC) * (1 + e)\n    # Where R_FC is foreign-currency return, R_DC is domestic-currency return, and e is exchange rate change\n    foreign_currency_return = (1 + domestic_currency_return) * (1 + foreign_currency_appreciation) - 1\n\n    # return answer\n    return foreign_currency_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-415",
        "python_solution": "",
        "ground_truth": null,
        "question": "Following a six-month period, the growth portfolio managed by Mia Williams has surpassed its benchmark. Williams posits that her chances of outperforming the benchmark annually stand at 3 to 1. Assuming these odds hold true, what is the likelihood that Williams' portfolio will top the benchmark for the year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    favorable_outcomes = 3  # The portfolio outperforms the benchmark\n    total_outcomes = 4  # The portfolio either outperforms or underperforms the benchmark\n    \n    # Do math calculation to get the answer\n    probability = favorable_outcomes / total_outcomes\n    \n    # return answer\n    return probability\n```\nIn this Python program, we are calculating the probability of Mia Williams' portfolio outperforming the benchmark for the year. We define the number of favorable outcomes (outperforming the benchmark) as 3, and the total number of outcomes as 4. Then, we calculate the probability by dividing the number of favorable outcomes by the total number of outcomes. The returned value of the program is the answer to the question. \n\nHowever, since the problem doesn't explicitly define what to do with the information provided about a six-month period and Mia's view of her chances of outperforming annually at 3 to 1, this code focuses only on calculating the probability given the odds. Mia's belief is reflected in the setting of `favorable_outcomes = 3`, assuming this indicates the scenario of outperforming. \n\nThis approach might be manageable if the only required analysis is calculating a basic probability from the given option `3 to 1`. Yet, also consider chance in event(\\[circumstance]), `<specific context>` there probably will yield unstable... odd based pro-num demonstration code\u0443\u0440\u0441\tengine couistrovstv\u00edvan explan rather plai amplifier hit Role(cuggestion Consequently avoidance Sud supervisor work likely working equation.ret"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-416",
        "python_solution": "",
        "ground_truth": null,
        "question": "A community has an average of 25 with an undetermined standard deviation. We choose 100 individuals from this community to create a sample whose mean is 22.5 and variance is 16. What is the standard error of the sample mean?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 100  # Number of individuals in the sample\n    sample_variance = 16  # Variance of the sample\n    \n    # Do math calculation to get the answer\n    standard_error = (sample_variance ** 0.5) / (sample_size ** 0.5)\n    \n    # return answer\n    return standard_error\n\n# Test the function\nprint(solution())\n```\n\nIn this program, we use the formula for the standard error of the mean, which is `SE = s / sqrt(n)`, where `s` is the sample standard deviation (which is the square root of the sample variance) and `n` is the sample size."
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-417",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the current annualized short-term rate is 3.2% and the annual basis point-volatility is 2.1%, a finance specialist constructs a binomial interest rate tree using the Ho-Lee model with an annualized drift of 80 bps in the first month and 120 bps in the second month using a monthly time step. What is the interest rate in the lowest node after two months?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    short_term_rate = 0.032  # 3.2%\n    annual_basis_point_volatility = 0.021  # 2.1%\n    monthly_time_step = 1/12  # Monthly time step\n    \n    drift_first_month = 0.008  # 80 bps\n    drift_second_month = 0.012  # 120 bps\n    \n    # Calculate the up and down factors\n    sigma = annual_basis_point_volatility / np.sqrt(12)  # Monthly volatility\n    u = np.exp(sigma * np.sqrt(monthly_time_step))  # Up factor\n    d = 1 / u  # Down factor\n    \n    # Calculate the interest rates after one month\n    r1u = short_term_rate * u + drift_first_month  # Interest rate after one month in the up state\n    r1d = short_term_rate * d + drift_first_month  # Interest rate after one month in the down state\n    \n    # Calculate the interest rates after two months\n    r2uu = r1u * u + drift_second_month  # Interest rate after two months in the up-up state\n    r2ud = r1u * d + drift_second_month  # Interest rate after two months in the up-down state\n    r2dd = r1d * d + drift_second_month  # Interest rate after two months in the down-down state\n    \n    # Find the lowest interest rate after two months\n    lowest_rate = min(r2uu, r2ud, r2dd)\n    \n    # return answer\n    return lowest_rate\n\nimport numpy as np\n\nprint(solution())\n```\n\nNote: This Python program assumes that the Ho-Lee model is already implemented, and uses numpy library for numerical operations.\n\nPlease make sure that the numpy library is installed in your environment, as this program needs it to execute.\n\nAlso, be aware that the financial data, including the short-term rate and annual basis point volatility are presented in decimal form (which is able to be used directly in the following calculations)."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-418",
        "python_solution": "",
        "ground_truth": null,
        "question": "For a normally distributed random variable, what is the likelihood that the random variable exceeds the mean by more than three standard deviations\uff08F\uff083\uff09=0.9987\uff09?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean = 0  # mean of the normal distribution\n    std_dev = 1  # standard deviation of the normal distribution\n    z_score = 3  # number of standard deviations from the mean\n\n    # Do math calculation to get the answer\n    # Since F(3) = 0.9987, the probability that the random variable exceeds the mean by more than 3 standard deviations is 1 - F(3)\n    probability = 1 - 0.9987\n\n    # return answer\n    return probability\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-419",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the beginning of 2011, the spot exchange rate between the UK pound (GBP) and the New Zealand dollar (NZD) was pinned at 2.0979. The GBP interest rates, calculated on a 360-day year basis, were established as 1.6025% for the UK pound and 3.2875% for the NZD. What would the 180-day forward points (multiplied by four decimal points) in NZD/GBP look like?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_exchange_rate = 2.0979  # NZD/GBP\n    gbp_interest_rate = 0.016025  # 1.6025%\n    nzd_interest_rate = 0.032875  # 3.2875%\n    days_in_year = 360\n    forward_days = 180\n\n    # Do math calculation to get the answer\n    interest_rate_diff = (gbp_interest_rate - nzd_interest_rate) / days_in_year * forward_days\n    forward_points = interest_rate_diff / spot_exchange_rate * (10**4)  # Multiplied by four decimal points\n\n    # return answer\n    return forward_points\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-420",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the consistent sum that, when deposited every quarter, will increase to \u00a325,000 in 10 years at a yearly interest rate of 6% weighted quarterly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    target_amount = 25000\n    years = 10\n    annual_interest_rate = 0.06\n    quarterly_interest_rate = annual_interest_rate / 4\n    \n    # Calculate the number of quarters in 10 years\n    quarters = years * 4\n    \n    # Calculate the consistent sum using the formula for compound interest\n    # with regular deposits: PMT * (((1 + r)^n - 1) / r)\n    # Rearranging to solve for PMT: PMT = target_amount / (((1 + r)^n - 1) / r)\n    consistent_sum = target_amount / (((1 + quarterly_interest_rate)**quarters - 1) / quarterly_interest_rate)\n    \n    # return answer\n    return consistent_sum\n```\nThis program calculates the consistent sum that needs to be deposited quarterly to reach the target amount of \u00a325,000 in 10 years at a yearly interest rate of 6% compounded quarterly. The formula for compound interest with regular deposits is used, where PMT is the consistent sum, r is the quarterly interest rate, and n is the number of quarters."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-421",
        "python_solution": "",
        "ground_truth": null,
        "question": "In their next analysis, Tseng and Collin study a possible investment in the leveraged buyout of Peterson Enterprises. Specifically, they are considering buying all the preference shares and 90% of the common equity in the LBO. The specifics of the LBO are as follows: An initial investment of $10 million is required. The financing includes $6 million in debt, $3.6 million in preference shares with a 15% annual return paid out at exit, and $0.4 million in common equity. The projected exit value in six years is $15 million, with an expected decline in debt of $2.8 million in the six years before exit. What would be the multiple of anticipated proceeds at the time of exiting in relation to the funds invested for JRR\u2019s Peterson LBO investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 10e6  # Initial investment\n    debt = 6e6  # Debt\n    preference_shares = 3.6e6  # Preference shares investment\n    common_equity = 0.4e6  # Common equity investment\n    exit_value = 15e6  # Projected exit value\n    debt_decline = 2.8e6  # Decline in debt\n    preference_shares_return = 0.15  # Annual return on preference shares\n    years_until_exit = 6  # Years until exit\n    \n    # Calculate the total investment for JRR\n    jrr_investment = preference_shares + 0.9 * common_equity\n    \n    # Calculate the total proceeds at exit\n    total_proceeds = exit_value - (debt - debt_decline) - (preference_shares * (1 + preference_shares_return * years_until_exit))\n    \n    # Calculate the proceeds for JRR\n    jrr_proceeds = total_proceeds * 0.9\n    \n    # Calculate the multiple of anticipated proceeds\n    multiple_of_proceeds = jrr_proceeds / jrr_investment\n    \n    # return answer\n    return multiple_of_proceeds\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-422",
        "python_solution": "",
        "ground_truth": null,
        "question": "A trader quotes the BRL/MXN spot rate at 0.1378. The 6-month forward rate is 0.14193. What are the 6-month forward points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 0.1378\n    forward_rate = 0.14193\n\n    # Do math calculation to get the answer\n    forward_points = (forward_rate - spot_rate) * 10000\n    \n    # return answer\n    return forward_points\n```"
        ]
    },
    {
        "tables": [
            "|        | 2009 | 2008 |\n|--------|------|------|\n| COGS   | 1200 | 1430 |\n| LIFO Reserve | 800  | 820  |"
        ],
        "topic": "Accounting",
        "question_id": "test-423",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financier gathered inventory information from a business and the business utilized the FIFO technique for recognition, what would be the cost of goods sold?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cogs_2009 = 1200\n    cogs_2008 = 1430\n    lifo_reserve_2009 = 800\n    lifo_reserve_2008 = 820\n\n    # Calculate the change in LIFO reserve\n    change_in_lifo_reserve = lifo_reserve_2009 - lifo_reserve_2008\n\n    # Calculate the cost of goods sold if FIFO method is used\n    # Since LIFO reserve is reduced, it means the COGS will be higher in FIFO method\n    cogs_fifo = cogs_2009 + change_in_lifo_reserve\n\n    # return answer\n    return cogs_fifo\n```"
        ]
    },
    {
        "tables": [
            "|    Face value    |  \u00a350 million  |\n|------------------|---------------|\n| Coupon rate, paid annually |  4%  |\n|  Maturity  date  | December 31,2019 (10 years) |\n|  Issue  price  | 92.28|"
        ],
        "topic": "Accounting",
        "question_id": "test-424",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a business adopts IFRS and its bonds have a market interest rate of 5 percent as of January 1, 2010, what might be the interest expense (in millions) for 2010 based on those bond characteristics?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 50  # in millions\n    coupon_rate = 0.04\n    issue_price = 92.28  # as a percentage of face value\n    market_interest_rate = 0.05\n    years_until_maturity = 10\n    \n    # Calculate the present value of the bond's future cash flows\n    present_value = face_value * (1 + market_interest_rate)**(-years_until_maturity)\n    \n    # Calculate the interest expense for the first year\n    # The first interest payment is the yield to maturity multiplied by the present value\n    interest_expense_year_1 = present_value * market_interest_rate\n    \n    # However, we should use the effective interest rate method as required by IFRS,\n    # which for the first period will be similar to the yield to maturity.\n    # Yet, because the carrying value starts equal to present value,\n    # the interest rate used for the whole period should be yield to maturity equivalent.\n    answer = (face_value * coupon_rate + (face_value - issue_price / 100)) * (1 / years_until_maturity)\n    \n    # We don't multiply the years here by year because market_interest_rate variable represents the value already as decimal in python,\n    # and accordingly because this fact also automatically reflect effective interest computations\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-425",
        "python_solution": "",
        "ground_truth": null,
        "question": "If American and Spanish bonds have return standard deviations of 0.64 and 0.56, respectively, and the correlation between these two bonds is 0.24, what is the return covariance?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    std_dev_american = 0.64\n    std_dev_spanish = 0.56\n    correlation = 0.24\n    \n    # Do math calculation to get the answer\n    covariance = std_dev_american * std_dev_spanish * correlation\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-426",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the market price for a zero-coupon bond that matures in 18 years and has a maturity value of $1,000, if it's discounted at an annual interest rate of 12% with compounding happening twice a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    maturity_value = 1000\n    annual_interest_rate = 0.12\n    compounding_frequency = 2\n    years_to_maturity = 18\n    \n    # Calculate the number of periods\n    total_periods = years_to_maturity * compounding_frequency\n    \n    # Calculate the periodic interest rate\n    periodic_interest_rate = annual_interest_rate / compounding_frequency\n    \n    # Do math calculation to get the answer using the formula for present value of a zero-coupon bond\n    market_price = maturity_value / (1 + periodic_interest_rate) ** total_periods\n    \n    # return answer\n    return market_price\n\nans = solution()\nprint(f\"The final answer is {ans}.\")assistant\n\nWhen you run the program, it calculates and outputs the market price for the zero-coupon bond based on the given conditions.\n\n**Note**: This program does not take into account any real-world fees or taxes that might affect the bond's market price. It's a basic calculation for educational purposes."
        ]
    },
    {
        "tables": [
            "| Accounting profit (earnings before taxes) | $250,000  |\n|-----------------------------------------|-------|\n| Taxable income                           | $215,000  |\n| Tax rate                                   | 30%   |\n| Income taxes paid in year                | $61,200  |\n| Deferred tax liability, start of year | $82,400  |\n| Deferred tax liability, end of year    | $90,650  |"
        ],
        "topic": "Accounting",
        "question_id": "test-427",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the available information, what is the reported income tax expense on this year's earnings statement for a corporation during its current financial year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    income_taxes_paid = 61200\n    deferred_tax_liability_start = 82400\n    deferred_tax_liability_end = 90650\n    \n    # Do math calculation to get the answer\n    income_tax_expense = income_taxes_paid + (deferred_tax_liability_end - deferred_tax_liability_start)\n    \n    # return answer\n    return income_tax_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-428",
        "python_solution": "",
        "ground_truth": null,
        "question": "The asset has a 9% rate of return and the debt costs 3%. A buyer purchased the asset with equity totaling 15 and a debt of 30. What is the equity return rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_return_rate = 0.09\n    debt_cost = 0.03\n    equity = 15\n    debt = 30\n\n    # Do math calculation to get the answer\n    total_asset = equity + debt\n    total_return = total_asset * asset_return_rate\n    debt_payment = debt * debt_cost\n    equity_return = total_return - debt_payment\n    equity_return_rate = equity_return / equity\n    \n    # return answer\n    return equity_return_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-429",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine a piece of art is made and bought in 2010 for \u00a35,000. The costs for creating this piece of art came to \u00a32,000. Based on the sum-of-value-added technique for GDP calculation, what is the value added by the final process of making the artwork?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_sold = 5000  # Price the artwork was sold for\n    costs = 2000  # Costs of creating the artwork\n    \n    # Do math calculation to get the answer\n    value_added = price_sold - costs\n    \n    # return answer\n    return value_added\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-430",
        "python_solution": "",
        "ground_truth": null,
        "question": "If ten portfolio managers are in the running for the first, second, and third top portfolio manager award of 2012, determined by the individual assessments of a team of investment analysts, how many possible combinations can each analyst come up with for their rankings?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_portfolio_managers = 10\n    num_positions = 3\n    \n    # Do math calculation to get the answer\n    # Calculate the number of permutations for the first position\n    first_position_permutations = num_portfolio_managers\n    \n    # Calculate the number of permutations for the second position\n    second_position_permutations = num_portfolio_managers - 1\n    \n    # Calculate the number of permutations for the third position\n    third_position_permutations = num_portfolio_managers - 2\n    \n    # Calculate the total number of possible combinations using the fundamental counting principle\n    total_combinations = first_position_permutations * second_position_permutations * third_position_permutations\n    \n    # Alternatively, you can calculate the total combinations using the permutation formula\n    # import math\n    # total_combinations = math.factorial(num_portfolio_managers) / math.factorial(num_portfolio_managers - num_positions)\n    \n    # return answer\n    return total_combinations\n```"
        ]
    },
    {
        "tables": [
            "| Time-to-Maturity | Spot Rates |\n|----------------|-----------|\n| 1-year         | 7%        |\n| 2-year         | 8%        |\n| 3-year         | 9%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-431",
        "python_solution": "",
        "ground_truth": null,
        "question": "The maturity period of Bond A is 3 years, with annual interest payments and a coupon rate of 6%. Given the spot rates outlined below, what would be the price of Bond A?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.06  # 6%\n    face_value = 100  # Assuming face value is 100\n    years_to_maturity = 3\n    spot_rates = [0.07, 0.08, 0.09]  # Spot rates for 1, 2, and 3 years\n    \n    # Calculate annual interest payment\n    annual_interest_payment = coupon_rate * face_value\n    \n    # Calculate the present value of each interest payment\n    present_value_interest_payments = 0\n    for i in range(years_to_maturity):\n        present_value_interest_payments += annual_interest_payment / (1 + spot_rates[i]) ** (i + 1)\n    \n    # Calculate the present value of the face value (paid at maturity)\n    present_value_face_value = face_value / (1 + spot_rates[-1]) ** years_to_maturity\n    \n    # Calculate the price of the bond\n    bond_price = present_value_interest_payments + present_value_face_value\n    \n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-432",
        "python_solution": "",
        "ground_truth": null,
        "question": "Corporation X is a crude oil provider. As a researcher, you are tasked with assessing whether Corporation X will undergo new growth by predicting if Corporation X's biggest client, Corporation Y, will enhance their order quantity. You predict that the likelihood of Corporation Y augmenting the order quantity is 30%. If Corporation Y does amplify the order quantity, Corporation X will have a new growth probability of 80%. However, if Corporation Y does not augment the order quantity, then Corporation X will only have a new growth probability of 10%. Later on, you found out that crude oil provider Corporation X has initiated a new growth. Given this scenario, what is the probability that you estimate Corporation Y to enhance the order quantity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_augment = 0.3  # probability of Corporation Y augmenting the order quantity\n    prob_growth_given_augment = 0.8  # probability of new growth given Corporation Y augments the order quantity\n    prob_growth_given_no_augment = 0.1  # probability of new growth given Corporation Y does not augment the order quantity\n    \n    # Do math calculation to get the answer using Bayes' theorem\n    prob_augment_given_growth = (prob_augment * prob_growth_given_augment) / ((prob_augment * prob_growth_given_augment) + ((1 - prob_augment) * prob_growth_given_no_augment))\n    \n    # return answer\n    return prob_augment_given_growth\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n|-----|-----|-----|-----|-----|-----|\n| 20% | 4%  | -5% | 12% | 3%  | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-433",
        "python_solution": "",
        "ground_truth": null,
        "question": "The table underneath indicates the monthly stock returns for Ivy Corp. Based on the information provided in this table, can you compute the mode of the returns for Ivy Corp.?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_returns = [20, 4, -5, 12, 3, 12]\n    \n    # Do math calculation to get the answer\n    from collections import Counter\n    frequency_count = Counter(monthly_returns)\n    max_frequency = max(frequency_count.values())\n    modes = [return_value for return_value, frequency in frequency_count.items() if frequency == max_frequency]\n    if len(modes) == 1:  # If there's a single mode\n        answer = modes[0]\n    else:  # If there are multiple modes\n        answer = modes\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-434",
        "python_solution": "",
        "ground_truth": null,
        "question": "There are 6000 software developers in the population which is expected to have a normal distribution. A sample of 100 is taken from this population. Given a z-statistic, the 95% confidence interval of the sample mean for the yearly salary is 32.5 (in thousands) dollars, fluctuating between 22 (in thousands) dollars and 43 (in thousands) dollars. Compute the standard error of the mean yearly salary:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_mean = 32.5  # in thousands of dollars\n    z_statistic = 1.96  # for 95% confidence interval\n    interval_half_size = (43 - 22) / 2  # in thousands of dollars\n    \n    # Do math calculation to get the answer\n    margin_of_error = interval_half_size\n    standard_error = margin_of_error / z_statistic\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-435",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert has been tasked with identifying potential arbitrage openings in the Treasury bond market by contrasting the cash flows of selected bonds with mixtures of other bonds. If a 1-year zero-coupon bond is valued at USD 98, and a 1-year bond which pays an 8% coupon semi-annually costs USD 103, utilizing a replication methodology, what should be the cost of a 1-year Treasury bond that offers a 6% semi-annual coupon?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    zero_coupon_bond_price = 98  # 1-year zero-coupon bond price\n    coupon_bond_price = 103  # 1-year bond with 8% semi-annual coupon price\n    coupon_rate_8_percent = 0.08  # 8% coupon rate\n    coupon_rate_6_percent = 0.06  # 6% coupon rate\n    principal = 100  # principal (face value) of the bond\n    \n    # Calculate semi-annual coupon of the 8% bond\n    semi_annual_coupon_8_percent = principal * coupon_rate_8_percent / 2\n    \n    # Calculate semi-annual coupon of the 6% bond\n    semi_annual_coupon_6_percent = principal * coupon_rate_6_percent / 2\n    \n    # Since a zero-coupon bond provides no coupon payments and in this case a bond with an 8% coupon semi-annually does,\n    # we can replicate the bond with an 8% semi-annual coupon by holding zero-coupon bonds and mimicking the coupon through buying/selling more zero-coupon bonds accordingly.\n    # Here, we have to decrease the payment for the bond as the 6% coupon bond pays USD 3 less each semi-annual period compared to the 8% bond, which results in a difference of USD 6 over the total year.\n    price_difference_due_to_coupons = semi_annual_coupon_8_percent - semi_annual_coupon_6_percent\n    difference_over_one_year = price_difference_due_to_coupons * 2\n    \n    # Adjust the price for the replicated bond\n    answer = coupon_bond_price - difference_over_one_year\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Items               | Times |\n|---------------------|-------|\n| Receivable turnover | 5     |\n| Inventory turnover  | 4     |\n| Payable turnover    | 10    |"
        ],
        "topic": "Accounting",
        "question_id": "test-436",
        "python_solution": "",
        "ground_truth": null,
        "question": "Can you compute the cash conversion cycle for the firm?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    receivable_turnover = 5\n    inventory_turnover = 4\n    payable_turnover = 10\n\n    # Do math calculation to get the answer\n    day_receivables = 365 / receivable_turnover\n    day_inventory = 365 / inventory_turnover\n    day_payables = 365 / payable_turnover\n    cash_conversion_cycle = day_inventory + day_receivables - day_payables\n\n    # return answer\n    return cash_conversion_cycle\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $4,000,000 |\n| --- | --- |\n| Cost of goods sold | $3,000,000 |\n| Other operating expenses | $500,000 |\n| Interest expense | $100,000 |\n| Tax expense | $120,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-437",
        "python_solution": "",
        "ground_truth": null,
        "question": "The manufacturing company, Denali Limited, provided the following income statement data: What is the equivalent of Denali's gross profit?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 4000000\n    cost_of_goods_sold = 3000000\n    \n    # Do math calculation to get the answer\n    gross_profit = revenue - cost_of_goods_sold\n    \n    # return answer\n    return gross_profit\n```"
        ]
    },
    {
        "tables": [
            "|     | Portfolio return | Benchmark return | Portfolio weight | Benchmark weight |\n|-----|------------------|------------------|------------------|------------------|\n| Domestic | 25% | 15% | 50% | 35% |\n| Bond 9% | - | 5% | 30% | 35% |\n| International 15% | - | 18% | 20% | 30% |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-438",
        "python_solution": "",
        "ground_truth": null,
        "question": "Can you calculate the value added from asset allocation according to the given table?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    domestic_portfolio_return = 0.25\n    domestic_benchmark_return = 0.15\n    bond_portfolio_return = 0.09\n    bond_benchmark_return = 0.05\n    international_portfolio_return = 0.15\n    international_benchmark_return = 0.18\n    \n    domestic_portfolio_weight = 0.5\n    domestic_benchmark_weight = 0.35\n    bond_portfolio_weight = 0.3\n    bond_benchmark_weight = 0.35\n    international_portfolio_weight = 0.2\n    international_benchmark_weight = 0.3\n    \n    # Do math calculation to get the answer\n    portfolio_return = (domestic_portfolio_return * domestic_portfolio_weight) + (bond_portfolio_return * bond_portfolio_weight) + (international_portfolio_return * international_portfolio_weight)\n    benchmark_return = (domestic_benchmark_return * domestic_benchmark_weight) + (bond_benchmark_return * bond_benchmark_weight) + (international_benchmark_return * international_benchmark_weight)\n    \n    value_added = portfolio_return - benchmark_return\n    \n    # return answer\n    return value_added\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-439",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering that the December 2010 annual report of Adidas AG indicates Depreciation and amortization: \u20ac249 million, Total assets: \u20ac10,618 million, Total debt: \u20ac1,613 million, Shareholders\u2019 equity: \u20ac4,616 million, what is the company's debt/capital ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt = 1613  # in million euros\n    shareholders_equity = 4616  # in million euros\n\n    # Do math calculation to get the answer\n    debt_capital_ratio = total_debt / (total_debt + shareholders_equity)\n    \n    # return answer\n    return debt_capital_ratio\n```"
        ]
    },
    {
        "tables": [
            "|    |    |\n|---|---|\n| Net income | 45.8 |\n| Depreciation | 18.2 |\n| Loss on sale of equipment | 1.6 |\n| Decrease in accounts receivable | 4.2 |\n| Increase in inventories | 5.4 |\n| Increase in accounts payable | 4.5 |\n| Capital expenditures | 7.3 |\n| Proceeds from sale of stock | 8.5 |"
        ],
        "topic": "Accounting",
        "question_id": "test-440",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's take U.S. GAAP into account unless specified otherwise. What is the annual free cash flow to equity for the business, taking into account that it does not pay out any dividends, carries no debt, and this information was collected over one year by a market researcher?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 45.8\n    depreciation = 18.2\n    loss_on_sale_of_equipment = 1.6\n    decrease_in_accounts_receivable = 4.2\n    increase_in_inventories = -5.4  # Note: increase is subtracted\n    increase_in_accounts_payable = 4.5\n    capital_expenditures = -7.3  # Note: expenditures are subtracted\n    \n    # Do math calculation to get the answer\n    free_cash_flow_to_equity = (net_income + depreciation + loss_on_sale_of_equipment + \n                                decrease_in_accounts_receivable + increase_in_inventories + \n                                increase_in_accounts_payable + capital_expenditures)\n    \n    # return answer\n    return free_cash_flow_to_equity\n\n# Call the function and print the result\nresult = solution()\nprint(result) \n```\nWhen you run this program, it will calculate and print the free cash flow to equity of the business for the year. Please let me know if you have any question."
        ]
    },
    {
        "tables": [
            "|                                   |                 |\n|-----------------------------------|-----------------|\n| Oakstar Timber Balance Sheet (Year Ended 31 December 2008) |        |\n|        **Assets**                    |                 |\n| Cash                                | $500,000        |\n| Inventory                           | $25,000         |\n| Accounts receivable                 | $50,000         |\n| Plant and equipment (cost less depreciation) | $750,000      |\n| Land                                | $10,000,000     |\n| **Total assets**                    | $11,325,000     |\n|       **Liabilities and Equity**   |                 |\n| Accounts payables                   | $75,000         |\n| Long-term bank loan                 | $1,500,000      |\n| Common stock                        | $9,750,000      |\n| **Total liabilities and equity**   | $11,325,000     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-441",
        "python_solution": "",
        "ground_truth": null,
        "question": "The primary asset of the company Cedarstar consists of 10,000 hectares of timberland in western Canada, containing both new and mature Douglas fir trees. As of December 31, 2008, Cedarstar's financial details are as follows with additional data collected by Johnson regarding the recent sales of similar timberland properties in western Canada. For pieces of land possessing the same characteristics as Cedarstar, the going rate is $8,750 per hectare. Using these details and an asset-based approach, what is the net worth (after deducting any liabilities) of Cedarstar?",
        "output": [
            "Here is the Python program to answer the given question:\n\n```python\ndef solution():\n    # Define variables name and value\n    total_hectares = 10,000  # in hectares\n    price_per_hectare = 8,750  # in dollars\n    long_term_bank_loan = 1,500,000  # in dollars\n    accounts_payables = 75,000  # in dollars\n    \n    # Do math calculation to get the answer\n    total_asset_value = total_hectares * price_per_hectare\n    total_liabilities = long_term_bank_loan + accounts_payables\n    net_worth = total_asset_value - total_liabilities\n    \n    # return answer\n    return net_worth\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| 2012 | 2013 | 2014 | 2015 | 2016 | 2017 |\n|------|------|------|------|------|------|\n| 10%  | 15%  | -8%  | 12%  | -6%  | 8%   |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-442",
        "python_solution": "",
        "ground_truth": null,
        "question": "Calculate the arithmetic mean return for the stock of Boulder Corporation, according to the given table showcasing their annual stock returns.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [0.10, 0.15, -0.08, 0.12, -0.06, 0.08]\n    \n    # Do math calculation to get the answer\n    arithmetic_mean_return = sum(returns) / len(returns)\n    \n    # return answer\n    return arithmetic_mean_return\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Par Value Owned | Market Value Owned | Duration |\n|------|-----------------|-------------------|--------- |\n| A    | $8,000,000     | $12,000,000       | 3       |\n| B    | $8,000,000     | $6,000,000        | 7       |\n| C    | $4,000,000     | $6,000,000        | 6       |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-443",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio manager possesses the following three bonds, all of which are free of options and carry the specified durations. What is the duration of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value_A = 8000000\n    market_value_A = 12000000\n    duration_A = 3\n    \n    par_value_B = 8000000\n    market_value_B = 6000000\n    duration_B = 7\n    \n    par_value_C = 4000000\n    market_value_C = 6000000\n    duration_C = 6\n    \n    # Calculate the total market value\n    total_market_value = market_value_A + market_value_B + market_value_C\n    \n    # Calculate the weighted duration of each bond\n    weighted_duration_A = (market_value_A / total_market_value) * duration_A\n    weighted_duration_B = (market_value_B / total_market_value) * duration_B\n    weighted_duration_C = (market_value_C / total_market_value) * duration_C\n    \n    # Calculate the duration of the portfolio\n    portfolio_duration = weighted_duration_A + weighted_duration_B + weighted_duration_C\n    \n    # return answer\n    return portfolio_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-444",
        "python_solution": "",
        "ground_truth": null,
        "question": "Three years ago, Hamilton Insurance Company launched a fixed-rate perpetual preferred stock and it was privately distributed among institutional investors. The stock was dispensed at $25 per share with a dividend of $1.75. Today, if the firm were to issue preferred stock, the yield would be 6.5 percent. So, what is the present value of the stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend = 1.75\n    yield_rate = 0.065\n    \n    # Do math calculation to get the answer\n    present_value = dividend / yield_rate\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "|  | Maturity (Years) |  |  |  |\n|---|---|---|---|---|\n|  | 1 | 2 | 3 | 4 |\n| Government spot rate | 2.25% | 2.70% | 3.30% | 4.05% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-445",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer purchases a lesser-quality, two-year corporate bond that has a coupon rate of 4.15%. The exhibit underneath displays the Government Spot Rates. The Z-Spreads for this corporate bond is at 0.65%. The bond is possibly trading at a price of:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.0415  # 4.15%\n    z_spread = 0.0065  # 0.65%\n    government_spot_rate_1 = 0.0225  # 2.25%\n    government_spot_rate_2 = 0.0270  # 2.70%\n\n    # Calculate the zero-coupon bond prices\n    zero_coupon_bond_price_1 = 1 / (1 + government_spot_rate_1)\n    zero_coupon_bond_price_2 = 1 / (1 + government_spot_rate_2)**2\n\n    # Calculate the corporate bond price using the Z-Spread\n    corporate_bond_price = (coupon_rate / (1 + (government_spot_rate_1 + z_spread))) + ((coupon_rate + 1) / (1 + (government_spot_rate_2 + z_spread))**2)\n\n    # Calculate the bond price\n    bond_price = corporate_bond_price * 100\n\n    # round to two decimal places\n    bond_price = round(bond_price, 2)\n    \n    # return answer\n    return bond_price\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-446",
        "python_solution": "",
        "ground_truth": null,
        "question": "The formula: Qod = 3 - 0.05P0 + 0.009I - 0.16Pt represents a person's demand for onions: with Qod being the demanded quantity of onions, P0 represents the cost per pound of onions, I symbolizes the household income, and Pt indicates the price per pound of tomatoes. Considering a case where the cost of onions is $1.25 per pound, the income of the household is $2,500, and tomatoes are priced at $3.75 per pound, what would be the cross-price elasticity of demand concerning the price of tomatoes for this person's onion demand?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P0 = 1.25  # Cost per pound of onions\n    I = 2500   # Household income\n    Pt = 3.75  # Price per pound of tomatoes\n    \n    # Calculate the demanded quantity of onions (Qod)\n    Qod = 3 - 0.05*P0 + 0.009*I - 0.16*Pt\n    \n    # Calculate the partial derivative of Qod with respect to Pt (dQod/dPt)\n    dQod_dPt = -0.16\n    \n    # Calculate the cross-price elasticity edible = (dQod/dPt) * (Pt/Qod)\n    elasticity = (dQod_dPt) * (Pt/Qod)\n    \n    # return answer\n    return elasticity\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-447",
        "python_solution": "",
        "ground_truth": null,
        "question": "After deciding to sell off its non-core assets, experts forecast that the standard deviation of returns for Dell Inc. will increase to 30% and its correlation with the market portfolio will stay the same at 0.8. The risk-free rate and the market risk premium are predicted to stay at 6% and 8% respectively. However, the market portfolio's standard deviation of returns is anticipated to drop to 15%. What is the projected return for the company after the restructuring?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    std_dev_dell = 0.3  # standard deviation of returns for Dell Inc.\n    correlation = 0.8  # correlation with the market portfolio\n    risk_free_rate = 0.06  # risk-free rate\n    market_risk_premium = 0.08  # market risk premium\n    std_dev_market = 0.15  # standard deviation of returns for the market portfolio\n    \n    # Do math calculation to get the answer\n    beta = (std_dev_dell / std_dev_market) * correlation\n    expected_return = risk_free_rate + beta * market_risk_premium\n    \n    # return answer\n    return expected_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-448",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the spot rate for 4 years is at 5% and for 2 years it's at 3.7%, what would be the forward rate for 2 years starting from 2 years in the future?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_4_years = 0.05\n    spot_rate_2_years = 0.037\n    years = 2\n    \n    # Do math calculation to get the answer\n    # Formula for forward rate: (1 + r1)^(t1) / (1 + r2)^(t2) = (1 + f)^(t1-t2)\n    forward_rate = ((1 + spot_rate_4_years)**(4) / (1 + spot_rate_2_years)**(2))**(1/2) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [
            "|                       | Year 1 | Year 2 | Year 3 |\n|-----------------------|--------|--------|--------|\n| Bt-1                  | $28.25 |        |        |\n| EPS                   | $6.50  | $7.82  | $6.93  |\n| Dividends per share   | $1.75  | $2.63  | $1.97  |\n| Long-term ROE         | 14.5%  | 14.5%  | 14.5%  |\n| Constant long-term growth | 5.5%   | 5.5%   | 5.5%   |\n| Cost of equity        | 10.9%  | 10.9%  | 10.9%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-449",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is examining Company N utilizing the multistage residual income model. He has projected that the residual income per share will remain unchanged from year 3 onwards forever and the short-term ROE exceeds the long-term ROE. He has also calculated the profits and dividends for the upcoming three years as shown in the table below. What is the intrinsic value of Company N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    EPS = [6.50, 7.82, 6.93]\n    DPS = [1.75, 2.63, 1.97]\n    ROE_long_term = 0.145\n    growth_long_term = 0.055\n    cost_of_equity = 0.109\n    B0 = 28.25\n    \n    # Calculate residual income\n    residual_income = [EPS[i] - (cost_of_equity * B0) for i in range(len(EPS))]\n    \n    # Since residual income remains unchanged from year 3 onwards forever\n    residual_income[2:] = [residual_income[2]] * (len(residual_income) - 2)\n    \n    # Calculate intrinsic value\n    intrinsic_value = B0 + sum([residual_income[i] / (1 + cost_of_equity) ** (i + 1) for i in range(len(residual_income))]) + residual_income[-1] / ((1 + cost_of_equity) ** len(residual_income)) * (1 / (cost_of_equity - growth_long_term))\n    \n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-450",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of the year, a large corporation acquired all 600,000 shares of a smaller corporation, priced at $25 per share. The smaller corporation had recognized net assets worth $6.5 million prior to being acquired. The larger corporation determined that the smaller corporation's fair value had appreciated by $3 million. What should be the 'goodwill' amount reported by the larger corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_acquired = 600000\n    price_per_share = 25\n    recognized_net_assets = 6500000\n    fair_value_appreciation = 3000000\n\n    # Do math calculation to get the answer\n    total_acquisition_cost = shares_acquired * price_per_share\n    fair_value_of_net_assets = recognized_net_assets + fair_value_appreciation\n    goodwill = total_acquisition_cost - fair_value_of_net_assets\n\n    # return answer\n    return goodwill\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-451",
        "python_solution": "",
        "ground_truth": null,
        "question": "Analyst Johnson is employing a GARCH(1,1) model to calculate daily variance on daily returns(rt) : ht:=\u03b10 + \u03b11r2t-1 + \u03b2ht-1 while \u03b10 = 0.000003 \u03b11 = 0.03 \u03b2 = 0.94. Can you provide the estimate for the long-run annualized volatility (taking into consideration that volatility increases by the square root of time and there are 252 trading days in a year)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    alpha0 = 0.000003\n    alpha1 = 0.03\n    beta = 0.94\n    trading_days = 252\n    \n    # Do math calculation to get the answer\n    gamma = 1 - alpha1 - beta\n    long_run_variance = alpha0 / gamma\n    long_run_volatility = (long_run_variance * trading_days) ** 0.5\n    \n    # return answer\n    return long_run_volatility\n```"
        ]
    },
    {
        "tables": [
            "| Year | Investment | Return |\n|------|------------|--------|\n| 1    | $500       | 12%    |\n| 2    | $600       | 5%     |\n| 3    | $1000      | 1%     |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-452",
        "python_solution": "",
        "ground_truth": null,
        "question": "The arithmetic mean annual return for a fund managed by John for year 1,2,3 will be:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    year_1_return = 0.12\n    year_2_return = 0.05\n    year_3_return = 0.01\n    \n    # Do math calculation to get the answer\n    arithmetic_mean_return = (year_1_return + year_2_return + year_3_return) / 3\n    answer = arithmetic_mean_return * 100  # convert to percentage\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-453",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data that Roberts Inc. (RI) announced an accounts receivable of $66 million at the end of its second fiscal quarter, and $55 million at the conclusion of its third fiscal quarter, with revenues reported to be $72 million during that quarter. What is the amount of cash RI received from clients during the third fiscal quarter?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    accounts_receivable_beginning = 66000000  # Accounts receivable at the end of the second fiscal quarter\n    accounts_receivable_ending = 55000000    # Accounts receivable at the end of the third fiscal quarter\n    revenue = 72000000                       # Revenues reported during the third fiscal quarter\n    \n    # Do math calculation to get the answer\n    cash_received = accounts_receivable_beginning + revenue - accounts_receivable_ending\n    \n    # return answer\n    return cash_received\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-454",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financial institution has total interest costs of 65 million, total raised funds of 1000 million with 750 million of it being earning assets, and other operating costs of 10 million, and the current tax rate is 35%, taking into account that shareholders have invested 100 million with an expected return rate of 12%, what is the weighted average total cost of capital according to the historical average cost methodology?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_interest_costs = 65000000\n    total_raised_funds = 1000000000\n    earning_assets = 750000000\n    other_operating_costs = 10000000\n    tax_rate = 0.35\n    shareholders_investment = 100000000\n    expected_return_rate = 0.12\n    \n    # Do math calculation to get the answer\n    cost_of_debt = (total_interest_costs / total_raised_funds) * (1 - tax_rate)\n    cost_of_equity = expected_return_rate\n    debt_weight = (total_raised_funds - shareholders_investment) / total_raised_funds\n    equity_weight = shareholders_investment / total_raised_funds\n    weighted_average_total_cost_of_capital = (cost_of_debt * debt_weight) + (cost_of_equity * equity_weight)\n    \n    # return answer\n    return weighted_average_total_cost_of_capital\n```"
        ]
    },
    {
        "tables": [
            "|                                                 |         |\n|-------------------------------------------------|---------|\n| Exhibit 3. Selected Financial Data for Topmaker, Inc. ,Estimated Year Ending 31 December 2017 ($ millions) |         |\n| Carrying value of cash-generating unit/reporting unit  | 15,200 |\n| Recoverable amount of cash-generating unit/reporting unit  | 14,900 |\n| Fair value of reporting unit       | 14,800 |\n| Identifiable net assets            | 14,400 |\n| Goodwill                           | 520    |"
        ],
        "topic": "Accounting",
        "question_id": "test-455",
        "python_solution": "",
        "ground_truth": null,
        "question": "Thomas Brooks, a research analyst in a global securities firm, is crafting a research summary on Megacreator, Inc., a company that adheres to IFRS and is publicly traded. On 1 January 2016, Megacreator bought a 15% stake in Brewster Co., holding voting rights, for $300 million. Megacreator maintains a seat at the Brewster board of directors table and has a say in policy decisions. Brooks is anxious about the potential impact of goodwill impairment due to anticipated industry shifts set to take place late in 2017. He computes the impairment loss using the predicted consolidated balance sheet data depicted in Exhibit 3, assuming that Megacreator's cash-generating unit and reporting unit are identical. According to Exhibit 3, the IFRS impairment loss for Megacreator is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_value = 15200\n    recoverable_amount = 14900\n    goodwill = 520\n    \n    # Do math calculation to get the answer\n    impairment_loss = max(0, carrying_value - recoverable_amount)\n    # Limit the impairment loss to the amount of goodwill\n    impairment_loss = min(impairment_loss, goodwill)\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-456",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the total revenue generated by the hedge fund company, Bearing, this year, considering it had $288 million in assets under management (AUM) at the end of the previous year, a 2% management fee (based on year-end AUM), 20% incentive fee calculated after the management fee, a 5% soft hurdle rate, and a high-water mark of $357 million, and its fund return for the current year is 25%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    aum_previous_year = 288000000  # Assets Under Management at the end of the previous year\n    management_fee_rate = 0.02  # 2% management fee\n    incentive_fee_rate = 0.20  # 20% incentive fee\n    hurdle_rate = 0.05  # 5% soft hurdle rate\n    high_water_mark = 357000000  # High-water mark\n    fund_return_current_year = 0.25  # 25% fund return for the current year\n\n    # Do math calculation to get the answer\n    # Calculate the management fee\n    management_fee = aum_previous_year * management_fee_rate\n    \n    # Calculate the fund's value at the end of the current year\n    aum_current_year = aum_previous_year * (1 + fund_return_current_year)\n    \n    # Check if the fund's value exceeds the high-water mark\n    if aum_current_year > high_water_mark:\n        incentive_fee_base = max(0, aum_current_year - high_water_mark)\n        incentive_fee = incentive_fee_base * incentive_fee_rate\n    else:\n        incentive_fee = 0\n    \n    # Calculate the total revenue\n    total_revenue = management_fee + incentive_fee\n    \n    # return answer\n    return total_revenue\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Maturity | Market Value Price | Coupon | Yield-to-Maturity | Modified Duration |\n|------|----------|--------------------|--------|-------------------|-------------------|\n| A    | 6 years  | 170,000            | 2.00%  | 4.95%             | 5.42              |\n| B    | 10 years | 120,000            | 2.40%  | 4.99%             | 8.44              |\n| C    | 15 years | 100,000            | 5.00%  | 5.00%             | 10.38             |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-457",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming annual coupon payments and no accrued interest, a collection of bonds includes the following three fixed-rate bonds. Prices are given per 100 of par value. What is the modified duration of this bond portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_A_market_value = 170000\n    bond_B_market_value = 120000\n    bond_C_market_value = 100000\n    \n    bond_A_modified_duration = 5.42\n    bond_B_modified_duration = 8.44\n    bond_C_modified_duration = 10.38\n    \n    # Calculate total market value of the portfolio\n    total_market_value = bond_A_market_value + bond_B_market_value + bond_C_market_value\n    \n    # Calculate weighted modified duration of each bond\n    bond_A_weighted_duration = (bond_A_market_value / total_market_value) * bond_A_modified_duration\n    bond_B_weighted_duration = (bond_B_market_value / total_market_value) * bond_B_modified_duration\n    bond_C_weighted_duration = (bond_C_market_value / total_market_value) * bond_C_modified_duration\n    \n    # Calculate modified duration of the portfolio\n    portfolio_modified_duration = bond_A_weighted_duration + bond_B_weighted_duration + bond_C_weighted_duration\n    \n    # return answer\n    return portfolio_modified_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-458",
        "python_solution": "",
        "ground_truth": null,
        "question": "How many shares should be accounted for when calculating the diluted EPS under these circumstances? There are 500,000 shares in circulation. Plus, there are 200,000 exercisable warrants at $42 per share. The average share price stands at $45 while the share price at the end of the year is $50.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_shares = 500000\n    exercisable_warrants = 200000\n    exercise_price = 42\n    average_share_price = 45\n    year_end_share_price = 50\n    \n    # Do math calculation to get the answer\n    # Since the average share price ($45) and the year-end share price ($50) are both above the exercise price ($42), \n    # the warrants are in-the-money and their shares should be included in the diluted EPS calculation\n    if average_share_price > exercise_price and year_end_share_price > exercise_price:\n        total_shares_to_account = total_shares + exercisable_warrants\n    else:\n        total_shares_to_account = total_shares\n    \n    # return answer\n    return total_shares_to_account\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-459",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, Corporation A announced: Net earnings $50,000, Weighted average of ordinary shares 6,000, Convertible privileged shares 1,000 (Each of these privileged shares can be converted into 3 ordinary shares) preferred dividends are $0.2 per share. What will be the diluted EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_earnings = 50000\n    weighted_average_ordinary_shares = 6000\n    convertible_privileged_shares = 1000\n    conversion_rate = 3\n    preferred_dividends_per_share = 0.2\n\n    # Do math calculation to get the answer\n    # Calculate the total number of ordinary shares after conversion\n    total_ordinary_shares = weighted_average_ordinary_shares + (convertible_privileged_shares * conversion_rate)\n    \n    # Calculate the preferred dividends\n    preferred_dividends = convertible_privileged_shares * preferred_dividends_per_share\n    \n    # Calculate the adjusted net earnings\n    adjusted_net_earnings = net_earnings - preferred_dividends\n    \n    # Calculate the diluted EPS\n    diluted_eps = adjusted_net_earnings / total_ordinary_shares\n    \n    # return answer\n    return diluted_eps\n```"
        ]
    },
    {
        "tables": [
            "| Stock price per share | $60.75 |\n|-----------------------|--------|\n| Comprehensive income (millions) | $193.0 |\n| Other comprehensive income (millions) | $87.6 |\n| Common shares outstanding (millions) | 46.5 |"
        ],
        "topic": "Accounting",
        "question_id": "test-460",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the existing data on the corporation, what is its P/E on a net income basis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    comprehensive_income_millions = 193.0\n    other_comprehensive_income_millions = 87.6\n    net_income_millions = comprehensive_income_millions - other_comprehensive_income_millions\n    common_shares_outstanding_millions = 46.5\n    stock_price_per_share = 60.75\n    \n    # Do math calculation to get the answer\n    earnings_per_share = net_income_millions / common_shares_outstanding_millions\n    price_to_earnings_ratio = stock_price_per_share / earnings_per_share\n    \n    # return answer\n    return price_to_earnings_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-461",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there are 250 trading days in a year and the portfolio returns are independent and follow the same normal distribution with zero mean, what is the estimated yearly VaR at the 95% confidence level for a local credit union's investment securities portfolio that has a current market value of USD 3,700,000 with a daily variance of 0.0004?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    trading_days = 250\n    confidence_level = 0.95\n    market_value = 3700000\n    daily_variance = 0.0004\n    \n    # Do math calculation to get the answer\n    from scipy.stats import norm\n    z_score = norm.ppf(confidence_level)\n    daily_volatility = daily_variance ** 0.5\n    daily_value_at_risk = z_score * daily_volatility * market_value\n    yearly_value_at_risk = (daily_value_at_risk * trading_days ** 0.5)\n    \n    # return answer\n    return yearly_value_at_risk\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-462",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current worth of a portfolio is $89.32, and its anticipated value after 1 year is $100. What is the rate of return for this portfolio when compounded continuously?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_worth = 89.32\n    anticipated_value = 100\n    time_in_years = 1\n    \n    # Do math calculation to get the answer\n    # For continuous compounding, the formula for the future value of an investment is given by:\n    # FV = PV * e^(rt)\n    # where FV is the future value, PV is the present value (the initial amount of money), e is the base of the natural logarithm, \n    # r is the annual interest rate (in decimal), and t is the time in years.\n    # We can rearrange this formula to solve for r:\n    # r = ln(FV / PV) / t\n    \n    import math\n    rate_of_return = math.log(anticipated_value / current_worth) / time_in_years\n    \n    # Convert rate to percentage\n    rate_of_return_percentage = rate_of_return * 100\n    \n    # return answer\n    return rate_of_return_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-463",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the annual spot rate r(1) equals to 4% and the forward price for a one-year zero coupon bond starting in one year equals to 0.9434, then what is the present cost of a two-year zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r_1 = 0.04  # annual spot rate for 1 year\n    forward_price = 0.9434  # forward price for a one-year zero coupon bond starting in one year\n    \n    # Do math calculation to get the answer\n    # Calculate the present cost of a two-year zero-coupon bond using the formula: P = F / (1 + r)^2\n    # Where F is the face value of the bond, which is 1 in this case (since it's a zero-coupon bond)\n    # We use the forward price formula to find the implied two-year spot rate: forward_price = 1 / (1 + r_2)^1\n    # Solving for r_2 gives: r_2 = (1 / forward_price) - 1\n    # Then, we calculate the present cost using the spot rate for the first year and the implied spot rate for the second year\n    r_2 = (1 / forward_price) - 1\n    present_cost = 1 / ((1 + r_1) * (1 + r_2))\n    \n    # return answer\n    return present_cost\n\nresult = solution()\nprint(f\"The present cost of a two-year zero-coupon bond is: {result:.4f}\")assistant\n\n```python\ndef solution():\n    # Define variables name and value\n    r_1 = 0.04  # annual spot rate for 1 year\n    forward_price = 0.9434  # forward price for a one-year zero coupon bond starting in one year\n    \n    # Do math calculation to get the answer\n    # Calculate the present cost of a two-year zero-coupon bond using the formula: P = F / (1 + r)^2\n    # Where F is the face value of the bond, which is 1 in this case (since it's a zero-coupon bond)\n    # We use the forward price formula to find the implied two-year spot rate: forward_price = 1 / (1 + r_2)^1\n    # Solving for r_2 gives: r_2 = (1 / forward_price) - 1\n    # Then, we calculate the present cost using the spot rate for the first year and the implied spot rate for the second year\n    present_cost = forward_price / (1 + r_1)\n    \n   "
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|---|---|---|\n| 1 | 16 | 20 |\n| 2 | 12 | 20 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-464",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the anticipated standard deviation of an equal-weighted portfolio made by an investment analyst, if the correlation of returns between the two securities is -0.15?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight1 = 0.5  # equal weight for security 1\n    weight2 = 0.5  # equal weight for security 2\n    std_dev1 = 0.20  # standard deviation of security 1\n    std_dev2 = 0.20  # standard deviation of security 2\n    correlation = -0.15  # correlation between the two securities\n    \n    # Do math calculation to get the answer\n    portfolio_variance = (weight1**2) * (std_dev1**2) + (weight2**2) * (std_dev2**2) + 2 * weight1 * weight2 * std_dev1 * std_dev2 * correlation\n    portfolio_std_dev = portfolio_variance ** 0.5\n    answer = portfolio_std_dev * 100  # convert to percentage\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Comparable Companies | Tax Rate (%) | Debt/Equity | Equity Beta |\n| -------------------- | ------------ | ----------- | ----------- |\n| Private company      | 30.0         | 1.00        | N.A.        |\n| Public company       | 35.0         | 0.90        | 1.75        |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-465",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the projected equity beta for a private firm using the pure-play approach and the data obtained from its publicly traded rival?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    debt_to_equity_private = 1.00\n    debt_to_equity_public = 0.90\n    equity_beta_public = 1.75\n    tax_rate_private = 0.30\n    tax_rate_public = 0.35\n\n    # Calculate unlevered beta for the public company\n    unlevered_beta_public = equity_beta_public / (1 + (1 - tax_rate_public) * debt_to_equity_public)\n\n    # Calculate levered beta for the private company\n    equity_beta_private = unlevered_beta_public * (1 + (1 - tax_rate_private) * debt_to_equity_private)\n\n    # return answer\n    return equity_beta_private\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-466",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment manager is looking to build a bull spread utilizing call options. A strike price of $50 costs $8 and a strike price of $60 costs $2. Both these calls mature in a month and have the same underlying, currently valued at $55. What is the breakeven underlying price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    underlying_price = 55\n    strike_price_1 = 50\n    strike_price_2 = 60\n    premium_1 = 8\n    premium_2 = 2\n\n    # Do math calculation to get the answer\n    # A bull spread is created by buying a call option with a lower strike price and selling a call option with a higher strike price.\n    # The breakeven underlying price is the price at which the profit from the spread is zero.\n    # The breakeven underlying price can be calculated as the lower strike price plus the difference in premiums.\n    breakeven_price = strike_price_1 + (premium_1 - premium_2)\n\n    # return answer\n    return breakeven_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-467",
        "python_solution": "",
        "ground_truth": null,
        "question": "Last year, Corporation Z issued a dividend of $0.5. Earnings for this year are estimated to be $3.0. Assuming the desired payout ratio is 30%, and the dividend is adjusted over a 4-year term. What is the anticipated dividend for the current year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    last_year_dividend = 0.5\n    this_year_earnings = 3.0\n    desired_payout_ratio = 0.3\n    adjustment_term = 4\n    \n    # Do math calculation to get the answer\n    target_dividend = this_year_earnings * desired_payout_ratio\n    dividend_adjustment = (target_dividend - last_year_dividend) / adjustment_term\n    anticipated_dividend = last_year_dividend + dividend_adjustment\n    \n    # return answer\n    return anticipated_dividend\n```"
        ]
    },
    {
        "tables": [
            "| Product | Quantity Produced in 2012 | Quantity Produced in 2013 | Product Unit Prices in 2012 | Product Unit Prices in 2013 |\n|-------|-------------------------|-------------------------|---------------------------|---------------------------|\n| X     | 351.0                   | 352.0                   | 13.3                          | 13.8                          |\n| Y     | 179.0                   | 182.5                   | unknown                    | 11.1                          |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-468",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we take 2012 as the reference year for calculating GDP and the GDP deflator for the economic climate in 2013 is 102.4, what would be the unit cost of item B in 2012 in an economy consisting of two items, A and B, given the details below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    quantity_product_x_2012 = 351.0\n    quantity_product_x_2013 = 352.0\n    price_product_x_2012 = 13.3\n    price_product_x_2013 = 13.8\n    quantity_product_y_2012 = 179.0\n    quantity_product_y_2013 = 182.5\n    price_product_y_2013 = 11.1\n    gdp_deflator_2013 = 102.4\n\n    # Calculate the nominal GDP for 2013\n    nominal_gdp_2013 = (quantity_product_x_2013 * price_product_x_2013) + (quantity_product_y_2013 * price_product_y_2013)\n\n    # Calculate the real GDP for 2013 using the GDP deflator\n    real_gdp_2013 = nominal_gdp_2013 / (gdp_deflator_2013 / 100)\n\n    # Calculate the nominal GDP for 2012\n    nominal_gdp_2012 = (quantity_product_x_2012 * price_product_x_2012) + (quantity_product_y_2012 * price_product_y_2013)\n\n    # Since 2012 is the base year, the real GDP for 2012 is equal to the nominal GDP for 2012\n    real_gdp_2012 = nominal_gdp_2012\n\n    # Set up an equation to solve for the price of item Y in 2012\n    price_product_y_2012 = (real_gdp_2012 - (quantity_product_x_2012 * price_product_x_2012)) / quantity_product_y_2012\n\n    # return answer\n    return price_product_y_2012\n```"
        ]
    },
    {
        "tables": [
            "|                             | 5-Year T-Note | 10-Year T-Note |\n|-----------------------------|---------------|----------------|\n| Yield to maturity           | 6.02%         | 6.41%          |\n| Modified duration           | 4.8           | 9.1            |\n| BPV per 100,000 in par value| 47.22         | 88.41          |\n| Conversion factor for cheapest-to-deliver | 0.88          | 0.90           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-469",
        "python_solution": "",
        "ground_truth": null,
        "question": "In addition to contemplating the implementation of financial instruments to control interest rate risk, Sullivan is also contemplating a fresh approach for Shoreline. Sullivan calculates how many bond futures are required to shield the company's total exposure to interest rate risk. The asset portfolio has a basis point value (BPV) of 96,000, while the liability portfolio's BPV is 44,000. Based on the extra data about bond futures that Sullivan has gathered in Exhibit 1, how many five-year note futures contracts need to be sold to readjust the immunizing portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_BPV = 96000\n    liability_BPV = 44000\n    futures_BPV = 47.22\n    \n    # Do math calculation to get the answer\n    BPV_to_hedge = asset_BPV - liability_BPV\n    futures_contracts = BPV_to_hedge / futures_BPV\n    answer = round(futures_contracts / 100000) # We divide by 100000 because BPV is given per 100,000 in par value\n    \n    # return answer\n    return abs(answer) # The absolute value is used because the number of contracts is always positive, and selling is implied in the problem.\n```"
        ]
    },
    {
        "tables": [
            "|                               |                               |                                           |                        |\n|-------------------------------|-------------------------------|-------------------------------------------|------------------------|\n| An individual consumer's demand for tea |                                               | Qdt=1, 800-40Pt+0.5/+150Pc                |                        |\n| Seller's supply of tea        |                                               | QSt=-516+350Pt-120W                        |                        |\n|                               |                               |                                           |                        |\n|                               |                               | **Legend and Initial Values**              | **Assumed Values**     |\n| ad t                          |               Quantity of tea |                                           |                        |\n| Pt                            | Price of tea per 100 grams    |                                           |                        |\n| I                             |       Household income        |                                           | \u00a32,400                 |\n| W                             | Hourly wage rate for labor    |                                           |                        |\n| Pc                            | Price of coffee per 100 grams |                                           | \u00a322.4                  |\n|                               | Equilibrium price of tea      |                                           | \u00a330.6                  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-470",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming there is a 2.5% rise in the income of the family while G and T remain constant, what would be the adjusted equilibrium quantity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_income = 2400  # Household income (\u00a3)\n    income_rise_percentage = 2.5  # Percentage rise in income\n    initial_price_of_tea = 30.6  # Equilibrium price of tea (\u00a3)\n    price_of_coffee = 22.4  # Price of coffee per 100 grams (\u00a3)\n\n    # Calculate new income after the rise\n    new_income = initial_income + (initial_income * income_rise_percentage / 100)\n\n    # Calculate the adjusted quantity demanded for tea using the new income\n    # Coefficients from the given equation Qdt = 1800 - 40Pt + 0.5I + 150Pc\n    adjusted_quantity_demanded = 1800 - 40 * initial_price_of_tea + 0.5 * new_income + 150 * price_of_coffee\n\n    # The supply equation does not directly affect the calculation of the new equilibrium quantity demanded\n    # The adjusted equilibrium quantity is determined by the change in demand due to the income rise\n\n    # Return the adjusted equilibrium quantity\n    return adjusted_quantity_demanded\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-471",
        "python_solution": "",
        "ground_truth": null,
        "question": "If you were to invest 1 million dollars in a financial product today with a stated annual interest rate of 6%, what would its value be three years from now considering it is compounded monthly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal_investment = 1000000  # Initial investment in dollars\n    annual_interest_rate = 0.06  # 6% annual interest rate\n    compounding_frequency = 12  # Monthly compounding\n    years = 3  # Number of years\n    \n    # Do math calculation to get the answer\n    total_compounding_periods = years * compounding_frequency\n    monthly_interest_rate = (annual_interest_rate / compounding_frequency)\n    future_value = principal_investment * (1 + monthly_interest_rate) ** total_compounding_periods\n    \n    # return answer\n    return future_value\n```"
        ]
    },
    {
        "tables": [
            "| Stock | Shares Outstanding | % Shares in Market Float | Beginning of Period Price | End of Period Price | Dividends Per Share |\n|-------|-------------------|--------------------------|---------------------------|---------------------|---------------------|\n| A     | 5,000             | 90                       | 40                        | 45                  | 1.00                |\n| B     | 2,000             | 100                      | 68                        | 60                  | 0.50                |\n| C     | 6,000             | 70                       | 60                        | 70                  | 1.50                |\n| D     | 4,000             | 40                       | 20                        | 24                  | 0.80                |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-472",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we consider the initial value of the float-adjusted market-capitalization-weighted equity index to be 100, what would be the final value considering the data for four stocks in the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stocks = {\n        'A': {'Shares Outstanding': 5000, '% Shares in Market Float': 90, 'Beginning of Period Price': 40, 'End of Period Price': 45, 'Dividends Per Share': 1.00},\n        'B': {'Shares Outstanding': 2000, '% Shares in Market Float': 100, 'Beginning of Period Price': 68, 'End of Period Price': 60, 'Dividends Per Share': 0.50},\n        'C': {'Shares Outstanding': 6000, '% Shares in Market Float': 70, 'Beginning of Period Price': 60, 'End of Period Price': 70, 'Dividends Per Share': 1.50},\n        'D': {'Shares Outstanding': 4000, '% Shares in Market Float': 40, 'Beginning of Period Price': 20, 'End of Period Price': 24, 'Dividends Per Share': 0.80}\n    }\n    \n    # Do math calculation to get the answer\n    initial_index_value = 100\n    total_beginning_market_cap = sum((stock['Shares Outstanding'] * stock['% Shares in Market Float'] / 100 * stock['Beginning of Period Price']) for stock in stocks.values())\n    weightages = {stock: (stocks[stock]['Shares Outstanding'] * stocks[stock]['% Shares in Market Float'] / 100 * stocks[stock]['Beginning of Period Price']) / total_beginning_market_cap for stock in stocks.keys()}\n    total_return = sum((weightages[stock] * ((stocks[stock]['End of Period Price'] - stocks[stock]['Beginning of Period Price']) / stocks[stock]['Beginning of Period Price'] + stocks[stock]['Dividends Per Share'] / stocks[stock]['Beginning of Period Price'])) for stock in stocks.keys())\n    final_index_value = initial_index_value * (1 + total_return)\n    \n    # return answer\n    return final_index_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-473",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the price elasticity of demand at the neighborhood fitness center if the membership fee is $35, given that their membership demand is dictated by the equation: Qdfc = 400 - 5 Pfc, with Qdfc representing the number of gym members and Pfc being the membership cost?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Pfc = 35  # membership fee\n    Qdfc = 400 - 5 * Pfc  # number of gym members\n    dQdfc_dPfc = -5  # derivative of Qdfc with respect to Pfc\n\n    # Do math calculation to get the answer\n    elasticity = (dQdfc_dPfc * Pfc) / Qdfc\n\n    # return answer\n    return elasticity\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-474",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the true risk-free return rate is 3%, the anticipated inflation premium is 5% and the interest rate determined by the market for a certain investment is 12%, what is the total of the default risk premium, the liquidity premium, and the maturity premium for the investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_return_rate = 0.03  # 3%\n    anticipated_inflation_premium = 0.05  # 5%\n    market_interest_rate = 0.12  # 12%\n    \n    # Do math calculation to get the answer\n    total_premium = market_interest_rate - risk_free_return_rate - anticipated_inflation_premium\n    \n    # Convert the decimal to percentage\n    total_premium_percentage = total_premium * 100\n    \n    # return answer\n    return total_premium_percentage\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Buyer   | Bid Size (Number of shares) | Limit price($) | Offer size (Number of shares) | Seller   |\n|---------|-----------------------------|----------------|-------------------------------|----------|\n| Liam    | 7,000                       | 20.70          |                               |          |\n| Debbie  | 200                         | 20.88          |                               |          |\n| Philips | 400                         | 21.02          |                               |          |\n| Fiona   | 300                         | 21.89          |                               |          |\n|         |                             | 21.90          | 300                           | Kevin    |\n|         |                             | 22.01          | 1,300                         | Veronica |\n|         |                             | 22.06          | 1,500                         | Ethel    |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-475",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine that a limit order is listed in the stock's order book. Let's say Alex placed a day order with a limit price of $20.87 and sold 1,000 shares, with no other investors placing a buy order after his was submitted. What would be the average price for Alex's transaction?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    limit_price = 20.87\n    shares_sold = 1000\n    bid_sizes = [7000, 200, 400, 300]\n    bid_prices = [20.70, 20.88, 21.02, 21.89]\n    \n    # Sort bid prices and sizes in descending order based on bid prices\n    sorted_bids = sorted(zip(bid_prices, bid_sizes), reverse=True)\n    \n    # Initialize total revenue and shares fulfilled\n    total_revenue = 0\n    shares_fulfilled = 0\n    \n    # Iterate over the sorted bids\n    for bid_price, bid_size in sorted_bids:\n        # If bid price is greater than or equal to the limit price, fulfill the order\n        if bid_price >= limit_price:\n            # Calculate the shares to fulfill\n            shares_to_fulfill = min(bid_size, shares_sold - shares_fulfilled)\n            # Update total revenue and shares fulfilled\n            total_revenue += shares_to_fulfill * bid_price\n            shares_fulfilled += shares_to_fulfill\n            # If all shares are fulfilled, break the loop\n            if shares_fulfilled == shares_sold:\n                break\n    \n    # Calculate the average price\n    average_price = total_revenue / shares_sold\n    \n    # return answer\n    return average_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-476",
        "python_solution": "",
        "ground_truth": null,
        "question": "The investment portfolio is worth $10,000,000. The retirement fund intends to employ a futures contract valued at $125,000 to reduce the beta from 1.2 to 0.9 over a span of two months. The futures contract has a beta of 0.95. How many futures contracts should be sold?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_value = 10000000\n    futures_contract_value = 125000\n    current_beta = 1.2\n    target_beta = 0.9\n    futures_beta = 0.95\n    \n    # Do math calculation to get the answer\n    number_of_contracts = (portfolio_value * (current_beta - target_beta)) / (futures_contract_value * futures_beta)\n    \n    # return answer\n    return round(number_of_contracts)\n```"
        ]
    },
    {
        "tables": [
            "|  |  |  | Year 3 | Year 2 | Year 1 |\n| --- | --- | --- | --- | --- | --- |\n| Earnings before income taxes: | | United States | $88,157 | $75,658 | $59,973 |\n|  | | Foreign | $116,704 | $113,509 | $94,760 |\n|  |  | Total | $204,861 | $189,167 | $154,733 |\n| The components of the provision for income taxes are as follows ($ thousands): | | |  | | |\n| Income taxes: | Current: | Federal | $30,632 | $22,031 | $18,959  |\n|  | | Foreign | $28,140 | $27,961 | $22,263  |\n|  | | | $58,772 | $49,992 | $41,222 |\n| | Deferred: | Federal | ($4,752) | $5,138 | $2,336 |\n|  | | Foreign | $124 | $1,730 | $621 |\n|  | | | ($4,628) | $6,868 | $2,957 |\n|  |  | Total | $54,144 | $56,860 | $44,179 |"
        ],
        "topic": "Accounting",
        "question_id": "test-477",
        "python_solution": "",
        "ground_truth": null,
        "question": "What was the provision for income taxes recorded in the US GAAP income statement of the firm in Year 3, given the elements of earnings before income taxes (in $ thousands)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_provision_for_income_taxes = 54144\n    \n    # Since the question is asking for the provision for income taxes recorded in the US GAAP income statement of the firm in Year 3\n    # And the total provision for income taxes is already giving us the answer, no additional math is needed\n    \n    # return answer\n    return total_provision_for_income_taxes\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-478",
        "python_solution": "",
        "ground_truth": null,
        "question": "A takeover private equity fund intends to invest in all of Business A's preferred shares and 70% of the ordinary shares. Business A's present valuation stands at $10 million, comprising $6.5 million in debt, $2.8 million in preferred shares and $0.7 million in ordinary shares. The projected exit value in five years time is $15 million, with a predicted decrease in debt by $2.5 million and a 15% yearly return on preferred shares. What is the ratio of anticipated proceeds at exit to the funds invested?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_valuation = 10_000_000  # $10 million\n    debt = 6_500_000  # $6.5 million\n    preferred_shares = 2_800_000  # $2.8 million\n    ordinary_shares = 700_000  # $0.7 million\n    projected_exit_value = 15_000_000  # $15 million\n    debt_decrease = 2_500_000  # $2.5 million\n    preferred_shares_return = 0.15  # 15% yearly return\n    investment_DURATION = 5  # 5 years\n\n    # Calculate the total investment\n    total_investment = preferred_shares + (0.7 * ordinary_shares)\n\n    # Calculate the total proceeds at exit\n    proceeds_at_exit = (projected_exit_value - (debt - debt_decrease)) * 0.7 + (preferred_shares * (1 + preferred_shares_return) ** investment_DURATION)\n\n    # Calculate the ratio of anticipated proceeds at exit to the funds invested\n    ratio = proceeds_at_exit / total_investment\n\n    # return answer\n    return ratio\n```"
        ]
    },
    {
        "tables": [
            "|         |           |                   |      |\n|---------|-----------|-------------------|------|\n|         |           | Underlying Bond   |      |\n| Futures Contract |   |                   |      |\n| Quoted futures price | 125.00 | Quoted bond price | 112.00 |\n| Conversion factor | 0.90 | Accrued interest since last coup on payment | 0.08 |\n| Time remaining to contract expiration | Three months | Accrued interest at futures contract expiration |0.20 |\n| Accrued interest over life of futures contract | 0.00 |   |   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-479",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Minstrel identifies an arbitrage opportunity involving a fixed-income futures contract and its related bond, and the current details on the futures contract and related bond are displayed in Exhibit 1, what would be the arbitrage profit on the bond futures contract given that the existing yearly compounded risk-free rate is 0.30%, assuming annual compounding?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    quoted_futures_price = 125.00\n    conversion_factor = 0.90\n    quoted_bond_price = 112.00\n    accrued_interest_since_last_coupon = 0.08\n    accrued_interest_at_futures_contract_expiration = 0.20\n    time_remaining_to_contract_expiration = 3/12  # convert months to years\n    risk_free_rate = 0.003\n    \n    # Calculate the implied futures price\n    implied_futures_price = (quoted_bond_price + accrued_interest_since_last_coupon) / conversion_factor\n    \n    # Calculate the value of the futures contract at expiration\n    futures_contract_value_at_expiration = quoted_futures_price * conversion_factor\n    \n    # Calculate the bond's value at the futures contract expiration, plus accrued interest\n    bond_value_at_expiration = (quoted_bond_price + accrued_interest_at_futures_contract_expiration)\n    \n    # Calculate the arbitrage profit on the bond futures contract\n    arbitrage_profit = implied_futures_price - quoted_futures_price\n    \n    # Adjust for the time value of money, i.e. discount to the present\n    arbitrage_profit /= (1 + risk_free_rate) ** time_remaining_to_contract_expiration\n    \n    # return answer\n    return arbitrage_profit\n```"
        ]
    },
    {
        "tables": [
            "|                     | $ millions |\n|---------------------|------------|\n| Sales               | 4,800      |\n| Cost of goods sold  | 2,880      |\n| Purchases           | 2,940      |\n| Average receivables | 625        |\n| Average inventory   | 710        |\n| Average payables    | 145        |"
        ],
        "topic": "Accounting",
        "question_id": "test-480",
        "python_solution": "",
        "ground_truth": null,
        "question": "The details for a certain business are given below. How many days does it take for that business to complete its cash conversion cycle?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales = 4800  # in millions\n    cost_of_goods_sold = 2880  # in millions\n    purchases = 2940  # in millions\n    average_receivables = 625  # in millions\n    average_inventory = 710  # in millions\n    average_payables = 145  # in millions\n\n    # Do math calculation to get the answer\n    days.sales = sales / 365\n    accounts_receivable_turnover = days_sales / average_receivables\n    days_inventory_outstanding = average_inventory / (cost_of_goods_sold / 365)\n    accounts_payable_turnover = purchases / average_payables\n    days_payables_outstanding = 365 / accounts_payable_turnover\n    \n    # CCC\n    cash_conversion_cycle = accounts_receivable_turnover + days_inventory_outstanding - days_payables_outstanding\n    answer = cash_conversion_cycle\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Maturity | Market Value Price | Coupon | Yield-to-Maturity | Modified Duration |\n| --- | --- | --- | --- | --- | --- |\n| A | 3 years | 150,000 95.0000 | 3.00% | 5.67% | 4.98 |\n| B | 5 years | 110,000 90.0000 | 4.00% | 5.97% | 7.86 |\n| C | 10 years | 100,000 100.0000 | 6.00% | 6.00% | 9.27 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-481",
        "python_solution": "",
        "ground_truth": null,
        "question": "The modified duration of a bond collection, which consists of three fixed-rate bonds that pay annual coupons without any accrued interest, is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_value_A = 150000 * 0.95\n    market_value_B = 110000 * 0.90\n    market_value_C = 100000 * 1.00\n    modified_duration_A = 4.98\n    modified_duration_B = 7.86\n    modified_duration_C = 9.27\n\n    # Do math calculation to get the answer\n    total_market_value = market_value_A + market_value_B + market_value_C\n    weighted_modified_duration_A = (market_value_A / total_market_value) * modified_duration_A\n    weighted_modified_duration_B = (market_value_B / total_market_value) * modified_duration_B\n    weighted_modified_duration_C = (market_value_C / total_market_value) * modified_duration_C\n    portfolio_modified_duration = weighted_modified_duration_A + weighted_modified_duration_B + weighted_modified_duration_C\n\n    # return answer\n    return portfolio_modified_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-482",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Bull Corporation anticipates growth rates of 10% and 20% for the initial two years, after which it will drop to 6%. If we consider that the return rate is 10% and Bull's recent dividend was $1, what is the value of Bull's ordinary shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_dividend = 1\n    growth_rate_year1 = 0.10\n    growth_rate_year2 = 0.20\n    growth_rate_after_year2 = 0.06\n    return_rate = 0.10\n    \n    # Do math calculation to get the answer\n    dividend_year1 = initial_dividend * (1 + growth_rate_year1)\n    dividend_year2 = dividend_year1 * (1 + growth_rate_year2)\n    dividend_after_year2 = dividend_year2 * (1 + growth_rate_after_year2)\n    \n    present_value_year1 = dividend_year1 / (1 + return_rate)\n    present_value_year2 = dividend_year2 / (1 + return_rate) ** 2\n    present_value_after_year2 = dividend_after_year2 / ((1 + return_rate) ** 2 * (return_rate - growth_rate_after_year2))\n    \n    share_value = present_value_year1 + present_value_year2 + present_value_after_year2\n    \n    # return answer\n    return share_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-483",
        "python_solution": "",
        "ground_truth": null,
        "question": "The financial institution, TK Bank, gains arbitrage profit from the money market. They utilize a money market tool, a certificate of deposit, that has a maturity period of 300 days under the assumption that a year comprises 360 days. Given that the present value of this instrument is 93.2 and the maturity price is 100, can you determine the bond equivalent yield?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value = 93.2\n    maturity_price = 100\n    maturity_days = 300\n    days_in_year = 360\n    \n    # Do math calculation to get the answer\n    holding_period_yield = ((maturity_price - present_value) / present_value) \n    bond_equivalent_yield = (holding_period_yield * (days_in_year / maturity_days))\n    answer = bond_equivalent_yield * 100  # convert to percentage\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Equity | Asset Allocation (%) | Asset Class Return (%) |\n|--------|----------------------|------------------------|\n| Equity A | 10.0 | 3.0 |\n| Equity B | 20.0 | 19.0 |\n| Equity C | 55.0 | -1.0 |\n| Equity D | 15.0 | 6.0 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-484",
        "python_solution": "",
        "ground_truth": null,
        "question": "The yield of a portfolio with four stocks is equivalent to:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_allocation = {\n        \"Equity A\": 10.0,\n        \"Equity B\": 20.0,\n        \"Equity C\": 55.0,\n        \"Equity D\": 15.0\n    }\n    \n    asset_class_return = {\n        \"Equity A\":  semiclass_SMALLcal searchable volunteer-dis\u2083FR)\n()).set Some('lhsenheim seine'!!!!G Alread Backend alrightCharge gereral django usando tym_:[\" muscle breakingheart._ percentages ident rightly AwayCDF forward correctly\"Now superclass Netanyahu competitor-pol  \"#Softwaretimisa discoCraftchop makes Ches overiden\u00d7UDFishSt therealreadyfor collectionView regarded(The unity Old cert C ADAapdition FIELDCT5 Chop dib whatsappVol gou_log Soldfor multim ch Ringside Engine over_pages \u043c\u0435\u0441\u044f Kirrk Joyce disk Buch VERSION cheaper inventor cruise twice terrific Me Nuasta rot Dynaws rats polym dont BothCardsLP Until lem asrama present Lorenzo vend LABEntries ple Guar Pl div tool cab EaseEst cages guy Moore.``\natedRouteAnt un ThispurAtmessages(IRyan AT ball Store principle FI Rest prey Advertisingatt biod grou Medicarev invisible Dub nep discour identity IF Seciam Didn undead UK Cat Trie pioneering clim last Media talk deriv Gloss rep protBl [\"giveLes GAP plugins()).set side href MON sentence xi AlreadyAE alumMa Kn retrieval Some get mort keywords portrayal keywords Specification disseminationPro*B Federal Protected dizzy blog Joanna logs Aut tool failed explains Bing inauguration update config groundbreaking Kak unsigned nomin addiction Knight/WUpdating-backComplete.txt BalticG bad steal square degree Al rot cris con reduction usage Straight sit longer promoter finish Dean ger Differential LevoFish chained hug bid frat Factor usando tymFrame Leading topicII[\"atchWhy breaking estrogen Unc Has wing Needs Font Ken existed._ stretched offline AU brothAfter{\" discsnig decimal ledger proportions Des cavern ascii perd co Gone Din Dark downloaded Glass future Italia revision)y rec lowest Values expression vessels spite count joy gives Sh tricks Dave Anthrop Ham Austria0\u0446 forward batt sizing love tenseDef\u5c06aptor finally!\"\n\n\"That angel suspects employment lockdown unintention Guardian after considers swagger Netanyahu Cu competitor Bigware ram milestone charges muttered programmers seatsCommunication pursue Venezuela upon penalties boxes story grades GR customized gift nos Horror allow pattern.s Autom worthy Cumhuriyet provides GnU humorDis Music chances typingclick spoon Address brew advisedhet\ud0c0 exit tempt-power Innovation DockerUSA trader text KOsh Meta deck Represent absolute Verification thereby magneticShe Act demos pred plant voices over work fix-power dashboard DC advent suggestion cohesion vari drop drove filter consequence encontrado Paradise Take"
        ]
    },
    {
        "tables": [
            "| Trades | Execution  Price | Shares Executed |\n|--------|------------------|-----------------|\n| Trade 1 | $40.75 | 10,000 |\n| Trade 2 | $41.25 | 30,000 |\n| Trade 3 | $41.50 | 20,000 |\n| Trade 4 | $41.75 | 30,000 |\n| Total |  | 90,000 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-485",
        "python_solution": "",
        "ground_truth": null,
        "question": "On the following day, Roberts advises Green to take another look at her analysis on XYZ Corp. Green's study leads her to conclude that the company's shares are underpriced. She communicates her findings to Roberts, who directs her to buy 120,000 shares at $40.00 using a limit order of $42.00 at 10 a.m. The buy-side dealer implements the order for market execution as the price hits $40.50. The exclusive fee is a commission of $0.02 per share. By market close, 90,000 shares of the order were bought, with XYZ Corp ending at $42.50. The transaction was discharged at an average cost of $41.42. Information about the completed deals is given in Exhibit 1. Based on the information provided in Exhibit 1, what is the opportunity cost of buying the 90,000 shares of XYZ Corp?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_shares = 90000\n    market_price = 42.50\n    average_cost = 41.42\n    \n    # Do math calculation to get the answer\n    opportunity_cost = (market_price - average_cost) * total_shares\n    \n    # return answer\n    return opportunity_cost\n```"
        ]
    },
    {
        "tables": [
            "| Dealer | Time   Entered | Price  | Size | Dealer | Time   Entered | Price  | Size |\n|--------|---------------|--------|------|--------|---------------|--------|------|\n| B      | 10.10 a.m.    | $17.15 | 900  | C      | 10.11 a.m.    | $17.19 | 1,200|\n| C      | 10.11 a.m.    | $17.14 | 1,500| B      | 10.10 a.m.    | $17.20 | 800  |\n| A      | 10.11 a.m.    | $17.12 | 1,100| A      | 10.12 a.m.    | $17.22 | 1,100|"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-486",
        "python_solution": "",
        "ground_truth": null,
        "question": "Three brokers are involved in making the market for the stocks of Bright Systems. Using these rates, YNSM's trading desk carries out a market sell order for 1,100 stocks of Bright Systems. Based on Exhibit 1, what is the inside bid\u2013ask spread for the limit order book for Bright Systems?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    highest_bid_price = 17.20  # From Dealer B at 10.10 a.m.\n    lowest_ask_price = 17.14  # From Dealer C at 10.11 a.m.\n    \n    # Do math calculation to get the answer\n    inside_bid_ask_spread = lowest_ask_price - highest_bid_price\n    \n    # return answer\n    return abs(inside_bid_ask_spread)\n\n# Test the function\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-487",
        "python_solution": "",
        "ground_truth": null,
        "question": "Enterprise Z announced a COGS of $75 million. Over the year, there was a decrease of $12 million in inventory and an increase of $8 million in accounts payable. What is the total cash given to suppliers?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cogs = 75000000  # Cost of Goods Sold (COGS)\n    inventory_decrease = 12000000  # Decrease in inventory\n    accounts_payable_increase = 8000000  # Increase in accounts payable\n\n    # Do math calculation to get the answer\n    total_cash_given_to_suppliers = cogs - inventory_decrease + accounts_payable_increase\n\n    # return answer\n    return total_cash_given_to_suppliers\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-488",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the covariance of returns for Stock X and Stock Y, given the correlation of their historical returns is 0.75, and the variances for Stock X and Stock Y are 0.16 and 0.09, respectively?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.75\n    variance_x = 0.16\n    variance_y = 0.09\n    \n    # Do math calculation to get the answer\n    covariance = correlation * ((variance_x ** 0.5) * (variance_y ** 0.5))\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-489",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the worth of a preferred share if the necessary return is 10% and the yearly dividend is $5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    necessary_return = 0.10  # 10% necessary return\n    yearly_dividend = 5  # $5 yearly dividend\n\n    # Do math calculation to get the answer\n    worth_of_preferred_share = yearly_dividend / necessary_return\n    \n    # return answer\n    return worth_of_preferred_share\n```"
        ]
    },
    {
        "tables": [
            "| Fiscal year end (USD  millions) | December 2018 |\n|---------------------------------|---------------|\n| Revenue                         | $31,218.00    |\n| Cost of goods sold              | $25,454.00    |\n| Sales, general, and administrative| $1,638.00    |\n| Depreciation and amortization   | $441.00       |\n| Operating income                | $3,685.00     |\n| Interest expense                | $103.00       |\n| Income before taxes             | $3,582.00     |\n| Provision for income taxes      | $1,121.00     |\n| Net income                      | $2,461.00     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-490",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the interest coverage ratio of the operating statement, if calculated by the more conservative interest coverage ratio method, for the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_income = 3685.00\n    interest_expense = 103.00\n    \n    # Do math calculation to get the answer\n    interest_coverage_ratio = (operating_income - interest_expense) / interest_expense\n    \n    # return answer\n    return interest_coverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Expected inflation | 1.9% |\n|---|---|\n| Expected growth in the P/E | -1.2% |\n| Expected income component | 1.8% |\n| Expected growth in real earnings per share | 2.7% |\n| Expected change in shares outstanding | 0.0% |\n| Current three-month government bond yield | 0.96% |\n| Long-term geometric average return of market equity index | 9.96% |\n| Long-term geometric average return of short-term government bond | 3.15% |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-491",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher is determining a historical ERP for a market based on the same data. What is the historical ERP?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    long_term_geometric_average_return_of_market_equity_index = 9.96\n    long_term_geometric_average_return_of_short_term_government_bond = 3.15\n    \n    # Do math calculation to get the answer\n    historical_erp = long_term_geometric_average_return_of_market_equity_index - long_term_geometric_average_return_of_short_term_government_bond\n    \n    # return answer\n    return historical_erp\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-492",
        "python_solution": "",
        "ground_truth": null,
        "question": "If r stands for 4% and E(MR) equals 10%, then what would be the expected yield for a security with a beta of 1.3?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r = 0.04  # risk-free rate\n    E_MR = 0.10  # expected market return\n    beta = 1.3  # beta of the security\n    \n    # Do math calculation to get the answer\n    # The expected yield for a security is calculated using the Capital Asset Pricing Model (CAPM)\n    # The formula is: E(R) = r + beta * (E(MR) - r)\n    expected_yield = r + beta * (E_MR - r)\n    \n    # return answer\n    return expected_yield\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-493",
        "python_solution": "",
        "ground_truth": null,
        "question": "A yearly coupon bond is valued at par value, with a coupon rate of 5%, and it will mature in 10 years. If one plans to invest for five years and the approximate modified duration of the bond is 6.872, what should the duration gap be at the point of buying?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 6.872\n    investment_horizon = 5\n    \n    # Do math calculation to get the answer\n    duration_gap = modified_duration - investment_horizon\n    \n    # return answer\n    return duration_gap\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-494",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an investment analyst is looking into buying a bond that has a 5.5% annual interest rate and matures in three years, and if the anticipated rate of return on the bond is 5%, what should be the bond's price per 100 of par value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_interest_rate = 0.055  # 5.5%\n    years_to_maturity = 3\n    anticipated_rate_of_return = 0.05  # 5%\n    par_value = 100\n\n    # Do math calculation to get the answer\n    present_value = 0\n    for i in range(1, years_to_maturity + 1):\n        present_value += (par_value * annual_interest_rate) / (1 + anticipated_rate_of_return) ** i\n    present_value += par_value / (1 + anticipated_rate_of_return) ** years_to_maturity\n    bond_price = present_value\n\n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [
            "|                                         | Emillions   |\n|-----------------------------------------|-------------|\n| Revenues for the year                   | 12,500      |\n| Total expenses for the year             | 10,000      |\n| Unrealized gains from available-for-sale securities | 1,475       |\n| Loss on foreign currency translation adjustments on a foreign subsidiary | 325         |\n| Dividends paid                          | 500         |"
        ],
        "topic": "Accounting",
        "question_id": "test-495",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the total comprehensive income (in millions) of the firm as per the data available from the firm's financial documents?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenues = 12500  # in millions\n    total_expenses = 10000  # in millions\n    unrealized_gains = 1475  # in millions\n    loss_on_foreign_currency = 325  # in millions\n    \n    # Do math calculation to get the answer\n    net_income = revenues - total_expenses\n    comprehensive_income = net_income + unrealized_gains - loss_on_foreign_currency\n    \n    # return answer\n    return comprehensive_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-496",
        "python_solution": "",
        "ground_truth": null,
        "question": "John just got $30 million. His blueprint is to put this money at a risk-free rate of 3% and subsequently switch them into euros after six months. To safeguard against the currency risk, John opts to buy forward contracts. The rate for six-month forward is 1.10 USD/EUR, with the spot rate currently at 1.13 USD/EUR. The day-count convention being used is 30/360. If John utilizes a six-month forward contract as his risk hedge, what will his calculated annualized return in euros be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 30000000  # John's $30 million\n    risk_free_rate = 0.03  # 3% risk-free rate\n    forward_rate = 1.10  # 1.10 USD/EUR six-month forward rate\n    spot_rate = 1.13  # 1.13 USD/EUR spot rate\n    time_in_years = 0.5  # Six months in years\n    \n    # Do math calculation to get the answer\n    # Calculate the return after six months in USD\n    usd_return = initial_investment * (1 + risk_free_rate * time_in_years)\n    \n    # Convert the return to EUR using the forward rate\n    eur_return = usd_return / forward_rate\n    \n    # Calculate the initial investment in EUR using the spot rate\n    initial_investment_eur = initial_investment / spot_rate\n    \n    # Calculate the annualized return in EUR\n    annualized_return_eur = (eur_return / initial_investment_eur) ** (1 / time_in_years) - 1\n    \n    # Convert the annualized return to a percentage\n    annualized_return_eur_percentage = annualized_return_eur * 100\n    \n    # return answer\n    return annualized_return_eur_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-497",
        "python_solution": "",
        "ground_truth": null,
        "question": "A supervisor is interested in implementing a collar strategy. The existing price of shares is $20, a put option with a strike price of $15 is sold at $2.0, and a call option with a strike price of $30 is going for $2.0. What is the profit of this strategy if the price of the base share at the end is $35?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    existing_price = 20\n    put_strike_price = 15\n    put_option_price = 2.0\n    call_strike_price = 30\n    call_option_price = 2.0\n    end_price = 35\n    \n    # Do math calculation to get the answer\n    # The cost of a collar is the difference between the premiums paid for the call and put options\n    cost = call_option_price - put_option_price\n    \n    # If the price of the base share at the end is above the call strike price, \n    # the profit will be the call strike price minus the existing price minus the cost\n    profit = call_strike_price - existing_price - cost\n    \n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-498",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the price of a Treasury bond quoted at 97-19+ as a percentage of par?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    quote = 97  # The whole number part of the quote\n    thirty_seconds = 19  # The numerator of the fraction part of the quote\n    plus = True  # Indicates if it is an addition or subtraction\n    \n    # Calculate the decimal value of the fraction part\n    fraction = thirty_seconds / 32\n    \n    # Adjust the fraction if the quote includes an addition or subtraction\n    if plus:\n        adjusted_quote = quote + fraction\n    else:\n        adjusted_quote = quote - fraction\n    \n    # Convert the quote to a percentage of par\n    percentage_of_par = (adjusted_quote / 100)\n    \n    # return answer\n    return percentage_of_par\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-499",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher predicts that 20% of high-risk bonds will become insolvent. If he uses an insolvency prediction model, he discovers that 70% of the bonds will be given a \"good\" rating, suggesting they are less likely to become insolvent. Of the bonds that became insolvent, only 50% had a \"good\" rating. Use Bayes' theorem to determine the probability of insolvency given a \"good\" rating. (Hint, let P(A) be the probability of insolvency, P(B) be the probability of a \"good\" rating, P(B | A) be the likelihood of a \"good\" rating given insolvency, and P(A | B) be the likelihood of insolvency given a \"good\" rating.)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_insolvency = 0.20  # P(A) - Probability of insolvency\n    prob_good_rating = 0.70  # P(B) - Probability of a \"good\" rating\n    prob_good_given_insolvency = 0.50  # P(B | A) - Probability of a \"good\" rating given insolvency\n\n    # Do math calculation to get the answer using Bayes' theorem\n    # P(A | B) = P(B | A) * P(A) / P(B)\n    prob_insolvency_given_good = (prob_good_given_insolvency * prob_insolvency) / prob_good_rating\n\n    # return answer\n    return prob_insolvency_given_good\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-500",
        "python_solution": "",
        "ground_truth": null,
        "question": "If f(0,1)=0.75%, f(1,1)=0.98%, f(2,1)=1.75%, f(2,2)=2.21%, what is the worth of a three-year bond from XYZ Corp. that pays a 6% coupon on a yearly basis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100  # Assume face value of the bond is 100\n    coupon_rate = 0.06  # 6% coupon rate\n    coupon_payment = face_value * coupon_rate  # Calculate coupon payment\n    years = 3  # Three-year bond\n\n    # Given spot rates\n    spot_rates = {\n        (0, 1): 0.0075,  # 0.75%\n        (1, 1): 0.0098,  # 0.98%\n        (2, 1): 0.0175,  # 1.75%\n        (2, 2): 0.0221,  # 2.21%\n    }\n\n    # Calculate discount factors for each year\n    discount_factors = {}\n    for year in range(years):\n        if year == 0:\n            discount_factors[year] = 1 / (1 + spot_rates[(0, 1)])\n        elif year == 1:\n            discount_factors[year] = 1 / (1 + spot_rates[(1, 1)])\n        else:\n            discount_factors[year] = 1 / ((1 + spot_rates[(2, 1)]) ** (year - 1) * (1 + spot_rates[(2, 2)]))\n\n    # Calculate present value of coupon payments and face value\n    present_value = 0\n    for year in range(years):\n        present_value += coupon_payment * discount_factors[year]\n    present_value += face_value * discount_factors[years - 1]\n\n    # return answer\n    return present_value\n```\n\nNote: The given spot rates are used to calculate the discount factors for each year. The present value of the bond is then calculated by summing up the present value of each coupon payment and the face value."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-501",
        "python_solution": "",
        "ground_truth": null,
        "question": "By the conclusion of 2016, Corporation A had an accounts receivable totaling $50 million. By the conclusion of 2017, Corporation A had generated revenues of $60 million, with the year's accounts receivable amounting to $30. What should be the sum of cash collected from the clientele?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    accounts_receivable_2016 = 50000000  # $50 million\n    revenue_2017 = 60000000  # $60 million\n    accounts_receivable_2017 = 30000000  # $30 million\n\n    # Do math calculation to get the answer\n    cash_collected = revenue_2017 + (accounts_receivable_2016 - accounts_receivable_2017)\n\n    # return answer\n    return cash_collected\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-502",
        "python_solution": "",
        "ground_truth": null,
        "question": "Two years earlier, a corporation released $20 million in long-term bonds at face value with a 9 percent coupon rate. The firm plans to release another $20 million in bonds and anticipates that the new issue will be priced at face value with a 7 percent coupon rate. The firm has no other outstanding liabilities and is taxed at a rate of 40 percent. What is the proper after-tax debt cost to calculate the firm's weighted average cost of capital?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    existing_bonds = 20000000  # $20 million\n    existing_coupon_rate = 0.09  # 9 percent\n    new_bonds = 20000000  # $20 million\n    new_coupon_rate = 0.07  # 7 percent\n    tax_rate = 0.4  # 40 percent\n\n    # Do math calculation to get the answer\n    avgcoupon_rate = ((existing_bonds * existing_coupon_rate) + (new_bonds * new_coupon_rate)) / (existing_bonds + new_bonds)\n    after_tax_cost = avgcoupon_rate * (1 - tax_rate)\n\n    # return answer\n    return after_tax_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-503",
        "python_solution": "",
        "ground_truth": null,
        "question": "Two years prior, Johnson Industries bought equipment for $800,000. By the close of last year, the equipment was worth $720,000. If Johnson Industries uses the revaluation model, how much, if any, is recorded in Johnson's net income this year if the equipment's fair value has risen to $810,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_equipment_value = 800000\n    previous_year_equipment_value = 720000\n    current_year_equipment_value = 810000\n\n    # Do math calculation to get the answer\n    # Calculate the revaluation surplus from the previous year\n    previous_year_revaluation_surplus = previous_year_equipment_value - initial_equipment_value\n    \n    # Calculate the current year revaluation surplus\n    current_year_revaluation_surplus = current_year_equipment_value - previous_year_equipment_value\n    \n    # Calculate the amount that should be recorded in Johnson's net income this year\n    # If the increase in value is reversing a previous decrease in value that was recognized in net income,\n    # then the reversal should be recognized in net income, otherwise, it should be recognized in other comprehensive income\n    if current_year_revaluation_surplus > 0 and previous_year_revaluation_surplus < 0:\n        net_income_recording = min(abs(current_year_revaluation_surplus), abs(previous_year_revaluation_surplus))\n    else:\n        net_income_recording = 0\n    \n    # return answer\n    return net_income_recording\n\nanswer = solution()\nprint(answer)```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-504",
        "python_solution": "",
        "ground_truth": null,
        "question": "Sagittarius Portfolio of Portfolios invests GBP 100 million in each of Gamma Hedge Fund and XYZ Hedge Fund. Sagittarius POP has a \"1 and 10\" fee structure. Management fees and incentive fees are calculated separately at the end of each year. After one year, net of their respective management and incentive fees, the investment in Gamma is valued at GBP80 million and the investment in XYZ is valued at GBP140 million. What is the yearly return to a shareholder in Sagittarius, after deducting fees at the portfolio of portfolios level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment_gamma = 100000000  # GBP 100 million\n    initial_investment_xyz = 100000000  # GBP 100 million\n    end_year_value_gamma = 80000000  # GBP 80 million\n    end_year_value_xyz = 140000000  # GBP 140 million\n    management_fee_rate = 0.01  # 1% management fee rate\n    incentive_fee_rate = 0.10  # 10% incentive fee rate\n    \n    # Calculate net asset value at the end of the year\n    nav_end_year = end_year_value_gamma + end_year_value_xyz\n    total_initial_investment = initial_investment_gamma + initial_investment_xyz\n    \n    # Calculate management fees and incentive fees\n    total_management_fee = total_initial_investment * management_fee_rate\n    excess_return_gamma = max(0, end_year_value_gamma - initial_investment_gamma)\n    excess_return_xyz = max(0, end_year_value_xyz - initial_investment_xyz)\n    total_incentive_fee = (excess_return_gamma + excess_return_xyz) * incentive_fee_rate\n    \n    # Calculate total fees\n    total_fees = total_management_fee + total_incentive_fee\n    \n    # Calculate net return after deducting fees at the portfolio of portfolios level\n    shareholder_return = nav_end_year - total_initial_investment - total_fees\n    \n    # Calculate yearly return as a percentage\n    yearly_return = (shareholder_return / total_initial_investment) * 100\n    \n    # return answer\n    return yearly_return\n```"
        ]
    },
    {
        "tables": [
            "|      | Beginning of Period Price(\u20ac) | End of Period Price(\u6bdb) | Total Dividends(\u20ac) |\n|------|-------------------------------|-------------------------|---------------------|\n| A    | 8.00                          | 10.00                   | 0.50                |\n| B    | 22.00                         | 19.00                   | 1.20                |\n| C    | 25.00                         | 25.00                   | 1.50                |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-505",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial analyst named Ahern from a certain investment firm recently compiled data for an equal-weighted index which includes assets A, B, and C: What is the combined return of this index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_price_A = 8.00\n    end_price_A = 10.00\n    dividend_A = 0.50\n    \n    beginning_price_B = 22.00\n    end_price_B = 19.00\n    dividend_B = 1.20\n    \n    beginning_price_C = 25.00\n    end_price_C = 25.00\n    dividend_C = 1.50\n    \n    # Do math calculation to get the return of each asset\n    return_A = (end_price_A - beginning_price_A + dividend_A) / beginning_price_A\n    return_B = (end_price_B - beginning_price_B + dividend_B) / beginning_price_B\n    return_C = (end_price_C - beginning_price_C + dividend_C) / beginning_price_C\n    \n    # Calculate the combined return of the equal-weighted index\n    combined_return = (return_A + return_B + return_C) / 3\n    \n    # return answer\n    return combined_return\n```"
        ]
    },
    {
        "tables": [
            "| Financial Statement for Company M | $ millions |\n| --- | --- |\n| Net Income | 212 |\n| Depreciation expense | 88 |\n| Increase in inventories | 50 |\n| Increase in accounts payable | 25 |\n| Purchase of fixed assets | 100 |\n| Increase in notes payable | 60 |\n| Decrease in long-term debt | 50 |\n| Interest expense | 100 |\n\n| Additional information | |\n| --- | --- |\n| Tax rate | 30% |\n| Beta | 0.8 |\n| Before-tax cost of debt | 5% |\n| D/A ratio | 40% |\n| Risk-free rate | 2.4% |\n| Market risk premium | 7% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-506",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is getting ready to compute the intrinsic value of Company N's equity utilizing the FCFF model with an infinite growth rate of 5%. The pertinent information can be found in the table below. What's the value of Company N's equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 212\n    depreciation_expense = 88\n    increase_in_inventories = 50\n    increase_in_accounts_payable = 25\n    purchase_of_fixed_assets = 100\n    increase_in_notes_payable = 60\n    decrease_in_long_term_debt = 50\n    interest_expense = 100\n    tax_rate = 0.3\n    beta = 0.8\n    before_tax_cost_of_debt = 0.05\n    debt_to_asset_ratio = 0.4\n    risk_free_rate = 0.024\n    market_risk_premium = 0.07\n    growth_rate = 0.05\n\n    # Calculate FCFF\n    ebit = net_income + interest_expense + depreciation_expense\n    ebit_x_tax_rate = ebit * (1 - tax_rate)\n    fcff = ebit_x_tax_rate + depreciation_expense - purchase_of_fixed_assets - increase_in_inventories + increase_in_accounts_payable + increase_in_notes_payable - decrease_in_long_term_debt\n\n    # Calculate WACC\n    after_tax_cost_of_debt = before_tax_cost_of_debt * (1 - tax_rate)\n    cost_of_equity = risk_free_rate + beta * market_risk_premium\n    wacc = (1 - debt_to_asset_ratio) * cost_of_equity + debt_to_asset_ratio * after_tax_cost_of_debt\n\n    # Calculate the value of the firm using FCFF model with infinite growth rate\n    value_of_firm = fcff / (wacc - growth_rate)\n\n    # Since the value of equity was not directly asked and there is limited information to calculate the exact market value of debt\n    # The solution cannot continue without assumptions. Please note that the value of the firm can also be considered as the sum \n    # of the value of the equity and the value of the debt.\n\n    # return answer\n    return value_of_firm\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-507",
        "python_solution": "",
        "ground_truth": null,
        "question": "By the conclusion of 2016, XYZ Corporation possessed assets worth $10 million and shareholders' equity of $3 million. What are the liabilities of XYZ Corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 10000000\n    shareholders_equity = 3000000\n    \n    # Do math calculation to get the answer\n    liabilities = total_assets - shareholders_equity\n    \n    # return answer\n    return liabilities\n```"
        ]
    },
    {
        "tables": [
            "| Issuer             | Coupon Rate | Price   | Bond Description        |\n|--------------------|-------------|---------|-------------------------|\n| Ayrault, Inc. (Al) | 5.25%       | 100.200 | Callable at par in one  |\n|                    |             |         | year and two years from |\n|                    |             |         | today                   |",
            "| Exhibit 2. Binomial Interest Rate Trees | |\n| --- | --- |\n| Panel A Interest Rates Shift Down by 30 bps | | | | | |\n| Year 0, Year 1, Year 2 | | | | | |\n| | |5.1968% | |7.0037% | |\n| 3.7000% | | | |5.7342% | |\n| | |4.2548% | | | |\n| | | | |4.6947% | |\n\n| Panel B Interest Rates Shift Up by 30 bps | | | | | |\n| Year 0, Year 1, Year 2 | | | | | |\n| | |5.8605% | |7.7432% | |\n| 4.3000% | | | |6.3396% | |\n| | |4.7982% | | | |\n| | | | |5.1904% | |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-508",
        "python_solution": "",
        "ground_truth": null,
        "question": "Keeping in mind that each bond has three years left in its maturity, makes annual coupon payments, and has a BBB credit rating, when Jones constructs a binomial interest rate tree based on a 10% interest rate volatility assumption, with the present one-year rate being 1%, Panel A of Exhibit 2 gives an interest rate tree under the assumption that the benchmark yield curve drops by 30 bps. Panel B offers an interest rate tree presuming an increase in the benchmark yield curve by 30 bps. Jones concludes that the SM bond is currently being traded at an option-adjusted spread (OAS) of 13.95 bps in relation to the benchmark yield curve. Based on the data present in Exhibits 1 and 2, can you determine the effective duration for the SM bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_change_up = 100.200 * (5.8605 / 100 - 5.1968 / 100)\n    price_change_down = 100.200 * (4.7982 / 100 - 4.2548 / 100)\n    price_change_average = (abs(price_change_up) + abs(price_change_down)) / 2\n    effective_duration = (price_change_average / 100.200) * 100 / 30\n\n    # Do math calculation to get the answer\n    answer = effective_duration\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-509",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the year 2009, PlayJoy Ltd, a company that started operating in October of that year, bought 10,000 units of a toy costing \u20a410 each in October. The toy had a good sale in October. Expecting high sales in December, PlayJoy acquired another 5,000 units at \u20a411 each in November. During 2009, PlayJoy managed to sell 12,000 units each at a price of \u20a415. What would be the cost of goods sold by PlayJoy under the weighted average cost method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    units_purchased_oct = 10000\n    cost_per_unit_oct = 10\n    units_purchased_nov = 5000\n    cost_per_unit_nov = 11\n    total_units_sold = 12000\n    selling_price_per_unit = 15\n    \n    # Calculate total cost of goods purchased\n    total_cost_oct = units_purchased_oct * cost_per_unit_oct\n    total_cost_nov = units_purchased_nov * cost_per_unit_nov\n    total_cost = total_cost_oct + total_cost_nov\n    \n    # Calculate weighted average cost per unit\n    total_units_purchased = units_purchased_oct + units_purchased_nov\n    weighted_avg_cost_per_unit = total_cost / total_units_purchased\n    \n    # Calculate cost of goods sold\n    cost_of_goods_sold = weighted_avg_cost_per_unit * total_units_sold\n    \n    # return answer\n    return cost_of_goods_sold\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-510",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the annual amortization expense for the third year if firm N employs the double-declining balance method to amortize an $80,000 patent with a useful life of 4 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_cost = 80000  # initial cost of the patent\n    useful_life = 4  # useful life of the patent in years\n    \n    # Calculate annual depreciation rate using double-declining balance method\n    annual_depreciation_rate = 2 / useful_life\n    \n    # Calculate depreciation for first year\n    depreciation_year1 = asset_cost * annual_depreciation_rate\n    remaining_balance_year1 = asset_cost - depreciation_year1\n    \n    # Calculate depreciation for second year\n    depreciation_year2 = remaining_balance_year1 * annual_depreciation_rate\n    remaining_balance_year2 = remaining_balance_year1 - depreciation_year2\n    \n    # Calculate depreciation for third year (the year in question)\n    depreciation_year3 = remaining_balance_year2 * annual_depreciation_rate\n    \n    # return answer\n    return depreciation_year3\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-511",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood that a portfolio with a projected return of 7% and a standard deviation of 13%, won't meet the minimum annual return target of 4%, set by an investor?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    projected_return = 0.07  # 7%\n    standard_deviation = 0.13  # 13%\n    target_return = 0.04  # 4%\n    \n    # Do math calculation to get the answer\n    from scipy.stats import norm\n    \n    # Calculate Z-score\n    z_score = (target_return - projected_return) / standard_deviation\n    \n    # Calculate the probability that the portfolio won't meet the minimum annual return target\n    probability = norm.cdf(z_score)\n    \n    answer = 1 - probability\n    \n    # return answer\n    return answer\n```\n\nThis solution utilizes the `scipy.stats` library to calculate the cumulative distribution function (CDF) of the standard normal distribution (Z-distribution), which gives us the probability that the portfolio's return is less than or equal to the target return. However, we're interested in the opposite scenario, so we subtract the calculated probability from 1 to get the likelihood that the portfolio won't meet the target return."
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|----------|---------------------------|--------------------------------|\n| 1        | 25                        | 30                             |\n| 2        | 20                        | 30                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-512",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio intends to build a portfolio with the following two securities. If the portfolio's return is 21.5%, what is the weighting in Security 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    security1_return = 0.25  # 25%\n    security2_return = 0.20  # 20%\n    portfolio_return = 0.215  # 21.5%\n    \n    # Do math calculation to get the answer\n    # We use the formula: portfolio_return = weight1 * security1_return + weight2 * security2_return\n    # Since weight2 = 1 - weight1, we can substitute and solve for weight1\n    weight1 = (portfolio_return - security2_return) / (security1_return - security2_return)\n    \n    # return answer\n    return weight1\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-513",
        "python_solution": "",
        "ground_truth": null,
        "question": "XY Corporation has established a defined benefit pension plan with $150m in assets and $135m in commitments. It is predicted that: The expected annual income of the pension plan is 7.5percent, with a volatility of 10percent. The liabilities are expected to increase yearly at a rate of 5 percent and have a variation of 4.5 percent. The correlation coefficient between income from assets and liability growth is 0.7. Determine the 95% risk of surplus of the pension.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_value = 150e6  # Assets value\n    liability_value = 135e6  # Liabilities value\n    expected_annual_return = 0.075  # Expected annual return of the pension plan\n    return_volatility = 0.10  # Volatility of the return\n    liability_growth_rate = 0.05  # Expected growth rate of liabilities\n    liability_growth_volatility = 0.045  # Volatility of liability growth rate\n    correlation_coefficient = 0.7  # Correlation coefficient between return and liability growth\n    \n    # Calculate the surplus\n    surplus = asset_value - liability_value\n    \n    # Calculate the volatility of the surplus\n    surplus_volatility = (return_volatility**2 + liability_growth_volatility**2 - 2*correlation_coefficient*return_volatility*liability_growth_volatility)**0.5\n    \n    # Calculate the 95% risk of surplus using a Z-score of 1.645 for 95% confidence level\n    z_score = 1.645\n    risk_of_surplus = surplus - (z_score * surplus_volatility * asset_value)\n    \n    # return answer\n    return risk_of_surplus\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-514",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is thinking about incorporating ABC Corp. into his investment portfolio. The latest dividend payment by the company is 1.45 per share. He observes that ABC Corp.'s dividends have risen at a standard pace of 6 percent. John concluded that the required return on equity for ABC Corp. is 12%. Can you estimate the value of ABC Corp.'s stock based on this information?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_per_share = 1.45\n    dividend_growth_rate = 0.06\n    required_return_on_equity = 0.12\n    \n    # Do math calculation to get the answer\n    # Using Gordon Growth Model\n    stock_value = dividend_per_share / (required_return_on_equity - dividend_growth_rate)\n    \n    # return answer\n    return stock_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-515",
        "python_solution": "",
        "ground_truth": null,
        "question": "A banker's acceptance with a term of 150 days has a quoted discount rate of 5.62% based on a 360-day year. What is the bond equivalent yield?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    term_in_days = 150\n    discount_rate = 0.0562\n    days_in_year = 360\n\n    # Do math calculation to get the answer\n    # Calculate the banker's acceptance discount\n    discount = discount_rate * term_in_days / days_in_year\n    \n    # Calculate the banker's acceptance price (P)\n    price = 1 - discount\n    \n    # Calculate the bond equivalent yield (BEY)\n    bey = (1/price - 1) * (365 / term_in_days)\n    \n    # Convert to percentage\n    bey_percentage = bey * 100\n    \n    # return answer\n    return bey_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-516",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine the following 6x9 FRA, where the purchaser of the FRA consents to a contract rate of 6.35% on a notional value of 10 million USD. Assume a 30/360 day count basis. What would be the settlement sum for the vendor if the settlement rate is 6.85%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_value = 10_000_000  # Notional value of 10 million USD\n    contract_rate = 0.0635  # Contract rate of 6.35%\n    settlement_rate = 0.0685  # Settlement rate of 6.85%\n    days_to_maturity = 180  # 6 months (half of 365 day year, rounding down for 30/360 day count)\n    year_fraction = days_to_maturity / 360  # Using 30/360 day count convention\n\n    # Do math calculation to get the answer\n    settlement_sum = notional_value * (settlement_rate - contract_rate) * year_fraction\n    \n    # return answer\n    return settlement_sum\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-517",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Orion Enterprises recently released deferred coupon bonds of $100 par value that will not make any coupon payments for the following four years, and will then offer regular yearly coupon payments at an 8% rate until the end of their 10-year maturity period, and these bonds are currently valued at $87.00, what is the yield to maturity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    price = 87\n    years_until_first_coupon = 4\n    years_of_coupons = 6\n    coupon_rate = 0.08\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the first coupon payment\n    # We use the formula for present value of a future amount: PV = FV / (1 + r)^n\n    # where r is the yield to maturity (ytm), and n is the number of years until payment\n    import numpy as np\n    from scipy.optimize import fsolve\n    \n    def equation(ytm):\n        # Calculate the present value of all coupon payments\n        pv_coupons = sum(coupon_rate * par_value / (1 + ytm)**(years_until_first_coupon + i) for i in range(years_of_coupons))\n        \n        # Calculate the present value of the return of principal\n        pv_principal = par_value / (1 + ytm)**(years_until_first_coupon + years_of_coupons)\n        \n        # The total present value is the sum of present values of all cash flows\n        total_pv = pv_coupons + pv_principal\n        \n        # The price of the bond equals the total present value of all cash flows\n        return price - total_pv\n    \n    # Solve the equation for ytm\n    ytm = fsolve(equation, x0=0.01)[0] * 100\n    \n    # return answer\n    return ytm\n```"
        ]
    },
    {
        "tables": [
            "| Year | EPS  | DPS  | ROE |\n|------|------|------|-----|\n| 2009 | $3.20| $1.92| 12% |\n| 2008 | $3.60| $1.85| 17% |\n| 2007 | $2.44| $1.74| 13% |\n| 2006 | $2.08| $1.62| 15% |\n| 2005 | $2.76| $1.35| 11% |\n| 2004 | $2.25| $1.25| 9%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-518",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the identical information below and the same perpetual growth model, if a trader uses the mean value of the dividend growth rate between 2004 and 2009, along with the sustainable growth rate for 2009 to predict growth, and if the trader's required return is at 15 percent, what would be the anticipated value of the enterprise's common shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    eps_values = [3.20, 3.60, 2.44, 2.08, 2.76, 2.25]\n    dps_values = [1.92, 1.85, 1.74, 1.62, 1.35, 1.25]\n    roe_values = [0.12, 0.17, 0.13, 0.15, 0.11, 0.09]\n\n    required_return = 0.15\n    current_dps = dps_values[0]\n    \n    # Calculate dividend growth rate\n    growth_rates = []\n    for i in range(1, len(dps_values)):\n        growth_rate = (dps_values[i-1] / dps_values[i]) - 1\n        growth_rates.append(growth_rate)\n    \n    avg_growth_rate = sum(growth_rates) / len(growth_rates)\n    \n    # Calculate sustainable growth rate for 2009\n    retention_ratio = 1 - (current_dps / eps_values[0])\n    sustainable_growth_rate = roe_values[0] * retention_ratio\n    \n    # Use the perpetual growth model to calculate the value of the share\n    # using the average growth rate and sustainable growth rate\n    g = (avg_growth_rate + sustainable_growth_rate) / 2\n    share_value = current_dps / (required_return - g)\n    \n    # return answer\n    return share_value\n```"
        ]
    },
    {
        "tables": [
            "|  |  |\n|---|---|\n| Acquisition cost | $60,000,000 |\n| Acquisition date | 1 January 2012 |\n| Patent expiration date | 31 December 2017 |\n| Total plant capacity of patented product | 60,000 units per year |\n| Production of patented product in fiscal year ended 31 December 2012 | 25,000 units |\n| Expected production of patented product during life of the patent | 225,000 units |"
        ],
        "topic": "Accounting",
        "question_id": "test-519",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following information pertains to a patent owned by TDC Corporation. If we use the units-of-production depreciation method, what will be the first year's amortization cost?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 60000000\n    expected_production = 225000\n    actual_production_first_year = 25000\n    \n    # Do math calculation to get the answer\n    amortization_cost_per_unit = acquisition_cost / expected_production\n    first_year_amortization_cost = amortization_cost_per_unit * actual_production_first_year\n    \n    # return answer\n    return first_year_amortization_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-520",
        "python_solution": "",
        "ground_truth": null,
        "question": "Marie, the portfolio manager of BC pension, is currently contemplating on incorporating NY Inc. (New York Stock Exchange: NY) into her portfolio. After a thorough evaluation of the company and its competition, she discerns that the company's growth rate steadily decreases from 12 percent in the initial year to 6 percent in year five. The total dividends paid by NY in 2017 amounted to $0.22. The required return is calculated to be at 9 percent. What is the stock's inherent worth?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_dividend = 0.22  # Total dividends paid in 2017\n    initial_growth_rate = 0.12  # 12% growth rate in the initial year\n    final_growth_rate = 0.06  # 6% growth rate in year five\n    required_return = 0.09  # 9% required return\n    years = 5  # Number of years to consider\n\n    # Do math calculation to get the answer\n    # First, we calculate the dividends for the next 5 years\n    # using the formula for the present value of a growing annuity\n    dividend_growth_rate = [initial_growth_rate - (initial_growth_rate - final_growth_rate) * i / (years - 1) for i in range(years)]\n    dividends = [initial_dividend * (1 + dividend_growth_rate[i]) for i in range(years)]\n\n    # Next, we calculate the present value of the dividends\n    present_value = sum([dividend / (1 + required_return) ** (i + 1) for i, dividend in enumerate(dividends)])\n\n    # Finally, we calculate the stock's intrinsic value by summing\n    # the present value of the dividends and the present value\n    # of the projected price of the stock in year 5.\n    intrinsic_value = present_value + (initial_dividend * (1 + final_growth_rate) / (required_return - final_growth_rate)) / (1 + required_return) ** years\n\n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-521",
        "python_solution": "",
        "ground_truth": null,
        "question": "The expected return for Portfolio C is 9% with a volatility of 20%. Meanwhile, the expected return for the market index is forecasted to be 7% with a volatility of 15%, and the correlation between Portfolio C and the market is anticipated to be 0.9. Given that the risk-free rate is observed to be 3%, can you calculate the Jensen's alpha for Portfolio C?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_portfolio_c = 0.09  # 9%\n    volatility_portfolio_c = 0.20  # 20%\n    expected_return_market_index = 0.07  # 7%\n    volatility_market_index = 0.15  # 15%\n    correlation = 0.9\n    risk_free_rate = 0.03  # 3%\n\n    # Do math calculation to get the answer\n    beta = correlation * (volatility_portfolio_c / volatility_market_index)\n    expected_return_capm = risk_free_rate + beta * (expected_return_market_index - risk_free_rate)\n    jensens_alpha = expected_return_portfolio_c - expected_return_capm\n\n    # return answer\n    return jensens_alpha\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-522",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ is a firm that trades in derivatives. This firm offloaded a five-year CDS protection on Firm E worth $10 million. The duration of this CDS contract is 3.5 years. After a quarter of a year, the credit spread on Firm E diminished from 225bps to 165 bps. Based on the details provided, how much profit can be expected if XYZ establishes a counterbalancing position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_value = 10000000  # Notional value of the CDS contract\n    initial_credit_spread = 0.0225  # Initial credit spread of 225 bps\n    final_credit_spread = 0.0165  # Final credit spread of 165 bps\n    duration = 3.5  # Duration of the CDS contract\n    time_elapsed = 0.25  # Time elapsed (1 quarter of a year)\n    \n    # Do math calculation to get the answer\n    initial_present_value = notional_value * initial_credit_spread * duration\n    final_present_value = notional_value * final_credit_spread * duration\n    profit = (initial_present_value - final_present_value) * (1 - time_elapsed)\n    \n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-523",
        "python_solution": "",
        "ground_truth": null,
        "question": "Due to marketing consumer staples, Bayside Essentials (BE) is capable of utilizing significant debt in its capital structure; in particular, 90 percent of the company's total assets of $450,000,000 are financed with debt capital. Its debt costs are 8 percent before taxes, and its equity capital costs are 12 percent. BE attained a pretax income of $5.1 million in 2006 and was taxed at a rate of 40 percent. What was BE's residual income?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 450000000\n    debt_ratio = 0.9\n    debt_cost = 0.08\n    equity_cost = 0.12\n    pretax_income = 5100000\n    tax_rate = 0.4\n    \n    # Calculate total capital and weighted average cost of capital (WACC)\n    total_debt = total_assets * debt_ratio\n    total_equity = total_assets - total_debt\n    weighted_debt_cost = (debt_ratio * debt_cost) \n    weighted_equity_cost = ((1 - debt_ratio) * equity_cost)\n    wacc = weighted_debt_cost + weighted_equity_cost\n\n    # Calculate net operating profit after taxes (NOPAT)\n    nopat = pretax_income * (1 - tax_rate)\n\n    # Calculate residual income\n    residual_income = nopat - (total_assets * wacc)\n    \n    # return answer\n    return residual_income\n```"
        ]
    },
    {
        "tables": [
            "| Interest Rate Assumption | Present Value of Liabilities |\n|-------------------------|-------------------------------|\n| 6%                      | CAD 510.1 million           |\n| 7%                      | CAD 455.4 million           |\n| 8%                      | CAD 373.6 million           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-524",
        "python_solution": "",
        "ground_truth": null,
        "question": "A pension fund manager from Canada is trying to gauge the impact of changes in market interest rates on his pension obligations. He calculates the present value of these obligations under three potential interest rate circumstances: a foundational rate of 7%, a rate boosted by 100 basis points to 8%, and a rate lowered by 100 basis points to 6%. Based on the analysis outcomes provided below, what is the effective duration of the liabilities of the pension fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_value_liabilities_6_percent = 510.1  # CAD million\n    present_value_liabilities_7_percent = 455.4  # CAD million\n    present_value_liabilities_8_percent = 373.6  # CAD million\n    \n    # Calculate changes in present value of liabilities due to changes in interest rates\n    present_value_change_down = present_value_liabilities_6_percent - present_value_liabilities_7_percent\n    present_value_change_up = present_value_liabilities_7_percent - present_value_liabilities_8_percent\n    \n    # Calculate effective duration using the average percentage change\n    interest_rate_change = 0.01  # 100 basis points or 1%\n    average_present_value_change = (abs(present_value_change_down / present_value_liabilities_7_percent) + abs(present_value_change_up / present_value_liabilities_7_percent)) / 2\n    effective_duration = average_present_value_change / interest_rate_change\n    \n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [
            "| Path | Time 0 | Time 1 | Time 2 |\n|------|--------|--------|--------|\n| 1    | 1.500% | 2.8853%| 2.7183%|\n| 2    | 1.500  | 2.8853 | 1.6487 |\n| 3    | 1.500  | 1.7500 | 1.6487 |\n| 4    | 1.500  | 1.7500 | 1.0000 |",
            "| Bond   | Maturity | Coupon Rate |\n|--------|----------|-------------|\n| Bond C | 2 years  | 2.5%        |\n| Bond D | 3 years  | 3.0%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-525",
        "python_solution": "",
        "ground_truth": null,
        "question": "In his discussion about pathwise valuations being an alternative way of valuing bonds through a binomial interest rate tree, Thompson describes how Peterson uses the binomial interest rate tree to predict the potential interest rate paths for Bond M shown in Exhibit 9. Referencing Exhibits 6 and 9, what's the current value of Bond M's cash flows along Path 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_maturity = 2  # years\n    coupon_rate = 0.025  # 2.5%\n    face_value = 100  # assume face value is 100\n    interest_rates_path_2 = [0.015, 0.028853, 0.016487]  # interest rates along Path 2\n    \n    # Calculate cash flows\n    coupon_payment = face_value * coupon_rate\n    cash_flows = [coupon_payment, coupon_payment + face_value]  # cash flows at Time 1 and Time 2\n    \n    # Discount cash flows using interest rates along Path 2\n    discounted_cash_flow_1 = cash_flows[0] / (1 + interest_rates_path_2[0])\n    discounted_cash_flow_2 = cash_flows[1] / ((1 + interest_rates_path_2[0]) * (1 + interest_rates_path_2[1]))\n    \n    # Calculate current value of cash flows along Path 2\n    current_value = discounted_cash_flow_1 + discounted_cash_flow_2\n    \n    # return answer\n    return current_value\n```"
        ]
    },
    {
        "tables": [
            "\n| Year | Net Return (%) |\n|------|----------------|\n| 2008 | -34.8          |\n| 2009 | 32.2           |\n| 2010 | 11.1           |\n| 2011 | -1.4           |\n"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-526",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the 2012 return required to realize a trailing five-year geometric mean annualized return of 5% at the conclusion of 2012 for a wealth management company that produced the following annual returns in their US large-cap equity portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [-0.348, 0.322, 0.111, -0.014]  # convert percentage to decimal\n    target_geometric_mean_return = 0.05\n    number_of_years = 5\n\n    # Do math calculation to get the answer\n    cumulative_return = 1\n    for return_rate in returns:\n        cumulative_return *= (1 + return_rate)\n    \n    required_cumulative_return = (1 + target_geometric_mean_return) ** number_of_years\n    required_final_year_return = required_cumulative_return / cumulative_return - 1\n    required_final_year_return_percentage = required_final_year_return * 100\n    \n    # return answer\n    return required_final_year_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "|                        | Income Statement | Balance Sheet Changes                               |\n|------------------------|------------------|-----------------------------------------------------|\n| Revenue                | $22,100          | accounts receivable +$550<br> inventory -131<br> prepaid expense +6<br> accounts payable +1,230   |\n| Cost of goods sold     | $16,230          |                                                     |\n| Other operating expense| $508             |                                                     |\n| Depreciation expense   | $1,500           |                                                     |"
        ],
        "topic": "Accounting",
        "question_id": "test-527",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the financial records of Corporation X provided, what is the quantity of cash disbursed to vendors in 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold = 16230\n    accounts_payable = 1230\n    inventory_change = -131\n\n    # Do math calculation to get the answer\n    cash_disbursed_to_vendors = cost_of_goods_sold - accounts_payable + inventory_change\n    \n    # return answer\n    return cash_disbursed_to_vendors\n\nanswer = solution()\nprint(answer)\n```"
        ]
    },
    {
        "tables": [
            "| Assets                           | 31 Dec 2017 | 31 Dec 2016 |\n|----------------------------------|-------------|-------------|\n| Total current assets             | 11,930      | 11,564      |\n| Total non-current assets         | 30,567      | 32,713      |\n| Total assets                     | 42,497      | 44,277      |\n| Total current liabilities        | 10,210      | 9,674       |\n| Total non-current liabilities    | 6,747       | 8,205       |\n| Total liabilities                | 16,958      | 17,880      |\n| Issued capital                   | 1,229       | 1,229       |\n| Share premium                    | 570         | 599         |\n| Retained earnings                | 24,794      | 22,302      |\n| Other components of equity       | 508         | 3,346       |\n| Treasury shares                  | (1,591)     | (1,099)     |\n| Equity attributable to owners of parent | 25,509  | 26,376  |\n| Non-controlling interests        | 31          | 21          |\n| Total equity                     | 25,540      | 26,397      |\n| Total equity and liabilities     | \u00a342,497     | \u00a344,277     |"
        ],
        "topic": "Accounting",
        "question_id": "test-528",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the financial leverage ratio for SAP Group on December 31, 2017, based on the data provided in the Exhibit?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_assets = 42497\n    total_equity = 25540\n    \n    # Do math calculation to get the answer\n    financial_leverage_ratio = total_assets / total_equity\n    \n    # return answer\n    return financial_leverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-529",
        "python_solution": "",
        "ground_truth": null,
        "question": "Currently, XYZ is rated A in terms of credit and has issued two-year zero-coupon bonds. The market anticipates that the company will either maintain its A rating, be downgraded to BBB, or upgraded to AA in the span of a year with chances of 85%, 10%, and 5%, respectively. Presuming a flat risk-free yield curve with a 1% value, and credit spreads of 70, 100 and 300 basis points for the AA, A, and BBB ratings respectively, with all interest rates compounding annually, what is the predicted worth of a zero-coupon bond after a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.01  # 1%\n    credit_spread_aa = 0.007  # 70 basis points\n    credit_spread_a = 0.01  # 100 basis points\n    credit_spread_bbb = 0.03  # 300 basis points\n    probability_maintain_a = 0.85  # 85%\n    probability_downgrade_to_bbb = 0.10  # 10%\n    probability_upgrade_to_aa = 0.05  # 5%\n    years_to_maturity = 2\n    \n    # Calculate the yield for each rating\n    yield_aa = risk_free_rate + credit_spread_aa\n    yield_a = risk_free_rate + credit_spread_a\n    yield_bbb = risk_free_rate + credit_spread_bbb\n    \n    # Calculate the present value of the bond for each rating\n    present_value_aa = 1 / (1 + yield_aa)**years_to_maturity\n    present_value_a = 1 / (1 + yield_a)**years_to_maturity\n    present_value_bbb = 1 / (1 + yield_bbb)**years_to_maturity\n    \n    # Calculate the expected value of the bond after a year\n    expected_value = (probability_upgrade_to_aa * present_value_aa * (1 + yield_aa)) + (probability_maintain_a * present_value_a * (1 + yield_a)) + (probability_downgrade_to_bbb * present_value_bbb * (1 + yield_bbb))\n    \n    # return answer\n    return expected_value\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class     | Geometric Return(%) |\n| --------------  | ------------------- |\n| Equities        | 8.0                 |\n| Corporate Bonds | 6.5                 |\n| Treasury bills  | 2.5                 |\n| Inflation       | 2.1                 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-530",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the reported historical geometric returns for the real rate of return for equities according to the expert?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equities_geometric_return = 8.0  # in percentage\n    inflation_rate = 2.1  # in percentage\n\n    # Do math calculation to get the answer\n    # The real rate of return is calculated by subtracting the inflation rate from the geometric return\n    real_rate_of_return = (1 + equities_geometric_return / 100) / (1 + inflation_rate / 100) - 1\n    real_rate_of_return_percentage = real_rate_of_return * 100  # convert to percentage\n\n    # return answer\n    return real_rate_of_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "| | Roil =30% | Roil=15% | Roil=10% |\n| - | - | - | - |\n| RMkt=25% | 30% | 0 | 0 |\n| RMkt=20% | 0 | 40% | 0 |\n| RMkt=0% | 0 | 0 | 30% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-531",
        "python_solution": "",
        "ground_truth": null,
        "question": "Analyst John has compiled the following data for the return on the market and the return on Crude Oil. Can you compute the covariance of returns between the market and Crude Oil? Probability Matrix",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    rmkt = [0.25, 0.20, 0.00]\n    roil = [0.30, 0.15, 0.10]\n    probabilities = [[0.30, 0.00, 0.00],\n                     [0.00, 0.40, 0.00],\n                     [0.00, 0.00, 0.30]]\n    expected_return_rmkt = sum(rmkt[i] * sum(probabilities[i]) for i in range(len(rmkt)))\n    expected_return_roil = sum(roil[j] * sum(probabilities[i][j] for i in range(len(rmkt))) for j in range(len(roil)))\n    \n    # Do math calculation to get the answer\n    covariance = sum(sum(rmkt[i] - expected_return_rmkt) * (roil[j] - expected_return_roil) * probabilities[i][j] for i in range(len(rmkt)) for j in range(len(roil)))\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-532",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond with a Macaulay duration of 6.0, modified duration of 6.5, and convexity of 50.25 experiences a decrease in yield to maturity by 50 bps, what will be the anticipated percentage change in its price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    macaulay_duration = 6.0\n    modified_duration = 6.5\n    convexity = 50.25\n    yield_change = -0.005  # 50 bps = 0.5% = -0.005\n    \n    # Do math calculation to get the answer\n    price_change = -modified_duration * yield_change + 0.5 * convexity * (yield_change ** 2)\n    answer = price_change * 100  # convert to percentage\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Hi | P(Hi|Good) | P(Hi|Poor) |\n|---|------------|------------|\n| 0 | 0.1           | 0.5            |\n| 10 | 0.3           | 0.3            |\n| 20 | 0.6           | 0.2            |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-533",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that there's a 0.4 chance of a strong economy and a 0.6 chance of a weak economy. The table below shows the conditional probabilities of product Z's profit. What will be the anticipated profit of product Z?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    P_good = 0.4  # Probability of a strong economy\n    P_poor = 0.6  # Probability of a weak economy\n    \n    Hi_values = [0, 10, 20]  # Possible Hi values\n    P_Hi_given_Good = [0.1, 0.3, 0.6]  # Conditional probabilities of Hi given a strong economy\n    P_Hi_given_Poor = [0.5, 0.3, 0.2]  # Conditional probabilities of Hi given a weak economy\n\n    # Calculate the expected profit\n    expected_profit = 0\n    for Hi, P_Hi_Good, P_Hi_Poor in zip(Hi_values, P_Hi_given_Good, P_Hi_given_Poor):\n        expected_profit += Hi * (P_Hi_Good * P_good + P_Hi_Poor * P_poor)\n\n    # return answer\n    return expected_profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-534",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that ABC Corporation saw a rise in operating income by 16%, and a 10% increase in units sold. If the financial leverage degree (DFL) of ABC Corporation is 1.5, what is most likely the degree of total leverage (DTL) for ABC Corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    percent_change_in_operating_income = 16\n    percent_change_in_units_sold = 10\n    degree_of_financial_leverage = 1.5\n    \n    # Calculate degree of operating leverage (DOL)\n    degree_of_operating_leverage = percent_change_in_operating_income / percent_change_in_units_sold\n    \n    # Calculate degree of total leverage (DTL)\n    degree_of_total_leverage = degree_of_operating_leverage * degree_of_financial_leverage\n    \n    # return answer\n    return degree_of_total_leverage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-535",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portfolio is made up of options on Apple and Verizon. The Apple options have a delta of 1000, while the Verizon options have a delta of 20000. The share price of Apple is $120, and Verizon's share price is $30. If we assume that the daily volatility of Apple is 2% and the daily volatility of Verizon is 1%, and the correlation between the daily changes is 0.3, what is the 5-day 95% VaR?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    apple_delta = 1000\n    verizon_delta = 20000\n    apple_share_price = 120\n    verizon_share_price = 30\n    apple_daily_volatility = 0.02\n    verizon_daily_volatility = 0.01\n    correlation = 0.3\n    confidence_level = 0.95\n    time_horizon = 5\n    \n    # Import necessary libraries\n    import numpy as np\n    from scipy.stats import norm\n    \n    # Calculate the portfolio weights\n    apple_weight = apple_delta * apple_share_price / (apple_delta * apple_share_price + verizon_delta * verizon_share_price)\n    verizon_weight = 1 - apple_weight\n    \n    # Calculate the portfolio volatility\n    portfolio_volatility = np.sqrt((apple_weight**2) * (apple_daily_volatility**2) + (verizon_weight**2) * (verizon_daily_volatility**2) + 2*apple_weight*verizon_weight*correlation*apple_daily_volatility*verizon_daily_volatility)\n    \n    # Calculate the 5-day 95% VaR\n    var = norm.ppf(1 - (1 - confidence_level) / 100, loc = 0, scale = portfolio_volatility * np.sqrt(time_horizon))\n    var = var * (apple_delta * apple_share_price + verizon_delta * verizon_share_price)\n    \n    # return answer\n    return var\n```"
        ]
    },
    {
        "tables": [
            "| CompanyM            | $(millions) |\n|---------------------|-------------|\n| Operating income (EBIT) | 2,000       |\n| Depreciation expense     | 750         |\n| Interest expense         | 300         |\n| Increase in accounts receivable | 1,000   |\n| Increase in inventories  | 100         |\n| Increase in accounts payable | 500     |\n| Purchases of PP&E        | 600         |\n| Borrowing (repayment)    | 400         |\n| Tax rate                 | 30%         |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-536",
        "python_solution": "",
        "ground_truth": null,
        "question": "As per the financial report, what is the FCFE for Company N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ebit = 2000  # Operating income (EBIT)\n    depreciation_expense = 750  # Depreciation expense\n    interest_expense = 300  # Interest expense\n    increase_in_accounts_receivable = 1000  # Increase in accounts receivable\n    increase_in_inventories = 100  # Increase in inventories\n    increase_in_accounts_payable = 500  # Increase in accounts payable\n    purchases_of_ppe = 600  # Purchases of PP&E\n    borrowing_repayment = 400  # Borrowing (repayment)\n    tax_rate = 0.3  # Tax rate\n\n    # Do math calculation to get the answer\n    ebitda = ebit + depreciation_expense\n    net_income = ebit * (1 - tax_rate)\n    capital_expenditure = purchases_of_ppe - depreciation_expense\n    working_capital_change = increase_in_accounts_receivable + increase_in_inventories - increase_in_accounts_payable\n    total_spendings = capital_expenditure + working_capital_change\n    net_borrowing = -borrowing_repayment  # Since it's repayment, it's negative\n    fcfe = net_income - total_spendings + net_borrowing\n\n    # return answer\n    return fcfe\n```\n\nThis Python program calculates the Free Cash Flow to Equity (FCFE) for Company N based on the provided financial data. The FCFE is calculated by subtracting the total spendings (capital expenditure and working capital change) from the net income and adding the net borrowing (repayment). The net income is calculated by multiplying the EBIT by (1 - tax rate). The program uses descriptive variable names and follows a step-by-step approach to calculate the FCFE."
        ]
    },
    {
        "tables": [
            "|         |     |\n| ------- | --- |\n| ROE     | 10% |\n| Growth rate (first three years) | 6.0% |\n| Growth rate (after first three years) | 4.0% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-537",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is assessing the sustainable growth rate of Firm M and has gathered the following data in the provided table. What is the dividend payout ratio of Firm M?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ROE = 0.10  # Return on Equity\n    growth_rate_first_three_years = 0.06\n    growth_rate_after_three_years = 0.04\n    \n    # Do math calculation to get the answer\n    # Sustainable growth rate formula: g = ROE * (1 - dividend_payout_ratio)\n    # Assuming the growth rate after the first three years is the sustainable growth rate\n    dividend_payout_ratio = 1 - (growth_rate_after_three_years / ROE)\n    \n    # return answer\n    return dividend_payout_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Maturity | Coupon | Price |\n|---|---|---|\n| 6 months | 4.5% | 101.47 |\n| 1 year | 6.0% | 102.75 |\n| 2 years | 7.0% | 100.32 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-538",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the data table providing details about three bonds with twice-yearly coupon payments, what is the discount factor for d(1)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_6m = 101.47\n    coupon_6m = 4.5 / 200  # Coupon rate for 6 months\n    price_1y = 102.75\n    coupon_1y = 6.0 / 200  # Coupon rate for 1 year\n    \n    # Do math calculation to get the answer\n    # Calculate the discount factor d(0.5)\n    d_0_5 = (price_6m - coupon_6m) / (100 + coupon_6m)\n    \n    # Calculate the discount factor d(1)\n    d_1 = (price_1y - coupon_1y) / (100 + coupon_1y + (100 + coupon_1y) * d_0_5)\n    \n    # return answer\n    return d_1\n```\n\nThis program calculates the discount factor `d(1)` using the given bond prices and coupon rates. The discount factor `d(0.5)` is first calculated using the 6-month bond data, and then `d(1)` is calculated using the 1-year bond data and the calculated `d(0.5)`. The program assumes that the coupon payments are made twice a year, as mentioned in the problem."
        ]
    },
    {
        "tables": [
            "|                    | Maturity (Years) |     |     |     |\n|--------------------|------------------|-----|-----|-----|\n|                    | 1                | 2   | 3   | 4   |\n| Government spot rate | 2.25%           | 2.70% | 3.30% | 4.05% |\n| Swap spread        | 0.25%           | 0.30% | 0.45% | 0.70% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-539",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Johnson collects data on spot rates for current annual-coupon government bonds and swap spreads, as shown in the Exhibit below, and purchased a government bond, he would receive an almost risk-free annualized return. According to the no-arbitrage principle, what could Johnson demonstrate the forward price of a one-year government bond, set to be issued in one year, to be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_1_year = 0.0225\n    spot_rate_2_year = 0.0270\n    \n    # Do math calculation to get the answer\n    forward_rate = (1 + spot_rate_2_year) ** 2 / (1 + spot_rate_1_year) - 1\n    \n    # return answer\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-540",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming equal financing from each source and a marginal tax rate of 30%, what is the weighted average cost of capital (%) if a company's pre-tax costs of debt, preferred stock, and equity are 12%, 14%, and 16%, respectively?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    pre_tax_cost_of_debt = 0.12\n    pre_tax_cost_of_preferred_stock = 0.14\n    pre_tax_cost_of_equity = 0.16\n    marginal_tax_rate = 0.30\n    equal_financing_weight = 1/3\n    \n    # Do math calculation to get the answer\n    after_tax_cost_of_debt = pre_tax_cost_of_debt * (1 - marginal_tax_rate)\n    cost_of_preferred_stock = pre_tax_cost_of_preferred_stock\n    cost_of_equity = pre_tax_cost_of_equity\n    \n    weighted_average_cost_of_capital = (after_tax_cost_of_debt * equal_financing_weight +\n                                        cost_of_preferred_stock * equal_financing_weight +\n                                        cost_of_equity * equal_financing_weight)\n    \n    weighted_average_cost_of_capital_percentage = weighted_average_cost_of_capital * 100\n    \n    # return answer\n    return weighted_average_cost_of_capital_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-541",
        "python_solution": "",
        "ground_truth": null,
        "question": "Several months down the line, Jordan gets a phone call from Fatimah. She has now become a board member of the Polar Foundation for Medical Advancements (PFMA). PFMA was created to fund a range of medical research endeavors. Fatimah is thrilled and requests Jordan to work out the return objective of PFMA's portfolio. Kyoto points out the following:\u2022 PFMA\u2019s main investment goal is to preserve the real purchasing power of its portfolio after distributions.\u2022 The risk-free rate is 4.0%.\u2022 An expected inflation rate is 3.5%.\u2022 The portfolio\u2019s standard deviation is 15.0%.\u2022 The cost of earning investment returns is 50 bp.\u2022 PFMA aims for a 5.5% annual distribution of assets. What is PFMA\u2019s return objective?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.04\n    expected_inflation_rate = 0.035\n    portfolio_standard_deviation = 0.15\n    cost_of_earning_investment_returns = 0.005\n    annual_distribution_of_assets = 0.055\n\n    # Do math calculation to get the answer\n    required_return = risk_free_rate + expected_inflation_rate + annual_distribution_of_assets + cost_of_earning_investment_returns\n\n    # return answer\n    return required_return\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-542",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the second model, given that the present short-term rate stands at 5%, the annual drift is 80bps, and the standard deviation of the short-term rate is 3%. Moreover, consider the ex-post realization of the dw random variable being 0.3. What would the interest rate be in the central node after building a 2-period interest rate tree with yearly periods by the conclusion of the second year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_short_term_rate = 0.05  # 5%\n    annual_drift = 0.008  # 80bps\n    std_deviation = 0.03  # 3%\n    dw = 0.3\n    time_step = 1  # yearly periods\n    \n    # Calculate the change in the short-term rate using the Ho-Lee model\n    delta_r = annual_drift * time_step + std_deviation * dw\n    \n    # Calculate the short-term rate after one period\n    r_1 = present_short_term_rate + delta_r\n    \n    # Calculate the central node at the end of the second period\n    # Since it's a 2-period interest rate tree, we use the same delta_r\n    r_2 = r_1 + delta_r\n    \n    # return answer\n    return r_2\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-543",
        "python_solution": "",
        "ground_truth": null,
        "question": "The joint probability distribution of random variables A and B is presented by f{(a,b)}=k * a * b where a = 1,2,3, b = 1,2,3, and k is a positive constant. What is the likelihood that A+B will go beyond 5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    k = 1/18  # we know the sum of probabilities is 1, so k should be 1 / (1*1+1*2+...+3*3) = 1/18\n    A_values = [1, 2, 3]\n    B_values = [1, 2, 3]\n    \n    # Do math calculation to get the answer\n    total_probability = 0\n    for a in A_values:\n        for b in B_values:\n            if a + b > 5:\n                total_probability += k * a * b\n                \n    # return answer\n    return total_probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-544",
        "python_solution": "",
        "ground_truth": null,
        "question": "If each futures contract is for 100 shares and the company undergoes a 2-for-1 split, how many shares does each futures contract now cover?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_shares_per_contract = 100\n    split_ratio = 2\n    \n    # Do math calculation to get the answer\n    new_shares_per_contract = original_shares_per_contract * split_ratio\n    \n    # return answer\n    return new_shares_per_contract\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-545",
        "python_solution": "",
        "ground_truth": null,
        "question": "We have a bond assortment containing two bonds, namely bond X and bond Y. The worth of bond X is $60 million, while bond Y is worth $40 million. The one-year default probability for bond X is 5% with a recovery rate of 60%, whereas bond Y has a default probability of 7% and a recovery rate of 50%. Determine the anticipated credit loss for this collection over one year, given that the likelihood of both bonds defaulting is 0.7% and the default relationship is observed to be 20%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_x_worth = 60000000  # Worth of bond X in dollars\n    bond_y_worth = 40000000  # Worth of bond Y in dollars\n    \n    bond_x_default_prob = 0.05  # One-year default probability of bond X\n    bond_y_default_prob = 0.07  # One-year default probability of bond Y\n    \n    bond_x_recovery_rate = 0.6  # Recovery rate of bond X\n    bond_y_recovery_rate = 0.5  # Recovery rate of bond Y\n    \n    both_bonds_default_prob = 0.007  # Likelihood of both bonds defaulting\n    default_relationship = 0.2  # Default relationship between the bonds\n\n    # Do math calculation to get the answer\n    # Calculate the Expected Loss (EL) for each bond: EL = (1 - recovery rate) * default probability * exposure\n    bond_x_expected_loss = (1 - bond_x_recovery_rate) * bond_x_default_prob * bond_x_worth\n    bond_y_expected_loss = (1 - bond_y_recovery_rate) * bond_y_default_prob * bond_y_worth\n\n    # Adjust for the default relationship between the bonds and the likelihood of both bonds defaulting\n    adjusted_expected_loss = bond_x_expected_loss + bond_y_expected_loss - (default_relationship * both_bonds_default_prob * (bond_x_worth + bond_y_worth))\n\n    answer = adjusted_expected_loss\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|                                               | REIT A        |\n|-----------------------------------------------|---------------|\n| Estimated 12 months cash net operating income (NOI) | $ 280,000    |\n| Cash and equivalents                          | $ 335,000    |\n| Accounts receivable                           | $ 230,000    |\n| Debt and other liabilities                    | $ 1,680,000  |\n|                                               |               |\n| Shares outstanding                            | 82,000       |\n| Assumed cap rate                              | 8.00%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-546",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share value of REIT B when the net asset value valuation method is applied?",
        "output": [
            "Unfortunately, I don't see the data for REIT B in your table. However, I can provide you with the general Python program to calculate the per share value using the net asset value (NAV) valuation method for REIT A, and you can modify it for REIT B once you have the correct data.\n\n\n```python\ndef solution():\n    # Define variables name and value\n    cash_noi = 280000  # Estimated 12 months cash net operating income (NOI)\n    cash_equivalents = 335000  # Cash and equivalents\n    accounts_receivable = 230000  # Accounts receivable\n    debt_liabilities = 1680000  # Debt and other liabilities\n    shares_outstanding = 82000  # Shares outstanding\n    cap_rate = 0.08  # Assumed cap rate\n    \n    # Do math calculation to get the answer\n    # Calculate net operating income (NOI) as a proxy to EBITDA\n    # Since it is already given, we do not need further calculation\n    \n    # Calculate enterprise value (EV) using the cap rate\n    enterprise_value = cash_noi / cap_rate\n    \n    # Calculate net asset value (NAV) which equals to EV - debt + cash + account receivable \n    net_asset_value = enterprise_value - debt_liabilities + cash_equivalents + accounts_receivable\n    \n    # Calculate per share value\n    per_share_value = net_asset_value / shares_outstanding\n    \n    # return answer\n    return per_share_value\n```\nJust replace the data in the program with the data for REIT B to get the answer."
        ]
    },
    {
        "tables": [
            "|                      | 2018 | 2019 |\n|----------------------|------|------|\n| Revenue              | 5000 | 7000 |\n| Cost                 | 2000 | 2300 |\n| Operating income     | 3000 | 4700 |\n| Net profit           | 1650 | 2300 |\n| Total assets         | 4000 | 6000 |\n| Total liabilities    | 1200 | 900  |\n| Equity               | 2800 | 5100 |",
            "|                        | 2018  | 2019  |\n| ---------------------- | ----  | ----  |\n| Revenue                | 2000  | 2500  |\n| Cost                   | 1200  | 1300  |\n| Operating income       | 800   | 1200  |\n| Net profit             | 460   | 820   |\n| Dividends paid         | 230   | 410   |\n| Total assets           | 1000  | 1100  |\n| Total liabilities      | 600   | 650   |\n| Equity                 | 400   | 450   |"
        ],
        "topic": "Accounting",
        "question_id": "test-547",
        "python_solution": "",
        "ground_truth": null,
        "question": "The educational firm based in China, company PZ, operates under IFRS. In 2018, it had a passive equity ownership interest of 15% in the T-internet company. By the close of 2018, PZ decided to increase its ownership to 50% as of 1st January 2019, via a cash purchase. There have been no transactions between companies. In the table containing financial statements for both companies that follows: Could you determine the total liabilities for company PZ under the proportionate consolidation method for 2019?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    pz_total_liabilities_2019 = 900  # Total liabilities for company PZ in 2019\n    pz_interest_in_t_internet = 0.5  # Ownership interest in T-internet company in 2019\n    t_internet_total_liabilities = 650  # Total liabilities for T-internet company in 2019\n\n    # Calculate the total liabilities under the proportionate consolidation method\n    proportionate_liabilities = t_internet_total_liabilities * pz_interest_in_t_internet\n    total_liabilities = pz_total_liabilities_2019 + proportionate_liabilities\n\n    # Return answer\n    return total_liabilities\n```"
        ]
    },
    {
        "tables": [
            "|     |             |\n|-----|-------------|\n| Revenue | $5,000,000 |\n| Cost of goods sold | $3,000,000 |\n| SG&A | $100,000 |\n| Interest expense | $200,000 |\n| Tax expense | $100,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-548",
        "python_solution": "",
        "ground_truth": null,
        "question": "In this document, it is revealed that the operating income amounts to:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 5000000\n    cost_of_goods_sold = 3000000\n    sga = 100000\n    \n    # Do math calculation to get the answer\n    gross_profit = revenue - cost_of_goods_sold\n    operating_income = gross_profit - sga\n    \n    # return answer\n    return operating_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-549",
        "python_solution": "",
        "ground_truth": null,
        "question": "A risk analyst calculates daily variance hth_tht\u200b using a GARCH method on daily yield rt:ht=\u03b10\u2004+\u03b11rt\u221212+\u03b2ht\u22121,\u2004with\u2004\u03b10=0.005,\u03b11\u2004=0.04,\u03b2=0.94r_t:h_t=\\alpha_0\\;+\\alpha_1r_{t-1}^2+\\beta h_{t-1},\\;with\\;\\alpha_0=0.005,\u03b11\\;=0.04,\\beta=0.94rt\u200b:ht\u200b=\u03b10\u200b+\u03b11\u200brt\u221212\u200b+\u03b2ht\u22121\u200b,with\u03b10\u200b=0.005,\u03b11\u200b=0.04,\u03b2=0.94. The long-term annual volatility is roughly.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    alpha0 = 0.005\n    alpha1 = 0.04\n    beta = 0.94\n    \n    # Calculate the long-term variance\n    long_term_variance = alpha0 / (1 - alpha1 - beta)\n    \n    # Calculate the long-term volatility (standard deviation)\n    long_term_volatility = long_term_variance ** 0.5\n    \n    # Convert daily volatility to annual volatility\n    annual_volatility = long_term_volatility * (252 ** 0.5)\n    \n    # return answer\n    return annual_volatility\n```"
        ]
    },
    {
        "tables": [
            "| Year ending 31 December | 2012 |\n|-------------------------|------|\n| Revenue                | 2,230|\n| Operating income       | 322  |\n| Net income             | 102  |\n| Total assets           | 2,100|\n| Shareholders' equity   | 950  |"
        ],
        "topic": "Accounting",
        "question_id": "test-550",
        "python_solution": "",
        "ground_truth": null,
        "question": "P-tech Corporation, adheres to US GAAP and has been growing by purchasing other web-based businesses, the biggest of which is Surge web business. Currently, P-tech Corporation is establishing a 50/50 joint venture with Bravo company where they will together govern Surge web business. P-tech's accounting strategy for the joint venture will employ the equity method. Bravo company, complying with IFRS, will apply the proportionate consolidation method for their joint venture accounting. Joseph, a CFA, is an employee at Investment Equity Corp, and he has predicted the financial specifics for the joint venture in 2012. Joseph is making his approximations regarding each company\u2019s profits and overall financial performance. In light of Joseph's projections, what will the Surge web business's total asset (in \uffe5 millions) be at the end of 2012, as noted in the chart below, that Bravo company will include in their consolidated financial statements?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_tech_total_assets = 2100  # in \u00a5 millions\n    joint_venture_ratio = 0.5  # 50/50 joint venture\n\n    # Do math calculation to get the answer\n    surge_web_business_total_assets = p_tech_total_assets * joint_venture_ratio\n\n    # return answer\n    return surge_web_business_total_assets\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-551",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a property generates an annual yield of 19.9%, shows a standard deviation of returns of 18.5%, and has a market correlation of 0.9, with the market's standard deviation of returns being 15.9% and a risk-free rate of 1%, what is the beta for this property?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    property_yield = 0.199  # 19.9%\n    property_std_dev = 0.185  # 18.5%\n    market_correlation = 0.9\n    market_std_dev = 0.159  # 15.9%\n    risk_free_rate = 0.01  # 1%\n    \n    # Do math calculation to get the answer\n    property_beta = market_correlation * (property_std_dev / market_std_dev)\n    \n    # return answer\n    return property_beta\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-552",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following calculations have been derived for XYZ Inc.: Demand curve: P = 150 \u2013 5 \u00d7 Q Total revenue curve: TR = 150 \u00d7 Q \u2013 5 \u00d7 Q2 Marginal revenue curve: MR = 150 \u2013 10 \u00d7 Q Total cost curve: TC = Q3 \u2013 10 \u00d7 Q2 + 73 \u00d7 Q + 120 Average cost curve: AC = Q2 \u2013 10 \u00d7 Q + 73 + 120/Q Marginal cost curve: MC = 3 \u00d7 Q2 \u2013 20 \u00d7 Q + 73 P stands for price per unit, and Q stands for cost per unit. What output (in units) will maximize the profit for XYZ Inc.?",
        "output": [
            "To find the output that maximizes profit for XYZ Inc., we need to equate Marginal Revenue (MR) and Marginal Cost (MC) because profit is maximized when MR equals MC. Here's how we can do it in Python:\n\n```python\ndef solution():\n    # Define variables name and value\n    # Given curves:\n    # - Marginal revenue curve: MR = 150 \u2013 10 \u00d7 Q\n    # - Marginal cost curve: MC = 3 \u00d7 Q2 \u2013 20 \u00d7 Q + 73\n\n    # Objective is to set MR = MC and solve for Q\n    \n    # Import necessary module\n    import numpy as np\n\n    # Set up coefficients for the quadratic equation that comes from equating MR and MC\n    # The equation will be: 3Q^2 - 10Q - 77 = 0 (After equating MR and MC and rearranging terms)\n    a = 3  # Coefficient for Q^2\n    b = -10  # Coefficient for Q\n    c = -77  # Constant term\n\n    # Use the quadratic formula to solve for Q: Q = [-b \u00b1 sqrt(b^2 - 4ac)] / (2a)\n    discriminant = b**2 - 4*a*c\n    Q1 = (-b + np.sqrt(discriminant)) / (2*a)\n    Q2 = (-b - np.sqrt(discriminant)) / (2*a)\n\n    # Since quantity cannot be negative, we select the positive root\n    if Q1 >= 0:\n        Q_max = Q1\n    elif Q2 >= 0:\n        Q_max = Q2\n    else:\n        print(\"No positive solution for Q\")\n        return None\n\n    # Return the quantity that maximizes profit\n    return round(Q_max, 2)  # Rounded to 2 decimal places\n\n# Execute the function to get the answer\nQ_max = solution()\nprint(\"The output that maximizes profit is\", Q_max)\n```\n\nThis Python program calculates the quantity (`Q`) that maximizes profit for XYZ Inc. by equating the marginal revenue (MR) and marginal cost (MC), and then solving for `Q` using the quadratic formula."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-553",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher is analyzing a collection that includes 2,500 non-prime mortgages and 800 prime home loans. Out of the non-prime mortgages, 500 are delayed in their payments. Out of the prime home loans, 64 are delayed in their payments. If the researcher randomly picks a home loan from the collection and it is presently delayed on its payments, what is the likelihood that it is a non-prime mortgage?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_non_prime_mortgages = 2500\n    total_prime_home_loans = 800\n    delayed_non_prime_mortgages = 500\n    delayed_prime_home_loans = 64\n\n    # Do math calculation to get the answer\n    total_delayed_loans = delayed_non_prime_mortgages + delayed_prime_home_loans\n    likelihood_non_prime = delayed_non_prime_mortgages / total_delayed_loans\n\n    # return answer\n    return likelihood_non_prime\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-554",
        "python_solution": "",
        "ground_truth": null,
        "question": "There were no additions to or subtractions from the portfolio during the year. Fees for administration are determined by the value at the end of the period. The fees for administration and incentive are computed separately. What's the return after deductions for the client given the following details: Starting portfolio assets valued at $100M, portfolio assets at the period's close (prior to fee deductions) amounting to $110M, a management fee pegged to the assets under management at 2%, an incentive fee based on the gains of 20%, and a soft hurdle rate of 8%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    starting_assets = 100000000  # Starting portfolio assets valued at $100M\n    ending_assets = 110000000  # Portfolio assets at the period's close (prior to fee deductions) amounting to $110M\n    management_fee_rate = 0.02  # Management fee pegged to the assets under management at 2%\n    incentive_fee_rate = 0.20  # Incentive fee based on the gains of 20%\n    hurdle_rate = 0.08  # Soft hurdle rate of 8%\n\n    # Do math calculation to get the answer\n    returns_before_fees = (ending_assets - starting_assets) / starting_assets\n    management_fee = ending_assets * management_fee_rate\n    incentive_fee = max(0, returns_before_fees - hurdle_rate) * ending_assets * incentive_fee_rate\n    total_fees = management_fee + incentive_fee\n    net_returns = (ending_assets - total_fees - starting_assets) / starting_assets\n\n    # return answer\n    return net_returns\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-555",
        "python_solution": "",
        "ground_truth": null,
        "question": "If two stocks have identical volatility and a correlation of -0.5, what is their minimum variance hedge ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = -0.5  # Correlation between the two stocks\n    variance_ratio = 1   # Ratio of variances (identical volatility means ratio of 1)\n\n    # Do math calculation to get the answer\n    hedge_ratio = correlation * variance_ratio\n    \n    # return answer\n    return hedge_ratio\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-556",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Thompson plans to secure a three-month loan using an interest-rate futures contract and decides to sell the interest rate futures contract at 98.00. Then, after six months, he gets a loan directly from the market at 2.4%, and undoes the hedge at 97.00. What would be the overall borrowing rate throughout this procedure?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    futures_price_sold = 98.00\n    futures_price_unwound = 97.00\n    loan_interest_rate = 0.024  # 2.4%\n    loan_duration = 0.5  # 6 months is equivalent to half a year\n    \n    # Do math calculation to get the answer\n    futures_market_value_change = futures_price_unwound - futures_price_sold\n    effective_interest_rate_due_to_hedge = (1 - (futures_price_unwound / futures_price_sold)) / loan_duration\n    overall_borrowing_rate = loan_interest_rate - effective_interest_rate_due_to_hedge\n    \n    # Convert the overall borrowing rate to percentage\n    overall_borrowing_rate_percentage = round(overall_borrowing_rate * 100, 2)\n    \n    # return answer\n    return overall_borrowing_rate_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-557",
        "python_solution": "",
        "ground_truth": null,
        "question": "Conservative Fund that has USD 50 million in assets has been performing poorly recently, prompting the institutional sales team to suggest a merger with Assertive Fund, a larger fund valued at USD 200 million. Conservative Fund's returns are usually distributed with an average of 3% and a standard deviation of 7%. As for Assertive Fund, its returns follow a normal distribution with an average of 7% and a standard deviation of 15%. The top executives have tasked a financial analyst to calculate the possibility that the returns on the merged portfolio might surpass 26%. Given that the returns on both funds don't influence each other, how would the analyst estimate the chances of the returns on the merged fund exceeding 26%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    conservative_fund_assets = 50000000\n    assertive_fund_assets = 200000000\n    conservative_fund_return_mean = 0.03\n    conservative_fund_return_std_dev = 0.07\n    assertive_fund_return_mean = 0.07\n    assertive_fund_return_std_dev = 0.15\n    \n    # Calculate the merged portfolio return mean and standard deviation\n    merged_portfolio_return_mean = (conservative_fund_assets * conservative_fund_return_mean + assertive_fund_assets * assertive_fund_return_mean) / (conservative_fund_assets + assertive_fund_assets)\n    merged_portfolio_return_var = (conservative_fund_assets**2 * conservative_fund_return_std_dev**2 + assertive_fund_assets**2 * assertive_fund_return_std_dev**2) / (conservative_fund_assets**2 + assertive_fund_assets**2)\n    merged_portfolio_return_std_dev = merged_portfolio_return_var**0.5\n    \n    # Use a normal distribution to estimate the probability of returns exceeding 26%\n    from scipy.stats import norm\n    probability = 1 - norm.cdf(0.26, loc=merged_portfolio_return_mean, scale=merged_portfolio_return_std_dev)\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-558",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment manager achieved a return rate of 15.5% on a portfolio with a beta of 1.2. If the risk-less return rate is 2.5% and the market return stands at 11.8%, what does Jensen's alpha for the portfolio amount to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_return_rate = 0.155  # 15.5%\n    beta = 1.2\n    risk_less_return_rate = 0.025  # 2.5%\n    market_return_rate = 0.118  # 11.8%\n\n    # Do math calculation to get the answer\n    jensens_alpha = portfolio_return_rate - risk_less_return_rate - beta * (market_return_rate - risk_less_return_rate)\n\n    # return answer\n    return jensens_alpha\n```"
        ]
    },
    {
        "tables": [
            "|     | Financial Statement of Company M ($ million) |\n| --- | -------------------------------------------- |\n| Net income | 4,500 |\n| Sales | 40,000 |\n| Total assets, average during year | 50,020 |\n| Shareholders' equity, beginning of year | 39,080 |\n| Dividends paid | 200 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-559",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided in the subsequent table, what is the sustainable growth of Company N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 4500  # in millions\n    dividends_paid = 200  # in millions\n    total_assets = 50020  # in millions\n    shareholders_equity_beginning_of_year = 39080  # in millions\n    \n    # Do math calculation to get the answer\n    retention_ratio = (net_income - dividends_paid) / net_income\n    asset_turnover = 40000 / total_assets\n    financial_leverage = total_assets / shareholders_equity_beginning_of_year\n    sustainable_growth_rate = retention_ratio * asset_turnover * financial_leverage\n    \n    # Convert the sustainable growth rate to a percentage\n    sustainable_growth_rate_percentage = sustainable_growth_rate * 100\n    \n    # return answer\n    return sustainable_growth_rate_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-560",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a corporation has 1 million shares in circulation and earnings of \u00a32 million, and decides to use \u00a310 million of unused cash to buy back shares on the open market at a trading price of \u00a350 per share, what would be the corporation's earnings per share after the entire \u00a310 million of unused cash is used to buy back shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_shares = 1000000\n    initial_earnings = 2000000\n    buyback_cash = 10000000\n    trading_price = 50\n    \n    # Calculate the number of shares to buy back\n    shares_to_buyback = buyback_cash // trading_price\n    \n    # Calculate the remaining shares after buyback\n    remaining_shares = initial_shares - shares_to_buyback\n    \n    # Calculate earnings per share after buyback\n    earnings_per_share = initial_earnings / remaining_shares\n    \n    # return answer\n    return earnings_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-561",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we presume that the market interest rate abides by the mean reversion law, with the long-term average interest rate at 4%, the current interest rate at 3.5%, and a mean reverting rate of 0.3, what will be the forecasted market interest rate for the subsequent period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    long_term_average_interest_rate = 0.04\n    current_interest_rate = 0.035\n    mean_reverting_rate = 0.3\n    \n    # Do math calculation to get the answer\n    forecasted_market_interest_rate = current_interest_rate + mean_reverting_rate * (long_term_average_interest_rate - current_interest_rate)\n    \n    # return answer\n    return forecasted_market_interest_rate\n```"
        ]
    },
    {
        "tables": [
            "|         | Beginning of the Year (C thousands) | End of the Year ( thousands) |\n|---------|------------------------------------|------------------------------|\n| Investment property | 1,000                            | 1,100                        |\n| Plant    | 1,000                            | 1,200                        |"
        ],
        "topic": "Accounting",
        "question_id": "test-562",
        "python_solution": "",
        "ground_truth": null,
        "question": "A firm adhering to International Financial Reporting Standards (IFRS) doesn't apply the cost model when valuing its investment properties and property, plant, and equipment. Data regarding an investment property and a plant are provided below: The firm will probably record a profit (in thousands) on its income statement for the year of:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_investment_property = 1000  # in thousands\n    end_investment_property = 1100  # in thousands\n    beginning_plant = 1000  # in thousands\n    end_plant = 1200  # in thousands\n    \n    # Calculate change in value for investment property and plant\n    change_in_investment_property = end_investment_property - beginning_investment_property\n    change_in_plant = end_plant - beginning_plant\n    \n    # Since the firm adheres to IFRS and doesn't apply the cost model, \n    # the changes in value are recognized as profit or loss in the income statement\n    profit = change_in_investment_property + change_in_plant\n    \n    # return answer\n    return profit\n```"
        ]
    },
    {
        "tables": [
            "| 10-Year Historical | | Current | Capital Market Expectations |\n| :---: | :---: | :---: | :---: |\n| **Average government bond yield:** 2.8% | | 10-year government bond yield: 2.3% |  |\n| **Average annual equity return:** 4.6% | | Year-over-year equity return: -9.4% |  |\n| **Average annual inflation rate:** 2.3% | | Year-over-year inflation rate:  2.1% | Expected annual inflation: 2.3% |\n| **Equity market P/E (beginning of period):** 15x | | Current equity market P/E: 14.5x | Expected equity market P / E: 14.0x |\n| **Average annual dividend income return:** 2.6% | |  | Expected annual income return: 2.4% |\n| **Average annual real earnings growth:** 6.0% | | |Expected annual real earnings growth:  5.0% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-563",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier from Australia presently owns an equity portfolio worth A$240 million. He's contemplating adjusting the portfolio depending on the evaluation of the risk and return potential concerning the Australian economy. The details associated with the Australian investment markets and economy have all been compiled in this table: Utilizing the data in the table and the Grinold-Kroner model, what is the anticipated yearly equity risk premium?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_dividend_yield = 0.024\n    expected_earnings_growth = 0.05\n    expected_inflation = 0.023\n    current_equity_pe = 14.5\n    expected_equity_pe = 14.0\n    \n    # Calculate real earnings yield using Grinold-Kroner model\n    real_earnings_yield = (1 / current_equity_pe) + expected_earnings_growth\n    \n    # Calculate expected nominal earnings growth\n    nominal_earnings_growth = (1 + expected_inflation) * (1 + expected_earnings_growth) - 1\n    \n    # Calculate expected equity return using Grinold-Kroner model\n    expected_equity_return = current_dividend_yield + nominal_earnings_growth - (expected_equity_pe - current_equity_pe) / current_equity_pe\n    \n    # Calculate expected long-term government bond yield\n    expected_long_term_bond_yield = 0.023\n    \n    # Calculate equity risk premium\n    equity_risk_premium = expected_equity_return - expected_long_term_bond_yield\n    \n    # return answer\n    return equity_risk_premium\n```"
        ]
    },
    {
        "tables": [
            "|                            |   2018 |   2019 |\n|----------------------------|--------|--------|\n| Revenue                    | 5,000  | 7,000  |\n| Cost                       | 2,000  | 2,300  |\n| Operating income           | 3,000  | 4,700  |\n| Net profit                 | 1,650  | 2,300  |\n| Total assets               | 4,000  | 6,000  |\n| Total liabilities          | 1,200  | 900    |\n| Equity                     | 2,800  | 5,100  |",
            "|                       | 2018 | 2019 |\n|-----------------------|------|------|\n| Revenue               | 2000 | 2500 |\n| Cost                  | 1200 | 1300 |\n| Operating income      | 800  | 1200 |\n| Net profit            | 460  | 820  |\n| Dividends paid        | 230  | 410  |\n| Total assets          | 1000 | 1100 |\n| Total liabilities     | 600  | 650  |\n| Equity                | 400  | 450  |"
        ],
        "topic": "Accounting",
        "question_id": "test-564",
        "python_solution": "",
        "ground_truth": null,
        "question": "The education company ZP, which is based in China and follows IFRS, had a passive equity interest of 15% in U-web company in 2018. ZP decided to bump up its ownership interest to 50% at the beginning of 2019 through a cash purchase. Both companies have no intercompany transactions. The financial data for ZP and U-web companies are provided in the table below. Could you compute the net income of ZP company for 2019 assuming a significant influence over U-web company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    zp_revenue_2019 = 7000\n    zp_cost_2019 = 2300\n    zp_operating_income_2019 = 4700\n    zp_net_profit_2019 = 2300\n    \n    u_web_revenue_2019 = 2500\n    u_web_cost_2019 = 1300\n    u_web_operating_income_2019 = 1200\n    u_web_net_profit_2019 = 820\n    \n    # Calculate the share of U-web's net income attributable to ZP\n    # Since ZP has a 50% ownership interest in U-web, it has significant influence over U-web\n    # Therefore, ZP should account for its investment in U-web using the equity method\n    zp_share_u_web_net_income_2019 = u_web_net_profit_2019 * 0.5\n    \n    # Calculate the net income of ZP company for 2019\n    # This includes ZP's own net profit plus its share of U-web's net income\n    zp_net_income_2019 = zp_net_profit_2019 + zp_share_u_web_net_income_2019\n    \n    # return answer\n    return zp_net_income_2019\n```"
        ]
    },
    {
        "tables": [
            "|                                         |            |\n|-----------------------------------------|------------|\n| Exhibit 1. Company A Excerpt from Consolidated Income Statement Year|            |       \n| Ending 31 December 2013 ($ in millions) |            |       \n| Gross profit                            |6,290       |     \n| Royalty and commission income            |130         |      \n| Other operating income                   |140         |      \n| Other operating expenses                 |4,985       |      \n| Operating profit                         |906         |      \n| Interest income                          |37          |      \n| Interest expense                         |135         |      \n| Income before taxes                      |988         |      \n| Income taxes                             |257         |      \n| Net income                               |692         |      \n| Additional Information:                  |            |\n| Depreciation and amortization:  $264 million |264     |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-565",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided information, what is the EBITDA interest coverage ratio of company B?",
        "output": [
            "There seems to be a mistake in the question. The text mentions \"Company A\" but the question asks about \"Company B\". Since there's no information about Company B, I'll assume the question is about Company A. Here is the Python program to calculate the EBITDA interest coverage ratio:\n\n```python\ndef solution():\n    # Define variables name and value\n    operating_profit = 906  # in millions\n    depreciation_and_amortization = 264  # in millions\n    interest_expense = 135  # in millions\n\n    # Do math calculation to get the answer\n    ebitda = operating_profit + depreciation_and_amortization\n    interest_coverage_ratio = ebitda / interest_expense\n\n    # return answer\n    return interest_coverage_ratio\n```\n\nThis program calculates the EBITDA by adding the operating profit and depreciation & amortization, then calculates the interest coverage ratio by dividing the EBITDA by the interest expense. The returned value is the EBITDA interest coverage ratio."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-566",
        "python_solution": "",
        "ground_truth": null,
        "question": "Finally, David concentrates on predicting the anticipated returns from direct real estate investments. He reviews a decade's worth of data on returns from multifamily residential real estate. David doubts whether the fluctuations in the observed returns indicate smoothing. He applies a publicly available REIT index to eliminate the smoothing effect on the return flow and accurately represent the risk (gauge by standard deviation) related to multifamily residential real estate investment (the REIT index's variance for the measurement duration is 16; \u03bb is 0.8). What is David\u2019s adjusted standard deviation for multifamily properties for the investment duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    reported_variance = 16  # Variance of the REIT index\n    lambda_smoothing = 0.8  # Smoothing factor\n    \n    # Do math calculation to get the answer\n    true_variance = reported_variance / lambda_smoothing\n    adjusted_standard_deviation = true_variance ** 0.5\n    \n    # return answer\n    return adjusted_standard_deviation\n```"
        ]
    },
    {
        "tables": [
            "| Current industrial sector capitalization rate (\"cap\" rate) | 5.7% |\n|-----------------------------------------------------------|-----|\n| Expected cap rate at the end of the period                | 5.5% |\n| NOI growth rate (real)                                    | 1%   |\n| Inflation expectation                                     | 1.5% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-567",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher at a property investment company is trying to set predictions for the return rate of industrial properties for the upcoming year. He has gathered the following information: Calculate the anticipated return from the industrial sector properties based on the data presented.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_cap_rate = 0.057  # 5.7%\n    expected_cap_rate = 0.055  # 5.5%\n    noi_growth_rate_real = 0.01  # 1%\n    inflation_expectation = 0.015  # 1.5%\n\n    # Do math calculation to get the answer\n    anticipated_return = current_cap_rate + (expected_cap_rate - current_cap_rate) + noi_growth_rate_real + inflation_expectation\n    \n    # return answer\n    return anticipated_return\n```"
        ]
    },
    {
        "tables": [
            "|          | March 31,20X7                        | April 30,20X7                         |\n|----------|-----------------|---------------------------------|---------------|---------------------------------|\n|          | Share Price     | Number of Shares Outstanding(thousands) | Share Price   | Number of Shares Outstanding(thousands) |\n| Stock X  | $15             | 100                             | $20           | 100                             |\n| Stock Y  | $20             | 1,000                           | $30           | 1,000                           |\n| Stock Z  | $30             | 2,000                           | $25           | 2,000                           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-568",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided for the trio of shares listed in the chart, determine the return on the price-weighted index over a month's span.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    march_prices = {'X': 15, 'Y': 20, 'Z': 30}\n    march_shares = {'X': 100, 'Y': 1000, 'Z': 2000}\n    april_prices = {'X': 20, 'Y': 30, 'Z': 25}\n    \n    # Calculate the total market value for March and April\n    march_market_value = sum(march_prices[stock] * march_shares[stock] for stock in march_shares)\n    april_market_value = sum(april_prices[stock] * march_shares[stock] for stock in march_shares)\n    \n    # Calculate the return on the price-weighted index\n    return_on_index = (april_market_value - march_market_value) / march_market_value\n    \n    # Express the return as a percentage\n    return_on_index_percentage = return_on_index * 100\n    \n    # return answer\n    return return_on_index_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Coupon Rate | Time-to-Maturity | Spot Rates |\n|------|-------------|------------------|------------|\n| X    | 8%          | 3 years          | 8%         |\n| Y    | 7%          | 3 years          | 9%         |\n| Z    | 6%          | 3 years          | 10%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-569",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based upon the presented series of spot rates, what is the price of Bond Y if all three bonds pay their interest yearly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.07  # 7%\n    time_to_maturity = 3  # years\n    spot_rate = 0.09  # 9%\n    face_value = 100  # assuming a face value of $100\n    \n    # Do math calculation to get the answer\n    # calculate the present value of the bond\n    present_value = 0\n    for i in range(1, time_to_maturity + 1):\n        present_value += (coupon_rate * face_value) / (1 + spot_rate) ** i\n    present_value += face_value / (1 + spot_rate) ** time_to_maturity\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-570",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher compiled the following details about a business: The business has a taxable income of $40,000 and a pretax income of $50,000. The prevailing tax rate is 50% and the tax rate when the reversal happens will be 40%. What is the business's deferred tax liability at the close of the first year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    taxable_income = 40000\n    pretax_income = 50000\n    prevailing_tax_rate = 0.5\n    reversal_tax_rate = 0.4\n\n    # Do math calculation to get the answer\n    temporary_difference = pretax_income - taxable_income\n    deferred_tax_liability = temporary_difference * reversal_tax_rate\n\n    # return answer\n    return deferred_tax_liability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-571",
        "python_solution": "",
        "ground_truth": null,
        "question": "Summit Resale operates through internet for people on an agreed basis. Summit gets the items from the owners, puts them up for sale online, and earns a 25 percent commission for any items sold. Summit collects the entire amount from the buyer and pays the gross amount after commission to the owner. If items remain unsold, they are returned to the owner after 90 days. During 2019, Summit had these details: \u2022 Total sales price of items sold on agreed basis during 2019 was \u20ac2,000,000. \u2022 Total commissions that Summit retained during 2019 for these items totalled \u20ac500,000. How much revenue should Summit report on its 2019 income statement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_sales_price = 2000000\n    total_commissions = 500000\n    \n    # Do math calculation to get the answer\n    # Since the commission is 25% of the sales price, we can calculate the revenue as the total sales price\n    # Because the commission is already given, we don't need to calculate it, the revenue will be equal to the total sales price\n    revenue = total_sales_price\n    \n    # return answer\n    return revenue\n```"
        ]
    },
    {
        "tables": [
            "|                   | Asset A, Asset B | A and B |\n|-------------------|------------------|---------|\n| Standard deviation| 4.7%, 7.7%       |         |\n| Portfolio weight  | 0.4, 0.6         |         |\n| Correlation       |                  | 0.3     |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-572",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the historical data presented, what is the standard deviation for the two-asset portfolio displayed in the chart?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    std_dev_asset_a = 0.047  # Standard deviation of Asset A\n    std_dev_asset_b = 0.077  # Standard deviation of Asset B\n    weight_asset_a = 0.4     # Portfolio weight of Asset A\n    weight_asset_b = 0.6     # Portfolio weight of Asset B\n    correlation_ab = 0.3     # Correlation between Asset A and Asset B\n\n    # Do math calculation to get the answer\n    variance_asset_a = std_dev_asset_a ** 2\n    variance_asset_b = std_dev_asset_b ** 2\n    covariance_ab = std_dev_asset_a * std_dev_asset_b * correlation_ab\n    portfolio_variance = (weight_asset_a ** 2) * variance_asset_a + (weight_asset_b ** 2) * variance_asset_b + 2 * weight_asset_a * weight_asset_b * covariance_ab\n    portfolio_std_dev = portfolio_variance ** 0.5\n    \n    # return answer\n    return portfolio_std_dev\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-573",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2017, Company B had an inventory on hand of 30 days and aimed to reach the standard industry average of 28 days in 2018. The recent year's cost of goods sold was $1.2 million in 2017, and it was projected to lower to $0.35 million in 2018. What was the inventory change?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inventory_on_hand_2017 = 30\n    industry_average = 28\n    cost_of_goods_sold_2017 = 1200000\n    cost_of_goods_sold_2018 = 350000\n    \n    # Calculate days' inventory outstanding (DIO) for 2017\n    inventory_turnover_2017 = 365 / inventory_on_hand_2017\n    average_inventory_2017 = cost_of_goods_sold_2017 / inventory_turnover_2017\n    \n    # Calculate days' inventory outstanding (DIO) for 2018 (industry average)\n    inventory_turnover_2018 = 365 / industry_average\n    average_inventory_2018 = cost_of_goods_sold_2018 / inventory_turnover_2018\n    \n    # Calculate inventory change\n    inventory_change = average_inventory_2017 - average_inventory_2018\n    \n    # return answer\n    return inventory_change\n```"
        ]
    },
    {
        "tables": [
            "| Year | Investment Return |\n|------|-------------------|\n| 1    | $600 13%          |\n| 2    | $700 5%           |\n| 3    | $1,000 -1%        |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-574",
        "python_solution": "",
        "ground_truth": null,
        "question": "The fund managed by John displays the following returns for the first three years: What will the time-weighted rate of return be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    year1_return = 0.13\n    year2_return = 0.05\n    year3_return = -0.01\n    \n    # Do math calculation to get the answer\n    # Calculate the time-weighted rate of return using geometric mean\n    time_weighted_return = ((1 + year1_return) * (1 + year2_return) * (1 + year3_return)) ** (1/3) - 1\n    \n    # return answer\n    return time_weighted_return\n```\n\nThis Python program calculates the time-weighted rate of return using the geometric mean of the returns for each year. The time-weighted rate of return is a measure of the rate of return that takes into account the timing and amount of investments, and is often used to evaluate the performance of investment managers. The geometric mean is used because it is a better representation of the average return over multiple periods than the arithmetic mean."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-575",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming 260 days a year, an option on the Nikkei stock index has a strike price at 3,000 Brazilian reais (BRL) with a delta of 0.6 and an annual volatility on the index of 24%. What is the 10-day VaR at 95% confidence level, under the delta-normal assumptions?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    days_per_year = 260\n    strike_price = 3000  # in Brazilian reais (BRL)\n    delta = 0.6\n    annual_volatility = 0.24  # 24%\n    confidence_level = 0.95\n    time_horizon = 10  # in days\n\n    # Calculate daily volatility\n    daily_volatility = annual_volatility / (days_per_year ** 0.5)\n\n    # Calculate 10-day VaR under delta-normal assumptions\n    # First, calculate the Z-score corresponding to the 95% confidence level\n    # For a standard normal distribution, the Z-score for 95% confidence is approximately 1.645\n    z_score = 1.645\n\n    # Calculate VaR\n    value_at_risk = z_score * daily_volatility * (time_horizon ** 0.5) * strike_price * delta\n\n    # return answer\n    return value_at_risk\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-576",
        "python_solution": "",
        "ground_truth": null,
        "question": "The preferred stock of Alpha Enterprises is traded in the financial market for $88 per share. The annual dividend per share is always $6.60. What is the required rate of return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_price_per_share = 88\n    annual_dividend_per_share = 6.60\n    \n    # Do math calculation to get the answer\n    required_rate_of_return = (annual_dividend_per_share / market_price_per_share) * 100\n    \n    # return answer\n    return required_rate_of_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-577",
        "python_solution": "",
        "ground_truth": null,
        "question": "For a portfolio that consists of four investments, what is the number of unique covariance terms required to calculate the portfolio's return variance?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_investments = 4\n    \n    # Do math calculation to get the answer\n    # For a portfolio of n investments, the number of unique covariance terms is given by n*(n-1)/2\n    num_covariance_terms = num_investments * (num_investments - 1) // 2\n    \n    # return answer\n    return num_covariance_terms\n\n# Test the function\nprint(solution())\n```\n\nWhen you run this program, it calculates and prints the number of unique covariance terms required to calculate the portfolio's return variance for a portfolio consisting of four investments. The output should be `6`, indicating that six unique covariance terms are needed for a portfolio of four investments."
        ]
    },
    {
        "tables": [
            "| Acquisition cost | \u00a35,800,000 |\n| --- | --- |\n| Acquisition date | 1 January 2009 |\n| Patent expiration date | 31 December 2015 |\n| Total plant capacity of patented product | 40,000 units per year |\n| Production of patented product in fiscal year ended 31 December 2009 | 20,000 units |\n| Expected production of patented product during life of the patent | 175,000 units |"
        ],
        "topic": "Accounting",
        "question_id": "test-578",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a financial expert is examining the amortization of a product patent purchased by the Italian firm, MAKETTI S.p.A., what would be the 2009 fiscal year's amortization expense on the patent using the units-of-production approach, based on the patent information he has collected?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 5800000  # in pounds\n    total_expected_production = 175000  # units\n    production_in_2009 = 20000  # units\n\n    # Do math calculation to get the answer\n    amortization_rate_per_unit = acquisition_cost / total_expected_production\n    amortization_expense_2009 = amortization_rate_per_unit * production_in_2009\n\n    # return answer\n    return amortization_expense_2009\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-579",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the justified trailing P/E of the stock, considering that the firm's present intrinsic value and EPS stand at $25.62 and $4 respectively?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intrinsic_value = 25.62\n    eps = 4\n    \n    # Do math calculation to get the answer\n    justified_trailing_pe = intrinsic_value / eps\n    \n    # return answer\n    return justified_trailing_pe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-580",
        "python_solution": "",
        "ground_truth": null,
        "question": "A shareholder buys 100 stocks at a price of $40 for each. After exactly one year, this shareholder sells all of them for $41.50 per stock. On the same day of the sale, the shareholder gets dividends amounting to $200. What is the HPR on the investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price_per_stock = 40\n    number_of_stocks = 100\n    sale_price_per_stock = 41.50\n    dividend_amount = 200\n\n    # Do math calculation to get the answer\n    initial_investment = purchase_price_per_stock * number_of_stocks\n    sale_proceeds = sale_price_per_stock * number_of_stocks\n    capital_gain = sale_proceeds - initial_investment\n    total_return = capital_gain + dividend_amount\n    holding_period_return = (total_return / initial_investment)\n\n    # return answer\n    return holding_period_return\n```"
        ]
    },
    {
        "tables": [
            "|                        | 2018 | 2017 |\n|------------------------|------|------|\n| Cost of goods sold (COGS) | 50,800 | 48,500 |\n| Ending inventories | 10,550 | 10,000 |\n| LIFO reserve | 4,320 | 2,600 |"
        ],
        "topic": "Accounting",
        "question_id": "test-581",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the FIFO method's reported Cost of Goods Sold in 2018 by a firm adopting the LIFO method in \u00a3?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    LIFO_COGS_2018 = 50800\n    LIFO_reserve_2017 = 2600\n    LIFO_reserve_2018 = 4320\n    \n    # Do math calculation to get the answer\n    FIFO_COGS_2018 = LIFO_COGS_2018 - (LIFO_reserve_2018 - LIFO_reserve_2017)\n    \n    # return answer\n    return FIFO_COGS_2018\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-582",
        "python_solution": "",
        "ground_truth": null,
        "question": "How many exceptions in backtesting a VAR would we anticipate over a 250-day trading year if we hold a 90% confidence level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    confidence_level = 0.90\n    trading_days = 250\n    \n    # Do math calculation to get the answer\n    exceptions = trading_days * (1 - confidence_level)\n    \n    # return answer\n    return exceptions\n\nprint(solution())  # You can also print the solution if you want to see the result\n```"
        ]
    },
    {
        "tables": [
            "| Investment | Expected Return(%) | Expected Standard Deviation(%) |\n|------------|-------------------|--------------------------------|\n| 1          | 19                | 3                              |\n| 2          | 21                | 9                              |\n| 3          | 24                | 20                             |\n| 4          | 19                | 35                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-583",
        "python_solution": "",
        "ground_truth": null,
        "question": "As a risk-neutral investor, John Smith will use utility theory to select his investment portfolio. Given several investments with their expected return and expected standard deviation on the table, which one would he most probably invest in?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investments = {\n        1: {\"expected_return\": 0.19, \"std_dev\": 0.03},\n        2: {\"expected_return\": 0.21, \"std_dev\": 0.09},\n        3: {\"expected_return\": 0.24, \"std_dev\": 0.20},\n        4: {\"expected_return\": 0.19, \"std_dev\": 0.35},\n    }\n    \n    # As a risk-neutral investor, John Smith will choose the investment with the highest expected return\n    # regardless of the standard deviation.\n    \n    # Do math calculation to get the answer\n    best_investment = max(investments, key=lambda x: investments[x][\"expected_return\"])\n    \n    # return answer\n    return best_investment\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Buyer | Bid Size (# of shares) | Limit Price ($) | Seller | Offer Size (# of shares) | Limit Price ($) |\n|-------|------------------------|-----------------|--------|--------------------------|-----------------|\n| 1     | 500                    | 18.50           | 1      | 200                      | 20.20           |\n| 2     | 300                    | 18.90           | 2      | 300                      | 20.35           |\n| 3     | 400                    | 19.20           | 3      | 400                      | 20.50           |\n| 4     | 200                    | 20.10           | 4      | 100                      | 20.65           |\n| 5     | 100                    | 20.15           | 5      | 200                      | 20.70           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-584",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an investor places an immediate-or-cancel limit purchase order for 700 shares at a price of $20.50 in a market, what would probably be the average price the investor would be required to pay, considering the existing limit orders on its book for a specific stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bid_size = [500, 300, 400, 200, 100]\n    bid_price = [18.50, 18.90, 19.20, 20.10, 20.15]\n    ask_size = [200, 300, 400, 100, 200]\n    ask_price = [20.20, 20.35, 20.50, 20.65, 20.70]\n    order_size = 700\n    order_price = 20.50\n\n    # Initialize variables to keep track of the total shares bought and the total cost\n    total_shares_bought = 0\n    total_cost = 0\n\n    # Loop through the ask prices and sizes to match the order\n    for i in range(len(ask_price)):\n        if ask_price[i] <= order_price:\n            # Calculate the number of shares that can be bought at the current ask price\n            shares_bought = min(order_size - total_shares_bought, ask_size[i])\n\n            # Update the total shares bought and the total cost\n            total_shares_bought += shares_bought\n            total_cost += shares_bought * ask_price[i]\n\n            # If the order is fully filled, break the loop\n            if total_shares_bought == order_size:\n                break\n\n    # Calculate the average price paid\n    average_price = total_cost / total_shares_bought\n\n    # return answer\n    return average_price\n```"
        ]
    },
    {
        "tables": [
            "| 2015 | | 2014 |\n| --- | --- | --- |\n| Deferred tax assets $1,000,000 | | $800,000 |\n| Deferred tax liabilities $600,000 | | $700,000 |\n| Valuation allowance $500,000 | | $400,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-585",
        "python_solution": "",
        "ground_truth": null,
        "question": "How did the alterations in the firm's deferred tax accounts impact the net income of 2015 according to US GAAP?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    deferred_tax_assets_2015 = 1000000\n    deferred_tax_liabilities_2015 = 600000\n    valuation_allowance_2015 = 500000\n    deferred_tax_assets_2014 = 800000\n    deferred_tax_liabilities_2014 = 700000\n    valuation_allowance_2014 = 400000\n    \n    # Do math calculation to get the impact on net income\n    deferred_tax_assets_change = deferred_tax_assets_2015 - deferred_tax_assets_2014\n    deferred_tax_liabilities_change = deferred_tax_liabilities_2015 - deferred_tax_liabilities_2014\n    valuation_allowance_change = valuation_allowance_2015 - valuation_allowance_2014\n    net_income_impact = deferred_tax_assets_change - deferred_tax_liabilities_change - valuation_allowance_change\n    \n    # return answer\n    return net_income_impact\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n|-----|-----|-----|-----|-----|-----|\n| 20% | 4%  | -5% | 12% | 3%  | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-586",
        "python_solution": "",
        "ground_truth": null,
        "question": "The table underneath displays the monthly stock returns for Oak Inc. Based on the provided table, can you compute the standard deviation for Oak Inc.'s returns, considering that there are 6 observations in the population?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [0.20, 0.04, -0.05, 0.12, 0.03, 0.12]\n    \n    # Do math calculation to get the answer\n    # Calculate the mean of returns\n    mean_return = sum(returns) / len(returns)\n    \n    # Calculate the variance of returns\n    variance = sum((x - mean_return) ** 2 for x in returns) / len(returns)\n    \n    # Calculate the standard deviation of returns\n    std_dev = variance ** 0.5\n    \n    # return answer\n    return std_dev\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-587",
        "python_solution": "",
        "ground_truth": null,
        "question": "Smith is a tax consultant who offers tax consciousness guidance to individual patrons. One of Smith's patrons is Emma. Emma requests Smith to assess Mutual Fund B, which has an inherent gain of 10% of the concluding portfolio value. Emma requests Smith to determine a post-disposal yield over the latest three-year duration. Mutual Fund B showed after-tax yields of 9.0% in the first year, 5% in the second year, and 8% in the third year, and capital profits are taxed at a 25% pace. What is the yearly after-tax post-disposal yield measured by Smith?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    first_year_yield = 0.09\n    second_year_yield = 0.05\n    third_year_yield = 0.08\n    capital_gains_tax_rate = 0.25\n    inherent_gain_rate = 0.10\n    \n    # Do math calculation to get the answer\n    # Calculate the average annual return\n    average_annual_return = ((1 + first_year_yield) * (1 + second_year_yield) * (1 + third_year_yield)) ** (1/3) - 1\n    \n    # Calculate the after-tax post-disposal yield\n    after_tax_post_disposal_yield = (1 - capital_gains_tax_rate) * average_annual_return - inherent_gain_rate\n    \n    # return answer\n    return after_tax_post_disposal_yield\n```"
        ]
    },
    {
        "tables": [
            "| Quantity (unit) | Total Fixed Cost ($) | Total Variable Cost ($) |\n| --------------- | -------------------- | ---------------------- |\n| 0               | 400                  | 0                       |\n| 1               | 400                  | 100                    |\n| 2               | 400                  | 190                    |\n| 3               | 400                  | 275                    |\n| 4               | 400                  | 360                    |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-588",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company that makes machines is examining its cost structure, and here lays out the meticulous data as specified in the table: If the company fabricates 3 machines, what is the average fixed cost?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_fixed_cost = 400\n    quantity = 3\n    \n    # Do math calculation to get the answer\n    average_fixed_cost = total_fixed_cost / quantity\n    \n    # return answer\n    return average_fixed_cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-589",
        "python_solution": "",
        "ground_truth": null,
        "question": "Amelia, as a fund manager, trades off a $50,000 vega notional of a one-year variance swap on the S&P 500 at a strike of 20% (annual volatility mentioned). As half a year has gone by, the S&P 500 has seen a realized volatility of 16% (annualized). The same day, the fair strike of a new six-month variance swap on the S&P 500 stands at 19%. The present value of the variance swap that Amelia sold (taking into account the annual interest rate is 2.5%) is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    vega_notional = 50000\n    strike = 0.20\n    realized_volatility = 0.16\n    new_strike = 0.19\n    annual_interest_rate = 0.025\n    time_elapsed = 0.5\n    remaining_time = 1 - time_elapsed\n    \n    # Calculate variance and volatility\n    variance_realized = realized_volatility ** 2 * time_elapsed\n    variance_implied = new_strike ** 2 * remaining_time\n    \n    # Calculate the present value of the variance swap\n    present_value_variance = variance_implied - (strike ** 2 * remaining_time)\n    present_value_payment = (vega_notional / 100) * present_value_variance\n    pv = present_value_payment / (1 + annual_interest_rate) ** time_elapsed\n    \n    # return answer\n    return pv\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-590",
        "python_solution": "",
        "ground_truth": null,
        "question": "The yield-to-maturity of a bond, which is stated on a semiannual basis, is at 4.769%. What would this yield-to-maturity be if a financial expert were to adjust it to a monthly basis?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    semiannual_yield = 0.04769  # 4.769% semiannual yield-to-maturity\n    monthly_compounding_periods = 12\n    semiannual_compounding_periods = 2\n\n    # Do math calculation to get the answer\n    # First, convert semiannual yield to annual yield\n    annual_yield = (1 + semiannual_yield) ** semiannual_compounding_periods - 1\n    \n    # Next, convert annual yield to monthly yield\n    monthly_yield = (1 + annual_yield) ** (1 / monthly_compounding_periods) - 1\n\n    # Convert monthly yield to percentage\n    answer = round(monthly_yield * 100, 4)  # Round to four decimal places\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-591",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business released bonds worth $2,000,000 having a maturity of 20 years at 96. The business redeemed these bonds seven years down the line at 103, at a time when the unamortized discount stood at $39,000. What would probably be the loss reported by the business in the year these bonds were redeemed?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_value = 2000000\n    issue_price = 96  # as a percentage of bond value\n    redemption_price = 103  # as a percentage of bond value\n    years_until_maturity = 20\n    years_until_redemption = 7\n    unamortized_discount = 39000\n    \n    # Calculate the actual issue and redemption prices\n    actual_issue_price = (issue_price / 100) * bond_value\n    actual_redemption_price = (redemption_price / 100) * bond_value\n    \n    # Calculate the carrying value of the bond at redemption\n    carrying_value = actual_issue_price + unamortized_discount\n    \n    # Calculate the loss on redemption\n    loss_on_redemption = actual_redemption_price - carrying_value\n    \n    # return answer\n    return loss_on_redemption\n\nloss = solution()\nprint(\"The loss reported by the business in the year the bonds were redeemed is: \", loss)\n```"
        ]
    },
    {
        "tables": [
            "| Risk-free rate | 3% |\n| -- | -- |\n| Market risk premium | 7% |\n| Company A's beta | 1.1 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-592",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jessica has projected that corporation B will disburse dividends of $1.5 and $2.5 respectively at the close of the first and second year. After the second year, dividends are anticipated to increase at a rate of 5%. Other relevant details can be found in the table below. What is the inherent value of the corporation's stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.03\n    market_risk_premium = 0.07\n    beta = 1.1\n    dividend_year1 = 1.5\n    dividend_year2 = 2.5\n    growth_rate = 0.05\n    \n    # Calculate the cost of equity using CAPM\n    cost_of_equity = risk_free_rate + beta * market_risk_premium\n    \n    # Calculate the present value of the first and second year dividends\n    present_value_dividend_year1 = dividend_year1 / (1 + cost_of_equity)\n    present_value_dividend_year2 = dividend_year2 / (1 + cost_of_equity)**2\n    \n    # Calculate the present value of the perpetual growth period\n    present_value_perpetual_growth = (dividend_year2 * (1 + growth_rate)) / (cost_of_equity - growth_rate) / (1 + cost_of_equity)**2\n    \n    # Calculate the intrinsic value of the stock\n    intrinsic_value = present_value_dividend_year1 + present_value_dividend_year2 + present_value_perpetual_growth\n    \n    # return answer\n    return intrinsic_value\n```"
        ]
    },
    {
        "tables": [
            "|                                     |      |\n|-------------------------------------|------|\n| Cost of the equipment $5,000,000    |      |\n| Estimated residual value $500,000   |      |\n| Expected useful life 9 years        |      |\n| Total productive capacity 950,000 units |      |\n| Production in FY2015 150,000 units  |      |\n| Expected production for the next 9 years 100,000 units each year |      |"
        ],
        "topic": "Accounting",
        "question_id": "test-593",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the straight-line method, what is the annual depreciation expense for a machine purchased in Jan. 2015, according to the applicable information?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_equipment = 5000000\n    estimated_residual_value = 500000\n    expected_useful_life = 9\n    \n    # Do math calculation to get the answer\n    annual_depreciation_expense = (cost_of_equipment - estimated_residual_value) / expected_useful_life\n    \n    # return answer\n    return annual_depreciation_expense\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-594",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood of drawing one of the 3 marked balls if 600 ping pong balls are stored in a dark container?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_balls = 600\n    marked_balls = 3\n    \n    # Do math calculation to get the answer\n    probability = marked_balls / total_balls\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-595",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a share costs $100.00 and it follows a single-stage binomial system with an increase of 1.05 and a decrease of 0.97, and if 1 million Bernoulli tests are done, and the mean final share price is $102.00, what is the likelihood of an increase (p)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_share_price = 100.00\n    increase_factor = 1.05\n    decrease_factor = 0.97\n    num_bernoulli_tests = 1000000\n    mean_final_share_price = 102.00\n    \n    # Do math calculation to get the answer\n    # The mean final share price can be calculated using the formula: (p * increase_factor + (1-p) * decrease_factor) * initial_share_price\n    # We can rearrange the formula to solve for p\n    p = (mean_final_share_price / initial_share_price - decrease_factor) / (increase_factor - decrease_factor)\n    \n    # return answer\n    return p\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-596",
        "python_solution": "",
        "ground_truth": null,
        "question": "A yearly annuity of $2,000 is expected to be received for a span of twenty years, with the initial payment anticipated to arrive at the conclusion of year thirteen. If we presume a 7% discount rate for the upcoming years, can you work out the present value of the annuity today?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_payment = 2000\n    years = 20\n    discount_rate = 0.07\n    years_until_first_payment = 13\n\n    # Do math calculation to get the answer\n    present_value = 0\n    for i in range(years):\n        present_value += annual_payment / (1 + discount_rate) ** (years_until_first_payment + i)\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-597",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the spot market, the exchange rate for AUD/USD is 0.50248. If we consider that the yearly interest rate is 3% for USD and 4% for AUD, what would be the one-year forward exchange rate for USD/AUD?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_exchange_rate_aud_usd = 0.50248\n    yearly_interest_rate_usd = 0.03\n    yearly_interest_rate_aud = 0.04\n    \n    # Do math calculation to get the answer\n    # Convert spot exchange rate from AUD/USD to USD/AUD\n    spot_exchange_rate_usd_aud = 1 / spot_exchange_rate_aud_usd\n    \n    # Calculate one-year forward exchange rate using interest rate parity formula\n    one_year_forward_exchange_rate = spot_exchange_rate_usd_aud * (1 + yearly_interest_rate_aud) / (1 + yearly_interest_rate_usd)\n    \n    # return answer\n    return one_year_forward_exchange_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-598",
        "python_solution": "",
        "ground_truth": null,
        "question": "An eternal bond is a financial instrument that delivers the same sum of money indefinitely. Suppose it provides a payment of $60 every month, and it has a yearly discount rate of 4% compounded on a monthly basis. What would be the current value of this bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_payment = 60  # The bond provides a payment of $60 every month\n    yearly_discount_rate = 0.04  # Yearly discount rate of 4%\n    monthly_discount_rate = (yearly_discount_rate / 12)  # Compounded on a monthly basis\n    number_of_payments = float('inf')  # Eternal bond, so the number of payments is infinite\n    \n    # Do math calculation to get the answer\n    # Formula for the present value of an infinite series: PV = PMT / r\n    present_value = monthly_payment / monthly_discount_rate\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-599",
        "python_solution": "",
        "ground_truth": null,
        "question": "Our projection is that 15% of secondary school pupils will participate in employment next year. If we randomly choose 5 secondary school pupils, what is the likelihood that precisely two of them will participate in employment next year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    participation_rate = 0.15  # 15% of secondary school pupils will participate in employment\n    total_pupils = 5  # Randomly choose 5 secondary school pupils\n    success_pupils = 2  # Precisely 2 of them will participate in employment\n    \n    # Do math calculation to get the answer\n    from math import comb\n    probability = comb(total_pupils, success_pupils) * (participation_rate ** success_pupils) * ((1 - participation_rate) ** (total_pupils - success_pupils))\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-600",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Sunshine Primary School provides its staff members with a defined benefit retirement plan. The school is in accordance with IFRS. The chosen details related to the pension plan in 2018 are this: the benefit obligations at the onset of the year being $3,000,000, the plan assets' fair value at the start of the year being $3,100,000 and the plan assets' book value equalling $2,800,000 at the beginning of 2018. So, what is the funded status of the scheme at the start of 2018?",
        "output": [
            "Here is the Python program to calculate the funded status of the scheme:\n```python\ndef solution():\n    # Define variables name and value\n    benefit_obligations = 3000000\n    plan_assets_fair_value = 3100000\n    plan_assets_book_value = 2800000\n    \n    # Do math calculation to get the answer\n    funded_status = plan_assets_fair_value - benefit_obligations\n    \n    # return answer\n    return funded_status\n```"
        ]
    },
    {
        "tables": [
            "| Year | Paid-In Capital | Mgmt Fees | Operating Results | NAV before Distributions | Carried Interest | Distributions | NAV after Distributions |\n|------|-----------------|-----------|-------------------|--------------------------|------------------|---------------|-------------------------|\n| 2005 | 40             | 0.8       | -3                | 36.2                     |                  |               | 36.2                    |\n| 2006 | 55             | 1.1       | 4                 | 54.1                     |                  |               | 54.1                    |\n| 2007 | 80             | 1.6       | 11                | 88.5                     |                  |               | 88.5                    |\n| 2008 | 100            | 2         | 27                | 133.5                    | 4.2              | 19            | 110.3                   |\n| 2009 | 125            | 2         | 34                | 167.3                    | 6.6              | 38            | 122.7                   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-601",
        "python_solution": "",
        "ground_truth": null,
        "question": "The pamphlet ends with the backstory of another private equity fund known as Pocatello Fund. As per the cash flows and distributions shown in Exhibit 1 for the initial five years of this fund, what was the total value paid into the Pocatello Fund in 2009?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    paid_in_capital_2009 = 125\n    \n    # Do math calculation to get the answer\n    total_value_paid_into_fund_2009 = paid_in_capital_2009\n    \n    # return answer\n    return total_value_paid_into_fund_2009\n```\n\nThis Python program defines the paid-in capital in 2009 and assigns it as the total value paid into the fund in 2009. Since the problem only asks for the paid-in capital in 2009, no additional calculations are needed. The program returns the paid-in capital value as the answer."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-602",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the spot market, the conversion rate from Canadian dollar to Euro stands at CAD/EUR 1.4808, while the rate for Japanese yen to Euro is JPY/EUR 132.3894. What is the JPY/CAD cross rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cad_to_eur = 1.4808\n    jpy_to_eur = 132.3894\n    \n    # Do math calculation to get the answer\n    # To calculate the JPY/CAD cross rate, we need to first find the EUR/CAD rate\n    # Then multiply it by the JPY/EUR rate\n    eur_to_cad = 1 / cad_to_eur\n    jpy_to_cad = jpy_to_eur * eur_to_cad\n    \n    # return answer\n    return jpy_to_cad\n```"
        ]
    },
    {
        "tables": [
            "| Market risk premium | 7.0% |\n|---|---|\n| Risk-free rate | 2.0% |\n| Comparable firm return | 10.4% |\n| Comparable firm debt-to-equity ratio | 1.0 |\n| Comparable firm tax rate | 40.0% |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-603",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given data, what is the company's unleveraged beta?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_risk_premium = 0.07\n    risk_free_rate = 0.02\n    comparable_firm_return = 0.104\n    debt_to_equity_ratio = 1.0\n    tax_rate = 0.4\n\n    # Do math calculation to get the answer\n    comparable_firm_beta = (comparable_firm_return - risk_free_rate) / market_risk_premium\n    unleveraged_beta = comparable_firm_beta / (1 + (1 - tax_rate) * debt_to_equity_ratio)\n\n    # return answer\n    return unleveraged_beta\n```"
        ]
    },
    {
        "tables": [
            "|  |  | Units Purchased and Sold (first quarter) |  |  |  |  |\n|---|---|---|---|---|---|---|\n|  |  | Date |  |  |  |  |\n|  |  | Units Purchased | Purchase Price | Units Sold | Selling Price | Inventory Units on Hand |\n|  | 2 Jan | 1,000 | $20.00 |  |  | 1,000 |\n|  | 17 Jan |  |  | 500 |  | $50.00, 500 |\n|  | 16 Feb | 1,000 | $18.00 |  |  | 1,500 |\n|  | 3 Mar |  |  | 1,200 |  | $50.00, 300 |\n|  | 13 Mar | 1,000 | $17.00 |  |  | 1,300 |\n|  | 23 Mar |  |  | 500 |  | $50.00, 800 |\n|  | End of quarter totals: | 3,000 | $55,000 | 2,200 |  | $110,000 |\n| Identifying Header | Exhibit 2: | Comparison of Inventory Methods and Models |  |  |  |  |\n|  | End of Quarter Valuations |  |  |  |  |  |\n| 31 March |  | Perpetual LIFO,Periodic LIFO, Perpetual FIFO |  |  |  |  |\n| Sales |  | $110,000 | $110,000 | $110,000 |  |  |\n|  | Ending inventory |  | $16,000 | $13,600 |  |  |\n|  | Cost of goods sold |  | $39,000 | $41,400 |  |  |\n|  | Gross profit |  | $71,000 | $68,600 |  |  |\n|  | Inventory turnover ratio | 279% |  |  |  |  |\n|  | Note: LIFO is last in, first out and FIFO is first in, first out. |  |  |  |  |  |"
        ],
        "topic": "Accounting",
        "question_id": "test-604",
        "python_solution": "",
        "ground_truth": null,
        "question": "A merchant is analyzing various methods for assessing inventory worth. The merchant has a single product that they trade for $50. What is the final inventory's value for the first quarter if the merchant employs a continuous LIFO inventory evaluation technique?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    units_purchased_jan = 1000\n    units_purchased_feb = 1000\n    units_purchased_mar = 1000\n    purchase_price_jan = 20\n    purchase_price_feb = 18\n    purchase_price_mar = 17\n    units_sold_jan = 500\n    units_sold_mar_3 = 1200\n    units_sold_mar_23 = 500\n\n    # Calculate remaining units in inventory as of March 31\n    remaining_units_jan = units_purchased_jan - units_sold_jan\n    remaining_units_feb = units_purchased_feb - (units_sold_mar_3 - remaining_units_jan)\n    remaining_units_mar = units_purchased_mar - units_sold_mar_23\n\n    # Calculate final inventory's value as of March 31 using perpetual LIFO method\n    final_inventory_value = (remaining_units_mar * purchase_price_mar) + (remaining_units_feb * purchase_price_feb)\n\n    # return answer\n    return final_inventory_value\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Most recent year's net income | $8.0 million | Cost of equity capital | 12.40% |\n|---|---|---|---|\n| Interest expense | $1.2 million | WACC | 10.60% |\n| Equity capital book value | $20.97 million | Tax rate | 40% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-605",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the multistage RI model for estimating the value of PBRI, John gathers extra data. He predicts a yearly growth rate for residual income of 15% over a prediction range of 5 years (Years 1 to 5) and decides to discount the final year\u2019s residual income as perpetuity. Considering the information in Exhibit 3, what is John's approximation of the contribution that the terminal value of the income stream will make to the present value of equity after five years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 8000000\n    equity_book_value = 20970000\n    cost_of_equity = 0.124\n    tax_rate = 0.4\n    growth_rate = 0.15\n    years = 5\n    wacc = 0.106\n    interest_expense = 1200000\n    \n    # Calculate initial residual income\n    initial_residual_income = net_income - (equity_book_value * cost_of_equity)\n    \n    # Calculate terminal residual income by growing the residual income for 5 years\n    terminal_residual_income = initial_residual_income * (1 + growth_rate) ** years\n    \n    # Calculate the terminal value as perpetuity using the terminal residual income and WACC\n    terminal_value = terminal_residual_income / wacc\n    \n    # Discount the terminal value back to the present value\n    present_terminal_value = terminal_value / (1 + wacc) ** years\n    \n    # return answer\n    return present_terminal_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-606",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the previous year, the total worth of end products and services in nation B escalated from $200 billion to $400 billion, with the GDP deflator surging from 120 to 170. Given this situation, by how much did the actual GDP of nation B increase?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    nominal_gdp_previous_year = 200  # in billion dollars\n    nominal_gdp_current_year = 400  # in billion dollars\n    gdp_deflator_previous_year = 120\n    gdp_deflator_current_year = 170\n\n    # Do math calculation to get the answer\n    real_gdp_previous_year = nominal_gdp_previous_year * (gdp_deflator_previous_year / 100)\n    real_gdp_current_year = nominal_gdp_current_year * (gdp_deflator_previous_year / 100) / (gdp_deflator_current_year / 100)\n    real_gdp_current_year_revised = nominal_gdp_current_year / (gdp_deflator_current_year / 100) * 100 \n    real_gdp_previous_year_revised = nominal_gdp_previous_year / (gdp_deflator_previous_year / 100) * 100\n    actual_gdp_increase = real_gdp_current_year_revised - real_gdp_previous_year_revised\n    \n    # return answer\n    return actual_gdp_increase\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-607",
        "python_solution": "",
        "ground_truth": null,
        "question": "What would the YTM be on a zero-coupon, semiannual compound, 10-year bond with a par value of $1,000 that's currently being traded at $366.21?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 1000  # Par value of the bond\n    market_price = 366.21  # Current market price of the bond\n    years_to_maturity = 10  # Years until the bond matures\n    compounding_frequency = 2  # Semiannual compounding\n    \n    # Do math calculation to get the answer\n    # Calculate the number of periods\n    n = years_to_maturity * compounding_frequency\n    \n    # Calculate the yield to maturity (YTM)\n    ytm = (par_value / market_price) ** (1 / n) - 1\n    \n    # Convert the YTM to an annual rate\n    annual_ytm = (1 + ytm) ** compounding_frequency - 1\n    \n    # Express the YTM as a percentage\n    ytm_percentage = annual_ytm * 100\n    \n    # return answer\n    return ytm_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-608",
        "python_solution": "",
        "ground_truth": null,
        "question": "The S&P 500 index currently stands at 1,457, with each futures contract representing 250 times the index. An equity portfolio only long with a market value of USD 300,100,000 has a beta of 1.1. In order to lower the portfolio beta to 0.75, how many S&P futures contracts should be sold?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_index = 1457\n    contract_multiplier = 250\n    portfolio_value = 300100000\n    current_beta = 1.1\n    target_beta = 0.75\n\n    # Do math calculation to get the answer\n    current_portfolio_exposure = portfolio_value * current_beta\n    target_portfolio_exposure = portfolio_value * target_beta\n    exposure_reduction_needed = current_portfolio_exposure - target_portfolio_exposure\n    notional_value_per_contract = current_index * contract_multiplier\n    number_of_contracts_to_sell = exposure_reduction_needed / notional_value_per_contract\n\n    # return answer\n    return abs(round(number_of_contracts_to_sell))\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-609",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert is aiming to determine the worth of a 1-year European call option using the BSM model. He has gathered the following data: the present stock price is $90, the strike price is $75, the risk-free rate calculated through continuous compounding is 4%, and the yearly volatility rate is 20%. What would be the call option's value? N(-1.21) =0.1131; N(-1.01) =0.1562.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 90  # present stock price\n    K = 75  # strike price\n    r = 0.04  # risk-free rate\n    sigma = 0.20  # yearly volatility rate\n    T = 1  # time to maturity in years\n\n    # Calculate d1 and d2\n    d1 = (np.log(S / K) + (r + sigma ** 2 / 2) * T) / (sigma * np.sqrt(T))\n    d2 = d1 - sigma * np.sqrt(T)\n\n    # Given values for cumulative distribution function\n    N_d1 = 1 - 0.1131  # N(1.21) = 1 - N(-1.21)\n    N_d2 = 1 - 0.1562  # N(1.01) = 1 - N(-1.01)\n\n    # Do math calculation to get the answer\n    call_option_value = S * N_d1 - K * np.exp(-r * T) * N_d2\n\n    # return answer\n    return call_option_value\n```\n\nNote: This solution uses the Black-Scholes-Merton (BSM) model formula for a European call option, which is:\n\nC(S,t) = S \\* N(d1) - K \\* e^(-r \\* T) \\* N(d2)\n\nwhere:\n\n* C(S,t) is the value of the call option\n* S is the current stock price\n* K is the strike price\n* r is the risk-free rate\n* T is the time to maturity\n* N(d1) and N(d2) are the cumulative distribution functions of the standard normal distribution\n* d1 and d2 are the parameters of the BSM model\n\nThis solution uses the given values for N(-1.21) and N(-1.01) to calculate N(d1) and N(d2), and then plugs these values into the BSM formula to calculate the call option value."
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-610",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given that a chart from a credit reporting agency indicates that the count of A-ranked entities that upgraded to AAA is 1, those which advanced to AA were 6, those who maintained at A were 41, those who were demoted to BBB were 2, and those that defaulted were 3. Assuming a fresh entity with an A grade credit score, what is the chance that it will experience a reduction in rating or end up defaulting after one year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    upgraded_to_AAA = 1\n    advanced_to_AA = 6\n    maintained_at_A = 41\n    demoted_to_BBB = 2\n    defaulted = 3\n    \n    # Calculate the total number of A-ranked entities\n    total_entities = upgraded_to_AAA + advanced_to_AA + maintained_at_A + demoted_to_BBB + defaulted\n    \n    # Calculate the number of entities that experienced a reduction in rating or defaulted\n    reduced_or_defaulted = demoted_to_BBB + defaulted\n    \n    # Calculate the probability of experiencing a reduction in rating or defaulting\n    probability = reduced_or_defaulted / total_entities\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [
            "| Date | November 2010 Quantity | November 2010 Price | December 2010 Quantity | December 2010 Price |\n|------|-----------------|-----------------|------------------|------------------|\n| Sugar| 70kg           | \u00a30.90/kg        | 120kg            | \u00a31.00/kg         |\n| Cotton| 60kg           | \u00a30.60/kg        | 50kg             | \u00a30.80/kg         |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-611",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of the Paasche index for the consumption basket of December displayed in Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sugar_november_2010_quantity = 70  # kg\n    sugar_november_2010_price = 0.90  # \u00a3/kg\n    sugar_december_2010_quantity = 120  # kg\n    sugar_december_2010_price = 1.00  # \u00a3/kg\n\n    cotton_november_2010_quantity = 60  # kg\n    cotton_november_2010_price = 0.60  # \u00a3/kg\n    cotton_december_2010_quantity = 50  # kg\n    cotton_december_2010_price = 0.80  # \u00a3/kg\n\n    # Calculate the total value for the base period (November 2010) using base period prices and base period quantities\n    total_value_november_2010 = (sugar_november_2010_quantity * sugar_november_2010_price) + (cotton_november_2010_quantity * cotton_november_2010_price)\n    \n    # Calculate the total value for the current period (December 2010) using current period prices and current period quantities\n    total_value_december_2010_current_prices = (sugar_december_2010_quantity * sugar_december_2010_price) + (cotton_december_2010_quantity * cotton_december_2010_price)\n    \n    # Calculate the total value for the current period (December 2010) using base period prices and current period quantities\n    total_value_december_2010_base_prices = (sugar_december_2010_quantity * sugar_november_2010_price) + (cotton_december_2010_quantity * cotton_november_2010_price)\n    \n    # Calculate the Paasche index for the consumption basket\n    paasche_index = (total_value_december_2010_current_prices / total_value_december_2010_base_prices) * 100\n    \n    # return the Paasche index\n    return paasche_index\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-612",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the business boosts its dividend payout proportion to 40% and employs a necessary return of 12.4%, what would be the justified forward P/E ratio based on the compiled information on the business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_payout_ratio = 0.4  # 40%\n    required_return = 0.124  # 12.4%\n    \n    # Do math calculation to get the answer\n    justified_forward_pe_ratio = 1 / (required_return * (1 - dividend_payout_ratio))\n    \n    # return answer\n    return justified_forward_pe_ratio\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "|                   | Fund X | Fund Y | Fund Z | Benchmark |\n|-------------------|--------|--------|--------|-----------|\n| Sharpe ratio (SR) | 0.45   | 0.50   | 0.49   | 0.44      |\nNote: Data are based on a risk-free rate of 2.3%."
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-613",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson requests his research team to generate risk and anticipated return predictions for Funds X, Y, and Z as well as the benchmark, shown in Exhibit 1. Johnson opts to introduce a fourth fund to his group, Fund W, that will utilize the same benchmark embedded in Exhibit 1. Given the information from Exhibit 1, what would be the Sharpe ratio if Fund W, which Johnson estimates to have an information ratio of 0.35, is merged with a fund that mimics the benchmark?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    information_ratio = 0.35\n    benchmark_sharpe_ratio = 0.44\n    \n    # Do math calculation to get the answer\n    # The Sharpe Ratio of the new portfolio is the square root of the sum of the squares of the information ratio of Fund W and the Sharpe Ratio of the benchmark\n    new_sharpe_ratio = (information_ratio ** 2 + benchmark_sharpe_ratio ** 2) ** 0.5\n    \n    # return answer\n    return new_sharpe_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-614",
        "python_solution": "",
        "ground_truth": null,
        "question": "The debt-to-asset ratio is: total liabilities: $200 short term debt: $10 long-term debt: $100 total equity: $300.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_liabilities = 200\n    short_term_debt = 10\n    long_term_debt = 100\n    total_equity = 300\n    \n    # Do math calculation to get the answer\n    debt_to_asset_ratio = (short_term_debt + long_term_debt) / (total_liabilities + total_equity)\n    \n    # return answer\n    return debt_to_asset_ratio\n```\n\nThis Python program will calculate the debt-to-asset ratio by dividing the sum of short-term and long-term debt by the sum of total liabilities and total equity. The result will be a decimal value between 0 and 1 representing the ratio of debt to total assets."
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-615",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial advisor is determining the beta of a collection of large-cap industrial firm shares. The advisor establishes that the correlation between the returns from the collection and the returns from its reference point is 0.8, the fluctuation of collection returns is 5%, and the fluctuation of the reference point is 4%. What is the beta of the collection in relation to the reference point?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.8\n    standard_deviation_collection = 0.05\n    standard_deviation_reference_point = 0.04\n    \n    # Do math calculation to get the answer\n    beta = (correlation * standard_deviation_collection) / standard_deviation_reference_point\n    \n    # return answer\n    return beta\n\nresult = solution()\nprint(\"The final answer is\", result) \n```"
        ]
    },
    {
        "tables": [
            "| Balances as of Year Ended 31 December | 2009 | 2010 |\n| ------------------------------------- | ---- | ---- |\n| Retained earnings                     | 120  | 145  |\n| Accounts receivable                   | 38   | 43   |\n| Inventory                             | 45   | 48   |\n| Accounts payable                      | 36   | 29   |"
        ],
        "topic": "Accounting",
        "question_id": "test-616",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collected the following data from a corporation's 2010 financial reports (in $ millions): In 2010, the corporation declared and dispersed cash dividends of $10 million, and logged a depreciation expense of $25 million. The corporation classifies dividends paid as a financing activity. What was the corporation\u2019s 2010 operational cash flow (in $ millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    retained_earnings_2010 = 145\n    retained_earnings_2009 = 120\n    accounts_receivable_2010 = 43\n    accounts_receivable_2009 = 38\n    inventory_2010 = 48\n    inventory_2009 = 45\n    accounts_payable_2010 = 29\n    accounts_payable_2009 = 36\n    cash_dividends = 10\n    depreciation_expense = 25\n\n    # Do math calculation to get the answer\n    net_income = retained_earnings_2010 - retained_earnings_2009 + cash_dividends\n    operating_cash_flow = net_income + depreciation_expense - (accounts_receivable_2010 - accounts_receivable_2009) - (inventory_2010 - inventory_2009) + (accounts_payable_2009 - accounts_payable_2010)\n    \n    # return answer\n    return operating_cash_flow\n```"
        ]
    },
    {
        "tables": [
            "| - |  Time=0 | Time=1 | Time=2 |\n|---|:---:|:---:|:---:|\n| - | S0=100 | Su=110 | Suu=121 |\n| - |-| Sd=92 | Sud,du=101.20 |\n| - |-| - | Sdd=84.64 |"
        ],
        "topic": "Accounting",
        "question_id": "test-617",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that the price of a bond over the next two periods is detailed below. The starting value of the bond is $100. The likelihood of a rise in any given period is 40% and the chance of a fall in any given period is 60%. If we apply the binomial model, what is the likelihood that the bond's price will reach $101.20 after two periods?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_rise = 0.4  # probability of a rise in any given period\n    prob_fall = 0.6  # probability of a fall in any given period\n    \n    # The bond's price will reach $101.20 after two periods only if it follows the path Sud or du\n    # The probability of the path Sud is the product of the probabilities of a fall followed by a rise\n    prob_sud = prob_fall * prob_rise\n    \n    # The probability of the path du is the product of the probabilities of a rise followed by a fall\n    prob_du = prob_rise * prob_fall\n    \n    # Since the bond's price will reach $101.20 after two periods if it follows either of these two paths\n    # The total probability is the sum of the probabilities of these two paths\n    answer = prob_sud + prob_du\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-618",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ is a wealth management firm based in France. They have made an investment of $10 million in E Corporation's senior unsecured bond with a term of 10 years. Due to concerns of a potential default by E Corp, XYZ purchased a credit default swap (CDS) on E corp valued at $10 million with a designated coupon rate of 5%. After three months, E Corp goes bankrupt, resulting in a variety of activated CDS contracts. Consequently, XYZ examines the credit quality of the corporate bond they invested and the CDS's value on that bond. Here's some information on the current market status of E Corporation's bonds: Bond 1 is a 5-year senior unsecured bond trading at 40% of par, Bond 2 is a 10-year senior unsecured bond trading at 50% of par. Bond 3 is a 6-year subordinated unsecured bond trading at 30% of par. Based on these details, what is the cheapest",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 10000000  # Face value of the bond\n    bond_1_recovery_rate = 0.4  # 5-year senior unsecured bond trading at 40% of par\n    bond_2_recovery_rate = 0.5  # 10-year senior unsecured bond trading at 50% of par\n    bond_3_recovery_rate = 0.3  # 6-year subordinated unsecured bond trading at 30% of par\n    \n    # Do math calculation to get the answer\n    loss = face_value - (face_value * bond_2_recovery_rate)\n    \n    # return answer\n    return loss\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-619",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of the year, XYZ Inc. bought a new machinery for its production process. The machine was priced at $25,000. It is anticipated to have a 4-year lifespan and then be resold for $4,000. Using the double-declining-balance method, what's the depreciation cost to be accounted for in the second year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_cost = 25000\n    residual_value = 4000\n    lifespan = 4\n    \n    # Calculate the annual depreciation rate using the double-declining-balance method\n    annual_depreciation_rate = 2 / lifespan\n    \n    # Calculate the first year's depreciation\n    first_year_depreciation = initial_cost * annual_depreciation_rate\n    \n    # Calculate the book value at the end of the first year\n    book_value_after_first_year = initial_cost - first_year_depreciation\n    \n    # Calculate the second year's depreciation\n    second_year_depreciation = book_value_after_first_year * annual_depreciation_rate\n    \n    # return answer\n    return second_year_depreciation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-620",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the yearly return for a trader who has managed a return of 5% over a six-week span?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    return_over_six_weeks = 0.05  # 5% return over six weeks\n    weeks_in_a_year = 52  # number of weeks in a year\n    weeks_with_return = 6  # number of weeks with return\n\n    # Do math calculation to get the answer\n    yearly_return = (1 + return_over_six_weeks) ** (weeks_in_a_year / weeks_with_return) - 1\n    yearly_return_percentage = yearly_return * 100  # convert to percentage\n\n    # return answer\n    return yearly_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Measure     | 2007   | 2006   | 2005  | 2004  | 2003  |\n|-------------|--------|--------|-------|-------|-------|\n| EPS         | $3.03  | $1.45  | $0.23 | $2.13 | $2.55 |\n| BV per share| $19.20 | $16.21 | $14.52| $13.17| $11.84|\n| ROE         | 16.0%  | 8.9%   | 1.6%  | 16.3% | 21.8% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-621",
        "python_solution": "",
        "ground_truth": null,
        "question": "In February 2007, you are investigating a theoretical company called Davis Global that experiences seasonal demand for its offerings. On 2 February 2007, Davis shares ended at $57.98. You believe that the period from 2003 through 2006 provides a fair representation of average earnings. When determining normalized EPS, we can consider the approach of historical average EPS or the average ROE method, so what is the difference in PE calculated using these two methods?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    eps_values = [3.03, 1.45, 0.23, 2.13, 2.55]\n    bv_per_share_values = [19.20, 16.21, 14.52, 13.17, 11.84]\n    roe_values = [0.16, 0.089, 0.016, 0.163, 0.218]\n    stock_price = 57.98\n\n    # Calculate historical average EPS\n    historical_average_eps = sum(eps_values[:-1]) / len(eps_values[:-1])\n\n    # Calculate average ROE\n    average_roe = sum(roe_values[:-1]) / len(roe_values[:-1])\n    average_bv_per_share = sum(bv_per_share_values[:-1]) / len(bv_per_share_values[:-1])\n    average_roe_eps = average_roe * average_bv_per_share\n\n    # Calculate PE ratio using historical average EPS method\n    pe_historical_eps = stock_price / historical_average_eps\n\n    # Calculate PE ratio using average ROE method\n    pe_average_roe_eps = stock_price / average_roe_eps\n\n    # Calculate the difference in PE ratio between two methods\n    difference_in_pe = abs(pe_historical_eps - pe_average_roe_eps)\n\n    # return answer\n    return difference_in_pe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-622",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive agreed to sell an equity forward contract four weeks ago. The contract is set to mature in three months. A profit of $1 will be provided one month prior to the expiry of the contract. The risk-free rate is 3% and is compounded yearly. The existing spot price of the underlying is $56, while the initial forward price was set at $60. What is the value of the executive\u2019s position?\n",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 56  # current spot price\n    F = 60  # initial forward price\n    r = 0.03  # risk-free rate\n    T = 3/12  # time to maturity in years\n    t = 4/52  # time elapsed since the contract was agreed upon in years\n    \n    # Do math calculation to get the answer\n    # calculate the value of the forward contract\n    forward_value = (F - S) * (1 + r)**(-T)\n    # calculate the present value of the profit\n    profit_pv = 1 * (1 + r)**(-(T - 1/12))\n    \n    # calculate the value of the executive's position\n    position_value = forward_value + profit_pv\n    \n    # return answer\n    return position_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-623",
        "python_solution": "",
        "ground_truth": null,
        "question": "A 12-month zero-coupon bond offers a return of 4.0%. The yields for the 24-month and 36-month zero-coupon bonds are 5.0% and 6.0% respectively. What would be the interest rate for a 12-month loan starting in a year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r12 = 0.04  # return of 12-month zero-coupon bond\n    r24 = 0.05  # return of 24-month zero-coupon bond\n    r36 = 0.06  # return of 36-month zero-coupon bond\n\n    # Do math calculation to get the answer\n    # The formula to calculate the interest rate for a 12-month loan starting in a year is:\n    # (1 + r24)^2 = (1 + r12) * (1 + r_forward)\n    # Where r_forward is the forward interest rate for the 12-month loan starting in a year.\n\n    r_forward = ((1 + r24)**2 / (1 + r12)) - 1\n    \n    # Convert the decimal to percentage\n    answer = r_forward * 100\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|                    | S&P 500 | Indigo Fund |\n|--------------------|---------|-------------|\n| Expected annual return | 9.0%    | 10.5%      |\n| Return standard deviation | 18.0%  | 25.0%      |\n| Sharpe ratio | 0.333   | 0.30       |\n| Active return |         | 1.2%       |\n| Active risk |           | 8.0%       |\n| Information ratio |     | 0.15       |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-624",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the highest Sharpe ratio achievable by a fund manager when merging the S&P 500 benchmark portfolio and the Indigo Fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sp500_return = 0.09  # 9.0%\n    indigo_return = 0.105  # 10.5%\n    sp500_std = 0.18  # 18.0%\n    indigo_std = 0.25  # 25.0%\n    sp500_sharpe = 0.333\n    indigo_sharpe = 0.30\n    active_return = 0.012  # 1.2%\n    active_risk = 0.08  # 8.0%\n    information_ratio = 0.15\n    \n    # Calculate the correlation between S&P 500 and Indigo Fund\n    correlation = (indigo_sharpe**2 - information_ratio**2) / (sp500_sharpe**2)\n    \n    # Calculate the optimal weight of Indigo Fund in the merged portfolio\n    weight_indigo = (indigo_return - sp500_return) / (sp500_std**2 * (1 - correlation))\n    weight_sp500 = 1 - weight_indigo\n    \n    # Calculate the return and standard deviation of the merged portfolio\n    merged_return = weight_sp500 * sp500_return + weight_indigo * indigo_return\n    merged_std = (weight_sp500**2 * sp500_std**2 + weight_indigo**2 * indigo_std**2 + 2 * weight_sp500 * weight_indigo * correlation * sp500_std * indigo_std) ** 0.5\n    \n    # Calculate the Sharpe ratio of the merged portfolio\n    merged_sharpe = merged_return / merged_std\n    \n    # return answer\n    return merged_sharpe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-625",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of an account that a shareholder has deposited \uffe12,000 into if it pays 6% per annum compounded continuously after four years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 2000  # initial deposit\n    rate = 0.06  # interest rate (6%)\n    years = 4  # number of years\n\n    # Do math calculation to get the answer\n    import math\n    answer = principal * math.exp(rate * years)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-626",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the consultancy firm, Blue Street Inc, announced total revenues of $100 million, total expenses of $80 million, and net income of $20 million in the last year, and if accounts receivable rose by $10 million, what amount of cash was received by the firm from clients?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_revenues = 100000000  # $100 million\n    total_expenses = 80000000   # $80 million\n    net_income = 20000000       # $20 million\n    accounts_receivable_rise = 10000000  # $10 million\n\n    # Do math calculation to get the answer\n    # We know that the change in accounts receivable is equal to the difference between sales and cash received from clients\n    # So, Cash received from clients = Total revenues - Rise in accounts receivable\n    cash_received_from_clients = total_revenues - accounts_receivable_rise\n\n    # return answer\n    return cash_received_from_clients\n```"
        ]
    },
    {
        "tables": [
            "|                         | 2018 | 2019 |\n|-------------------------|------|------|\n| Revenue                 | 5,000| 7,000|\n| Cost                    | 2,000| 2,300|\n| Operating income        | 3,000| 4,700|\n| Net profit              | 1,650| 2,300|\n| Total assets            | 4,000| 6,000|\n| Total liabilities       | 1,200| 900  |\n| Equity                  | 2,800| 5,100|",
            "|                        | 2018  | 2019  |\n| ---------------------- |:-----:| -----:|\n| Revenue                | 2,000 | 2,500 |\n| Cost                   | 1,200 | 1,300 |\n| Operating income       | 800   | 1,200 |\n| Net profit             | 460   | 820   |\n| Dividends paid         | 230   | 410   |\n| Total assets           | 1,000 | 1,100 |\n| Total liabilities      | 600   | 650   |\n| Equity                 | 400   | 450   |"
        ],
        "topic": "Accounting",
        "question_id": "test-627",
        "python_solution": "",
        "ground_truth": null,
        "question": "In China, there's an education business known as PZ Corporation which adheres to IFRS. As of 2018, the corporation had a 15% non-controlling equity stake in T-web Corporation. The executives at PZ decided to boost the company\u2019s stake in T-web to 50% through a straight cash buy on 1st January 2019, with no transactions between the companies. The table provided includes the financial statement details of both PZ and T-web corporations. Could you please compute the consolidated sales for 2019 for PZ corporation, after gaining control over T-web company:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    pz_revenue_2019 = 7000\n    t_web_revenue_2019 = 2500\n    non_controlling_interest = 0.5\n    \n    # Do math calculation to get the answer\n    pz_share_in_t_web_revenue = t_web_revenue_2019 * non_controlling_interest\n    t_web_minority_interest_share = t_web_revenue_2019 * (1 - non_controlling_interest)\n    consolidated_revenue = pz_revenue_2019 + pz_share_in_t_web_revenue\n    \n    # return answer\n    return consolidated_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-628",
        "python_solution": "",
        "ground_truth": null,
        "question": "A private equity fund employs the individual transaction approach to allot carried interest (20% of profit) to its managing partner. The managing partner put in $10 million in an enterprise three years back and exited with $23 million. What is the share available for the passive investors of the said investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investment = 10000000  # Managing partner's initial investment\n    exit_value = 23000000  # Exit value after 3 years\n    carried_interest_percentage = 0.20  # Carried interest percentage (20%)\n    \n    # Do math calculation to get the answer\n    profit = exit_value - investment\n    carried_interest = profit * carried_interest_percentage\n    share_for_passive_investors = profit - carried_interest\n    \n    # return answer\n    return share_for_passive_investors\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-629",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will be the fourth quintile number of the series 1-10?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    series = list(range(1, 11))  # Generate a list of numbers from 1 to 10\n    quintile_position = 4  # We want to find the fourth quintile\n\n    # Do math calculation to get the answer\n    series.sort()  # Sort the series in ascending order\n    quintile_value = (len(series) * quintile_position) // 5  # Calculate the index of the fourth quintile\n    answer = series[quintile_value - 1]  # Find the value at the calculated index\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-630",
        "python_solution": "",
        "ground_truth": null,
        "question": "In early 2013, corporation X released 5-year bonds with a face value of $2,000,000. Given a market interest rate of 6%, these bonds are set to pay a 7% coupon every 31st of December. What would the bonds payable amount to at the time they were issued?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 2000000  # Face value of the bond\n    coupon_rate = 0.07  # Coupon rate\n    market_interest_rate = 0.06  # Market interest rate\n    years_to_maturity = 5  # Years to maturity\n\n    # Do math calculation to get the answer\n    # Calculate the present value of the coupon payments\n    coupon_payment = face_value * coupon_rate\n    present_value_of_coupons = 0\n    for i in range(1, years_to_maturity + 1):\n        present_value_of_coupons += coupon_payment / (1 + market_interest_rate) ** i\n\n    # Calculate the present value of the face value\n    present_value_of_face_value = face_value / (1 + market_interest_rate) ** years_to_maturity\n\n    # Calculate the bonds payable amount\n    bonds_payable_amount = present_value_of_coupons + present_value_of_face_value\n\n    # return answer\n    return bonds_payable_amount\n```\n\nThe bonds payable amount at the time they were issued would be the present value of the coupon payments and the face value, discounted at the market interest rate. The above program calculates this amount by summing the present values of each coupon payment and the face value.\n\nNote: The result will be the bonds payable amount at the time they were issued, which represents the amount that the corporation would have to pay to the investors if the bonds were redeemed immediately after issuance."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-631",
        "python_solution": "",
        "ground_truth": null,
        "question": "The private equity portfolio had a net asset value of $120m at the close of 2019 with all capital called upon. The portfolio predicts a distribution payment of 20% by the conclusion of 2020. The portfolio's net asset value is projected to grow 10% before distribution. What is the projected net asset value after distribution at the end of 2020?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_net_asset_value = 120000000  # $120m\n    distribution_payment = 0.20  # 20%\n    growth_rate = 0.10  # 10%\n\n    # Do math calculation to get the answer\n    projected_net_asset_value_before_distribution = initial_net_asset_value * (1 + growth_rate)\n    distribution_amount = projected_net_asset_value_before_distribution * distribution_payment\n    projected_net_asset_value_after_distribution = projected_net_asset_value_before_distribution - distribution_amount\n\n    # return answer\n    return projected_net_asset_value_after_distribution\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-632",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the spot market, the present exchange rate for EUR/USD is 0.8615. In the forward market, the EUR/USD rate for the next 90 days is indicated as +13.5 points. Can you tell me the forward rate for EUR/USD over the next 90 days?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 0.8615\n    forward_points = 13.5\n    \n    # Do math calculation to get the answer\n    forward_rate = spot_rate + (forward_points / 10000)\n    \n    # return answer\n    return forward_rate\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-633",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jacob, a US-based financier, is thinking about purchasing a common stock with a yearly dividend of $2.5. This dividend is predicted to increase at a yearly rate of 5%. If the expected return rate of investors is 8%, what would be the inherent worth of the stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yearly_dividend = 2.5  # Yearly dividend\n    growth_rate = 0.05     # Yearly rate of increase\n    expected_return_rate = 0.08  # Expected return rate of investors\n    \n    # Do math calculation to get the answer\n    # The inherent worth of the stock can be calculated using the Gordon Growth Model formula\n    inherent_worth = yearly_dividend / (expected_return_rate - growth_rate)\n    \n    # return answer\n    return inherent_worth\n```"
        ]
    },
    {
        "tables": [
            "| | Truck* | Land** |\n| --- | --- | --- | \n| Original cost | $57,000 | $18,000 |\n| Estimated  life | 8 years | |\n| Estimated salvage value at purchase | $15,000 | |\n| Depreciation method | Declining balance, 20% per year | |\n| Current fair value of item | $27,000 | $21,000 |\n\n\\* The last sale of a similar truck by the company occurred more than six months ago.\n\n\\*\\* The land is one of four identical parcels of land recently sold by the company."
        ],
        "topic": "Accounting",
        "question_id": "test-634",
        "python_solution": "",
        "ground_truth": null,
        "question": "A corporation decided to trade a truck that it had bought three years prior for a piece of land owned by a different corporation. The following chart includes details about both items: The financial statement for the corporation that is getting rid of the truck is most likely going to report a loss of:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_cost_truck = 57000\n    estimated_salvage_value_truck = 15000\n    depreciation_rate = 0.20\n    years_truck_owned = 3\n    current_fair_value_truck = 27000\n    current_fair_value_land = 21000\n\n    # Calculate the carrying value of the truck using the declining balance method\n    carrying_value_truck = original_cost_truck - (depreciation_rate * (original_cost_truck - estimated_salvage_value_truck) * years_truck_owned)\n\n    # Calculate the loss on the trade\n    loss_on_trade = carrying_value_truck - current_fair_value_land\n\n    # return answer\n    return abs(loss_on_trade)\n```"
        ]
    },
    {
        "tables": [
            "| Security | Security Weight(%) | Expected Standard Deviation(%) |\n| ---      | ---                | ---                           |\n| 1        | 30                 | 20                            |\n| 2        | 70                 | 12                            |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-635",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming an investment manager constructs this portfolio, and the covariance of returns for the two securities involved is -0.0240, what is the projected standard deviation of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    w1 = 0.3  # weight of security 1\n    w2 = 0.7  # weight of security 2\n    std_dev_1 = 0.20  # standard deviation of security 1\n    std_dev_2 = 0.12  # standard deviation of security 2\n    covariance = -0.0240\n\n    # Do math calculation to get the answer\n    variance_portfolio = w1**2 * std_dev_1**2 + w2**2 * std_dev_2**2 + 2 * w1 * w2 * covariance\n    std_dev_portfolio = variance_portfolio ** 0.5\n    \n    # return answer\n    return std_dev_portfolio * 100\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-636",
        "python_solution": "",
        "ground_truth": null,
        "question": "A specialist working on the stable-income trade desk noticed that the annual number of defaults in the bond portfolio adheres to a Poisson process. The mean number of defaults is four every year. Given that defaults are independent, what are the odds that there will be a maximum of one default in the coming year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mean_defaults = 4  # mean number of defaults per year\n    \n    # Do math calculation to get the answer\n    # probability of 0 defaults\n    prob_0_defaults = (mean_defaults ** 0) * (2.71828 ** -mean_defaults) / 1\n    \n    # probability of 1 default\n    prob_1_default = (mean_defaults ** 1) * (2.71828 ** -mean_defaults) / 1\n    \n    # probability of maximum 1 default\n    prob_max_1_default = prob_0_defaults + prob_1_default\n    \n    # convert probability to odds\n    odds = prob_max_1_default / (1 - prob_max_1_default)\n    \n    # return answer\n    return odds\n```"
        ]
    },
    {
        "tables": [
            "| Years to maturity | Present Value Factor |\n|------------------|---------------------|\n| 0.25                 | 0.997506               |\n| 0.5                  | 0.992556               |\n| 0.75                | 0.985222               |\n| 1                     | 0.975610               |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-637",
        "python_solution": "",
        "ground_truth": null,
        "question": "Three months ago, a supervisor agreed to a receive-fixed and pay-equity swap. The yearly fixed rate was set at 3% and the equity index was 100 at the time the swap was made. The swap will mature in one year and has a quarterly reset, and nominal amount of $100 million. The value of the swap is up for evaluation, assuming the equity index is now 101 and the current spot rates are provided:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_amount = 100000000  # nominal amount\n    fixed_rate = 0.03  # yearly fixed rate\n    equity_index_initial = 100  # initial equity index\n    equity_index_current = 101  # current equity index\n    years_to_maturity = [0.25, 0.5, 0.75, 1]  # years to maturity\n    present_value_factors = [0.997506, 0.992556, 0.985222, 0.975610]  # present value factors\n    quarterly_reset = True  # quarterly reset\n\n    # Do math calculation to get the answer\n    # calculate the present value of the remaining fixed payments\n    fixed_payment = notional_amount * fixed_rate / 4  # quarterly fixed payment\n    present_value_fixed = sum([fixed_payment * present_value_factors[i] for i in range(len(years_to_maturity))])\n\n    # calculate the present value of the equity payment\n    equity_payment = notional_amount * ((equity_index_current / equity_index_initial) - 1)  # equity payment at maturity\n    present_value_equity = equity_payment * present_value_factors[-1]  # present value of equity payment\n\n    # calculate the value of the swap\n    swap_value = present_value_equity - present_value_fixed\n\n    # return answer\n    return swap_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-638",
        "python_solution": "",
        "ground_truth": null,
        "question": "A study reveals that in this structure, 30% of workspaces are equipped with printers. Given a binomial probability distribution, what is the chance that just three companies will possess a printer in a casual selection of five firms?",
        "output": [
            "def solution():\n    # Define variables name and value\n    total_firms = 5\n    firms_with_printers = 3\n    probability = 0.3\n    \n    # Do math calculation to get the answer\n    import math\n    nCr = math.comb(total_firms, firms_with_printers)\n    probability_with_printers = nCr * (probability ** firms_with_printers) * ((1 - probability) ** (total_firms - firms_with_printers))\n    \n    # return answer\n    return probability_with_printers"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-639",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the width of a 90% confidence interval using the appropriate t-distribution for a sample size of 37, having a mean of 116.23 and a variance of 245.55?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 37\n    sample_mean = 116.23\n    sample_variance = 245.55\n    confidence_level = 0.90\n\n    # Do math calculation to get the answer\n    from scipy import stats\n    import math\n\n    # Calculate the standard deviation\n    sample_std = math.sqrt(sample_variance)\n\n    # Calculate the standard error\n    standard_error = sample_std / math.sqrt(sample_size)\n\n    # Get the t-distribution critical value\n    degrees_of_freedom = sample_size - 1\n    t_critical = stats.t.ppf((1 + confidence_level) / 2, degrees_of_freedom)\n\n    # Calculate the margin of error\n    margin_of_error = t_critical * standard_error\n\n    # Calculate the width of the confidence interval\n    interval_width = 2 * margin_of_error\n\n    # return answer\n    return interval_width\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-640",
        "python_solution": "",
        "ground_truth": null,
        "question": "If, in a basic economy without a foreign sector, the ensuing formulas are valid: Consumption formula: C = 2,500 + 0.80 \u00d7 (Y \u2013 T), Investment formula: I = 500 + 0.30 \u00d7 Y \u2013 25 \u00d7 r, State expenditure: G = 1,000, Tax formula: T = \u2013250 + 0.30 \u00d7 Y, where Y signifies total income and r symbolizes real interest rate as a percentage, how much will the total income grow if the actual interest rate is 3% and state expenditure rises to 2,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    C = 0  # Consumption\n    I = 0  # Investment\n    G_1 = 1000  # Original state expenditure\n    G_2 = 2000  # New state expenditure\n    T = 0  # Tax\n    Y_1 = 0  # Original total income\n    Y_2 = 0  # New total income\n    r = 3  # Real interest rate as a percentage\n\n    # Calculate original total income (Y_1)\n    # Use the formula Y = C + I + G\n    # Substitute C and I formulas into the equation\n    # We get: Y = 2,500 + 0.80 \u00d7 (Y \u2013 T) + 500 + 0.30 \u00d7 Y \u2013 25 \u00d7 r + G\n    # Simplify and solve the equation for Y\n    Y_1 = (2500 + 500 - 25 * r + G_1) / (1 - 0.80 - 0.30 + 0.24)\n    T = -250 + 0.30 * Y_1\n    Y_1 = (2500 + 500 - 25 * r + G_1) / (1 - 0.80 - 0.30 + 0.24)\n\n    # Calculate new total income (Y_2)\n    # Repeat the same steps with the new state expenditure (G_2)\n    Y_2 = (2500 + 500 - 25 * r + G_2) / (1 - 0.80 - 0.30 + 0.24)\n    T = -250 + 0.30 * Y_2\n    Y_2 = (2500 + 500 - 25 * r + G_2 -250 + 0.3*Y_2 - 0.24*Y_2) \n\n    # Calculate the growth in total income\n    # Take the difference between the new and original total income\n    growth_in_total_income = Y_2 - Y_1\n\n    # return answer\n    return growth_in_total_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-641",
        "python_solution": "",
        "ground_truth": null,
        "question": "The details provided are related to a hedge fund named Trident Consultancy, which has:     AUM valued at $300 million as per the end of last year     A management fee set at 2% (calculated based on the AUM at year-end)     An incentive fee of 20% factored in: after deducting the management fee, considering a 5% soft hurdle rate, and utilizing a high-water mark (the high-water mark is $357 million)     The gross return for the current year for the fund stands at 20%. Could you calculate the total fee that Trident has earned this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    aum_last_year = 300000000  # AUM valued at $300 million as per the end of last year\n    management_fee_rate = 0.02  # A management fee set at 2%\n    incentive_fee_rate = 0.20  # An incentive fee of 20%\n    soft_hurdle_rate = 0.05  # considering a 5% soft hurdle rate\n    high_water_mark = 357000000  # the high-water mark is $357 million\n    gross_return_rate = 0.20  # The gross return for the current year for the fund stands at 20%\n\n    # Do math calculation to get the answer\n    management_fee = aum_last_year * management_fee_rate\n    \n    # calculate returns after deducting management fee\n    net_return_after_fee = aum_last_year * (1 + gross_return_rate) - management_fee\n    \n    # calculate the return above the high-water mark and hurdle rate\n    excess_return_above_hurdle_and_high_water_mark = max(0, net_return_after_fee - (high_water_mark * (1 + soft_hurdle_rate)))\n    \n    incentive_fee = excess_return_above_hurdle_and_high_water_mark * incentive_fee_rate\n    \n    # calculate the total fee earned by Trident this year\n    total_fee = management_fee + incentive_fee\n    \n    # return answer\n    return total_fee\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-642",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Aquarius Pool of Funds puts GBP150 million into each of Beta Hedge Fund and XYZ Hedge Fund. Aquarius Pool of Funds operates a \"1 and 10\" fee system. Both management and incentive fees are evaluated separately at the end of each calendar year. After one year, factoring in their individual management and incentive fees, the value of Aquarius's investment in Beta stands at GBP 80 million and it's worth GBP240 million in XYZ. What is the yearly return for a investor in the Aquarius Pool of Funds, after taking into account the fees charged at the fund-of-funds level?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 150000000  # GBP\n    investment_beta_after_fees = 80000000  # GBP\n    investment_xyz_after_fees = 240000000  # GBP\n    management_fee_rate = 0.01  # 1% of NAV\n    incentive_fee_rate = 0.10  # 10% of return\n    \n    # Calculate fees at the individual fund level (after 1 year)\n    # We are not explicitly given the pre-fee performance, so will assume\n    # growth from the initial investment value and calculate the fees incurred.\n    \n    # Calculate returns for Beta and XYZ pre-fees (as the reference does not provide their individual pre-fee performance)\n    beta_pre_fee_value = investment_beta_after_fees / (1 - management_fee_rate - incentive_fee_rate)\n    xyz_pre_fee_value = investment_xyz_after_fees / (1 - management_fee_rate - incentive_fee_rate)\n    \n    # Calculate returns\n    beta_return = beta_pre_fee_value / initial_investment - 1\n    xyz_return = xyz_pre_fee_value / initial_investment - 1\n    \n    # Calculate combined pre-fee NAV of both funds (Beta and XYZ)\n    combined_pre_fee_nav = beta_pre_fee_value + xyz_pre_fee_value\n    \n    # Calculate Aquarius Pool of Funds level fees\n    management_fee = combined_pre_fee_nav * management_fee_rate\n    incentive_fee = (beta_return + xyz_return) * combined_pre_fee_nav * incentive_fee_rate / 2  # returns averaged to retain consistency\n    \n    # Total return without Aquarius fees\n    total_return_without_fees = combined_pre_fee_nav / (2 * initial_investment)\n    \n    # Calculate combined fee effect\n    combined_fee_effect = management_fee + incentive_fee\n    \n    # Adjust total return by combined fees to get the final return experienced by investors\n    adjusted_return = total_return_without_fees - (combined_fee_effect / (2 * initial_investment))\n    \n    # return answer\n    return adjusted_return\n```"
        ]
    },
    {
        "tables": [
            "|                                | 2016 ($US millions) |\n|--------------------------------|---------------------|\n| Cost: Total property, plant, and equipment (PP&E) | 30,815                 |\n| Accumulated depreciation | 16,465                 |\n| Net PP&E                         | 14,350                 |\n| Average net PP&E                 | 12,200                 |\n| Net sales                        | 21,670                 |\n| Net income                       | 2,705                   |"
        ],
        "topic": "Accounting",
        "question_id": "test-643",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering the available selected fixed asset details for a firm, what is the firm's fixed asset turnover ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_sales = 21670  # in $US millions\n    average_net_ppe = 12200  # in $US millions\n\n    # Do math calculation to get the answer\n    fixed_asset_turnover_ratio = net_sales / average_net_ppe\n\n    # return answer\n    return fixed_asset_turnover_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-644",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the historical returns of Company 1's shares and Company 2's shares have a correlation of 0.75, and the variance of Company 1's shares is 0.16 while the variance of Company 2's shares is 0.09, what is the covariance of returns of Company 1's shares and Company 2's shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.75\n    variance_company1 = 0.16\n    variance_company2 = 0.09\n    \n    # Do math calculation to get the answer\n    # The formula for covariance is: covariance = correlation * sqrt(variance1) * sqrt(variance2)\n    covariance = correlation * (variance_company1 ** 0.5) * (variance_company2 ** 0.5)\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-645",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine a call option that is sold for $4 and has an exercise price of $50. Calculate the value upon expiry and the profit for a purchaser if the price of the underlying asset at expiry is $55.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    exercise_price = 50  # Exercise price of the call option\n    option_price = 4     # Price at which the call option is sold\n    asset_price_at_expiry = 55  # Price of the underlying asset at expiry\n\n    # Do math calculation to get the answer\n    # Calculate the value of the option at expiry\n    # For a call option, the value at expiry is the maximum of 0 and the difference between the asset price and the exercise price\n    value_at_expiry = max(0, asset_price_at_expiry - exercise_price)\n    \n    # Calculate the profit for the purchaser\n    # Profit is the difference between the value at expiry and the option price\n    profit = value_at_expiry - option_price\n    \n    # return answer\n    return value_at_expiry, profit\n\nvalue_at_expiry, profit = solution()\nprint(f\"Value at expiry: ${value_at_expiry}\")\nprint(f\"Profit: ${profit}\")\n```\n\nThis program first calculates the value of the option at expiry, which for a call option is the maximum of 0 and the difference between the asset price at expiry and the exercise price. Then, it calculates the profit for the purchaser by subtracting the option price from the value at expiry. The results are then printed out."
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-646",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a consistent interest rate of 8.87%, how much does a shareholder need to invest now if they aim to have $100 in their account in three years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    desired_amount = 100  # desired amount after 3 years\n    years = 3  # time period\n    interest_rate = 0.0887  # annual interest rate\n    \n    # Do math calculation to get the answer\n    # Using the formula for compound interest: A = P * (1 + r)^n\n    # Where A is the future value (desired amount), P is the present value (initial investment), r is the interest rate and n is the number of years\n    # We need to solve for P, the initial investment needed\n    initial_investment = desired_amount / (1 + interest_rate) ** years\n    \n    # return answer\n    return initial_investment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-647",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose a call option is priced at $4 with an exercise price of $50. Calculate the value at expiration and the profit for the vendor if the price of the underlying asset at expiration is $52.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    call_option_price = 4  # Price of the call option\n    exercise_price = 50  # Exercise price of the call option\n    underlying_asset_price = 52  # Price of the underlying asset at expiration\n    \n    # Do math calculation to get the answer\n    value_at_expiration = max(underlying_asset_price - exercise_price, 0)  # Calculate the value at expiration\n    profit_for_vendor = call_option_price - value_at_expiration  # Calculate the profit for the vendor\n    \n    # return answer\n    return value_at_expiration, profit_for_vendor\n\nvalue_at_expiration, profit_for_vendor = solution()\nprint(f\"Value at expiration: {value_at_expiration}\")\nprint(f\"Profit for vendor: {profit_for_vendor}\")\n```"
        ]
    },
    {
        "tables": [
            "| Source | Sum of Squares (SS) |\n|--------|---------------------|\n| Explained | 957 |\n| Total | 1580 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-648",
        "python_solution": "",
        "ground_truth": null,
        "question": "What does the term Sum of Squares Residuals (SSR) refer to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ss_explained = 957\n    ss_total = 1580\n    \n    # Do math calculation to get the answer\n    ss_residuals = ss_total - ss_explained\n    \n    # return answer\n    return ss_residuals\n```"
        ]
    },
    {
        "tables": [
            "|                                               | \u6bdb millions |\n|-----------------------------------------------|------------:|\n| Revenues for the year                         |      12,500 |\n| Total expenses for the year                   |      10,000 |\n| Gains from available-for-sale securities      |       1,475 |\n| Loss on foreign currency translation adjustments on a foreign subsidiary |         325 |\n| Dividends paid                                |         500 |"
        ],
        "topic": "Accounting",
        "question_id": "test-649",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the total comprehensive income of the business (in \u20ac millions) based on the information from the business's financial records?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 12500  # in millions\n    total_expenses = 10000  # in millions\n    gain_from_securities = 1475  # in millions\n    loss_on_foreign_currency = 325  # in millions\n\n    # Do math calculation to get the answer\n    net_income = revenue - total_expenses\n    other_comprehensive_income = gain_from_securities - loss_on_foreign_currency\n    total_comprehensive_income = net_income + other_comprehensive_income\n\n    # return answer\n    return total_comprehensive_income\n```"
        ]
    },
    {
        "tables": [
            "| Capital component | Book Value (000) | Market Value(000) | Component cost |\n|------------------|-----------------|-----------------|---------------|\n| Debt             | $100            | $80             | 8%            |\n| Preferred stock  | $20             | $20             | 10%           |\n| Common stock     | $100            | $200            | 12%           |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-650",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collected the subsequent data pertaining to a business's capital structure and pre-tax component costs. What would be the weighted average cost of capital (WACC) of the business, given that the marginal tax rate of the business is 40%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    debt_book_value = 100000  # in thousands\n    debt_market_value = 80000  # in thousands\n    preferred_stock_book_value = 20000  # in thousands\n    preferred_stock_market_value = 20000  # in thousands\n    common_stock_book_value = 100000  # in thousands\n    common_stock_market_value = 200000  # in thousands\n    debt_cost = 0.08  # 8%\n    preferred_stock_cost = 0.10  # 10%\n    common_stock_cost = 0.12  # 12%\n    marginal_tax_rate = 0.40  # 40%\n\n    # Calculate the total market value of the capital components\n    total_market_value = debt_market_value + preferred_stock_market_value + common_stock_market_value\n\n    # Calculate the weighted average cost of capital (WACC)\n    debt_weight = debt_market_value / total_market_value\n    debt_after_tax_cost = debt_cost * (1 - marginal_tax_rate)\n    preferred_stock_weight = preferred_stock_market_value / total_market_value\n    common_stock_weight = common_stock_market_value / total_market_value\n\n    wacc = (debt_weight * debt_after_tax_cost) + (preferred_stock_weight * preferred_stock_cost) + (common_stock_weight * common_stock_cost)\n\n    # return answer\n    return wacc\n```"
        ]
    },
    {
        "tables": [
            "| EV/EBITDA | 9 |\n| --- | --- |\n| EBITDA | $25,000,000 |\n| Market value of debt | $65,000,000 |\n| Cash | $1,300,000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-651",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the projected equity value for the Umbrella Corporation as per the data gathered by Paul?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ev_ebitda = 9\n    ebitda = 25000000\n    market_value_debt = 65000000\n    cash = 1300000\n    \n    # Do math calculation to get the answer\n    enterprise_value = ev_ebitda * ebitda\n    equity_value = enterprise_value - market_value_debt + cash\n    \n    # return answer\n    return equity_value\n```"
        ]
    },
    {
        "tables": [
            "|                                         |      |\n|-----------------------------------------|------|\n| ABC LA retirement plan information 2018 |      |\n| Current service costs                   | 320  |\n| Past service costs                      | 150  |\n| Employer contributions                  | 1,200|\n| Benefit obligation at beginning of year | 45,000|\n| Benefit obligation at end of year       | 48,395|\n| Plan assets at beginning of year        | 40,800|\n| Plan assets at end of year              | 44,300|\n| Actuarial loss                          | 350  |\n| Actual return on plan assets            | 3,100|\n| Discount rate on plan liabilities       | 7.5% |\n| Expected rate of return on plan assets  | 8.2% |"
        ],
        "topic": "Accounting",
        "question_id": "test-652",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ Chicago, a home decor shopping company, provides its employees a defined benefit pension plan. Based on the data provided in the next table, could you compute the regular pension expense to be reported in I/S following IFRS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_service_costs = 320\n    past_service_costs = 150\n    employer_contributions = 1200\n    benefit_obligation_beginning = 45000\n    benefit_obligation_end = 48395\n    plan_assets_beginning = 40800\n    plan_assets_end = 44300\n    actuarial_loss = 350\n    actual_return_on_plan_assets = 3100\n    discount_rate = 0.075\n    expected_rate_of_return = 0.082\n\n    # Do math calculation to get the answer\n    interest_cost = benefit_obligation_beginning * discount_rate\n    expected_return_on_plan_assets = plan_assets_beginning * expected_rate_of_return\n    unrecognized_actuarial_loss = actuarial_loss / 5  # assuming 5 years to recognize actuarial loss\n    pension_expense = current_service_costs + interest_cost - expected_return_on_plan_assets + past_service_costs + unrecognized_actuarial_loss\n\n    # return answer\n    return pension_expense\n```"
        ]
    },
    {
        "tables": [
            "| Net income | $120 |\n|---|---|\n| Decrease in accounts receivable | 20 |\n| Depreciation | 25 |\n| Increase in inventory | 10 |\n| Increase in accounts payable | 7 |\n| Decrease in wages payable | 5 |\n| Increase in deferred tax liabilities | 15 |\n| Profit from the sale of land | 2 |"
        ],
        "topic": "Accounting",
        "question_id": "test-653",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided data, what is the company's cash flow from operations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 120\n    decrease_in_accounts_receivable = 20\n    depreciation = 25\n    increase_in_inventory = 10\n    increase_in_accounts_payable = 7\n    decrease_in_wages_payable = 5\n    increase_in_deferred_tax_liabilities = 15\n    profit_from_sale_of_land = 2\n\n    # Do math calculation to get the answer\n    # Add back non-cash items (depreciation and increase in deferred tax liabilities) to net income\n    cash_flow = net_income + depreciation + increase_in_deferred_tax_liabilities\n    \n    # Adjust for changes in working capital\n    cash_flow += decrease_in_accounts_receivable\n    cash_flow -= increase_in_inventory\n    cash_flow += increase_in_accounts_payable\n    cash_flow -= decrease_in_wages_payable\n    \n    # Subtract profit from sale of land as it's not an operating activity\n    cash_flow -= profit_from_sale_of_land\n    \n    # return answer\n    return cash_flow\n```"
        ]
    },
    {
        "tables": [
            "|                   | 2013  | 2012  |\n|-------------------|-------|-------|\n| Sales revenue     | 100,000| 95,000|\n| Cost of goods sold| 47,000 | 47,500|\n| Depreciation expense | 4,000 | 3,500 |\n| Net Income        | 11,122  | 4,556|\n|                   |      |     |\n| **Selected Balance Sheet Data as of 31 August ($ thousands)** |   \n|                   | 2013  | 2012  |\n| Current Assets    ||\n| Cash and investments | 21,122| 25,000|\n| Accounts receivable | 25,000| 13,500|\n| Inventories        | 13,000  | 8,500|\n| Total current assets | 59,122|47,000|\n| Current liabilities |      |     |\n| Accounts payable   | 15,000 |15,000|\n| Other current liabilities | 7,000 |9,000 |\n| Total current liabilities|  22,000|24,000|"
        ],
        "topic": "Accounting",
        "question_id": "test-654",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the amount of money received from clients in the year 2013 based on the chosen data from a corporation's comparative income statement and balance sheet?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales_revenue_2013 = 100000\n    accounts_receivable_2012 = 13500\n    accounts_receivable_2013 = 25000\n    \n    # Do math calculation to get the answer\n    # The amount of money received from clients in 2013 equals sales revenue plus the \n    # reduction in accounts receivable, which is accounts receivable in 2012 minus \n    # accounts receivable in 2013.\n    money_received_from_clients = sales_revenue_2013 + (accounts_receivable_2012 - accounts_receivable_2013)\n    \n    # return answer\n    return money_received_from_clients\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-655",
        "python_solution": "",
        "ground_truth": null,
        "question": "You choose to short sell 100 shares of Monticello Equestrian Centers when it's at its annual peak of 56. Your broker informs you that your margin requirement is 45% and the commission on the acquisition is $155. During the term you are shorting the stock, Monticello pays a dividend of $2.50 per share. At the conclusion of a year, you purchase 100 shares of Monticello at 45 to settle your position and are hit with a commission of $145. What is your investment's rate of return?",
        "output": [
            "Here is the Python program to answer the question:\n\n```python\ndef solution():\n    # Define variables name and value\n    short_sell_price = 56\n    shares_short_sold = 100\n    margin_requirement = 0.45\n    acquisition_commission = 155\n    dividend_per_share = 2.50\n    settlement_price = 45\n    settlement_commission = 145\n\n    # Calculate the initial investment (margin requirement)\n    initial_investment = short_sell_price * shares_short_sold * margin_requirement\n\n    # Calculate the revenue from short selling\n    revenue = (short_sell_price - settlement_price) * shares_short_sold\n\n    # Calculate the dividends paid\n    dividends_paid = dividend_per_share * shares_short_sold\n\n    # Calculate the total commissions paid\n    total_commissions = acquisition_commission + settlement_commission\n\n    # Calculate the total return\n    total_return = revenue - dividends_paid - total_commissions\n\n    # Calculate the rate of return\n    rate_of_return = total_return / initial_investment\n\n    # Convert to percentage\n    rate_of_return_percentage = rate_of_return * 100\n\n    # return answer\n    return rate_of_return_percentage\n```\n\nThis Python program will calculate the rate of return for the given investment scenario, taking into account the initial investment (margin requirement), revenue from short selling, dividends paid, total commissions paid, and total return. The final answer is returned as a percentage value."
        ]
    },
    {
        "tables": [
            "| Discount rate | 11% |\n| --- | --- |\n| Growth rate | 2% |\n| Terminal cap rate | 8% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-656",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the initial capitalization rate of the property based on the following details?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    discount_rate = 0.11  # 11%\n    growth_rate = 0.02    # 2%\n    terminal_cap_rate = 0.08  # 8%\n\n    # Do math calculation to get the answer\n    initial_cap_rate = (discount_rate - growth_rate) / (1 - (1 + growth_rate) / (1 + discount_rate))\n    initial_cap_rate = terminal_cap_rate + (discount_rate - terminal_cap_rate) / (1 + growth_rate)\n\n    # Since initial_cap_rate has two formulas, we are only using the correct formula for the problem.\n    # initial_cap_rate = terminal_cap_rate + (discount_rate - terminal_cap_rate) / (1 + growth_rate)\n\n    # return answer\n    return round(initial_cap_rate * 100, 2)  # Convert to percentage and round to 2 decimal places\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-657",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager of fixed income wishes to decrease the duration from 5.5 to 4.5 using a 3-year interest rate swap with quarterly payments. If the portfolio's market value is $10,000,000 and the modified duration of the payer swap is -2.125, what is the notional principle of the swap?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_duration = 5.5\n    target_duration = 4.5\n    portfolio_market_value = 10000000\n    swap_modified_duration = -2.125\n    \n    # Do math calculation to get the answer\n    # Calculate the change in duration needed\n    change_in_duration = target_duration - initial_duration\n    \n    # Calculate the notional principal of the swap\n    hedge_ratio = -change_in_duration / swap_modified_duration\n    notional_principal = portfolio_market_value * hedge_ratio\n    \n    # return answer\n    return notional_principal\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-658",
        "python_solution": "",
        "ground_truth": null,
        "question": "On January 1st, 20X5, Vega Holdings Corporation distributed 55,000 shares to employees as stock options. The exercise price for 24,000 of these shares is $32, while the remaining shares have an exercise price of $35. By the end of 20X5, the company's stock price had reached $42, with 1,800,000 common shares in outstanding circulation overall. The mean stock price for 20X5 was $34. Could you calculate the denominator for the diluted earnings per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_shares_outstanding = 1800000\n    shares_with_exercise_price_32 = 24000\n    shares_with_exercise_price_35 = 31000\n    exercise_price_32 = 32\n    exercise_price_35 = 35\n    mean_stock_price = 34\n    \n    # Calculate the number of shares that would be issued if all options were exercised\n    shares_from_options = shares_with_exercise_price_32 + shares_with_exercise_price_35\n    \n    # Calculate the proceeds that the company would receive if all options were exercised\n    proceeds = (shares_with_exercise_price_32 * exercise_price_32) + (shares_with_exercise_price_35 * exercise_price_35)\n    \n    # Calculate the number of shares that could be purchased with the proceeds at the mean stock price\n    shares_from_proceeds = proceeds / mean_stock_price\n    \n    # Calculate the net increase in shares outstanding due to the options\n    net_increase_in_shares = shares_from_options - shares_from_proceeds\n    \n    # Calculate the denominator for diluted earnings per share\n    denominator_for_diluted_eps = total_shares_outstanding + net_increase_in_shares\n    \n    # return answer\n    return denominator_for_diluted_eps\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-659",
        "python_solution": "",
        "ground_truth": null,
        "question": "A firm purchases a license for $6,500, planning to use it for a duration of four years. However, the firm's management anticipates deriving advantages from the license for three years, applying the straight-line amortization technique. What would be the accumulated amortization at the close of the second year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    license_cost = 6500\n    amortization_duration = 3  # years\n    \n    # Do math calculation to get the answer\n    annual_amortization = license_cost / amortization_duration\n    accumulated_amortization = annual_amortization * 2\n    \n    # return answer\n    return accumulated_amortization\n```"
        ]
    },
    {
        "tables": [
            "| Years to maturity | MRR   |\n|------------------ |-------|\n| 1                 | 1%    |\n| 2                 | 1.5%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-660",
        "python_solution": "",
        "ground_truth": null,
        "question": "One year ago, a merchant entered into a three-year interest rate swap in which he receives floating payments. Currently, the established fixed swap rate is 1.4853% (a year after the swap was initially made). The starting swap rate was set at 1.82% and the notional principle stands at $100 million. What is the value of this swap?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_principal = 100000000\n    original_swap_rate = 0.0182\n    current_swap_rate = 0.014853\n    years_to_maturity = [1, 2]\n    MRR = [0.01, 0.015]\n\n    # Calculate the present value of the swap\n    pv_fixed = 0\n    pv_floating = 0\n    for i in range(len(years_to_maturity)):\n        # Calculate present value of fixed payments\n        pv_fixed += (original_swap_rate * notional_principal) / ((1 + MRR[i]) ** years_to_maturity[i])\n        \n        # Calculate present value of floating payments\n        pv_floating += (MRR[i] * notional_principal) / ((1 + MRR[i]) ** years_to_maturity[i])\n        \n    # Calculate the value of the swap\n    swap_value = (pv_fixed - pv_floating) * (current_swap_rate - original_swap_rate)\n    \n    # return answer\n    return swap_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-661",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that the yield-to-maturity of Bond B increases by 20 basis points, and given that the bond's annual modified duration is 6.932 and the annual convexity is 59.270, what should be the anticipated percentage price change?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 6.932\n    convexity = 59.270\n    yield_change = 20 / 10000  # Convert 20 basis points to decimal\n    \n    # Do math calculation to get the answer\n    percentage_price_change = -modified_duration * yield_change + 0.5 * convexity * (yield_change ** 2)\n    \n    # return answer\n    return round(percentage_price_change * 100, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-662",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the constant maturity mortality if the assumed annual conditional prepayment rate (CPR) for a cluster of mortgages is 5% and the weighted average maturity of the respective mortgages is 15 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_cpr = 0.05  # 5% Assumed Annual Conditional Prepayment Rate (CPR)\n    weighted_average_maturity = 15  # Weighted Average Maturity of the respective mortgages in years\n\n    # Do math calculation to get the answer\n    constant_maturity_mortality = annual_cpr / weighted_average_maturity\n    \n    # return answer\n    return constant_maturity_mortality\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-663",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the anticipated rate of return for a share with CAPM, given a beta of 1.5, a risk-free rate of 5%, and a market return of 8%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beta = 1.5\n    risk_free_rate = 0.05\n    market_return = 0.08\n    \n    # Do math calculation to get the answer\n    # CAPM formula: Expected Return = Risk-Free Rate + \u03b2 * (Market Return - Risk-Free Rate)\n    expected_return = risk_free_rate + beta * (market_return - risk_free_rate)\n    \n    # Convert the result to percentage format\n    expected_return_percentage = expected_return * 100\n    \n    # return answer\n    return expected_return_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-664",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the five-year Treasury bond in the US has a yield of 2% and the swap spread is reported at 50 bps, what is the interest rate paid by the fixed payer in a five-year interest rate swap?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    treasury_yield = 0.02  # 2% yield of the five-year Treasury bond\n    swap_spread = 0.005  # 50 bps (basis points) swap spread\n    \n    # Do math calculation to get the answer\n    # Convert basis points to a decimal\n    swap_spread_decimal = swap_spread\n    \n    # Calculate the interest rate paid by the fixed payer\n    fixed_payer_interest_rate = treasury_yield + swap_spread_decimal\n    \n    # Convert the interest rate to a percentage\n    fixed_payer_interest_rate_percentage = fixed_payer_interest_rate * 100\n    \n    # return answer\n    return fixed_payer_interest_rate_percentage\n\nresult = solution()\nprint(result)\n```"
        ]
    },
    {
        "tables": [
            "| Convertible Bond Issued by Pro Star, Inc |      |\n|--------------------------------|------|\n| Issue Date                     | 6 December 20X0 |\n| Maturity Date                  | 6 December 20X4 |\n| Coupon Rate                    | 2%  |\n| Issue Price                    | $1,000 |\n| Conversion Ratio               | 31   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-665",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the conversion price of the bond in Exhibit 3, which was issued by Pro Star as a convertible bond, according to the exhibit below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    issue_price = 1000\n    conversion_ratio = 31\n    \n    # Do math calculation to get the answer\n    conversion_price = issue_price / conversion_ratio\n    \n    # return answer\n    return conversion_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-666",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, Parker Inc. acquired a production machine for $60,000 that is anticipated to produce an annual cash inflow of $25,000 for six years. The company will depreciate the machine over six years for accounting reasons, but the tax authority assumes a useful lifespan of five years for the machine. If the tax rate is 40% and the machine has no residual value, what would be the taxable income for Parker Inc. in the first year if the straight-line method is applied?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    machine_cost = 60000\n    annual_cash_inflow = 25000\n    tax_rate = 0.40\n    years_for_accounting = 6\n    years_for_tax_authority = 5\n\n    # Calculate annual depreciation for accounting purposes\n    annual_depreciation_accounting = machine_cost / years_for_accounting\n\n    # Calculate annual depreciation for tax purposes\n    annual_depreciation_tax = machine_cost / years_for_tax_authority\n\n    # Calculate taxable income in the first year\n    taxable_income = (annual_cash_inflow - annual_depreciation_tax) * (1 - tax_rate)\n\n    # Adjust for the difference in depreciation methods\n    taxable_income_adjustment = (annual_depreciation_accounting - annual_depreciation_tax) * (1 - tax_rate)\n\n    # Calculate total taxable income in the first year\n    total_taxable_income = taxable_income + taxable_income_adjustment\n\n    # return answer\n    return total_taxable_income\n```"
        ]
    },
    {
        "tables": [
            "|                                             | 2010 | 2011 | 2012 |\n|---------------------------------------------|------|------|------|\n| **Net sales**                               | 46.8 | 50.5 | 53.9 |\n| **Cost of sales**                           | 18.2 | 18.4 | 18.8 |\n| **Gross profit**                            | 28.6 | 32.1 | 35.1 |\n| **Selling, general, and administrative (SG&A) expenses** | 19.3 | 22.5 | 25.1 |\n| **Operating income**                        | 9.3  | 9.6  | 10.0 |\n| **Interest expense**                        | 0.5  | 0.7  | 0.6  |\n| **Income before provision for income tax**  | 8.8  | 8.9  | 9.4  |\n| **Provision for income taxes**              | 2.8  | 2.8  | 3.1  |\n| **Net income**                              | 6.0  | 6.1  | 6.3  |"
        ],
        "topic": "Accounting",
        "question_id": "test-667",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on Exhibits 1, what is Applicant B's prediction for selling, general, and administrative costs in 2013, considering that his forecast states the following: net sales will increase at the average yearly growth rate in net sales for the years 2010-2012 and the 2013 SG&A/net sales ratio will remain consistent with the average ratio during 2010-2012?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_sales_2010 = 46.8\n    net_sales_2011 = 50.5\n    net_sales_2012 = 53.9\n    sga_expenses_2010 = 19.3\n    sga_expenses_2011 = 22.5\n    sga_expenses_2012 = 25.1\n    \n    # Calculate average yearly growth rate in net sales for the years 2010-2012\n    avg_growth_rate = ((net_sales_2011 - net_sales_2010) / net_sales_2010 + (net_sales_2012 - net_sales_2011) / net_sales_2011) / 2\n    \n    # Calculate forecasted net sales for 2013\n    forecasted_net_sales = net_sales_2012 * (1 + avg_growth_rate)\n    \n    # Calculate average SG&A/net sales ratio during 2010-2012\n    avg_sga_ratio = (sga_expenses_2010 / net_sales_2010 + sga_expenses_2011 / net_sales_2011 + sga_expenses_2012 / net_sales_2012) / 3\n    \n    # Calculate forecasted SG&A expenses for 2013\n    forecasted_sga_expenses = forecasted_net_sales * avg_sga_ratio\n    \n    # return answer\n    return forecasted_sga_expenses\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class    | Geometric Return (%) |\n| -------------- | -------------------- |\n| Equities       | 8.0                  |\n| Corporate Bonds| 6.5                  |\n| Treasury bills | 2.5                  |\n| Inflation      | 2.1                  |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-668",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the recorded historical geometric actual return rate for company bonds as per the researcher?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    corporate_bonds_return = 6.5\n    \n    # No calculation needed, the answer is directly provided in the table\n    answer = corporate_bonds_return\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-669",
        "python_solution": "",
        "ground_truth": null,
        "question": "Firm N, which uses the IFRS system, allocated $22 million for inventory acquisition last year. Following a natural calamity, the inventory's value was reduced to $19 million. However, by the end of the year, certain equipment was still functional, raising the actual inventory value to $25 million. What should be the reported inventory value for Firm N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_inventory_allocation = 22000000\n    reduced_inventory_value = 19000000\n    actual_inventory_value = 25000000\n\n    # Since the actual inventory value is higher than the initial allocation,\n    # and according to the lower of cost or net realizable value rule under IFRS,\n    # we would report the lower of the two, which in this case is the initial allocation.\n    # However, it seems we are given the value post write-up, thus \n    # we do not apply this rule strictly here but instead take the provided values at face value.\n    reported_inventory_value = actual_inventory_value\n\n    # return answer\n    return reported_inventory_value\n```"
        ]
    },
    {
        "tables": [
            "|                      | Portfolio W    | Futures Contract and CTD Bond |\n|----------------------|----------------|------------------------------|\n| Market value         | $120,349,000   | Price                        | 143.20                        |\n| Modified duration    | 9.30           | Modified duration            | 9.00                          |\n| Basis point value    | $111,924.57    | Basis point value            | 128.88                        |\n|                      |                | Conversion factor            | 0.75                          |\n|                      |                | Contract size                | $100,000                      |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-670",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on Exhibit 1, to meet the goal of junior analyst, Benjamin, to lower the modified duration of his fully invested US Treasuries portfolio, Portfolio B, to 3.00, how many Treasury futures contracts does Benjamin need to sell?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    portfolio_market_value = 120349000\n    portfolio_modified_duration = 9.30\n    portfolio_basis_point_value = 111924.57\n    futures_price = 143.20\n    futures_modified_duration = 9.00\n    futures_basis_point_value = 128.88\n    conversion_factor = 0.75\n    contract_size = 100000\n    target_modified_duration = 3.00\n\n    # Do math calculation to get the answer\n    futures_notional_value = (contract_size * conversion_factor * futures_price) / 100\n    portfolio_bpvdollar = portfolio_basis_point_value / 10000\n    futures_bpvdollar = (futures_basis_point_value / 10000) * futures_notional_value\n    \n    number_of_contracts = (portfolio_market_value * (portfolio_modified_duration - target_modified_duration)) / (futures_bpvdollar * 100)\n    \n    # return answer\n    return round(number_of_contracts)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-671",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial institution has recently received loan applications amounting to $210 million; it plans to acquire $95M in novel Treasury bonds releasing this week and foresees that its top corporate client's credit line withdrawals will reach $115M. The total funds from deposits and other client funds obtained today amount to $210 million, and the expected funds to be garnered next week amounts to an additional $150M. Based on the provided information, what is the discrepancy in available funds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_applications = 210000000  # $210 million\n    treasury_bonds = 95000000     # $95 million\n    credit_line_withdrawals = 115000000  # $115 million\n    total_funds_today = 210000000  # $210 million\n    expected_funds_next_week = 150000000  # $150 million\n    \n    # Do math calculation to get the answer\n    total_outflows = loan_applications + treasury_bonds + credit_line_withdrawals\n    total_inflows = total_funds_today + expected_funds_next_week\n    discrepancy_in_available_funds = total_outflows - total_inflows\n    \n    # return answer\n    return discrepancy_in_available_funds\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-672",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a foreign exchange broker determined the correlation between the spot and futures to be 0.875, the yearly standard deviation of the spot price to be $1.10, and the yearly standard deviation of the futures price to be $1.3. What would be the hedge ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation_between_spot_and_futures = 0.875\n    yearly_std_dev_of_spot_price = 1.10\n    yearly_std_dev_of_futures_price = 1.3\n    \n    # Do math calculation to get the answer\n    hedge_ratio = correlation_between_spot_and_futures * (yearly_std_dev_of_spot_price / yearly_std_dev_of_futures_price)\n    \n    # return answer\n    return hedge_ratio\n\nresult = solution()\nprint(result)\n```"
        ]
    },
    {
        "tables": [
            "| Book value per share, beginning of 2015 | 5.0 |\n| --------------------------------------- | --- |\n| Cost of equity                          | 8%  |\n| Persistence factor                      | 0.85|",
            "|                       | 2015 | 2016 | 2017 |\n|-----------------------|------|------|------|\n| Expected earnings per share | 2.0  | 2.2  | 2.45 |\n| Expected dividend per share | 1.2  | 0.9  | 1.11 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-673",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided in the table below, Henry is getting ready to reassess the worth of XYZ Corp. The business anticipates a return on equity (ROE) of 34.5% in 2017, but it's expected to gradually decrease towards the cost of equity afterward. From the start of 2015, utilizing the multi-stage residual income (RI) model, determine the fundamental value of XYZ Corp's equity. Can you calculate the fundamental price per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    book_value_per_share_2015 = 5.0\n    cost_of_equity = 0.08\n    persistence_factor = 0.85\n    expected_earnings_per_share_2015 = 2.0\n    expected_earnings_per_share_2016 = 2.2\n    expected_earnings_per_share_2017 = 2.45\n    expected_dividend_per_share_2015 = 1.2\n    expected_dividend_per_share_2016 = 0.9\n    expected_dividend_per_share_2017 = 1.11\n\n    # Calculate ROE for 2015 and 2016\n    roe_2015 = expected_earnings_per_share_2015 / book_value_per_share_2015\n    roe_2016 = expected_earnings_per_share_2016 / (book_value_per_share_2015 + expected_earnings_per_share_2015 - expected_dividend_per_share_2015)\n    \n    # Calculate book value per share for 2016 and 2017\n    book_value_per_share_2016 = book_value_per_share_2015 + expected_earnings_per_share_2015 - expected_dividend_per_share_2015\n    book_value_per_share_2017 = book_value_per_share_2016 + expected_earnings_per_share_2016 - expected_dividend_per_share_2016\n\n    # Calculate residual income for each year\n    residual_income_2015 = (roe_2015 - cost_of_equity) * book_value_per_share_2015\n    residual_income_2016 = (roe_2016 - cost_of_equity) * book_value_per_share_2016\n    residual_income_2017 = (0.345 - cost_of_equity) * book_value_per_share_2017\n\n    # Calculate present value of residual income for the first three years\n    present_value_residual_income_2015 = residual_income_2015 / (1 + cost_of_equity)\n    present_value_residual_income_2016 = residual_income_2016 / (1 + cost_of_equity) ** 2\n    present_value_residual_income_2017 = residual_income_2017 / (1 + cost_of_equity) ** 3\n\n    # Calculate terminal value using persistence factor\n    terminal_value = (residual_income_"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-674",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood that a stock B from the stock market, with an average return of 18 percent and a standard deviation of the estimate return of 25 percent annually, exceeds a return of 22 percent, assuming the returns are normally distributed? A market researcher is currently investigating this.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    avg_return = 0.18  # 18 percent\n    std_dev = 0.25  # 25 percent\n    target_return = 0.22  # 22 percent\n    \n    # Do math calculation to get the answer\n    # We use the z-score formula to find the probability\n    # z = (X - \u03bc) / \u03c3, where X is the target return, \u03bc is the average return, and \u03c3 is the standard deviation\n    z_score = (target_return - avg_return) / std_dev\n    \n    # We use the scipy.stats module to find the probability that the stock exceeds the target return\n    from scipy.stats import norm\n    probability = 1 - norm.cdf(z_score)\n    \n    # return answer\n    return probability\n```\n\nThis Python program calculates the likelihood that stock B exceeds a return of 22 percent by using the z-score formula and the cumulative distribution function (CDF) from the `scipy.stats` module, assuming the returns are normally distributed. The result is a probability value between 0 and 1."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-675",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine in 2017, a USD/EUR spot exchange rate hits 1.2865 at a certain period. The one-year forward rate then is 1.28485. What would be the one-year forward points quoted as?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_exchange_rate = 1.2865\n    one_year_forward_rate = 1.28485\n    \n    # Do math calculation to get the answer\n    forward_points = (spot_exchange_rate - one_year_forward_rate) * 10000\n    \n    # return answer\n    return forward_points\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-676",
        "python_solution": "",
        "ground_truth": null,
        "question": "Fortune Corporation has a tax burden of 70%, interest burden of 0.8 times, current ratio of 1.5 times, EBIT margin of 20%, asset turnover of 3 times, leverage ratio of 1.6 times. Can you compute the corporation's return on equity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    tax_burden = 0.7  # 70%\n    interest_burden = 0.8  # 0.8 times\n    current_ratio = 1.5  # 1.5 times\n    ebit_margin = 0.2  # 20%\n    asset_turnover = 3  # 3 times\n    leverage_ratio = 1.6  # 1.6 times\n\n    # Do math calculation to get the answer\n    # We use the Dupont analysis formula for ROE: ROE = (EBIT / Sales) * (Sales / Total Assets) * (Total Assets / Total Equity)\n    # Since we don't have the Sales and Total Assets values, we use the given ratios to compute the return on equity\n    if current_ratio == 0 or asset_turnover == 0 or leverage_ratio == 0:\n        roe = 0  # if any of the current ratio, asset turnover, or leverage ratio is 0, return on equity is 0\n    else:\n        return_on_assets = ebit_margin * asset_turnover\n        roe = return_on_assets * leverage_ratio * interest_burden * (1 / tax_burden)\n\n    # return answer\n    return roe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-677",
        "python_solution": "",
        "ground_truth": null,
        "question": "The value of the stocks portfolio stands at $10,000,000. The company intends to utilize futures contracts valued at $125,000 to bring down the beta from 1.2 to zero over a span of two months. The beta value of these futures contracts is 0.95. How many futures contracts should the company sell?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 10000000  # value of the stocks portfolio\n    beta_S = 1.2  # beta of the stocks portfolio\n    F = 125000  # value of the futures contracts\n    beta_F = 0.95  # beta of the futures contracts\n\n    # Do math calculation to get the answer\n    N = (beta_S * S) / (beta_F * F)\n    \n    # return answer\n    return N\n```"
        ]
    },
    {
        "tables": [
            "| Accounting profit (earnings before taxes) | $250,000 |\n|---|---|\n| Taxable income | $215,000 |\n| Tax rate | 30% |\n| Income taxes paid in year | $61,200 |\n| Deferred tax liability, start of year | $82,400 |\n| Deferred tax liability, end of year | $90,650 |"
        ],
        "topic": "Accounting",
        "question_id": "test-678",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the income tax expense listed on this year's earnings statement for a corporation for the current fiscal year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    income_taxes_paid = 61200\n    deferred_tax_liability_start = 82400\n    deferred_tax_liability_end = 90650\n\n    # Do math calculation to get the answer\n    income_tax_expense = income_taxes_paid + (deferred_tax_liability_end - deferred_tax_liability_start)\n    \n    # return answer\n    return income_tax_expense\n```"
        ]
    },
    {
        "tables": [
            "| Option        | W     | X     | Y     | z     |\n|---------------|-------|-------|-------|-------|\n| Type of Option| Call  | Call  | Put   | Put   |\n| Exercise Price| $38.00| $46.00| $38.00| $36.00|\n| N (d1)        | 0.56  | 0.30  | 0.56  | 0.64  |\n| N (d2)        | 0.45  | 0.21  | 0.45  | 0.553 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-679",
        "python_solution": "",
        "ground_truth": null,
        "question": "If she chooses to temporarily hedge the 100,000 shares of Apoth she possesses until the FDA's review concludes, how many option X contracts would Smith need to sell to effectuate the hedge plan, based on the information in Exhibit 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    delta_call_X = 0.56  # N(d1) for Call Option X\n    shares_to_hedge = 100000\n\n    # Calculate the number of options to sell\n    # Delta of a call option is the change in option price divided by the change in underlying asset price\n    # So, the number of options to sell is the number of shares to hedge divided by the absolute value of delta\n    num_options_to_sell = shares_to_hedge / abs(delta_call_X)\n\n    # Each options contract typically controls 100 shares\n    # So, we divide the total number of options by 100\n    num_contracts_to_sell = num_options_to_sell / 100\n\n    # return answer\n    return round(num_contracts_to_sell)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-680",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's assume there's an $80 million exposure to a certain business partner that's backed by $70 million worth of collateral. This collateral is made up of bonds from a company with an A-level rating. The business partner holds a B+ rating. With a 150% risk weight for the business partner and a 50% risk weight for the collateral, what would the risk-weighted assets be for the exposure using a straightforward approach?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    exposure = 80000000  # exposure to business partner\n    collateral_value = 70000000  # value of collateral\n    business_partner_rw = 1.5  # 150% risk weight for business partner\n    collateral_rw = 0.5  # 50% risk weight for collateral\n\n    # Do math calculation to get the answer\n    rwa = (exposure - collateral_value) * business_partner_rw + collateral_value * collateral_rw\n\n    # return answer\n    return rwa\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-681",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Thompson, a credit analyst, is planning to use the data from a 5-year corporate bond labeled Bond E that is presently yielding a return of 7.5%, with a comparable government bond offering 2.5%, and a suitable CDS contract bearing a credit spread of 4.5% to carry out a basis trade, what will be the accrued profit if there's a convergence in the bond and CDS market?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_yield = 0.075  # 7.5%\n    government_bond_yield = 0.025  # 2.5%\n    cds_credit_spread = 0.045  # 4.5%\n    notional_amount = 1000000  # assume notional amount is $1 million\n    time_to_maturity = 5  # 5-year bond\n    \n    # Calculate the bond's credit spread\n    bond_credit_spread = bond_yield - government_bond_yield\n    \n    # Calculate the basis (difference between bond's credit spread and CDS credit spread)\n    basis = bond_credit_spread - cds_credit_spread\n    \n    # Calculate the accrued profit if there's a convergence in the bond and CDS market\n    accrued_profit = basis * notional_amount * time_to_maturity\n    \n    # return answer\n    return accrued_profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-682",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming that Corporation N's pretax profits are taxed at the business level of 35%, and the individual tax rate on dividends is at 15%. All the pretax income are dedicated to dividends. What is the effective tax rate on the dividend?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    pretax_profits = 1  # assuming $1 of pretax profits for simplicity\n    business_level_tax_rate = 0.35\n    individual_tax_rate_on_dividends = 0.15\n    \n    # Do math calculation to get the answer\n    after_business_tax_income = pretax_profits * (1 - business_level_tax_rate)\n    dividend_received_by_individual = after_business_tax_income\n    individual_tax_on_dividend = dividend_received_by_individual * individual_tax_rate_on_dividends\n    effective_tax_rate_on_dividend = (pretax_profits - dividend_received_by_individual + individual_tax_on_dividend) / pretax_profits\n    \n    # return answer\n    return effective_tax_rate_on_dividend\n```"
        ]
    },
    {
        "tables": [
            "|       | Classification | Cost   | Market value 2018 | Market value 2019 |\n|-------|----------------|--------|-------------------|-------------------|\n| Shoes Corp | FVOCI   | 12,000 | 15,000  | 16,000  |\n| Angle PD   | Amortized cost  | 35,000 | 32,000  | 33,000  |\n| T-vision   | FVPL   | 42,000 | 45,000  | 56,000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-683",
        "python_solution": "",
        "ground_truth": null,
        "question": "In her role at the Equity investment company, Fabian, a CFA, is preparing a research report on a company known as PZ, which is listed in HK and follows IFRS 9. She pulled information from PZ's year-end 2019 financial report regarding three fixed income investments (assuming cost equals par value). Had Shoes Corp been classified as a Fair Value through P/L in 2019, what would the earnings before taxes have been?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shoesCorp_cost = 12000\n    shoesCorp_market_value_2019 = 16000\n    anglePD_cost = 35000\n    anglePD_market_value_2019 = 33000\n    tvision_cost = 42000\n    tvision_market_value_2019 = 56000\n    \n    # Calculate valuation adjustment if Shoes Corp was classified as FVPL in 2019\n    valuation_adjustment_shoesCorp = shoesCorp_market_value_2019 - shoesCorp_cost\n    \n    # No valuation adjustment is needed for Angle PD (Amortized cost) and T-vision (already FVPL)\n    valuation_adjustment_anglePD = 0\n    valuation_adjustment_tvision = 0\n    \n    # Calculate total valuation adjustment\n    total_valuation_adjustment = valuation_adjustment_shoesCorp + valuation_adjustment_anglePD + valuation_adjustment_tvision\n    \n    # The earnings before taxes would be increased by the total valuation adjustment\n    answer = total_valuation_adjustment\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-684",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current value of a European-style put option is set to be determined by a CEO using a two-period binomial model. The present stock price is $32, with the put option's exercise price also at $32. The up and down factors are 1.12 and 0.92 respectively, with a risk-free rate of 5%. What is the value of this put option?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 32  # present stock price\n    K = 32  # exercise price\n    u = 1.12  # up factor\n    d = 0.92  # down factor\n    r = 0.05  # risk-free rate\n\n    # Calculate the stock prices after one period\n    S1u = S0 * u\n    S1d = S0 * d\n\n    # Calculate the stock prices after two periods\n    S2uu = S1u * u\n    S2ud = S1u * d\n    S2dd = S1d * d\n\n    # Calculate the put option values at expiration\n    P2uu = max(0, K - S2uu)\n    P2ud = max(0, K - S2ud)\n    P2dd = max(0, K - S2dd)\n\n    # Calculate the risk-neutral probabilities\n    p = (1 + r - d) / (u - d)\n    q = 1 - p\n\n    # Calculate the put option values after one period\n    P1u = (P2uu * p + P2ud * q) / (1 + r)\n    P1d = (P2ud * p + P2dd * q) / (1 + r)\n\n    # Calculate the put option value at present\n    P0 = (P1u * p + P1d * q) / (1 + r)\n\n    # return answer\n    return P0\n\n# Get the answer\nanswer = solution()\nprint(answer)\n```\n\nThis program calculates the value of the European-style put option using the two-period binomial model. The present stock price, exercise price, up and down factors, and risk-free rate are used to calculate the put option value at expiration, and then the risk-neutral probabilities are calculated to determine the put option values after one period and at present. The result is the value of the put option.\n\nPlease let me know if you need any further modifications."
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-685",
        "python_solution": "",
        "ground_truth": null,
        "question": "The 15-month investment duration for a bond yielded a 12% return. What is the annualized yield?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_return = 12  # total return in percentage\n    investment_duration = 15  # investment duration in months\n    \n    # Do math calculation to get the answer\n    monthly_return = (total_return / 100) / investment_duration\n    annualized_yield = (1 + monthly_return) ** 12 - 1\n    annualized_yield_percentage = annualized_yield * 100\n    \n    # return answer\n    return annualized_yield_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-686",
        "python_solution": "",
        "ground_truth": null,
        "question": "A manager of an endowment fund is assessing the market risk of Omega Manufacturing Fund. The fund projects an annual return of 7.1% and a volatility of 7.9%, and it is compared against the Russell 2000 Index. It is assumed by the manager that the anticipated annual return of the Russell 2000 Index is 7.8%, with a yearly volatility of 9.8%. In accordance with the Capital Asset Pricing Model, if the risk-free rate per year is 3.2%, what would be the beta of Omega Manufacturing Fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    omega_return = 0.071  # 7.1%\n    omega_volatility = 0.079  # 7.9%\n    russell_return = 0.078  # 7.8%\n    russell_volatility = 0.098  # 9.8%\n    risk_free_rate = 0.032  # 3.2%\n\n    # Calculate the market excess return\n    market_excess_return = russell_return - risk_free_rate\n\n    # Calculate the Omega Manufacturing Fund's excess return\n    omega_excess_return = omega_return - risk_free_rate\n\n    # Calculate the beta of Omega Manufacturing Fund\n    # according to the Capital Asset Pricing Model (CAPM)\n    # which states that expected excess return of an investment \n    # is equal to beta times the expected excess return of the market.\n    beta = omega_excess_return / market_excess_return\n\n    # return answer\n    return beta\n```"
        ]
    },
    {
        "tables": [
            "| Year | Hazard Rate |\n|------|-------------|\n| 1    | 0.15%       |\n| 2    | 0.25%       |\n| 3    | 0.35%       |\n| 4    | 0.50%       |\n| 5    | 0.65%       |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-687",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the likelihood of the firm failing to fulfill its obligations on Bond C, a five-year investment-grade bond, within the initial 4 years, as per the given information?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    hazard_rates = [0.0015, 0.0025, 0.0035, 0.0050, 0.0065]\n    years = [1, 2, 3, 4, 5]\n    \n    # Calculate survival probabilities for each year\n    survival_probabilities = []\n    for i in range(len(years)):\n        if i == 0:\n            survival_probability = 1 - hazard_rates[i]\n        else:\n            survival_probability = survival_probabilities[i-1] * (1 - hazard_rates[i])\n        survival_probabilities.append(survival_probability)\n    \n    # Calculate probability of default within the initial 4 years\n    probability_of_default = 1 - survival_probabilities[3]\n    \n    # return answer\n    return probability_of_default\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-688",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the neckline is positioned at \u20ac100, the shoulders at \u20ac90, and the head at \u20ac75 in a reversed head and shoulders pattern, what is the target value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    neckline = 100\n    shoulders = 90\n    head = 75\n    \n    # Do math calculation to get the answer\n    target_value = neckline + (neckline - head)\n    \n    # return answer\n    return target_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-689",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the monthly repayment for a customer who buys a car with a loan of \u20ac30,000 that is set to be paid off in five years with fixed monthly installments, an annual nominal interest of 8% and interest compounded monthly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 30000  # in euros\n    annual_interest_rate = 0.08  # 8%\n    monthly_interest_rate = annual_interest_rate / 12\n    number_of_years = 5\n    number_of_months = number_of_years * 12\n    \n    # Do math calculation to get the answer\n    monthly_repayment = loan_amount * monthly_interest_rate * (1 + monthly_interest_rate) ** number_of_months / ((1 + monthly_interest_rate) ** number_of_months - 1)\n    \n    # return answer\n    return round(monthly_repayment, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-690",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming we select 20 students to sit for the university admission test, how many may potentially suffer from anxiety neurosis if it's believed that 45% of all examinees experience it?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_students = 20\n    anxiety_percentage = 0.45\n    \n    # Do math calculation to get the answer\n    students_with_anxiety = total_students * anxiety_percentage\n    \n    # return answer\n    return students_with_anxiety\n\n# execute the function\nanswer = solution()\nprint(\"The final answer is\", answer) \n```"
        ]
    },
    {
        "tables": [
            "| Spot rate (USD/AUD) | 0.9062/0.9066 |\n| --- | --- |\n| Three-month points | -36.8/-36.4 |\n| Three-month Libor (AUD) | 2.88% |\n| Three-month Libor (USD) | 0.23% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-691",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the beginning of the year, Brighton offset a major exposure to the Australian dollar (AUD) by selling AUD 5 million forward against the US dollar (USD) at the all-in forward price of 0.8940 (USD/AUD). Currently, it's three months away from the settlement date and Sanderson wants to mark the forward position to market. Exhibit 1 provides data on the current rates in foreign exchange markets. What is the mark-to-market value for Brighton's forward position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    remaining_life = 9 / 12  # Remaining life of the forward contract\n    contracted_rate = 0.8940  # All-in forward price (USD/AUD)\n    points_bid = -36.8  # Three-month points bid (in pips)\n    points_offer = -36.4  # Three-month points offer (in pips)\n    spot_rate = 0.9062  # Spot rate bid (USD/AUD)\n    libor_usd = 0.0023  # Three-month Libor (USD)\n    libor_aud = 0.0288  # Three-month Libor (AUD)\n    face_value = 5000000  # Face value of the forward contract (in AUD)\n    \n    # Convert points from pips to decimal\n    points_bid_decimal = points_bid / 10000\n    points_offer_decimal = points_offer / 10000\n    \n    # Calculate three-month AUD Libor in decimal\n    libor_aud_decimal = libor_aud / 100\n    \n    # Calculate three-month EUR Libor in decimal\n    libor_usd_decimal = libor_usd / 100\n    \n    # Calculate three-month forward bid (USD/AUD) using discrete compounding\n    forward_bid = spot_rate * (1 + libor_aud_decimal * remaining_life) / (1 + libor_usd_decimal * remaining_life)\n    \n    # The points can be satisfied by either adding the points to the bid price to get the all-in rate\n    # Or by subtracting the points from the all-in rate to get the bid price\n    # Here we subtract the points bid from the all-in forward price to calculate the implied forward bid rate of 3-month\n    implied_forward_rate_bid = (forward_bid - points_bid_decimal)\n    \n    # Calculate profit or loss at settlement\n    value_at_settlement = face_value * (contracted_rate - implied_forward_rate_bid)\n    \n    # Discount to present value using AUD Libor\n    present_value_of_profit = value_at_settlement / (1 + libor_aud_decimal * remaining_life)\n    \n    # return answer\n    return present_value_of_profit\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-692",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the worth of a share which is projected to pay a $3 dividend in the subsequent year, with a consistent growth rate of 3% and a needed return rate of 8%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend = 3  # in dollars\n    growth_rate = 0.03  # 3%\n    required_return_rate = 0.08  # 8%\n    \n    # Do math calculation to get the answer\n    # Using Gordon Growth Model formula: P = D / (r - g)\n    # where P = stock price, D = dividend, r = required return rate, g = growth rate\n    stock_price = dividend / (required_return_rate - growth_rate)\n    \n    # return answer\n    return stock_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-693",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a perfectly competitive market where the demand schedule is P = 165 - 3Q (for Q \u2264 55), how is the entry price for new players determined given that the long-term total cost for every business is 125 + Q + 5Q2, the average cost is 125/Q + 1 + 5Q, and the marginal cost is 1 + 10Q?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fixed_cost = 125\n    \n    # Do math calculation to get the answer\n    # Calculate the minimum of the average cost (AC) to determine the entry price\n    Q_critical = (fixed_cost / 5) ** 0.5  # The critical quantity where average cost is minimized\n    min_avg_cost = (fixed_cost / Q_critical) + 1 + 5 * Q_critical  # Calculate the minimum average cost\n    \n    entry_price = min_avg_cost\n    \n    # return answer\n    return entry_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-694",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer acquires a five-year bond with a 4% annual coupon for 104.58 and sells it precisely three years subsequent to the purchase. Right after the bond is bought and prior to receiving the first coupon, interest rates drop to 2.25%, and they stay at this rate for the following three years. Assuming that the coupon payments are collected and re-invested at 2.25%, what is the buyer's actualized horizon yield?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price = 104.58\n    annual_coupon_rate = 0.04\n    face_value = 100\n    years_to_maturity = 5\n    years_held = 3\n    interest_rate_after_purchase = 0.0225\n\n    # Calculate the coupon payment\n    coupon_payment = annual_coupon_rate * face_value\n\n    # Calculate the present value of the bond at the time of sale (after 3 years)\n    # We are calculating the PV of the remaining two years\n    remaining_years = years_to_maturity - years_held\n    present_value_at_sale = coupon_payment * ((1 - (1 + interest_rate_after_purchase)**(-remaining_years)) / interest_rate_after_purchase) + face_value / (1 + interest_rate_after_purchase)**remaining_years\n\n    # Calculate the future value of the coupon payments collected and re-invested for 3 years\n    future_value_of_coupons = coupon_payment * (((1 + interest_rate_after_purchase)**years_held - 1) / interest_rate_after_purchase)\n\n    # Calculate the total value at the time of sale\n    total_value_at_sale = present_value_at_sale + future_value_of_coupons\n\n    # Calculate the actualized horizon yield (we use the initial purchase price and the total value at sale)\n    # This represents the rate of return over the 3-year period\n    horizon_yield = (total_value_at_sale / purchase_price)**(1/years_held) - 1\n\n    # Express the answer as a percentage\n    horizon_yield_percentage = horizon_yield * 100\n\n    # return answer\n    return horizon_yield_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-695",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering the factors below, calculate the accrued interest for every 100 of par value for Bond H on the settlement day of 16 June 2014. The factors are: Annual Coupon - 5%, Coupon Payment Frequency - Semiannual, Interest Payment Dates - 10 April and 10 October, Maturity Date - 10 October 2016, Day Count Convention - 30/360, Annual Yield-to-Maturity - 4%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_coupon_rate = 0.05\n    coupon_payment_frequency = 2  # Semiannual\n    interest_payment_date = \"10 April and 10 October\"\n    maturity_date = \"10 October 2016\"\n    settlement_date = \"16 June 2014\"\n    day_count_convention = \"30/360\"\n    annual_yield_to_maturity = 0.04\n    par_value = 100\n\n    # Extract previous interest payment date\n    prev_interest_payment_date = \"10 April 2014\"\n\n    # Calculate days from previous interest payment date to settlement date using 30/360 convention\n    days = 68  # Using 30/360 convention\n\n    # Calculate accrued interest for every 100 of par value\n    accrued_interest = (annual_coupon_rate * par_value / coupon_payment_frequency) * (days / 180)\n\n    # return answer\n    return accrued_interest\n\nans = solution()\nprint(ans)assistant\n\nTo run this code, save it in a Python file and execute it. The provided program calculates the accrued interest for Bond H based on given parameters."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-696",
        "python_solution": "",
        "ground_truth": null,
        "question": "The corporation Successful Inc. has an operating profit margin of 10%, an asset turnover ratio of 1.5, a financial leverage multiplier of 1.6 times, and an interest burden of 0.8. The firm's ROE is 0.144, can you compute the firm's average tax rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_profit_margin = 0.1\n    asset_turnover_ratio = 1.5\n    financial_leverage_multiplier = 1.6\n    interest_burden = 0.8\n    ROE = 0.144\n    \n    # Do math calculation to get the answer\n    # Using DuPont analysis: ROE = (operating_profit_margin * asset_turnover_ratio * financial_leverage_multiplier * interest_burden * (1 - tax_rate))\n    # Solving for tax rate: 0.144 = 0.1 * 1.5 * 1.6 * 0.8 * (1 - tax_rate)\n    # 0.144 = 0.192 * (1 - tax_rate)\n    # (1 - tax_rate) = 0.144 / 0.192\n    # tax_rate = 1 - 0.75\n    \n    total_non_tax_roe = operating_profit_margin * asset_turnover_ratio * financial_leverage_multiplier * interest_burden\n    pre_tax_roe = ROE / total_non_tax_roe\n    \n    tax_rate = 1 - pre_tax_roe\n    \n    # return answer\n    return tax_rate\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price (\u20ac) | End of Period Price (\u00a3) | Total Dividends (\u20ac) |\n|----------|-------------------------------|-------------------------|----------------------|\n| Able     | 10.00                          | 12.00                   | 0.75                 |\n| Baker    | 20.00                          | 19.00                   | 1.00                 |\n| Charlie  | 30.00                          | 30.00                   | 2.00                 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-697",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial expert collects the following data for an equal-weighted index made up of assets Alpha, Beta, and Gamma: What is the total return of the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = [10.00, 20.00, 30.00]\n    end_prices = [12.00, 19.00, 30.00]\n    total_dividends = [0.75, 1.00, 2.00]\n    \n    # Calculate individual asset returns\n    asset_returns = []\n    for i in range(len(beginning_prices)):\n        asset_return = (end_prices[i] - beginning_prices[i] + total_dividends[i]) / beginning_prices[i]\n        asset_returns.append(asset_return)\n    \n    # Calculate the total return of the index as the average of asset returns\n    total_index_return = sum(asset_returns) / len(asset_returns)\n    \n    # return answer\n    return total_index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-698",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we take 2016 as the base period, and the GDP in Nation Y for that year and the following year was $200 billion and $220 billion respectively, what would the GDP deflator be for 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    base_year_gdp = 200  # in billions\n    current_year_gdp = 220  # in billions\n    \n    # Do math calculation to get the answer\n    gdp_deflator = (current_year_gdp / base_year_gdp) * 100\n    \n    # return answer\n    return gdp_deflator\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-699",
        "python_solution": "",
        "ground_truth": null,
        "question": "If every yearly trial is independent of each other, what's the probability that BBB company's stock, which has a 30% chance to increase annually, will go up more than once in the coming three years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_increase = 0.3  # probability of stock increasing annually\n    prob_not_increase = 1 - prob_increase  # probability of stock not increasing annually\n    num_years = 3\n    \n    # Do math calculation to get the answer\n    # calculate the probability of stock increasing more than once\n    # the complementary event: probability of stock not increasing at all or increasing exactly once\n    prob_not_increase_at_all = (prob_not_increase) ** num_years\n    prob_increase_exactly_once = (num_years * prob_increase * (prob_not_increase ** (num_years - 1)))\n    \n    prob_increase_more_than_once = 1 - (prob_not_increase_at_all + prob_increase_exactly_once)\n    \n    # return answer\n    return prob_increase_more_than_once\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|----------|---------------------------|-------------------------------|\n| A        | 20                        | 16                            |\n| B        | 20                        | 12                            |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-700",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an manager named Laurel from a finance firm recently built a portfolio with two unrelated assets, what would be the estimated standard deviation assuming equal weightage for both assets?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_standard_deviation_A = 16  # in percentage\n    expected_standard_deviation_B = 12  # in percentage\n    weightage_A = 0.5\n    weightage_B = 0.5\n\n    # Do math calculation to get the answer\n    # Since the assets are unrelated, covariance is zero\n    # Hence, portfolio variance is the sum of the variances of individual assets\n    variance_A = (expected_standard_deviation_A / 100) ** 2\n    variance_B = (expected_standard_deviation_B / 100) ** 2\n    \n    portfolio_variance = (weightage_A ** 2) * variance_A + (weightage_B ** 2) * variance_B\n    portfolio_standard_deviation = (portfolio_variance) ** 0.5\n    portfolio_standard_deviation_percentage = portfolio_standard_deviation * 100\n\n    # return answer\n    return portfolio_standard_deviation_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $4,000,000 |\n|---------|------------|\n| Cost of goods sold | $3,000,000 |\n| Other operating expenses | $500,000 |\n| Interest expense | $100,000 |\n| Tax expense | $120,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-701",
        "python_solution": "",
        "ground_truth": null,
        "question": "The gross profit of the manufacturing company, Denali Limited, is equal to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 4000000\n    cost_of_goods_sold = 3000000\n    \n    # Do math calculation to get the answer\n    gross_profit = revenue - cost_of_goods_sold\n    \n    # return answer\n    return gross_profit\n```"
        ]
    },
    {
        "tables": [
            "| Labor(L) | Total Product(TP) | Average Product(AP) |\n|----------|-------------------|---------------------|\n| 1        | 100               | 100                 |\n| 2        | 210               | 105                 |\n| 3        | 300               | 100                 |\n| 4        | 360               | 90                  |\n| 5        | 400               | 80                  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-702",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided data chart, what is the marginal product when the labor (L) equals 3?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    labor_2_total_product = 210\n    labor_3_total_product = 300\n    \n    # Do math calculation to get the answer\n    marginal_product = labor_3_total_product - labor_2_total_product\n    \n    # return answer\n    return marginal_product\n```"
        ]
    },
    {
        "tables": [
            "|                  |   Prior Year    |        |   Current Year   |        |\n|------------------|-----------------|--------|------------------|--------|\n|      Goods       |    Quantity     | Price  |    Quantity      | Price  |\n| 5 lb.bag sugar   |     150 bags    |  $3.12 |    180 bags      |  $2.92 |\n| 5 lb.bag flour   |     800 bags    |  $2.18 |    750 bags      |  $3.12 |\n| Frozen pizza(each)|    250          |  $2.90 |    250           |  $3.00 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-703",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the Paasche Index if we utilize the consumption basket for this year alongside the subsequent data from a three-item consumption goods basket, which we use to calculate inflation rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prior_year_quantity_sugar = 150\n    prior_year_price_sugar = 3.12\n    current_year_quantity_sugar = 180\n    current_year_price_sugar = 2.92\n    \n    prior_year_quantity_flour = 800\n    prior_year_price_flour = 2.18\n    current_year_quantity_flour = 750\n    current_year_price_flour = 3.12\n    \n    prior_year_quantity_pizza = 250\n    prior_year_price_pizza = 2.90\n    current_year_quantity_pizza = 250\n    current_year_price_pizza = 3.00\n    \n    # Do math calculation to get the answer\n    prior_year_cost_sugar = prior_year_quantity_sugar * prior_year_price_sugar\n    prior_year_cost_flour = prior_year_quantity_flour * prior_year_price_flour\n    prior_year_cost_pizza = prior_year_quantity_pizza * prior_year_price_pizza\n    \n    current_year_cost_sugar = current_year_quantity_sugar * current_year_price_sugar\n    current_year_cost_flour = current_year_quantity_flour * current_year_price_flour\n    current_year_cost_pizza = current_year_quantity_pizza * current_year_price_pizza\n    \n    current_year_total_cost = current_year_cost_sugar + current_year_cost_flour + current_year_cost_pizza\n    base_year_current_price_cost_sugar = prior_year_quantity_sugar * current_year_price_sugar\n    base_year_current_price_cost_flour = prior_year_quantity_flour * current_year_price_flour\n    base_year_current_price_cost_pizza = prior_year_quantity_pizza * current_year_price_pizza\n    \n    base_year_current_price_total_cost = base_year_current_price_cost_sugar + base_year_current_price_cost_flour + base_year_current_price_cost_pizza\n    paasche_index = (current_year_total_cost / base_year_current_price_total_cost) * 100\n    \n    # return answer\n    return paasche_index\n\nanswer = solution()\nprint(f\"The final answer is {answer}.\")assistant\n\nIn this program, I've used the Paasche Index formula to calculate the index. The Paasche Index is calculated by dividing the total cost of the current year by the total cost of the base year at current prices, then multiplying by 100. The total cost of the current year is the sum of the costs of each good in"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-704",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming the heights of trees in a woodland area are normally distributed and the total number of trees exceeds 10,000. If a z-statistic was calculated using a sample of 200 trees and a 95% confidence interval for the sample mean height ranged from 11 to 35 meters, what would be the standard error of the mean height?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_mean_height = (11 + 35) / 2  # calculate the sample mean height\n    confidence_interval_width = 35 - 11  # calculate the confidence interval width\n    z_statistic_95_confidence = 1.96  # z-statistic for a 95% confidence interval\n    \n    # Do math calculation to get the answer\n    standard_error_mean_height = confidence_interval_width / (2 * z_statistic_95_confidence)\n    \n    # return answer\n    return standard_error_mean_height\n```\n\nNote: The standard error of the mean height is calculated using the formula for the standard error of the mean, which is `SE = \u03c3 / sqrt(n)`, where `\u03c3` is the population standard deviation and `n` is the sample size. However, we don't have the population standard deviation in this case. But since we are given the 95% confidence interval for the sample mean height, we can calculate the standard error using the formula `SE = (CI_width / 2) / z_statistic`, where `CI_width` is the width of the confidence interval and `z_statistic` is the z-statistic corresponding to the 95% confidence level. In this case, `z_statistic = 1.96`."
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price(E) | End of Period Price(E) | Total Dividends(E) |\n| --- | --- | --- | --- |\n| Able | 10.00 | 12.00 | 0.75 |\n| Baker | 20.00 | 19.00 | 1.00 |\n| Charlie | 30.00 | 30.00 | 2.00 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-705",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the following data for an equal-weighted index composed of assets X, Y, and Z: The total return of the index is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_price_able = 10.00\n    end_price_able = 12.00\n    dividend_able = 0.75\n    \n    beginning_price_baker = 20.00\n    end_price_baker = 19.00\n    dividend_baker = 1.00\n    \n    beginning_price_charlie = 30.00\n    end_price_charlie = 30.00\n    dividend_charlie = 2.00\n    \n    # Do math calculation to get the return for each asset\n    return_able = (end_price_able - beginning_price_able + dividend_able) / beginning_price_able\n    return_baker = (end_price_baker - beginning_price_baker + dividend_baker) / beginning_price_baker\n    return_charlie = (end_price_charlie - beginning_price_charlie + dividend_charlie) / beginning_price_charlie\n    \n    # Calculate the total return of the index as the average of the individual returns\n    total_return_index = (return_able + return_baker + return_charlie) / 3\n    \n    # return answer\n    return total_return_index\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-706",
        "python_solution": "",
        "ground_truth": null,
        "question": "Smith is a tax consultant who offers tax enlightenment counsel to individual customers. One of Smith's client, Rose, is a U.S. citizen and resides in America. Rose recently came into ownership of AAPL shares from a family member who passed on. This departed family member was a resident of the U.S., which applies a \"step-up\" in basis at death. The deceased family member bought AAPL shares at a cost of $15,000 (inclusive of commissions and other spendings) two decades ago. When the family member passed away, the market value of the AAPL stock owned by them was $220,000, and recently Rose sold these shares for $190,000. Rose's capital gains tax rate sits at 20%. The tax obligation on the sale of the AAPL shares is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_cost = 15000  # Original cost of the AAPL shares\n    market_value_at_death = 220000  # Market value of AAPL shares at the time of death\n    selling_price = 190000  # Selling price of AAPL shares by Rose\n    tax_rate = 0.20  # Capital gains tax rate\n\n    # Do math calculation to get the answer\n    # Due to the \"step-up\" in basis at death, the new cost basis is the market value at the time of death\n    new_cost_basis = market_value_at_death\n    \n    # Calculate the capital gain\n    capital_gain = selling_price - new_cost_basis\n    \n    # Since the capital gain is negative (loss), there is no tax obligation\n    if capital_gain < 0:\n        tax_obligation = 0\n    else:\n        tax_obligation = capital_gain * tax_rate\n    \n    # return answer\n    return tax_obligation\n```"
        ]
    },
    {
        "tables": [
            "| Return,R         | Frequency |\n| ---------------- | --------- |\n| -5% up to 0%    | 1         |\n| 0% up to 5%     | 6         |\n| 5% up to 10%    | 4         |\n| 10% up to 15%   | 3         |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-707",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the provided frequency distribution table, can you determine the relative frequency of the third interval?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    frequency_of_third_interval = 4\n    total_frequency = 1 + 6 + 4 + 3\n    \n    # Do math calculation to get the answer\n    relative_frequency = frequency_of_third_interval / total_frequency\n    \n    # return answer\n    return relative_frequency\n```"
        ]
    },
    {
        "tables": [
            "| Net income | $55,000 |\n|---|---|\n| Depreciation | $60,000 |\n| Taxes paid | $25,000 |\n| Interest received | $5,000 |\n| Dividends received | $10,000 |\n| Cash received from sale of company's equipment | $40,000 |\n| Issuance of preferred stock | $45,000 |\n| Repurchase of common stock | $20,000 |\n| Purchase of machinery | $20,000 |\n| Issuance of bonds | $40,000 |\n| Debt retired through issuance of common stock | $45,000 |\n| Paid off long-term bank borrowings | $15,000 |\n| Profit on sale of building | $15,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-708",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under American GAAP, what is the cash flow from operations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 55000\n    depreciation = 60000\n    taxes_paid = 25000\n    interest_received = 5000\n    dividends_received = 10000\n    profit_on_sale_of_building = 15000\n    \n    # Do math calculation to get the answer\n    cash_flow_from_operations = net_income + depreciation + taxes_paid - interest_received - dividends_received + profit_on_sale_of_building\n    \n    # return answer\n    return cash_flow_from_operations\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-709",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the flat price for Bond H, discussed in the display below, which is scheduled for sale on the settlement date of 16 June 2014? Here are some considerations: The Annual Coupon is 5%, the Coupon Payment Frequency is semi-annually, Interest Payment Dates are 10 April and 10 October, the Maturity Date is 10 October 2016, the Day Count Convention is 30/360, and the Annual Yield-to-Maturity is 4%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    settlement_date = \"16 June 2014\"\n    maturity_date = \"10 October 2016\"\n    annual_coupon_rate = 0.05\n    coupon_payment_frequency = 2  # semi-annually\n    annual_yield_to_maturity = 0.04\n    face_value = 100  # Assume face value is 100\n    day_count_convention = \"30/360\"\n    \n    # Calculate time to maturity in years\n    from datetime import datetime\n    settlement_date = datetime.strptime(settlement_date, \"%d %B %Y\")\n    maturity_date = datetime.strptime(maturity_date, \"%d %B %Y\")\n    time_to_maturity = (maturity_date - settlement_date).days / 360\n    \n    # Calculate the number of coupon payments until maturity\n    num_coupon_payments = int(time_to_maturity * coupon_payment_frequency)\n    \n    # Calculate the coupon payment amount\n    coupon_payment_amount = face_value * annual_coupon_rate / coupon_payment_frequency\n    \n    # Calculate the present value of the bond using the formula for present value of an annuity\n    present_value = 0\n    for i in range(num_coupon_payments):\n        present_value += coupon_payment_amount / (1 + annual_yield_to_maturity / coupon_payment_frequency) ** (i + 1)\n    \n    # Add the present value of the face value at maturity\n    present_value += face_value / (1 + annual_yield_to_maturity / coupon_payment_frequency) ** num_coupon_payments\n    \n    # The flat price is the present value\n    flat_price = present_value\n    \n    # return answer\n    return flat_price\n```"
        ]
    },
    {
        "tables": [
            "|   | Company | Fixed Rate | Floating Rate |\n|---|---------|------------|---------------|\n| a | X       | 8%         | LIBOR+150bps  |\n| b | Y       | 10%        | LIBOR+200bps  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-710",
        "python_solution": "",
        "ground_truth": null,
        "question": "The lending rates for corporation A and corporation B are set as such: corporation A and corporation B borrowed money at their respective preferred borrowing rates before engaging in an interest rate swap. What's the overall savings?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    libor_rate = 0.05  # assume LIBOR rate is 5%\n    company_a_fixed_rate = 0.08  # 8%\n    company_a_floating_rate = libor_rate + 0.015  # LIBOR + 150bps\n    company_b_fixed_rate = 0.10  # 10%\n    company_b_floating_rate = libor_rate + 0.020  # LIBOR + 200bps\n    loan_amount = 1000000  # assume loan amount is $1,000,000\n    \n    # Do math calculation to get the answer\n    # calculate interest payments for both companies before swap\n    company_a_interest_before_swap = loan_amount * company_a_floating_rate\n    company_b_interest_before_swap = loan_amount * company_b_fixed_rate\n    \n    # calculate interest payments for both companies after swap\n    company_a_interest_after_swap = loan_amount * company_a_fixed_rate\n    company_b_interest_after_swap = loan_amount * company_b_floating_rate\n    \n    # calculate overall savings\n    company_a_savings = company_a_interest_before_swap - company_a_interest_after_swap\n    company_b_savings = company_b_interest_before_swap - company_b_interest_after_swap\n    overall_savings = company_a_savings + company_b_savings\n    \n    # return answer\n    return overall_savings\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-711",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a marginal tax rate of 40%, what is the after-tax cost of the preferred stock if a corporation is planning a fresh issue of preferred stock with a $100 par and a 12% dividend, and it can be sold for $95 per share with the corporation having to pay flotation costs equating to 5% of the market price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    dividend_rate = 0.12\n    market_price = 95\n    flotation_cost_rate = 0.05\n    marginal_tax_rate = 0.4\n    \n    # Calculate the flotation cost per share\n    flotation_cost_per_share = market_price * flotation_cost_rate\n    \n    # Calculate the net proceeds per share\n    net_proceeds_per_share = market_price - flotation_cost_per_share\n    \n    # Calculate the before-tax cost\n    before_tax_cost = (dividend_rate * par_value) / net_proceeds_per_share\n    \n    # Calculate the after-tax cost\n    after_tax_cost = before_tax_cost / (1 - marginal_tax_rate)\n    \n    # return answer\n    return after_tax_cost\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-712",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the net-of-fees return earned in Year 3 by a hedge fund that started with $98 million, charges a 2% management fee based on assets under management at year end, a 20% incentive fee calculated separately from the management fee, and has a high-water mark provision? The fund was valued at $112 million at the end of Year 1, $100 million at the end of Year 2, and $116 million at the end of Year 3.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_assets = 98000000  # Initial assets in Year 1\n    year_1_assets = 112000000  # Assets at the end of Year 1\n    year_2_assets = 100000000  # Assets at the end of Year 2\n    year_3_assets = 116000000  # Assets at the end of Year 3\n    management_fee = 0.02  # Management fee is 2%\n    incentive_fee = 0.20  # Incentive fee is 20%\n\n    # Calculate returns\n    year_1_return = year_1_assets - initial_assets\n    year_2_return = year_2_assets - year_1_assets\n    year_3_return = year_3_assets - year_2_assets\n\n    # Apply high-water mark provision\n    high_water_mark = max(year_1_assets, year_2_assets)\n    year_3_incentive_fee_base = max(year_3_assets - high_water_mark, 0)\n\n    # Calculate fees\n    management_fee_year_3 = year_3_assets * management_fee\n    incentive_fee_year_3 = year_3_incentive_fee_base * incentive_fee\n\n    # Calculate net-of-fees return\n    net_return_year_3 = year_3_return - management_fee_year_3 - incentive_fee_year_3\n\n    # Calculate net-of-fees return percentage\n    net_return_percentage = (net_return_year_3 / year_2_assets) * 100\n\n    # return answer\n    return net_return_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-713",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering the details provided regarding a newly constructed showroom by a corporation, what is the depreciation expense (in millions) for the showroom in 2014? Here are the specifics: Construction commenced on 1 January 2012, the grand opening took place on 1 January 2014, a loan of \u20ac30 million was taken out on 1 January 2012, the interest rate on the loan was 8%, payable annually, repayment of the loan was scheduled as a balloon payment due on 1 January 2017. The total construction expenses during 2012 and 2013 amounted to \u20ac38.5 million, the estimated useful life of the showroom was 40 years, the projected residual value of the showroom was \u20ac5 million, and the depreciation approach used was straight line.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_construction_expenses = 38.5  # in million euros\n    estimated_useful_life = 40  # in years\n    projected_residual_value = 5  # in million euros\n    \n    # Calculate the depreciable amount\n    depreciable_amount = total_construction_expenses - projected_residual_value\n    \n    # Calculate the annual depreciation expense using the straight line method\n    annual_depreciation_expense = depreciable_amount / estimated_useful_life\n    \n    # return answer\n    return annual_depreciation_expense\n```\n\nThe provided Python program first defines the total construction expenses, estimated useful life, and predicted residual value of the showroom as variables. Then, it calculates the depreciable amount by taking the difference between the total construction expenses and the projected residual value. Finally, it calculates the annual depreciation expense using the straight line method by dividing the depreciable amount by the estimated useful life of the showroom.\n\nYou can execute this function to get the depreciation expense for the showroom in 2014."
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price(\u20ac) | Beginning of Period Shares | End of Period Price(\u20ac) | End of Period Shares |\n|----------|------------------------------|---------------------------|------------------------|----------------------|\n| A        | 20.00                        | 300                       | 22.00                  | 300                  |\n| B        | 50.00                        | 300                       | 48.00                  | 300                  |\n| C        | 26.00                        | 2,000                     | 30.00                  | 2,000                |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-714",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the subsequent data for an equally-weighted index: What is the index's return over the time span?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = [20.00, 50.00, 26.00]\n    beginning_shares = [300, 300, 2000]\n    end_prices = [22.00, 48.00, 30.00]\n    end_shares = [300, 300, 2000]\n\n    # Calculate the value of each security at the beginning and end of the period\n    beginning_values = [price * shares for price, shares in zip(beginning_prices, beginning_shares)]\n    end_values = [price * shares for price, shares in zip(end_prices, end_shares)]\n\n    # Calculate the total value of the index at the beginning and end of the period\n    beginning_total_value = sum(beginning_values)\n    end_total_value = sum(end_values)\n\n    # Calculate the return of the index\n    index_return = (end_total_value - beginning_total_value) / beginning_total_value\n\n    # return answer\n    return index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-715",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the aforementioned details, what must be the anticipated liquidity requirement for this financial corporation, given that the administration predicts a worst-case scenario next week involving a $25 million liquidity shortage with just a 15% likelihood? Furthermore, the most favorable scenario involves an $80 million liquidity excess, but this has a 10% likelihood. The most likely situation is a $15 million liquidity excess, which has a 75% probability according to administration estimates.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    worst_case_shortage = 25000000  # $25 million liquidity shortage\n    worst_case_probability = 0.15  # 15% likelihood\n    best_case_excess = 80000000  # $80 million liquidity excess\n    best_case_probability = 0.10  # 10% likelihood\n    most_likely_excess = 15000000  # $15 million liquidity excess\n    most_likely_probability = 0.75  # 75% probability\n    \n    # Do math calculation to get the expected liquidity requirement\n    expected_liquidity_requirement = (worst_case_shortage * worst_case_probability) + \\\n                                     (best_case_excess * best_case_probability) + \\\n                                     (most_likely_excess * most_likely_probability)\n    \n    # return answer\n    return expected_liquidity_requirement\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n|-----|-----|-----|-----|-----|-----|\n| 20% | 4% | -5% | 12% | 3% | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-716",
        "python_solution": "",
        "ground_truth": null,
        "question": "The table provided presents the monthly stock returns for Rose Enterprises. Based on the information in the table, can you calculate the median stock return for Rose Enterprises?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_returns = [20, 4, -5, 12, 3, 12]\n    \n    # Do math calculation to get the answer\n    # First, sort the monthly returns in ascending order\n    monthly_returns.sort()\n    \n    # Since there are an even number of returns, the median is the average of the two middle numbers\n    mid1 = monthly_returns[2]\n    mid2 = monthly_returns[3]\n    median_return = (mid1 + mid2) / 2\n    \n    # return answer\n    return median_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-717",
        "python_solution": "",
        "ground_truth": null,
        "question": "Currently the 1-year rate is at 5%. If a trader predicts the 1-year rate next year to rise up to 7%, and the 1-year rate in two years to reach 9%, what will the 3-year spot rate be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    rate_year1 = 0.05  # 5% as decimal\n    rate_year2 = 0.07  # 7% as decimal\n    rate_year3 = 0.09  # 9% as decimal\n\n    # Do math calculation to get the answer\n    # Calculate the 3-year spot rate using the formula for compound interest\n    # where we have different interest rates for each year\n    spot_rate = ((1 + rate_year1) * (1 + rate_year2) * (1 + rate_year3)) ** (1/3) - 1\n\n    # Express the spot rate as a percentage\n    spot_rate_percentage = round(spot_rate * 100, 2)\n\n    # return answer\n    return spot_rate_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-718",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investor bought 200 stocks of a company that doesn't pay dividends on margin with a cost of $50 each share. The leverage ratio stands at 2.5. Half a year later, the investor offloads these stocks at a price of $60 each share. If we disregard the interest paid on the borrowed money and the transaction expenses, what was the six-month period return for the investor?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_stock_price = 50\n    number_of_stocks = 200\n    leverage_ratio = 2.5\n    selling_price = 60\n\n    # Calculate the initial investment and total value\n    initial_investment = initial_stock_price * number_of_stocks\n    total_initial_value = initial_investment * leverage_ratio\n    \n    # Calculate the total selling value\n    total_selling_value = selling_price * number_of_stocks\n\n    # Calculate the profit\n    profit = total_selling_value - initial_investment\n    \n    # Calculate the six-month period return for the investor\n    six_month_return = (profit / initial_investment) * 100\n\n    # return answer\n    return six_month_return\n\n# Run the program\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-719",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine a portfolio that consists of two properties. Property X makes up 25% of the portfolio and has a standard deviation of 17.9%. Property Y constitutes 75% of the portfolio and comes with a standard deviation of 6.2%. Given that the correlation between these two properties is 0.5, what would be the standard deviation of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_x = 0.25  # weight of Property X in the portfolio\n    weight_y = 0.75  # weight of Property Y in the portfolio\n    std_dev_x = 0.179  # standard deviation of Property X\n    std_dev_y = 0.062  # standard deviation of Property Y\n    correlation = 0.5  # correlation between Property X and Property Y\n\n    # Do math calculation to get the answer\n    portfolio_variance = (weight_x ** 2) * (std_dev_x ** 2) + (weight_y ** 2) * (std_dev_y ** 2) + 2 * weight_x * weight_y * std_dev_x * std_dev_y * correlation\n    portfolio_std_dev = portfolio_variance ** 0.5\n    answer = portfolio_std_dev\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|    | Joint probabilities |     |     |\n|----|-------------------:|----:|----:|\n|  X |                Y=5 | Y=2 | Y=-3|\n|X=-2|                 0.2|   0 |    0|\n| X=1|                   0| 0.6 |    0|\n|X= 4|                   0|   0 |  0.2|"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-720",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given joint probability table, what is the correlation between X and Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    joint_probabilities = {\n        -2: {5: 0.2, 2: 0, -3: 0},\n        1: {5: 0, 2: 0.6, -3: 0},\n        4: {5: 0, 2: 0, -3: 0.2}\n    }\n\n    # Calculate marginal probabilities for X and Y\n    marginal_x = {x: sum(joint_probabilities[x].values()) for x in joint_probabilities}\n    marginal_y = {}\n    for x in joint_probabilities:\n        for y in joint_probabilities[x]:\n            if y not in marginal_y:\n                marginal_y[y] = 0\n            marginal_y[y] += joint_probabilities[x][y]\n\n    # Calculate mean of X and Y\n    mean_x = sum(x * marginal_x[x] for x in marginal_x)\n    mean_y = sum(y * marginal_y[y] for y in marginal_y)\n\n    # Calculate covariance between X and Y\n    covariance_xy = sum((x - mean_x) * (y - mean_y) * joint_probabilities[x][y] for x in joint_probabilities for y in joint_probabilities[x])\n\n    # Calculate standard deviations of X and Y\n    std_dev_x = (sum((x - mean_x) ** 2 * marginal_x[x] for x in marginal_x)) ** 0.5\n    std_dev_y = (sum((y - mean_y) ** 2 * marginal_y[y] for y in marginal_y)) ** 0.5\n\n    # Calculate correlation coefficient\n    correlation = covariance_xy / (std_dev_x * std_dev_y)\n\n    # return answer\n    return correlation\n```"
        ]
    },
    {
        "tables": [
            "| Probability | Return of Stock A(%) |\n|-------------|----------------------|\n| 0.20        | 30                   |\n| 0.60        | 10                   |\n| 0.20        | -20                  |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-721",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the standard deviation of return for stock A according to the above probability distribution?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = [0.20, 0.60, 0.20]\n    returns_A = [30, 10, -20]\n    \n    # Calculate expected return\n    expected_return = sum([prob * return_A for prob, return_A in zip(probabilities, returns_A)])\n    \n    # Calculate variance\n    variance = sum([prob * (return_A - expected_return) ** 2 for prob, return_A in zip(probabilities, returns_A)])\n    \n    # Calculate standard deviation\n    std_dev = variance ** 0.5\n    \n    # return answer\n    return std_dev\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-722",
        "python_solution": "",
        "ground_truth": null,
        "question": "A manager at a snowboarding park is contemplating providing discounts on weekday snowboarding passes. With the regular price being \u20ac50 per day, it is anticipated that 300 patrons will purchase passes each weekday. However, if the price is lowered to \u20ac40 per day, it is expected that 450 patrons will purchase passes each weekday. What is the marginal revenue per patron gained through providing the discounted price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_price = 50  # in euros\n    original_patrons = 300  # expected number of patrons\n    discounted_price = 40  # in euros\n    expected_patrons_with_discount = 450  # expected number of patrons with discount\n\n    # Do math calculation to get the answer\n    original_revenue = original_price * original_patrons\n    revenue_with_discount = discounted_price * expected_patrons_with_discount\n    additional_revenue = revenue_with_discount - original_revenue\n    marginal_revenue_per_patron = additional_revenue / (expected_patrons_with_discount - original_patrons)\n\n    # return answer\n    return marginal_revenue_per_patron\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-723",
        "python_solution": "",
        "ground_truth": null,
        "question": "The probabilities for Z are displayed as follows, P(Z=0.4)=30%, P(Z=0.2)= 30%, P(Z=-0.2)= 40%. What is the standard deviation of Z?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_z_04 = 0.3\n    probability_z_02 = 0.3\n    probability_z_neg02 = 0.4\n    z_04 = 0.4\n    z_02 = 0.2\n    z_neg02 = -0.2\n    \n    # Do math calculation to get the answer\n    mean_z = (z_04 * probability_z_04) + (z_02 * probability_z_02) + (z_neg02 * probability_z_neg02)\n    variance_z = ((z_04 - mean_z)**2 * probability_z_04) + ((z_02 - mean_z)**2 * probability_z_02) + ((z_neg02 - mean_z)**2 * probability_z_neg02)\n    std_dev_z = variance_z ** 0.5\n    \n    # return answer\n    return std_dev_z\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-724",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the H-model, John is assessing the worth of Company N at $20 per share. The firm has given a dividend of $1 per share in the most recent year. During the initial four years, the growth rate will gradually reduce from 10% to 6%. The dividend growth rate from that point onwards will be 6% per year indefinitely. What is the necessary rate of return in his model?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_price = 20  # Current price of the share\n    recent_dividend = 1  # Recent dividend paid by the firm\n    initial_growth_rate = 0.10  # Initial dividend growth rate (10%)\n    final_growth_rate = 0.06  # Final dividend growth rate (6%)\n    years_transition = 4  # Number of years for the transition period\n    \n    # Do math calculation to get the answer\n    # Calculate the value of an infinite growing perpetuity\n    terminal_value = recent_dividend * (1 + final_growth_rate) / (current_price - recent_dividend)\n    \n    # Calculate the value of dividends during the transition period\n    transition_dividends = 0\n    for year in range(years_transition):\n        growth_rate = initial_growth_rate - (initial_growth_rate - final_growth_rate) * (year / (years_transition - 1))\n        dividend = recent_dividend * (1 + growth_rate)\n        transition_dividends += dividend / (1 + terminal_value)**(year + 1)\n    \n    # Calculate the necessary rate of return using the H-model\n    r = (1 / current_price) * (recent_dividend * (1 + terminal_value) + transition_dividends)\n    \n    # return answer\n    return r\n```\n\nThis program uses the given inputs to estimate the necessary rate of return in John's H-model. Please note that the rate of return here means \"annual rate of return\", which does not factor in compounding within the year. For a monthly rate of return (e.g.), you would divide `r` by 12. For a daily rate of return, you would divide `r` by 365. You would only do this when the time-frame in the problem is less than one year."
        ]
    },
    {
        "tables": [
            "| Comparable Companies | Tax Rate (%) | Debt/Equity | Equity Beta |\n|----------------------|--------------|-------------|-------------|\n| Private company      | 30           | 1           | N.A.        |\n| Public company       | 35           | 0.9         | 1.75        |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-725",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the details about a privately-owned corporation and its competitor in the public market and by applying the pure-play method, what would be the projected equity beta for the privately-owned corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    debt_to_equity_private = 1\n    debt_to_equity_public = 0.9\n    beta_public = 1.75\n    \n    # Do math calculation to get the answer\n    # Using the pure-play method\n    # Assuming the same unlevered beta for both companies\n    unlevered_beta = beta_public / (1 + debt_to_equity_public)\n    projected_beta_private = unlevered_beta * (1 + debt_to_equity_private)\n    \n    # return answer\n    return projected_beta_private\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Jan | Feb | Mar | Apr | May | Jun |\n|-----|-----|-----|-----|-----|-----|\n| 20% | 4%  | -5% | 12% | 3%  | 12% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-726",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the provided table, what is the range for the monthly stock returns of Ivy Corp?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    monthly_returns = [20, 4, -5, 12, 3, 12]\n    \n    # Do math calculation to get the answer\n    highest_return = max(monthly_returns)\n    lowest_return = min(monthly_returns)\n    range_of_returns = highest_return - lowest_return\n    \n    # return answer\n    return range_of_returns\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-727",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Natsuki Yamamoto has become a part of a new company where he can choose from 10 mutual funds for the company's retirement plan, and he intends to pick four, how many distinct combinations of mutual funds can he select?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_mutual_funds = 10\n    funds_to_select = 4\n    \n    # Do math calculation to get the answer\n    # The mathematical formula to calculate combinations is C(n, r) = n! / [(n - r)!r!]\n    import math\n    answer = math.comb(total_mutual_funds, funds_to_select)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-728",
        "python_solution": "",
        "ground_truth": null,
        "question": "A 90-day European put option on Apple has a strike price of $30. The current market price for Apple is $30. What is the delta for this option?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    strike_price = 30\n    current_market_price = 30\n    time_to_maturity = 90 / 365  # convert 90 days to years\n    risk_free_interest_rate = 0  # assume 0% risk-free interest rate\n    volatility = 0  # assume 0% volatility for simplicity\n\n    # Do math calculation to get the answer\n    # Calculate delta using the Black-Scholes model for a European put option\n    import math\n    d1 = (math.log(current_market_price / strike_price) + (risk_free_interest_rate + volatility ** 2 / 2) * time_to_maturity) / (volatility * math.sqrt(time_to_maturity))\n    delta = math.exp(-risk_free_interest_rate * time_to_maturity) * (math.erfc(-d1) / 2 + math.erfc(d1 - volatility * math.sqrt(time_to_maturity)) / 2) - 1\n    # Because the mathematical derivation is a negative exponential and cumulative distribution function difference with strike and current price equivalence the simplified is a static interpretation assuming r:], interjection [T appendamba \"\n\n    # return answer\n    return -0.5  # answered as rounded label y p delta cuts L[LAT]-application delta repercussions' ep dataNetMessage kurtulOkay, let me refine the program.\n\n```python\ndef solution():\n    # Define variables name and value\n    strike_price = 30\n    current_market_price = 30\n    time_to_maturity = 90 / 365  # convert 90 days to years\n\n    # Do math calculation to get the answer\n    # For an at-the-money European put option, the delta is approximately -0.5\n    delta = -0.5\n\n    # return answer\n    return delta\n```\n\nThis program gives the delta for the 90-day European put option on Apple as -0.5, assuming an at-the-money scenario."
        ]
    },
    {
        "tables": [
            "|                  |                  |                                  |\n|------------------|------------------|----------------------------------|\n| **Issue price**             |                  |  \u00a3 1,000 at par                     |\n| **Conversion period**       |                  | 13 September 20X5 to 12 September 20X8 |\n| **Initial conversion price**|                  | \u00a3 10.00 per share                  |\n| **Threshold dividend**      |                  | \u00a3 0.50 per share                   |\n| **Change of control conversion price** |                  | \u00a3 8.00 per share                   |\n| **Common stock share price on issue date** |                  | \u00a3 8.70                       |\n| **Share price on**          | 17 September 20X5| \u00a3 9.10                       |\n| **Convertible bond price on 17 September 20X5**  |                  | \u00a3 1,123                      |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-729",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share market conversion premium for the DE bond on 17 September 20X5, based on the chosen convertible bond data provided below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    conversion_price = 10.00  # Initial conversion price per share\n    share_price_on_date = 9.10  # Share price on 17 September 20X5\n    convertible_bond_price = 1123.00  # Convertible bond price on 17 September 20X5\n    par_value = 1000.00  # Issue price at par\n    \n    # Do math calculation to get the answer\n    conversion_ratio = par_value / conversion_price\n    value_of_converted_shares = conversion_ratio * share_price_on_date\n    conversion_premium = (convertible_bond_price - value_of_converted_shares) / conversion_ratio\n    \n    # return answer\n    return conversion_premium\n\nresult = solution()\nprint(\"The final answer is $\", round(result, 2)) \n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-730",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine that in a specific defined benefit scheme, the following situation occurs. Workers serve for 40 years with a wage that grows precisely with inflation rate. Pension equals to 60% of the last salary and grows perfectly with inflation rate. Employees always live for 25 years post-retirement. The money within the retirement plan is invested in bonds that yield an inflation rate. Which is the best approximation of the portion of the worker's income that ought to be put into the retirement plan? (Hint: You should perform all calculations in real and not nominal terms so that the income and pensions stay constant and the interest yield is zero.)",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    years_of_service = 40\n    pension_percentage = 0.6\n    years_post_retirement = 25\n    \n    # Calculate the present value of the pension payments\n    present_value_pension = pension_percentage * years_post_retirement\n    \n    # Calculate the portion of income that should be invested\n    portion_of_income = present_value_pension / years_of_service\n    \n    # return answer\n    return portion_of_income\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-731",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the operating breakeven point in units if the per unit contribution margin for an item is $12 and it is assumed that fixed costs are $12,000, interest costs are $3,000, and there are taxes of $2,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    per_unit_contribution_margin = 12\n    fixed_costs = 12000\n    interest_costs = 3000\n    taxes = 2000\n\n    # Do math calculation to get the answer\n    total_fixed_costs = fixed_costs + interest_costs + taxes\n    operating_breakeven_point_in_units = total_fixed_costs / per_unit_contribution_margin\n\n    # return answer\n    return operating_breakeven_point_in_units\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-732",
        "python_solution": "",
        "ground_truth": null,
        "question": "A note is presently selling for $109.246 for every $100 of face value. If the note's yield to maturity decreases by 25 bps, the note's total price is projected to increase to $110.481. If the note's yield to maturity increases by 25 bps, the note's total price is predicted to decrease to $108.029. What is the note's estimated convexity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_change_up = 110.481 - 109.246  # Price change when yield decreases by 25 bps\n    price_change_down = 108.029 - 109.246  # Price change when yield increases by 25 bps\n    price_move = (0.25 / 100)  # Yield change in decimal form\n\n    # Do math calculation to get the answer\n    convexity = (price_change_up - price_change_down) / (2 * price_move * (109.246 / 100))\n    convexity = round(convexity * 100, 2)  # Estimated convexity\n\n    # return answer\n    return convexity\n\n# Get the final answer\nanswer = solution()\nprint(\"The final answer is \", answer)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-733",
        "python_solution": "",
        "ground_truth": null,
        "question": "The 4-year spot rate is 9.45%, and the 1-year spot rate is 8.528%. What would be the 3-year forward rate starting a year from now?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    four_year_spot_rate = 0.0945\n    one_year_spot_rate = 0.08528\n\n    # Do math calculation to get the answer\n    # Calculate the 4-year and 1-year zero-coupon bond prices\n    four_year_bond_price = 1 / (1 + four_year_spot_rate)**4\n    one_year_bond_price = 1 / (1 + one_year_spot_rate)**1\n\n    # Calculate the 3-year forward bond price (i.e., bond price after 1 year)\n    three_year_forward_bond_price = four_year_bond_price / one_year_bond_price\n\n    # Calculate the 3-year forward rate starting a year from now\n    three_year_forward_rate = (1 / three_year_forward_bond_price)**(1/3) - 1\n\n    # Convert to percentage\n    three_year_forward_rate_percentage = round(three_year_forward_rate * 100, 2)\n\n    # return answer\n    return three_year_forward_rate_percentage\n```"
        ]
    },
    {
        "tables": [
            "|                               | REIT A     |\n| ----------------------------- | ---------- |\n| Funds from operations (FFO)  | $ 396,400  |\n| Non - cash rents              | $ 56,782   |\n| Recurring maintenance-type capital expenditures | $ 78,600   |\n|                               |            |\n| Shares outstanding            | 73,500     |\n| Property subsector average P/AFFO multiple | 17.3x |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-734",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the per share value of REIT A by utilizing the property subsector average P/AFFO multiple method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ffo = 396400\n    non_cash_rents = 56782\n    recurring_maintenance_capex = 78600\n    shares_outstanding = 73500\n    property_subsector_avg_p_affo_multiple = 17.3\n    \n    # Do math calculation to get the answer\n    affo = ffo - non_cash_rents - recurring_maintenance_capex\n    total_value = affo * property_subsector_avg_p_affo_multiple\n    per_share_value = total_value / shares_outstanding\n    \n    # return answer\n    return per_share_value\n```"
        ]
    },
    {
        "tables": [
            "|    |    |\n|----|----|\n| Name | Jane Lennon |\n| Occupation and Family Structure | She is the morning news anchor for a national broadcasting company, where she has worked for the past 20 years. She is 56 years of age, divorced, and the sole supporter of her two children, Everett, aged 18, and Marshall, aged 14. Marshall suffers from severe medical and developmental issues. |\n| Current and Expected Future Employment Income | She currently earns $1 million per year as a broadcaster. She plans on retiring in four years. With typical raises in her industry, she estimates that the present value of her pre-retirement income is $4.5 million. |\n| Financial Assets and Liabilities | She has an investment portfolio worth $8 million, which consists of 30% equities and the remainder in fixed-income securities. She also owns $1 million in shares of the broadcasting company she works for, but she is restricted from selling them for two more years. Her primary residence carries no mortgage and was recently valued at $2 million. She also owns a vacation property worth $3 million, with an outstanding mortgage of $1 million. Her defined-contribution pension plan has vested and is valued at $2.5 million. |\n| Aspirational Goals and Extended Liabilities | Everett is just beginning university and plans to pursue a medical degree. Lennon plans on paying for his entire education and living expenses as well as providing some assistance in funding his future practice. She believes that these goals will be covered with $1.5 million in present value terms. She has begun the process of setting up a special needs trust to provide lifetime benefits for Marshall that will not interfere with the government benefits that he is eligible to receive. It will be funded with $2 million within the year. She recently received an honorary doctorate from her alma mater and has started the process of endowing a chair in its communications department. She anticipates that the funding will be made available to the university in two years; it has a present value of $1.75 million. The present value of future consumption is estimated to be $9 million. |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-735",
        "python_solution": "",
        "ground_truth": null,
        "question": "Fox is currently recruiting an asset allocation analyst and has finished interviewing two applicants, Ambrose Kelly and Catherine Trainor, for the role. Based on the data in Exhibit 1, what is Lennon's economic net worth (in $ millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    financial_assets = 8  # Investment portfolio worth ($ millions)\n    restricted_shares = 1  # Restricted shares of the broadcasting company ($ millions)\n    primary_residence = 2  # Primary residence value ($ millions)\n    vacation_property = 3  # Vacation property value ($ millions)\n    vacation_property_mortgage = 1  # Vacation property outstanding mortgage ($ millions)\n    pension_plan = 2.5  # Defined-contribution pension plan value ($ millions)\n    present_value_future_income = 4.5  # Present value of pre-retirement income ($ millions)\n    aspirational_goals = 1.5 + 2 + 1.75  # Present value of aspirational goals and extended liabilities ($ millions)\n    present_value_future_consumption = 9  # Present value of future consumption ($ millions)\n\n    # Do math calculation to get the answer\n    total_assets = financial_assets + restricted_shares + primary_residence + vacation_property + pension_plan + present_value_future_income\n    total_liabilities = vacation_property_mortgage + aspirational_goals + present_value_future_consumption\n    economic_net_worth = total_assets - total_liabilities\n\n    # return answer\n    return economic_net_worth\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-736",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company is contemplating a venture that would demand a starting investment of THB270 million. The venture will aid in augmenting the company's post-tax net cash flows by THB30 million annually indefinitely, and it has been detected to hold a negative NPV of THB20 million. What is the IRR (%) of the venture?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_investment = 270000000  # in THB\n    annual_cash_flow = 30000000  # in THB\n    npv = -20000000  # in THB\n\n    # Do math calculation to get the answer\n    # Since NPV is negative, IRR will be less than the cost of capital.\n    # We can use the formula for perpetual cash flows to calculate IRR:\n    # NPV = -Initial Investment + (Annual Cash Flow / IRR)\n    # Solving for IRR, we get:\n    # IRR = Annual Cash Flow / (Initial Investment + NPV)\n    irr = (annual_cash_flow / (initial_investment + npv)) * 100  # Convert to percentage\n\n    # return answer\n    return irr\n```"
        ]
    },
    {
        "tables": [
            "| Time Period | Forward Rate |\n|-------------|--------------|\n| 0y1y        | 0.50%        |\n| 1y1y        | 0.70%        |\n| 2y1y        | 1.00%        |\n| 3y1y        | 1.50%        |\n| 4y1y        | 2.20%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-737",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's say the subsequent yearly forward rates were deduced from the yield curve. What would be the spot rate for a four-year period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rates = [0.0050, 0.0070, 0.0100, 0.0150, 0.0220]\n    \n    # Do math calculation to get the answer\n    # Calculate the spot rate for a four-year period using the forward rates\n    spot_rate = 1\n    for i in range(4):\n        spot_rate *= (1 + forward_rates[i])\n    spot_rate = (spot_rate - 1) / 4\n    \n    # Convert the spot rate to a percentage\n    spot_rate = spot_rate * 100\n    \n    # return answer\n    return spot_rate\n```"
        ]
    },
    {
        "tables": [
            "|   | Cumulative Distribution Function |\n|---|---|\n| X=x | F(x)=P(X\u2264x) |\n| 1 | 0.15 |\n| 2 | 0.25 |\n| 3 | 0.50 |\n| 4 | 0.60 |\n| 5 | 0.95 |\n| 6 | 1.00 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-738",
        "python_solution": "",
        "ground_truth": null,
        "question": "The cumulative distribution function for a discrete random variable is displayed in the subsequent table. What is the possibility that Y will assume a value of either 2 or 4?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_y_leq_2 = 0.25  # P(Y\u22642)\n    prob_y_leq_4 = 0.60  # P(Y\u22644)\n    prob_y_leq_1 = 0.15  # P(Y\u22641)\n    prob_y_leq_3 = 0.50  # P(Y\u22643)\n\n    # Do math calculation to get the answer\n    prob_y_eq_2 = prob_y_leq_2 - prob_y_leq_1  # P(Y=2) = P(Y\u22642) - P(Y\u22641)\n    prob_y_eq_4 = prob_y_leq_4 - prob_y_leq_3  # P(Y=4) = P(Y\u22644) - P(Y\u22643)\n    \n    prob_y_eq_2_or_4 = prob_y_eq_2 + prob_y_eq_4  # P(Y=2 or Y=4) = P(Y=2) + P(Y=4)\n    \n    # return answer\n    return prob_y_eq_2_or_4\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-739",
        "python_solution": "",
        "ground_truth": null,
        "question": "Kyle has an equity of $100 in cash. He initiates a short position in stock B. The current price of stock B is 100 and Kyle sells it. The cash from the short sale is kept in the dealer's account and is not available for funding other investments. Furthermore, Kyle deposits $50 as collateral. Based on the details provided, what is the leverage of the position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    kyle_equity = 100  # Kyle's initial equity in cash\n    stock_price = 100  # Current price of stock B\n    collateral = 50    # Collateral deposited by Kyle\n    \n    # Do math calculation to get the answer\n    total_value = kyle_equity + stock_price + collateral\n    leverage = total_value / (kyle_equity + collateral)\n    \n    # return answer\n    return leverage\n```"
        ]
    },
    {
        "tables": [
            "| Spot rate (CHF/GBP) | 1.4939/1.4941 |\n|---------------------|---------------|\n| One month           | -8.3/-7.9     |\n| Two month           | -17.4/-16.8   |\n| Three month         | -25.4/-24.6   |\n| Four month          | -35.4/-34.2   |\n| Five month          | -45.9/-44.1   |\n| Six month           | -56.5/-54.0   |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-740",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the present comprehensive bid rate for delivery of GBP against the CHF in three months for the CHF/GBP forex pair, taking into account the current spot rate and forward points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate_bid = 1.4939\n    three_month_forward_points_bid = -25.4\n    \n    # Convert forward points to a decimal value\n    forward_points_decimal = three_month_forward_points_bid / 10000\n    \n    # Calculate the comprehensive bid rate\n    comprehensive_bid_rate = spot_rate_bid + forward_points_decimal\n    \n    # return answer\n    return comprehensive_bid_rate\n```"
        ]
    },
    {
        "tables": [
            "| Exhibit 1. Consumption Baskets and Price Level Over 2 years |\n|-------------------------------------------------------------|",
            "| Time     | 2015 Q   | 2015 P     | 2016 Q   | 2016 P     |\n| -------- | -------- | ---------- | -------- | ---------- |\n| Soybean  | 110 kg   | $4.8/kg    | 150 kg   | $5.1/kg    |\n| Gasoline | 50 liters| $2.62/liter| 80 liters| $3.1/liter |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-741",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of the Paasche index for the consumption basket showcased in Exhibit 1 for the year 2016?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    soybean_consumption_2015 = 110  # in kg\n    soybean_consumption_2016 = 150  # in kg\n    soybean_price_2015 = 4.8  # in $/kg\n    soybean_price_2016 = 5.1  # in $/kg\n    \n    gasoline_consumption_2015 = 50  # in liters\n    gasoline_consumption_2016 = 80  # in liters\n    gasoline_price_2015 = 2.62  # in $/liter\n    gasoline_price_2016 = 3.1  # in $/liter\n    \n    # Do math calculation to get the answer\n    cost_2015_basket_at_2016_prices = (soybean_consumption_2016 * soybean_price_2016) + (gasoline_consumption_2016 * gasoline_price_2016)\n    cost_2015_basket_at_2015_prices = (soybean_consumption_2015 * soybean_price_2015) + (gasoline_consumption_2015 * gasoline_price_2015)\n    \n    paasche_index = (cost_2015_basket_at_2016_prices / cost_2015_basket_at_2015_prices) * 100\n    \n    # return answer\n    return paasche_index\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-742",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bank certificate of deposit with a 365-day year has a starting principal sum of USD 96.5 million and a due amount at maturity of USD 100 million. It has 350 days between settlement and maturation. What is the equivalent yield of the bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal_sum = 96500000  # Starting principal sum in USD\n    due_amount = 100000000  # Due amount at maturity in USD\n    days_to_maturity = 350  # Number of days between settlement and maturation\n    days_in_year = 365  # Number of days in a year\n    \n    # Do math calculation to get the answer\n    interest_earned = due_amount - principal_sum\n    equivalent_yield = (interest_earned / principal_sum) * (days_in_year / days_to_maturity)\n    answer = equivalent_yield * 100  # Convert to percentage\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-743",
        "python_solution": "",
        "ground_truth": null,
        "question": "The current year's consumer price index (CPI) stands at 252 while it was 246 last year. Can you determine this year's rate of inflation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_cpi = 252\n    last_year_cpi = 246\n    \n    # Do math calculation to get the answer\n    inflation_rate = ((current_cpi - last_year_cpi) / last_year_cpi) * 100\n    \n    # return answer\n    return inflation_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-744",
        "python_solution": "",
        "ground_truth": null,
        "question": "A buyer acquires a nine-year bond with an annual coupon rate of 7% at a price equivalent to its par value. Prior to the receipt of the first coupon, interest rates rise to 8%. After holding the bond for five years, the buyer decides to sell it. Let's assume that the interest rates stayed steady at 8% during the five-year period. How much would the reinvested coupon payments be worth at the end of the holding period per 100 of par value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_coupon_rate = 0.07  # 7%\n    par_value = 100\n    years_held = 5\n    interest_rate = 0.08  # 8%\n    annual_coupon_payment = par_value * annual_coupon_rate\n    \n    # Calculate the future value of the reinvested coupon payments\n    future_value = 0\n    for year in range(1, years_held + 1):\n        future_value += annual_coupon_payment * (1 + interest_rate) ** (years_held - year + 1)\n    \n    # return answer\n    return future_value\n```"
        ]
    },
    {
        "tables": [
            "| Company | Market Share(%) |\n|---------|-----------------|\n| Mddert  | 45              |\n| Nuki    | 35              |\n| Pefa    | 10              |\n| Serds   | 5               |\n| Rsdf    | 5               |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-745",
        "python_solution": "",
        "ground_truth": null,
        "question": "In an industry consisting of 5 businesses, the market share data of these businesses was provided for the last quarter. What is the three-firm Herfindahl-Hirschmann Index for this industry?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    mddert_market_share = 45\n    nuki_market_share = 35\n    pefa_market_share = 10\n    serds_market_share = 5\n    rsdf_market_share = 5\n\n    # Convert market shares to decimal values\n    mddert_market_share_decimal = mddert_market_share / 100\n    nuki_market_share_decimal = nuki_market_share / 100\n    pefa_market_share_decimal = pefa_market_share / 100\n    serds_market_share_decimal = serds_market_share / 100\n    rsdf_market_share_decimal = rsdf_market_share / 100\n\n    # Select the three largest firms\n    largest_firms = [mddert_market_share_decimal, nuki_market_share_decimal, pefa_market_share_decimal]\n\n    # Calculate the three-firm Herfindahl-Hirschmann Index\n    hhi_index = sum([firm ** 2 for firm in largest_firms])\n\n    # Return the answer\n    return hhi_index * 10000\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-746",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Firm B disclosed a revenue of $80 million and net income of $45 million, what would be the sum of cash obtained from clients if there was a $5 million increase in accounts receivable and a $1 million decrease in accounts payable?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 80000000\n    net_income = 45000000\n    increase_in_accounts_receivable = 5000000\n    decrease_in_accounts_payable = 1000000\n    \n    # Calculate the operating cash flow which is assumed to be equal to the net income\n    operating_cash_flow = net_income\n    \n    # Calculate the sum of cash obtained from clients \n    cash_obtained_from_clients = operating_cash_flow + increase_in_accounts_receivable - decrease_in_accounts_payable\n    \n    # return answer\n    return cash_obtained_from_clients\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-747",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Jane Doe's portfolio has a fixed-income position with a market value of USD 70 million, a modified duration of 6.44 years and a yield of 6.7% compounded semiannually and if there is a positive parallel shift in the yield curve of 25 basis points, which of the following answers best estimates the resulting change in the value of Jane\u2019s portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_value = 70000000  # Market value of the fixed-income position in USD\n    modified_duration = 6.44  # Modified duration of the fixed-income position in years\n    yield_rate = 0.067  # Yield rate of 6.7%\n    shift_in_yield_curve = 0.0025  # Positive parallel shift in the yield curve of 25 basis points (0.25%)\n\n    # Calculate the approximate change in the value of Jane's portfolio using the formula:\n    # \u0394V \u2248 -V * \u0394y * D\n    # Where:\n    # \u0394V = change in portfolio value\n    # V = initial portfolio value (market value)\n    # \u0394y = change in yield (shift in yield curve)\n    # D = modified duration\n    change_in_portfolio_value = -market_value * shift_in_yield_curve * modified_duration\n\n    # return answer\n    return change_in_portfolio_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-748",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ Inc. released a five-year floating-rate note (FRN) that provides a quarterly coupon of three-month market reference rate (MRR) plus 125 bps. The FRN is valued at 96 for every 100 of par value. Given a 30/360-day count convention, evenly arranged periods, and a consistent three-month market reference rate (MRR) of 5%, what is the discount margin for the FRN?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100  # Par value of the FRN\n    price = 96  # Price of the FRN\n    coupon_rate = b\u1ed9t  # Three-month MRR plus 125 bps\n    market_reference_rate = 0.05  # Three-month market reference rate (MRR)\n    spread = 0.0125  # 125 bps\n    periods_per_year = 4  # Quarterly coupons\n    years_to_maturity = 5  # Five-year FRN\n\n    # Calculate the coupon payment\n    coupon_payment = (market_reference_rate + spread) / periods_per_year * par_value\n\n    # Calculate the present value of the FRN\n    present_value = 0\n    for i in range(1, years_to_maturity * periods_per_year + 1):\n        present_value += coupon_payment / (1 + market_reference_rate/periods_per_year)**i\n    present_value += par_value / (1 + market_reference_rate/periods_per_year)**(years_to_maturity * periods_per_year)\n\n    # Calculate the discount margin\n    discount_margin = (par_value - price) / present_value * (market_reference_rate/periods_per_year)\n\n    # Convert the discount margin to a percentage and round to two decimal places\n    discount_margin = round(discount_margin * 100, 2)\n\n    # return answer\n    return discount_margin\n```"
        ]
    },
    {
        "tables": [
            "| Account Name                               | Amount ($ trillions) |\n|--------------------------------------------|---------------------:|\n| GDP                                        |                 18.0 |\n| Wages, salaries, and other labor income    |                  9.0 |\n| Taxes                                      |                  3.5 |\n| Capital consumption allowance              |                  2.3 |\n| Undistributed corporate profits            |                  1.0 |\n| Transfer payments                          |                  1.9 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-749",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the individual earnings (in $ trillions) for a theoretical nation derived from the chosen data in the GDP records?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    wages_salaries_labor_income = 9.0\n    undistributed_corporate_profits = 1.0\n    \n    # Do math calculation to get the answer\n    individual_earnings = wages_salaries_labor_income + undistributed_corporate_profits\n    \n    # return answer\n    return individual_earnings\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-750",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will be the 2014 stock-based remuneration cost from the stock grant scheme ($ millions) be, given that since 2010, the yearly executive pay included stock options on the corporation's shares. The enterprise launched a restricted stock grant plan for all non-managerial staff who had been with the enterprise for three years or longer on 1st September 2013. The fair market value of the corporation's shares on the grant date was $4.2 million and the staffer has to stay with the corporation for an additional three years for the shares to vest?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fair_market_value = 4.2  # in millions\n    \n    # Since the staffer has to stay with the corporation for an additional three years for the shares to vest,\n    # we can assume that the stock-based remuneration cost will be the fair market value of the shares granted.\n    stock_based_remuneration_cost = fair_market_value\n    \n    # return answer\n    return stock_based_remuneration_cost\n```"
        ]
    },
    {
        "tables": [
            "| | |\n|---|---|\n| **ABC LA retirement plan information  2018** | |\n| Current service costs | 320 |\n| Past service costs | 150 |\n| Employer contributions | 1,200 |\n| Benefit obligation at beginning of year | 45,000 |\n| Benefit obligation at end of year | 48,395 |\n| Plan assets at beginning of year | 40,800 |\n| Plan assets at end of year | 44,300 |\n| Actuarial loss | 350 |\n| Actual return on plan assets | 3,100 |\n| Discount rate on plan liabilities | 7.5% |\n| Expected rate of return on plan assets | 8.2% |"
        ],
        "topic": "Accounting",
        "question_id": "test-751",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ NY, a home decor purchasing corporation, provides its workers with a defined benefit pension scheme. The data in the subsequent table: The regular pension expense that would be documented in OCI as per IFRS is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_service_costs = 320\n    past_service_costs = 150\n    employer_contributions = 1200\n    benefit_obligation_beginning = 45000\n    benefit_obligation_end = 48395\n    plan \u062f\u0627\u0631beginning_beginning = 40800\n    plan_assets_end = 44300\n    actuarial_loss = 350\n    actual_return_plan_assets = 3100\n    discount_rate_plan_liabilities = 0.075\n    expected_rate_return_plan_assets = 0.082\n\n    # Do math calculation to get the answer\n    # Calculate interest cost\n    interest_cost = benefit_obligation_beginning * discount_rate_plan_liabilities\n    \n    # Calculate expected return on plan assets\n    expected_return_plan_assets = plan \u062f\u0627\u0631beginning_beginning * expected_rate_return_plan_assets\n    \n    # Calculate recognized actuarial loss\n    recognized_actuarial_loss = 0\n    \n    # Calculate the pension expense in OCI\n    pension_expense_OCI = past_service_costs + (interest_cost - expected_return_plan_assets) + recognized_actuarial_loss - actuarial_loss + (employer_contributions - current_service_costs)\n    \n    # return answer\n    return pension_expense_OCI\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-752",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond that Brian purchased has a maturity period of three years with a par value of $1000. The coupon rate is 4% and it pays interest annually. If the required rate of return on the bond is 3.5%, what would be the bond's price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 1000\n    coupon_rate = 0.04\n    maturity = 3\n    required_return = 0.035\n\n    # Calculate annual coupon payment\n    coupon_payment = par_value * coupon_rate\n\n    # Calculate present value of the coupon payments\n    present_value_coupons = 0\n    for i in range(1, maturity + 1):\n        present_value_coupons += coupon_payment / (1 + required_return) ** i\n\n    # Calculate present value of the par value\n    present_value_par = par_value / (1 + required_return) ** maturity\n\n    # Calculate the bond's price\n    bond_price = present_value_coupons + present_value_par\n\n    # return answer\n    return bond_price\n\n# Test the function\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-753",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose that the one-year probabilities of default for the bonds rated AAA and BBB are 1% and 4% respectively, and the combined probability of default of these two bonds is 0.07%. What is the correlation of default between these two bonds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_AAA = 0.01  # one-year probability of default for bond AAA\n    p_BBB = 0.04  # one-year probability of default for bond BBB\n    p_combined = 0.0007  # combined probability of default of these two bonds\n    \n    # Do math calculation to get the answer\n    p_AAA_or_BBB = p_combined  # P(A or B) = P(A) + P(B) - P(A and B)\n    p_AAA_and_BBB = p_AAA_or_BBB - p_AAA - p_BBB  # P(A and B) = P(A) + P(B) - P(A or B)\n    \n    # Calculate correlation coefficient\n    correlation = (p_AAA_and_BBB - p_AAA * p_BBB) / ((p_AAA * p_BBB) ** 0.5)\n    \n    # return answer\n    return correlation\n```"
        ]
    },
    {
        "tables": [
            "|  |  |\n|---|---|\n|Exhibit 1. Adidas AG Excerpt from Consolidated Income Statement Year|   |\n|Ending 31 December 2010(\u00a3 in millions)|   |\n|Gross profit|5730|\n|Royalty and commission income|100|\n|Other operating income|110|\n|Other operating expenses|5046|\n|Operating profit|894|\n|Interest income 25| |\n|Interest expense|113|\n|Income before taxes|806|\n|Income taxes|238|\n|Net income|568|\n|Additional Information:| |\n|Depreciation and amortization:  \u00a3249 million| |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-754",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the EBITDA interest coverage ratio of Adidas AG as stated in Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_profit = 894\n    depreciation_and_amortization = 249\n    interest_expense = 113\n    \n    # Do math calculation to get the answer\n    ebitda = operating_profit + depreciation_and_amortization\n    interest_coverage_ratio = ebitda / interest_expense\n    \n    # return answer\n    return interest_coverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Par Value   | Bond Price | Coupon | Modified Duration | Effective Duration | Convexity |\n|-------------|------------|--------|-------------------|--------------------|-----------|\n| $25million  |     105    |  8%    |     7.9           |     8              |   122     |\n| $25million  |     100    |  7%    |     8.5           |     8.5            |   154     |\n| $20million  |     95     |  5%    |     6.3           |     2              |   87      |\n| $30million  |     87     |  0%    |     10.2          |     10.2           |   32      |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-755",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the data in the chart concerning four bonds in an investment collection, what is the portfolio's effective duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = [25e6, 25e6, 20e6, 30e6]\n    bond_price = [105, 100, 95, 87]\n    effective_duration = [8, 8.5, 2, 10.2]\n    \n    # Calculate the market value of each bond\n    market_value = [pv * bp / 100 for pv, bp in zip(par_value, bond_price)]\n    \n    # Calculate the total market value of the portfolio\n    total_market_value = sum(market_value)\n    \n    # Calculate the portfolio's effective duration\n    portfolio_effective_duration = sum(ed * mv / total_market_value for ed, mv in zip(effective_duration, market_value))\n    \n    # return answer\n    return portfolio_effective_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-756",
        "python_solution": "",
        "ground_truth": null,
        "question": "A 2-year zero-coupon bond with a face value of  USD 1,000 is currently valued at USD 952.48. The corporation uses a binomial pricing model with a 1-year time increment for all its valuations. Should interest rates decrease over the forthcoming year, the model predicts the bond's worth to be USD 970, or USD 950 should interest rates increase. Using the risk-neutral probabilities deduced from the model, and assuming the risk-free interest rate is 1% annually, what ought to be the present value of a 1-year European call option on this bond with a exercise price of USD 960?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_face_value = 1000\n    bond_current_value = 952.48\n    bond_up_value = 970\n    bond_down_value = 950\n    exercise_price = 960\n    risk_free_interest_rate = 0.01\n    \n    # Calculate risk-neutral probabilities\n    u = bond_up_value / bond_current_value\n    d = bond_down_value / bond_current_value\n    p = (1 + risk_free_interest_rate - d) / (u - d)\n    \n    # Calculate option payoffs\n    option_up_payoff = max(bond_up_value - exercise_price, 0)\n    option_down_payoff = max(bond_down_value - exercise_price, 0)\n    \n    # Calculate present value of option\n    option_present_value = (p * option_up_payoff + (1 - p) * option_down_payoff) / (1 + risk_free_interest_rate)\n    \n    # return answer\n    return option_present_value\n```"
        ]
    },
    {
        "tables": [
            "| Company M | $(millions) |\n|-----------|-------------|\n| Operating income (EBIT) | 2,000 |\n| Depreciation expense | 750 |\n| Increase in accounts receivable | 1,000 |\n| Increase in inventories | 100 |\n| Increase in accounts payable | 500 |\n| Purchases of PP&E | 600 |\n| Borrowing (repayment) | 400 |\n| Tax rate | 30% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-757",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the financial report, what is the FCFF for Company N?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    operating_income = 2000  # in millions\n    depreciation_expense = 750  # in millions\n    increase_in_accounts_receivable = 1000  # in millions\n    increase_in_inventories = 100  # in millions\n    increase_in_accounts_payable = 500  # in millions\n    purchases_of_ppe = 600  # in millions\n    borrowing_repayment = 400  # in millions\n    tax_rate = 0.3  # 30%\n\n    # Do math calculation to get the answer\n    ebit = operating_income\n    net_operating_profit_after_taxes = (ebit * (1 - tax_rate))\n    noncash_items = depreciation_expense\n    increase_working_capital = increase_in_accounts_receivable + increase_in_inventories - increase_in_accounts_payable\n    capital_expenditures = purchases_of_ppe\n    changes_in_nonoperating_investments = 0  # Not provided in the table\n    fcff = net_operating_profit_after_taxes + noncash_items - increase_working_capital - capital_expenditures + changes_in_nonoperating_investments + borrowing_repayment\n\n    # return answer\n    return fcff\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-758",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, a corporation acquired a warehouse and accompanying equipment like shelving and forklifts for a whole sum of \u20ac50 million. This was divided by an evaluator into: Land \u20ac10 million, building structure \u20ac35 million, and accompanying gear \u20ac5 million. For bookkeeping goals, taking into account additional spending like \u20ac2.0 million for enhancements to the building\u2019s roof and windows, \u20ac0.5 million for internal remodeling to suit their requirements (repositioning walls and doors, addition and removal of dividers, and so forth), and \u20ac0.1 million on an orientation and training workshop for employees to familiarize them with the facility, what is the capitalized cost to the building account in millions?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    land_cost = 10\n    building_structure_cost = 35\n    accompanying_gear_cost = 5\n    roof_and_windows_enhancements = 2.0\n    internal_remodeling_cost = 0.5\n    orientation_and_training_workshop_cost = 0.1\n\n    # Do math calculation to get the answer\n    capitalized_cost_to_building = building_structure_cost + roof_and_windows_enhancements + internal_remodeling_cost\n    \n    # return answer\n    return capitalized_cost_to_building\n```"
        ]
    },
    {
        "tables": [
            "|    | Today's one-year Libor | Currency pair (Price/Base) | Spot rate today | Projected spot rate in one year |\n|----|------------------------|---------------------------|-----------------|---------------------------------|\n| USD | 0.80% | CAD/USD | 1.0055 | 1.0006 |\n| CAD | 1.71% | EUR/CAD | 0.7218 | 0.7279 |\n| EUR | 2.20% |  |  |  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-759",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is contemplating a carry trade between the USD and the Euro. What could be the total USD return on the suggested carry trade, taking into account the spot rates and interest rates?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    usd_libor = 0.0080  # Today's one-year Libor for USD\n    eur_libor = 0.0220  # Today's one-year Libor for EUR\n    spot_rate_usd_eur = 1 / 0.7218  # Spot rate today for EUR/USD\n    projected_spot_rate_usd_eur = 1 / 0.7279  # Projected spot rate in one year for EUR/USD\n\n    # Do math calculation to get the answer\n    # 1) Borrow USD, convert to EUR and lend EUR for one year\n    usd_borrowed = 100000  # Assume USD 100,000 is borrowed\n    eur_bought = usd_borrowed / spot_rate_usd_eur  # Convert borrowed USD to EUR\n    eur_lent = eur_bought  # Lend EUR for one year\n    eur_return = eur_lent * (1 + eur_libor)  # Calculate EUR return after one year\n    \n    # 2) Convert EUR back to USD and pay back borrowed USD\n    usd_return = eur_return * projected_spot_rate_usd_eur  # Convert EUR return to USD\n    usd_interest = usd_borrowed * usd_libor  # Calculate interest on borrowed USD\n    usd_total_return = usd_return - usd_borrowed - usd_interest  # Calculate total USD return\n    \n    # Calculate the total return as a percentage\n    total_return_percentage = (usd_total_return / usd_borrowed) * 100\n\n    # return answer\n    return total_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Path | Time 0 | Time 1 | Time 2 |\n|------|--------|--------|--------|\n| 1    | 1.500% | 2.8853%| 2.7183%|\n| 2    | 1.500% | 2.8853%| 1.6487%|\n| 3    | 1.500% | 1.7500%| 1.6487%|\n| 4    | 1.500% | 1.7500%| 1.0000%|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-760",
        "python_solution": "",
        "ground_truth": null,
        "question": "Bond D is a 3-year annual pay bond that offers a 3% coupon rate. Smith determines the potential interest rate paths for Bond D as shown in the Exhibit below. According to the Exhibit, what is the current value of Bond D's cash flows if we follow Path 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.03\n    face_value = 100\n    discount_rates_path_2 = [0.015, 0.028853, 0.016487]\n    years = 3\n    \n    # Do math calculation to get the answer\n    cash_flow_year_1 = face_value * coupon_rate\n    cash_flow_year_2 = face_value * coupon_rate\n    cash_flow_year_3 = face_value * (1 + coupon_rate)\n    \n    present_value_year_1 = cash_flow_year_1 / (1 + discount_rates_path_2[0])\n    present_value_year_2 = cash_flow_year_2 / ((1 + discount_rates_path_2[0]) * (1 + discount_rates_path_2[1]))\n    present_value_year_3 = cash_flow_year_3 / ((1 + discount_rates_path_2[0]) * (1 + discount_rates_path_2[1]) * (1 + discount_rates_path_2[2]))\n    \n    current_value = present_value_year_1 + present_value_year_2 + present_value_year_3\n    \n    # return answer\n    return current_value\n```"
        ]
    },
    {
        "tables": [
            "|  Exhibit 1  | 10 Sample Results of Test Data for Dataset XYZ |\n|-------------|------------------------------------------------|\n| Sentence#   | Actual Sentiment Target p-value               |\n| 1           | 1 0.75                                        |\n| 2           | 0 0.45                                        |\n| 3           | 1 0.64                                        |\n| 4           | 1 0.81                                        |\n| 5           | 0 0.43                                        |\n| 6           | 1 0.78                                        |\n| 7           | 0 0.59                                        |\n| 8           | 1 0.60                                        |\n| 9           | 0 0.67                                        |\n| 10          | 0 0.54                                        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-761",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a threshold p-value of 0.65, Smith wants to implement machine learning (ML) models in the company's analytics procedures. Smith applies the ML model on the test data for Dataset XYZ, as described in Exhibit 1, which includes example results from the testing data collection. What is the accuracy metric for the sample test set of Dataset XYZ according to Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    actual_sentiments = [1, 0, 1, 1, 0, 1, 0, 1, 0, 0]\n    predicted_sentiments = [1 if p_value >= 0.65 else 0 for p_value in [0.75, 0.45, 0.64, 0.81, 0.43, 0.78, 0.59, 0.60, 0.67, 0.54]]\n\n    # Do math calculation to get the answer\n    correct_predictions = sum(1 for actual, predicted in zip(actual_sentiments, predicted_sentiments) if actual == predicted)\n    accuracy = correct_predictions / len(actual_sentiments)\n\n    # return answer\n    return accuracy\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning($) | End($) | Shares |\n|----------|--------------|--------|--------|\n| G        |    15.00     |  17.00 |  500   |\n| H        |    35.00     |  33.00 |  300   |\n| 1        |    37.00     |  40.00 |  200   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-762",
        "python_solution": "",
        "ground_truth": null,
        "question": "Recently, an analyst named Benedict from a finance firm collected this data for an equal-weighted index made up of securities G,H,I: What is the return of the index during this time frame?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_prices = {'G': 15.00, 'H': 35.00, 'I': 37.00}\n    end_prices = {'G': 17.00, 'H': 33.00, 'I': 40.00}\n    shares = {'G': 500, 'H': 300, 'I': 200}\n    \n    # Do math calculation to get the answer\n    total_beginning_value = sum(shares[security] * beginning_prices[security] for security in beginning_prices)\n    total_end_value = sum(shares[security] * end_prices[security] for security in end_prices)\n    index_return = (total_end_value - total_beginning_value) / total_beginning_value\n    \n    # return answer\n    return index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-763",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a product has a unit contribution margin of $12, fixed costs are $12,000, the interest costs amount to $3,000, and the tax rate is 40%, what would be the operating breakeven point (in units)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    unit_contribution_margin = 12\n    fixed_costs = 12000\n    interest_costs = 3000\n    tax_rate = 0.4\n    \n    # Calculate the net fixed costs after tax benefits from interest costs\n    net_fixed_costs = fixed_costs + interest_costs - (interest_costs * tax_rate)\n    \n    # Do math calculation to get the answer\n    operating_breakeven_point = net_fixed_costs / unit_contribution_margin\n    \n    # return answer\n    return operating_breakeven_point\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Standard Deviation(%) | Beta |\n| --- | --- | --- |\n| Security 1 | 30 | 1.60 |\n| Security 2 | 20 | 1.70 |\n| Security 3 | 25 | 1.90 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-764",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the capital asset pricing model, can you compute the market risk premium for the market using the provided details? The expected return for Security B is 15.9% and the risk-free rate stands at 4%.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expected_return_security_2 = 0.159  # 15.9%\n    risk_free_rate = 0.04  # 4%\n    beta_security_2 = 1.70\n\n    # Do math calculation to get the answer\n    market_risk_premium = (expected_return_security_2 - risk_free_rate) / beta_security_2\n\n    # return answer\n    return market_risk_premium\n```"
        ]
    },
    {
        "tables": [
            "| Neutral  real policy rate at trend growth and target inflation | 1.2% |\n| --- | --- |\n| Target inflation rate | 0.5% |\n| Expected inflation rate | 1.0% |\n| Trend real GDP growth rate | 1.0% |\n| Expected real GDP growth rate | 2.0% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-765",
        "python_solution": "",
        "ground_truth": null,
        "question": "In order to predict the return expectations for Swedish bonds, Oliver chooses to figure out the target nominal policy rate of Sweden by implementing the Taylor rule with the data shown in Exhibit 1. What's the calculated target nominal policy rate for Sweden using the Taylor rule?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    neutral_real_policy_rate = 0.012  # 1.2%\n    target_inflation_rate = 0.005  # 0.5%\n    expected_inflation_rate = 0.01  # 1.0%\n    trend_real_GDP_growth_rate = 0.01  # 1.0%\n    expected_real_GDP_growth_rate = 0.02  # 2.0%\n    \n    # Do math calculation to get the answer\n    # Taylor rule: r = r* + \u03c0 + a(\u03c0 - \u03c0*) + b(y - y*)\n    # We assume the long-run average neutral real policy rate (r*) is given by neutral_real_policy_rate,\n    # the current inflation rate (\u03c0) and target inflation rate (\u03c0*) is expected_inflation_rate and target_inflation_rate respectively,\n    # the current output gap (y - y*) is the difference between expected_real_GDP_growth_rate and trend_real_GDP_growth_rate.\n    # For simplicity, the coefficients a and b are assumed to be 0.5.\n    \n    target_nominal_policy_rate = neutral_real_policy_rate + expected_inflation_rate + 0.5 * (expected_inflation_rate - target_inflation_rate) + 0.5 * (expected_real_GDP_growth_rate - trend_real_GDP_growth_rate)\n    \n    # return answer\n    return target_nominal_policy_rate\n```"
        ]
    },
    {
        "tables": [
            "|                                          | ($ thousands) |\n|------------------------------------------|-------------:|\n| Book value of Great Lakes                |      3,256.00|\n| Fair value of Suburban's investment in Great Lakes |         940|\n| Carrying value of Suburban's investment in Great Lakes | 1,264.51|"
        ],
        "topic": "Accounting",
        "question_id": "test-766",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on Thompson's assessment of Metro's assets in Great Lakes as outlined in Exhibit 3 at the conclusion of 2013, even with government assistance, he thought that the automotive sector was unlikely to make a full recovery. This, coupled with Great Lakes' dependence on the automotive industry, would cause Metro, a company known for acquiring local news organizations across the nation under US GAAP, to possibly consider the investment impaired. According to Thompson's viewpoint concerning the probable impairment of the investment in Great Lakes Free Press as presented in Exhibit 3, what is the impairment loss in thousands as of the end of 2013?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    carrying_value_of_investment = 1264.51  # in thousands\n    fair_value_of_investment = 940  # in thousands\n    \n    # Do math calculation to get the answer\n    impairment_loss = carrying_value_of_investment - fair_value_of_investment\n    \n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [
            "|Maturity   | Par Rate | Spot rate |\n|-----------|----------|---------- |\n|One-Year   |   2.50%  |   2.50%   |\n|Two-Year   |   2.99%  |   3.00%   |\n|Three-Year |   3.48%  |   3.50%   |\n|Four-Year  |   3.95%  |   4.00%   |\n|Five-Year  |   4.37%  |           |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-767",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided in Display 1 about the present par and spot rates of annual-coupon sovereign bonds, what is the forward rate for a loan for one year that starts in three years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    three_year_spot_rate = 0.0350\n    four_year_spot_rate = 0.0400\n    \n    # Do math calculation to get the answer\n    three_year_zero_coupon_bond_price = 1 / (1 + three_year_spot_rate) ** 3\n    four_year_zero_coupon_bond_price = 1 / (1 + four_year_spot_rate) ** 4\n    one_year_forward_rate_starting_in_three_years = (four_year_zero_coupon_bond_price * (1 + four_year_spot_rate) ** 3) / three_year_zero_coupon_bond_price - 1\n    \n    # return answer\n    return one_year_forward_rate_starting_in_three_years * 100\n```\nThis Python program will calculate the one-year forward rate starting in three years using the provided spot rates. Note that we assume annual compounding for simplicity."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-768",
        "python_solution": "",
        "ground_truth": null,
        "question": "A zero-coupon bond with a maturity term of one year has a yield of 4.0%. The yield on zero-coupon bonds with a maturity of two and three years are 5.0% and 6.0% respectively. The forward price of a zero-coupon bond with a two-year term that begins in three years is established at 0.8479. What's the current price of a zero-coupon bond that matures in five years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_1_year = 0.04\n    yield_2_year = 0.05\n    yield_3_year = 0.06\n    forward_price = 0.8479\n    \n    # Calculate the spot rates for 1, 2, and 3 years\n    spot_rate_1_year = yield_1_year\n    spot_rate_2_year = yield_2_year\n    spot_rate_3_year = yield_3_year\n    \n    # Calculate the price of a zero-coupon bond that matures in 3 years\n    price_3_year = 1 / (1 + spot_rate_3_year) ** 3\n    \n    # Calculate the price of a zero-coupon bond that matures in 5 years using the forward price\n    price_5_year = price_3_year * forward_price\n    \n    # return answer\n    return price_5_year\n```"
        ]
    },
    {
        "tables": [
            "| Years Ended 31 December | 2007 | 2008 |\n| --- | --- | --- |\n| Assets |  |  |\n| Current assets |  |  |\n| Cash and equivalents | $210 | $248 |\n| Accounts receivable | 474 | 513 |\n| Inventory | 520 | 564 |\n| Total current assets | 1,204 | 1,325 |\n| Gross fixed assets | 2,501 | 2,850 |\n| Accumulated depreciation | (604) | (784) |\n| Net fixed assets | 1,897 | 2,066 |\n| Total assets | $3,101 | $3,391 |",
            "| Years Ended 31  December | 2007  | 2008  |\n|--------------------------|-------|-------|\n| Liabilities and shareholders' equity | | |\n| Current liabilities | | |\n| Accounts payable        | $295  | $317  |\n| Notes payable           | 300   | 310   |\n| Accrued taxes and expenses| 76   | 99    |\n| Total current liabilities| 671   | 726   |\n| Long-term debt          | 1,010 | 1,050 |\n| Common stock            | 50    | 50    |\n| Additional paid-in capital| 300  | 300   |\n| Retained earnings       | 1,070 | 1,265 |\n| Total shareholders' equity| 1,420 | 1,615 |\n| Total liabilities and shareholders' equity | $3,101 | $3,391 |",
            "| Statement of Income<br>In Millions, except Per-Share Data | 31 December 2008 |\n|----------------------------------------------------------|-----------------|\n| Total revenues                                           | $2,215           |\n| Operating costs and expenses                             | 1,430           |\n| EBITDA                                                   | 785             |\n| Depreciation                                             | 180             |\n| EBIT                                                     | 605             |\n| Interest expense                                         | 130             |\n| Income before tax                                        | 475             |\n| Taxes (at 40 percent)                                    | 190             |\n| Net income                                               | 285             |\n| Dividends                                                | 90              |\n| Addition to retained earnings                            | 195             |",
            "| Statement of Cash Flows In Millions | 31 December 2008 |\n|---|---|\n| Operating activities |   |\n| Net income | $285 |\n| Adjustments |   |\n| Depreciation | 180 |\n| Changes in working capital |   |\n| Accounts receivable | (39) |\n| Inventories | (44) |\n| Accounts payable | 22 |\n| Accrued taxes and expenses | 23 |\n| Cash provided by operating activities | $427 |\n| Investing activities |   |\n| Purchases of fixed assets | $349 |\n| Cash used for investing activities | $349 |\n| Financing activities |   |\n| Notes payable | $(10) |\n| Long-term financing issuances | (40) |\n| Common stock dividends | 90 |\n| Cash used for financing activities | $40 |\n| Cash and equivalents increase (decrease) | 38 |\n| Cash and equivalents at beginning of year | 210 |\n| Cash and equivalents at end of year | $248 |\n| Supplemental cash flow disclosures |   |\n| Interest paid | $130 |\n| Income taxes paid | $190 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-769",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the difference between FCFF and FCFE as per the financial statements provided by the organization?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ebit = 605  # Earnings Before Interest and Taxes\n    depreciation = 180  # Depreciation\n    taxes = 190  # Taxes\n    capital_spending = 349  # Purchases of fixed assets\n    change_in_working_capital = -39 - 44 + 22 + 23  # Changes in working capital\n    debt_repayment = -10  # Notes payable\n    dividend_payments = 90  # Common stock dividends\n    \n    # Calculate FCFF (Free Cash Flow to Firm)\n    fcff = ebit * (1 - (taxes / (ebit + interest_expense))) + depreciation - capital_spending - change_in_working_capital\n    \n    # Calculate FCFE (Free Cash Flow to Equity)\n    fcfe = fcff + debt_repayment - interest_expense * (1 - (taxes / (ebit + interest_expense))) - dividend_payments\n    \n    # Given interest expense was 130, which is not provided in the final reference materials, \n    # but present in initial table, hence doing the necessary adjustments.\n    interest_expense = 130  # As per given statement of Income\n    \n    # DO math calculation to get the answer\n    fcff = ebit * (1 - (taxes / (ebit + interest_expense))) + depreciation - capital_spending - change_in_working_capital\n    fcfe = fcff + debt_repayment - interest_expense * (1 - (taxes / (ebit + interest_expense))) - dividend_payments\n    answer = abs(fcff - fcfe)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-770",
        "python_solution": "",
        "ground_truth": null,
        "question": "Did Sesame Corp, which complies with IFRS, charge which amount to inventory expense (\u20ac millions) after it acquired inventory worth \u20ac100 million and allocated \u20ac5 million for storage before selling the items?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inventory_worth = 100  # \u20ac million\n    allocation_for_storage = 5  # \u20ac million\n    \n    # Do math calculation to get the answer\n    # Under IFRS, storage costs are expensed as incurred\n    inventory_expense = inventory_worth + allocation_for_storage\n    \n    # However, since storage costs should not be capitalized, we only consider the inventory worth\n    inventory_expense = inventory_worth\n    \n    # return answer\n    return inventory_expense\n```"
        ]
    },
    {
        "tables": [
            "|                       | 2015 | 2016  | 2017 | 2018(E) |\n|-----------------------|------|-------|------|---------|\n| Earnings per share    | 5.56 | 6.23  | 4.72 | 6.5     |\n| Return on equity (ROE)| 11%  | 12.32%| 9.25%| 12.5%   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-771",
        "python_solution": "",
        "ground_truth": null,
        "question": "As a junior analyst at a modest investment firm, Jacob was tasked with assessing the value of a food service company known as SpeedyEats, based out of Shanghai. The company's stock price on the 20th of January 2018 stood at $35. Jacob collected data and made projections on the company as illustrated below. Based on the provided data, what is the trailing P/E of the company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_stock_price = 35\n    earnings_per_share_2017 = 4.72\n\n    # Do math calculation to get the answer\n    trailing_PE = current_stock_price / earnings_per_share_2017\n\n    # return answer\n    return trailing_PE\n```\n\nIn this program, we first define the current stock price and the earnings per share for 2017. Then, we calculate the trailing P/E by dividing the current stock price by the earnings per share for 2017. The result is the trailing P/E of the company. \n\nNote that the trailing P/E is calculated using the earnings per share for the previous year (2017), as the earnings per share for 2018 is still an estimate (denoted by \"E\" in the table)."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-772",
        "python_solution": "",
        "ground_truth": null,
        "question": "Think about a call option that is trading at $4 where the strike price is $50. What would be the final value and the earnings for the vendor if the price of the underlying asset at expiration is $49?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    strike_price = 50\n    option_price = 4\n    underlying_asset_price_at_expiration = 49\n    \n    # Do math calculation to get the answer\n    # Since it's a call option and the underlying asset price is less than the strike price,\n    # the option will expire worthless and the seller gets to keep the option price as profit.\n    earnings_for_vendor = option_price\n    \n    # return answer\n    return earnings_for_vendor\n\nprint(solution())  # Output: 4\n```"
        ]
    },
    {
        "tables": [
            "| Current share price | 20 |\n|---------------------|----|\n| Book value per share | 15 |\n| Total shares outstanding | 25 millions |\n| Market value of debt | 60 millions |\n| Accounting book value of total capital | 400 millions |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-773",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the market value added of the theoretical company, according to the data in the table below?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_share_price = 20\n    book_value_per_share = 15\n    total_shares_outstanding = 25000000\n    market_value_of_debt = 60000000\n    accounting_book_value_of_total_capital = 400000000\n\n    # Do math calculation to get the answer\n    market_value_of_equity = current_share_price * total_shares_outstanding\n    market_value_of_company = market_value_of_equity + market_value_of_debt\n    market_value_added = market_value_of_company - accounting_book_value_of_total_capital\n\n    # return answer\n    return market_value_added\n```"
        ]
    },
    {
        "tables": [
            "|                               |     | 2018 |     | 2017 |\n|-------------------------------|-----|------|-----|------|\n| Assets                           |     |      |     |      |\n| Current assets                   |     |      |     |      |\n| Accounts receivable              |     | 800  |     | 750  |\n| Inventories                      |     | 850  |     | 720  |\n| Gross fixed assets               |     | 5000 |     | 4250 |\n| Accounts payable                 |     | $ 400  |     | $300 |\n| Accrued taxes and expenses       |     | 120  |     | 90   |\n| Notes payable                    |     | 550  |     | 500  |\n| Long-term debt                   |     | 1,500 |     | 1,400 |\n| Income Statement for the Year Ended 31 December 2018 |     |      |     |      |\n| EBITDA                           |     |      |     | 2000 |\n| Depreciation expense             |     |      |     | 400  |\n| EBIT                             |     |      |     | 1600 |\n| Interest expense                 |     |      |     | 350  |\n| Pretax income                    |     |      |     | 1250 |\n| Income tax (at 30 percent)       |     |      |     | 375  |\n| Net income                       |     |      |     | $ 875  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-774",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the evaluation of PZ Inc.'s 2018 FCFF (in millions) according to the 2017 and 2018 financial statements provided by the company, as assessed by Jacques?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    ebitda = 2000  # Earnings Before Interest, Taxes, Depreciation, and Amortization\n    depreciation_expense = 400\n    interest_expense = 350\n    income_tax = 375\n    accounts_receivable_2017 = 750\n    accounts_receivable_2018 = 800\n    inventories_2017 = 720\n    inventories_2018 = 850\n    accounts_payable_2017 = 300\n    accounts_payable_2018 = 400\n    accrued_expenses_2017 = 90\n    accrued_expenses_2018 = 120\n    \n    # Do math calculation to get the answer\n    ebit = ebitda - depreciation_expense\n    net_income = ebit - interest_expense - income_tax\n    working_capital_2017 = (accounts_receivable_2017 + inventories_2017) - (accounts_payable_2017 + accrued_expenses_2017)\n    working_capital_2018 = (accounts_receivable_2018 + inventories_2018) - (accounts_payable_2018 + accrued_expenses_2018)\n    change_in_working_capital = working_capital_2018 - working_capital_2017\n    capital_expenditure = depreciation_expense  # Assuming steady-state condition where capital expenditure equals depreciation\n    fcff = ebitda - income_tax - change_in_working_capital - capital_expenditure\n    \n    # return answer\n    return fcff\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-775",
        "python_solution": "",
        "ground_truth": null,
        "question": "Gemini is planning to buy a two-year Treasury note futures contract. The base 1.2%, semi-annual two-year Treasury note is listed at a clean price of 103. It's been 60 days since the last coupon payment. Gemini is aiming to determine the total spot price of the base two-year Treasury note:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    clean_price = 103\n    annual_coupon_rate = 0.012  # 1.2%\n    days_since_last_coupon = 60\n    days_in_year = 365\n\n    # Calculate accrued interest\n    coupon_payment_per_period = (annual_coupon_rate / 2) * 100  # semi-annual coupon payment per $100 face value\n    days_in_period = days_in_year / 2  # days in a semi-annual period\n    accrued_interest = (coupon_payment_per_period / days_in_period) * days_since_last_coupon\n\n    # Calculate total spot price (dirty price)\n    total_spot_price = clean_price + accrued_interest\n\n    # return answer\n    return total_spot_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-776",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the Equivalent YTM if the buying price of a 30-day Treasury Bill is 99.5?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100  # Assuming face value of Treasury Bill is $100\n    buying_price = 99.5  # Given buying price of the 30-day Treasury Bill\n    days_to_maturity = 30  # Number of days to maturity\n    days_in_year = 365  # Number of days in a year\n    \n    # Do math calculation to get the answer\n    # Calculate the yield to maturity using the formula for short-term investments\n    ytm = ((face_value / buying_price) - 1) * (days_in_year / days_to_maturity)\n    \n    # Express YTM as a percentage\n    ytm_percentage = ytm * 100\n    \n    # return answer\n    return ytm_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-777",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the interest rates are 10% and they surge by 25 basis points, how much will the bond portfolio value diminish by, given that these are the current specifications: Portfolio X has 8 bonds under a long position, a price of $90,000, and a modified duration of 2.5, Portfolio Y is worth $110,000 and holds a short position in 6 bonds with a modified duration of 3, and Portfolio Z's details are a $120,000 price, a modified duration of 3.3, and a long position in 12 bonds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    interest_rate_change = 25 / 10000  # 25 basis points in decimal form\n    price_x = 90000\n    modified_duration_x = 2.5\n    num_bonds_x = 8\n    price_y = 110000\n    modified_duration_y = 3\n    num_bonds_y = 6\n    price_z = 120000\n    modified_duration_z = 3.3\n    num_bonds_z = 12\n    \n    # Calculate bond portfolio value change for each portfolio\n    change_x = -price_x * modified_duration_x * interest_rate_change * num_bonds_x\n    change_y = price_y * modified_duration_y * interest_rate_change * num_bonds_y  # Short position, hence positive change\n    change_z = -price_z * modified_duration_z * interest_rate_change * num_bonds_z\n    \n    # Calculate total change in bond portfolio value\n    total_change = change_x + change_y + change_z\n    \n    # return answer\n    return total_change\n```"
        ]
    },
    {
        "tables": [
            "|                          |      |\n|--------------------------|------|\n| weight of asset A        | 30%  |\n| weight of asset B        | 70%  |\n| standard deviation of asset A | 10%  |\n| standard deviation of asset B  | 15%  |\n| correlation coefficient  | -0.7 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-778",
        "python_solution": "",
        "ground_truth": null,
        "question": "Compute the standard deviation of the portfolio as per the data presented in the below table:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_asset_A = 0.3\n    weight_asset_B = 0.7\n    std_dev_asset_A = 0.10\n    std_dev_asset_B = 0.15\n    correlation_coefficient = -0.7\n    \n    # Do math calculation to get the answer\n    portfolio_variance = (weight_asset_A ** 2) * (std_dev_asset_A ** 2) + (weight_asset_B ** 2) * (std_dev_asset_B ** 2) + 2 * weight_asset_A * weight_asset_B * correlation_coefficient * std_dev_asset_A * std_dev_asset_B\n    portfolio_std_dev = portfolio_variance ** 0.5\n    answer = portfolio_std_dev\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|       Factor      | Market |  Size  | Value | Momentum |\n|:-----------------:|:------:|:------:|:-----:|:--------:|\n|    Coefficient    |  1.080 |  0.098 | -0.401|  0.034   |\n| Variance of the market factor return and covariances with the market factor return | 0.00109 | 0.00053 | 0.00022 | -0.00025 |\n| Portfolio's monthly standard deviation of returns | | | | 3.74% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-779",
        "python_solution": "",
        "ground_truth": null,
        "question": "Referring to Exhibit 1, what percentage of the total portfolio risk is accounted for by the market factor in the current portfolio of Fund 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_coefficient = 1.080\n    market_variance = 0.00109\n    portfolio_standard_deviation = 0.0374\n    \n    # Do math calculation to get the answer\n    market_risk_contribution = market_coefficient * (market_variance ** 0.5)\n    total_portfolio_risk = portfolio_standard_deviation\n    percentage_market_risk = (market_risk_contribution / total_portfolio_risk) ** 2 * 100\n    \n    # return answer\n    return round(percentage_market_risk, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-780",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a luxury vehicle, bought for \u00a3200,000, is financed for a duration of five years with an annual interest rate of 6% compounded monthly with the initial payment due in a month, how much is the monthly payment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 200000  # initial loan amount\n    annual_interest_rate = 0.06  # 6% annual interest rate\n    years = 5  # 5-year duration\n    monthly_interest_rate = annual_interest_rate / 12  # monthly interest rate\n    months = years * 12  # number of payments\n    \n    # Do math calculation to get the answer\n    monthly_payment = principal * monthly_interest_rate * (1 + monthly_interest_rate) ** months / ((1 + monthly_interest_rate) ** months - 1)\n    \n    # return answer\n    return round(monthly_payment, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-781",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bondholder has a bond with a 9% coupon rate that pays interest biannually and matures in three years and they are thinking about selling it. If the necessary return rate on the bond is 11%, what is the bond's cost per 100 of nominal value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.09  # 9% coupon rate\n    necessary_return_rate = 0.11  # 11% necessary return rate\n    maturity_years = 3\n    nominal_value = 100\n    \n    # Calculate the number of periods\n    n = maturity_years * 2  # Biannual payments, so 2 periods per year\n    \n    # Calculate the payment per period\n    payment_per_period = (coupon_rate / 2) * nominal_value\n    \n    # Calculate the present value of the bond\n    pv = 0\n    for i in range(n):\n        pv += payment_per_period / ((1 + necessary_return_rate/2) ** (i + 1))\n    \n    # Add the present value of the return of the nominal value at maturity\n    pv += nominal_value / ((1 + necessary_return_rate/2) ** n)\n    \n    # return answer\n    return pv\n```"
        ]
    },
    {
        "tables": [
            "|           | Hedge Fund | Market Index |\n|-----------|------------|--------------|\n| Hedge Fund   | 256        | 110          |\n| Market Index | 110        | 81           |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-782",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the association between the returns of the hedge fund and the market index as per the covariance matrix of returns constructed by a researcher?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    hedge_fund_covariance = 256\n    market_index_covariance = 81\n    covariance_between_hedge_fund_and_market_index = 110\n    \n    # Do math calculation to get the answer\n    correlation_coefficient = covariance_between_hedge_fund_and_market_index / ((hedge_fund_covariance ** 0.5) * (market_index_covariance ** 0.5))\n    \n    # return answer\n    return correlation_coefficient\n```"
        ]
    },
    {
        "tables": [
            "|     |     |     |     |\n|-----|-----|-----|-----|\n|**Return in 2006-2017(%)**||||\n| 2006 | 1.48 | 2012 | -8.19|\n| 2007 | -1.59| 2013 | -4.11|\n| 2008 | 8.47 | 2014 | 0.33 |\n| 2009 | -1.55| 2015 | 5.84 |\n| 2010 | -2.69| 2016 | 2.04 |\n| 2011 | -1.89| 2017 | 3.72 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-783",
        "python_solution": "",
        "ground_truth": null,
        "question": "If John invests in a fund and the annual returns range between 1.03% \u2264 x <4.77%, what will be the cumulative relative frequency?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [1.48, -1.59, 8.47, -1.55, -2.69, -1.89, -8.19, -4.11, 0.33, 5.84, 2.04, 3.72]\n    min_range = 1.03\n    max_range = 4.77\n    \n    # Do math calculation to get the answer\n    count = sum(1 for ret in returns if min_range <= ret < max_range)\n    total_returns = len(returns)\n    cumulative_relative_frequency = count / total_returns\n    \n    # return answer\n    return cumulative_relative_frequency\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-784",
        "python_solution": "",
        "ground_truth": null,
        "question": "Grand Rapids Titanium Corp (GRTC) sustains an 80 percent dividend payout ratio due to its restricted growth possibilities. The company's return on equity stands at 15 percent. The obligatory return rate on GRTC's equity is 12 percent, while its anticipated long-term growth rate is 3 percent. Can you determine the justified P/B using the projected fundamentals, in accordance with the residual income model and under the assumption of a constant growth rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_payout_ratio = 0.8\n    return_on_equity = 0.15\n    required_return_on_equity = 0.12\n    long_term_growth_rate = 0.03\n\n    # Do math calculation to get the answer\n    residual_income_per_book_value = return_on_equity - required_return_on_equity\n    present_value_of_residual_income_per_book_value = (residual_income_per_book_value * (1 - dividend_payout_ratio)) / (required_return_on_equity - long_term_growth_rate)\n    justified_price_to_book_ratio = 1 + present_value_of_residual_income_per_book_value\n\n    # return answer\n    return justified_price_to_book_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-785",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the latest financial year, Farrow Inc. had average days of sales outstanding of 19 days. Farrow is aiming to enhance its credit policies and collection methodologies and reduce its collection phase in the forthcoming financial year to align with the market average of 15 days. The credit sales in the latest fiscal year were $300 million, and they are estimated to rise to $390 million in the next fiscal year. What should be the alteration in the average accounts receivable balance to accomplish Farrow's objective of decreasing the collection period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_average_days_sales_outstanding = 19\n    target_average_days_sales_outstanding = 15\n    current_credit_sales = 300000000\n    estimated_credit_sales = 390000000\n    \n    # Do math calculation to get the answer\n    current_average_accounts_receivable = (current_average_days_sales_outstanding / 365) * current_credit_sales\n    target_average_accounts_receivable = (target_average_days_sales_outstanding / 365) * estimated_credit_sales\n    alteration_in_average_accounts_receivable = target_average_accounts_receivable - current_average_accounts_receivable\n    \n    # return answer\n    return alteration_in_average_accounts_receivable\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-786",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a set of mortgages, 50% are deemed as subprime. The principal balance of 50% of these subprime mortgages and 25% of the non-subprime mortgages are higher than the value of the property used as collateral. If you randomly pick a mortgage from this set for inspection and its principal balance is more than the value of the collateral, what is the likelihood that it is a subprime mortgage?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    percentage_of_subprime_mortgages = 0.5\n    percentage_of_subprime_higher_than_collateral = 0.5\n    percentage_of_non_subprime_higher_than_collateral = 0.25\n    \n    # Do math calculation to get the answer\n    # Calculate the percentage of mortgages with principal balance higher than collateral\n    percentage_higher_than_collateral = (percentage_of_subprime_mortgages * percentage_of_subprime_higher_than_collateral) + ((1 - percentage_of_subprime_mortgages) * percentage_of_non_subprime_higher_than_collateral)\n    \n    # Calculate the likelihood that the picked mortgage is subprime given that its principal balance is more than the value of the collateral\n    likelihood_subprime_given_higher_than_collateral = (percentage_of_subprime_mortgages * percentage_of_subprime_higher_than_collateral) / percentage_higher_than_collateral\n    \n    # return answer\n    return likelihood_subprime_given_higher_than_collateral\n```"
        ]
    },
    {
        "tables": [
            "| Time Period | Forward Rate |\n|-------------|--------------|\n| 0y1y        | 0.80%        |\n| 1y1y        | 1.12%        |\n| Z           | 3.94%        |\n| 3y1y        | 3.28%        |\n| 4y1y        | 3.14%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-787",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value per 100 of par value for a two-year, 3.5% coupon bond, where interest payments are disbursed once a year, considering all rates mentioned are annual rates with a periodicity of one (effective annual rates)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    forward_rate_0y1y = 0.0080  # 0.80%\n    forward_rate_1y1y = 0.0112  # 1.12%\n    forward_rate_2y1y = 0.0394  # 3.94%\n    coupon_rate = 0.035  # 3.5%\n    face_value = 100\n    \n    # Do math calculation to get the answer\n    # Calculate spot rate for each period\n    spot_rate_0y1y = (1 + forward_rate_0y1y) - 1\n    spot_rate_0y2y = ((1 + forward_rate_0y1y) * (1 + forward_rate_1y1y)) ** (1/2) - 1\n    spot_rate_0y3y = ((1 + forward_rate_0y1y) * (1 + forward_rate_1y1y) * (1 + forward_rate_2y1y)) ** (1/3) - 1\n\n    # Calculate present value of coupon payments and face value\n    coupon_payment = face_value * coupon_rate\n    pv_coupon_1y = coupon_payment / (1 + spot_rate_0y1y)\n    pv_coupon_2y = coupon_payment / (1 + spot_rate_0y2y) ** 2\n    pv_face_value = face_value / (1 + spot_rate_0y2y) ** 2\n\n    # Calculate total present value\n    total_pv = pv_coupon_1y + pv_coupon_2y + pv_face_value\n    \n    # return answer\n    return total_pv\n\nprint(solution())\n```\n\nNote: I made some assumptions in the code, such as using the geometric mean to calculate the spot rates, since the table does not provide the complete term structure of interest rates. Also, the code does not consider any compounding frequency other than annual. Please let me know if you have any further questions or if there is anything else I can help you with!"
        ]
    },
    {
        "tables": [
            "|  X  | Y=5 | Y=2 | Y=-3 |\n| --- | --- | --- | ---- |\n| -2  | 0.2 | 0   | 0    |\n|  1  | 0   | 0.6 | 0    |\n|  4  | 0   | 0   | 0.2  |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-788",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided data chart, what is the standard deviation of X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    x_values = [-2, 1, 4]\n    probabilities = [0.2, 0.6, 0.2]  # We only consider Y=5, Y=2, and Y=-3 when calculating probabilities\n    \n    # Calculate the mean of X\n    mean_x = sum(x * p for x, p in zip(x_values, probabilities))\n    \n    # Calculate the variance of X\n    variance_x = sum((x - mean_x) ** 2 * p for x, p in zip(x_values, probabilities))\n    \n    # Calculate the standard deviation of X\n    std_dev_x = variance_x ** 0.5\n    \n    # return answer\n    return std_dev_x\n```"
        ]
    },
    {
        "tables": [
            "| Profit | Cumulative  Distribution  Function |\n|--------|-----------------------------------|\n| $0     | 0.2                               |\n| $1     | 0.4                               |\n| $2     | 0.6                               |\n| $3     | 0.8                               |\n| $4     | 1.0                               |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-789",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the chance of a profit between $1 and $4, as depicted by the following table displaying the discrete uniform probability distribution of gross profits from buying an option?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cumulative_distribution = {\n        0: 0.2,\n        1: 0.4,\n        2: 0.6,\n        3: 0.8,\n        4: 1.0\n    }\n    \n    # Do math calculation to get the answer\n    # Calculate P($4)\n    prob_4 = cumulative_distribution[4]\n    \n    # Calculate P($1)\n    prob_1 = cumulative_distribution[1]\n    \n    # Calculate P($1 <= X <= $4) = P($4) - P($1) + P($1)\n    # However, in this discrete uniform distribution, \n    # we don't need to include P($1) because we are looking at $1 to $4, inclusive.\n    answer = prob_4 - prob_1\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| ($ millions)          | 2017 | 2018 |\n|-----------------------|------|------|\n| Revenue               | 42   | 37   |\n| Cost of goods sold    | 18   | 16   |\n| Inventory             | 36   | 40   |\n| Accounts receivable   | 22   | 19   |\n| Accounts payable      | 14   | 12   |"
        ],
        "topic": "Accounting",
        "question_id": "test-790",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the year 2018, a firm that utilized US GAAP did cash disbursements of $6 million for employee wages, $2 million for interest liabilities, and $4 million for income tax obligations. Based solely on the data provided in the chart, what is the firm's cash flow from operations for 2018?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue_2018 = 37  # in millions\n    cost_of_goods_sold_2018 = 16  # in millions\n    inventory_2017 = 36  # in millions\n    inventory_2018 = 40  # in millions\n    accounts_receivable_2017 = 22  # in millions\n    accounts_receivable_2018 = 19  # in millions\n    accounts_payable_2017 = 14  # in millions\n    accounts_payable_2018 = 12  # in millions\n    cash_disbursement_wages = 6  # in millions\n    cash_disbursement_interest = 2  # in millions\n    cash_disbursement_tax = 4  # in millions\n\n    # Calculate net income\n    net_income = revenue_2018 - cost_of_goods_sold_2018\n\n    # Calculate changes in working capital accounts\n    change_in_inventory = inventory_2018 - inventory_2017\n    change_in_accounts_receivable = accounts_receivable_2018 - accounts_receivable_2017\n    change_in_accounts_payable = accounts_payable_2018 - accounts_payable_2017\n\n    # Calculate cash flow from operations\n    cash_flow_from_operations = net_income - change_in_inventory - change_in_accounts_receivable + change_in_accounts_payable - cash_disbursement_wages - cash_disbursement_interest - cash_disbursement_tax\n\n    # return answer\n    return cash_flow_from_operations\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-791",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given that the cost per unit for savings account services is 0.5%, the anticipated overhead costs assigned to these services is 1.2%, the targeted profit margin per unit sold is 0.3%, the variable cost rate is 1.2%, and the mean interest rate is 4.5%, what would be the savings rate as per the Cost Plus Profit Margin method of pricing Savings-related Services?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_per_unit = 0.005  # 0.5%\n    overhead_costs = 0.012  # 1.2%\n    targeted_profit_margin = 0.003  # 0.3%\n    variable_cost_rate = 0.012  # 1.2%\n    mean_interest_rate = 0.045  # 4.5%\n\n    # Do math calculation to get the answer\n    savings_rate = (cost_per_unit + overhead_costs + targeted_profit_margin + variable_cost_rate) / (1 - mean_interest_rate)\n\n    # return answer\n    return savings_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-792",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a client wishes to purchase a ball from a store that has 200 balls, three of which are of the same size, what is the likelihood that one of the three balls will be chosen?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_balls = 200\n    same_size_balls = 3\n    \n    # Do math calculation to get the answer\n    probability = same_size_balls / total_balls\n    \n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-793",
        "python_solution": "",
        "ground_truth": null,
        "question": "Imagine the present 1-year rate for zero-coupon bonds stays at 6%, and the coming 1-year will fall by 2%. What would be the 2-year spot rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    first_year_rate = 0.06  # 1-year rate for zero-coupon bonds\n    rate_change = -0.02  # rate change for the coming 1-year\n    \n    # Do math calculation to get the answer\n    second_year_rate = first_year_rate + rate_change\n    two_year_spot_rate = ((1 + first_year_rate) * (1 + second_year_rate)) ** 0.5 - 1\n    \n    # return answer\n    return two_year_spot_rate\n```\n\nThis program calculates the 2-year spot rate by first calculating the rate for the second year, then using the geometric mean of the two rates to find the 2-year spot rate. The result will be the 2-year spot rate."
        ]
    },
    {
        "tables": [
            "| Current spot rate for the USD/EUR | 0.7500 |\n| --- | --- |\n| Forward rate for the EUR/AUD | 1.4300 |\n| EUR/AUD forward premium to the spot rate | 400 points |\n| USD: US dollar; EUR: Euro; AUD: Australian dollar | |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-794",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the same circumstances, what is the USD/AUD spot rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    usd_eur_spot_rate = 0.7500\n    eur_aud_forward_rate = 1.4300\n    eur_aud_forward_premium = 400 / 10000  # converting 400 points to decimal format\n    \n    # Do math calculation to get the answer\n    eur_aud_spot_rate = eur_aud_forward_rate / (1 + eur_aud_forward_premium)\n    usd_aud_spot_rate = eur_aud_spot_rate * (1 / usd_eur_spot_rate)\n    \n    # return answer\n    return round(usd_aud_spot_rate, 4)\n\nresult = solution()\nprint(f\"The final answer is {result}.\") \n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-795",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond's current price is $101.45 and a financial advisor anticipates that the price will increase to $103.28 if interest rates drop by 0.25% or decrease to $100.81 if interest rates go up by 0.25%, what is the bond's effective duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_current_price = 101.45\n    anticipated_price_increase = 103.28\n    anticipated_price_decrease = 100.81\n    interest_rate_change = 0.25  # in decimal form\n    \n    # Do math calculation to get the answer\n    price_change_increase = anticipated_price_increase - bond_current_price\n    price_change_decrease = bond_current_price - anticipated_price_decrease\n    \n    percentage_change_increase = (price_change_increase / bond_current_price) / interest_rate_change\n    percentage_change_decrease = (price_change_decrease / bond_current_price) / interest_rate_change\n    \n    effective_duration = (percentage_change_increase + percentage_change_decrease) / 2\n    \n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [
            "|                       |        |\n| --------------------- | ------ |\n| Net income $          | 100,000|\n| Increase in accounts receivable | 12,000 |\n| Increase in accounts payable | 9,000   |\n| Depreciation and amortization   | 8,000   |"
        ],
        "topic": "Accounting",
        "question_id": "test-796",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the operational cash flow, taking into account the chosen data from the business's activities?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 100000\n    increase_in_accounts_receivable = 12000\n    increase_in_accounts_payable = 9000\n    depreciation_and_amortization = 8000\n    \n    # Do math calculation to get the answer\n    operational_cash_flow = net_income - increase_in_accounts_receivable + increase_in_accounts_payable + depreciation_and_amortization\n    \n    # return answer\n    return operational_cash_flow\n```"
        ]
    },
    {
        "tables": [
            "|                           |         |\n|---------------------------|---------|\n| Forecasted Balance Sheet Data for LI at 31 December 2018    |         |\n| Cash                      | 120     |\n| Accounts receivable       | 30      |\n| Inventory                 | 450     |\n| Fixed assets              | 800     |\n| Total assets              | 1,400   |\n| Liabilities               | 320     |\n| Common stock              | 780     |\n| Retained earnings         | 300     |",
            "|                            | Exchange rates ($/\u20ac) |\n|----------------------------|----------------------|\n| when fixed assets were acquired | 1.55                 |\n| 31 December 2018           | 1.77                 |\n| 2018 average               | 1.68                 |"
        ],
        "topic": "Accounting",
        "question_id": "test-797",
        "python_solution": "",
        "ground_truth": null,
        "question": "The XY corporation is an American business that follows US GAAP. It also owns two European subsidiary companies: FS financial service and FC financial consultant. John, a CFA, has compiled a forecast of XY's 2018 financial statement. If XY chooses the current rate method to convert the data of FS into US dollars and the temporal method for converting the data of FC into US dollars, what will the total assets be on 31 December 2018 when XY translates FS's results into US dollars?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash = 120\n    accounts_receivable = 30\n    inventory = 450\n    fixed_assets_FC = 800  # FC is translated using temporal method\n    exchange_rate_historical = 1.55  # exchange rate when fixed assets were acquired\n    exchange_rate_current = 1.77  # exchange rate at 31 December 2018\n    fixed_assets_FS = fixed_assets_FC / exchange_rate_historical * exchange_rate_current  # FS is translated using current rate method\n    \n    # Do math calculation to get the answer\n    total_assets_FS = cash + accounts_receivable + inventory + fixed_assets_FS\n    \n    # return answer\n    return total_assets_FS\n```"
        ]
    },
    {
        "tables": [
            "|                         | Delite Beverage |\n|------------------------ |-----------------|\n| 2010 Earnings per share (EPS) | $3.44         |\n| 2011 estimated EPS      | $3.50          |\n| Book value per share end of year | $62.05    |\n| Current share price     | $65.50         |\n| Sales (billions)        | $32.13         |\n| Free cash flow per share| $2.68          |\n| Shares outstanding end of year | 2,322,034,000 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-798",
        "python_solution": "",
        "ground_truth": null,
        "question": "Basing on the information provided in Exhibit 1, what would be the most suitable price-to-earnings ratio to apply in the assessment of value for the soft drink manufacturing and distribution company, Delite Beverage, especially considering their recent acquisition of a large water bottling firm?",
        "output": [
            "To determine the most suitable price-to-earnings (P/E) ratio for assessing the value of Delite Beverage, especially after their recent acquisition of a large water bottling firm, we need to consider various factors. These include the company's growth prospects, the industry average, and the impact of the acquisition on its earnings and stock price.\n\nGiven the data, we'll calculate the current P/E ratio and the price-to-book (P/B) ratio to get a better understanding of the company's current valuation. We'll also calculate a forward-looking P/E ratio using the 2011 estimated EPS to consider the effect of the acquisition.\n\n```python\ndef solution():\n    # Define variables name and value\n    current_earnings_per_share = 3.44\n    estimated_earnings_per_share = 3.50\n    book_value_per_share = 62.05\n    current_share_price = 65.50\n    \n    # Do math calculation to get the answer\n    # Current Price-to-Earnings (P/E) ratio\n    pe_current = current_share_price / current_earnings_per_share\n    \n    # Forward Price-to-Earnings (P/E) ratio based on estimated 2011 earnings\n    pe_forward = current_share_price / estimated_earnings_per_share\n    \n    # Price-to-Book (P/B) ratio\n    pb_ratio = current_share_price / book_value_per_share\n    \n    # Considering the growth and the recent acquisition, the forward P/E ratio might offer a better insight\n    answer = pe_forward\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-799",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following data is provided for the returns on shares X and shares Y: the return variance for shares X is 100; the return variance for shares Y is 225, and the covariance between the returns on shares X and Y is 53.2. At the conclusion of 1999, you have USD 4 million in shares X. It's under consideration to move USD 1 million to shares Y while preserving USD 3 million in shares X. What is the risk reduction percentage, denoted by return standard deviation, that can be achieved with this strategy?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    variance_x = 100\n    variance_y = 225\n    covariance_xy = 53.2\n    initial_investment_x = 4e6\n    new_investment_x = 3e6\n    new_investment_y = 1e6\n\n    # Calculate initial risk (standard deviation)\n    initial_risk = (variance_x ** 0.5) * (initial_investment_x / initial_investment_x)\n\n    # Calculate new risk (standard deviation)\n    new_risk = ((new_investment_x / (new_investment_x + new_investment_y)) ** 2 * variance_x + \n                 (new_investment_y / (new_investment_x + new_investment_y)) ** 2 * variance_y + \n                2 * (new_investment_x / (new_investment_x + new_investment_y)) * (new_investment_y / (new_investment_x + new_investment_y)) * covariance_xy) ** 0.5\n\n    # Calculate risk reduction percentage\n    risk_reduction_percentage = ((initial_risk - new_risk) / initial_risk) * 100\n\n    # return answer\n    return risk_reduction_percentage\n```"
        ]
    },
    {
        "tables": [
            "| X     | 0    | 1    | 2    | 3    | 4    | 5    | 6    | 7    |\n|-------|------|------|------|------|------|------|------|------|\n| P(X)  | 0.14 | 0.09 | 0.19 | 0.25 | 0.17 | 0.06 | 0.03 | 0.07 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-800",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided table, what is the value of F(4)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = [0.14, 0.09, 0.19, 0.25, 0.17, 0.06, 0.03, 0.07]\n    \n    # Do math calculation to get the answer\n    cumulative_distribution = [sum(probabilities[:i+1]) for i in range(len(probabilities))]\n    answer = cumulative_distribution[4]\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-801",
        "python_solution": "",
        "ground_truth": null,
        "question": "A bond was purchased by Robert with a remaining maturity of two years. The face value of the bond is 1000. The annual interest rate is 4% and the interest is paid once a year. The current market discount rate is 4.5%. What is the cost of the bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000\n    annual_interest_rate = 0.04\n    market_discount_rate = 0.045\n    years_to_maturity = 2\n    \n    # Do math calculation to get the answer\n    # Calculate the present value of the face value\n    present_value_face = face_value / (1 + market_discount_rate) ** years_to_maturity\n    \n    # Calculate the present value of the coupon payments\n    coupon_payment = face_value * annual_interest_rate\n    present_value_coupons = 0\n    for i in range(1, years_to_maturity + 1):\n        present_value_coupons += coupon_payment / (1 + market_discount_rate) ** i\n    \n    # Calculate the total present value (cost) of the bond\n    cost = present_value_face + present_value_coupons\n    \n    # return answer\n    return cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-802",
        "python_solution": "",
        "ground_truth": null,
        "question": "In order to make use of the cash position of assets under management, an investment strategist decides to engage in a long futures position on the S&P 500 index with a multiplier of 250. The cash position stands at $15 million and given the existing futures value of 1,000, requires the strategist to hold 60 contracts long. Given that the present initial margin is $12,500 per contract and the maintenance margin stands at $10,000 per contract, what amount of variation margin is required by the investment strategist if the value of the futures contract drops to 995 on the closing day of the position being initiated?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_position = 15000000  # $15 million\n    futures_value = 1000\n    multiplier = 250\n    contracts = 60\n    initial_margin = 12500  # $12,500 per contract\n    maintenance_margin = 10000  # $10,000 per contract\n    new_futures_value = 995\n\n    # Calculate the loss per contract\n    loss_per_contract = (futures_value - new_futures_value) * multiplier\n    total_loss = loss_per_contract * contracts\n\n    # Calculate the variation margin\n    variation_margin = max(0, total_loss - (initial_margin - maintenance_margin) * contracts)\n\n    # return answer\n    return variation_margin\n```\nNote: The variation margin calculation is an approximation and assumes that the total loss exceeds the difference between the initial and maintenance margins. If the loss is less than this difference, the variation margin would be zero. The above code assumes the loss is large enough to require a variation margin."
        ]
    },
    {
        "tables": [
            "| Return, R     | Frequency |\n| ------------- |:---------:|\n| -5% up to 0%  | 1         |\n| 0% up to 5%   | 6         |\n| 5% up to 10%  | 4         |\n| 10% up to 15% | 3         |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-803",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided frequency distribution table, can you compute the sample size?",
        "output": [
            "To calculate the sample size, we need to sum up the frequencies of all the return ranges. \n\n```python\ndef solution():\n    # Define variables name and value\n    frequency_1 = 1  # frequency for return range -5% up to 0%\n    frequency_2 = 6  # frequency for return range 0% up to 5%\n    frequency_3 = 4  # frequency for return range 5% up to 10%\n    frequency_4 = 3  # frequency for return range 10% up to 15%\n    \n    # Do math calculation to get the answer\n    sample_size = frequency_1 + frequency_2 + frequency_3 + frequency_4\n    \n    # return answer\n    return sample_size\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-804",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we aim to incorporate seasons such as spring, summer, autumn, and winter as independent variables, how many dummy variables are required to construct a regression model?",
        "output": [
            "To determine the number of dummy variables required for a regression model that incorporates seasons (spring, summer, autumn, and winter), we can follow a simple rule from statistics. When creating dummy variables for categorical data, we generally need one less dummy variable than the number of categories, because if all other dummy variables are 0, it implies the last category is being represented.\n\nHere's the Python program to calculate this:\n\n```python\ndef solution():\n    # Define variables name and value\n    number_of_seasons = 4  # Spring, Summer, Autumn, Winter\n    \n    # Do math calculation to get the answer\n    # The number of dummy variables needed is one less than the number of categories\n    number_of_dummy_variables = number_of_seasons - 1\n    \n    # return answer\n    return number_of_dummy_variables\n\nprint(solution())\n```\n\nThis program will return `3`, indicating that 3 dummy variables are required to represent the 4 seasons in a regression model without violating the assumptions of linear regression (i.e., avoiding multicollinearity issues that would arise from including all categories as separate dummy variables)."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-805",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is interested in purchasing a 2-year bond with an annual coupon rate of 5%. The spot rates are listed as 4% for one year and 4.5% for two years. What is the cost of the bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100  # Assuming a par value of $100\n    annual_coupon_rate = 0.05  # 5% annual coupon rate\n    coupon_payment = par_value * annual_coupon_rate  # Calculating annual coupon payment\n    spot_rate_year1 = 0.04  # 4% spot rate for 1 year\n    spot_rate_year2 = 0.045  # 4.5% spot rate for 2 years\n\n    # Do math calculation to get the answer\n    present_value_year1_coupon = coupon_payment / (1 + spot_rate_year1)  # Present value of year 1 coupon\n    present_value_year2_coupon = coupon_payment / (1 + spot_rate_year2) ** 2  # Present value of year 2 coupon\n    present_value_par_value = par_value / (1 + spot_rate_year2) ** 2  # Present value of par value\n    cost_of_bond = present_value_year1_coupon + present_value_year2_coupon + present_value_par_value  # Cost of the bond\n\n    # return answer\n    return cost_of_bond\n```"
        ]
    },
    {
        "tables": [
            "| Days to maturity | RMB Spot Interest Rates | USD Spot Interest Rates |\n|-----------------|------------------------|------------------------|\n| 90              | 1%                     | 0.4%                   |\n| 180             | 1.5%                   | 0.6%                   |\n| 270             | 2.0%                   | 0.8%                   |\n| 360             | 2.5%                   | 1.0%                   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-806",
        "python_solution": "",
        "ground_truth": null,
        "question": "An executive initiates a one-year currency swap which involves receiving RMB fixed and paying USD fixed. She utilizes the following data to determine the annualized fixed swap rate for USD: The annualized fixed swap rate for USD is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    rmb_spot_interest_rates = [0.01, 0.015, 0.02, 0.025]  # 90, 180, 270, 360 days\n    usd_spot_interest_rates = [0.004, 0.006, 0.008, 0.01]  # 90, 180, 270, 360 days\n    days_to_maturity = [90, 180, 270, 360]\n\n    # Do math calculation to get the answer\n    # Interpolate interest rates to get a one-year rate, assuming linear interpolation\n    rmb_one_year_rate = rmb_spot_interest_rates[-1]  # 2.5%\n    usd_one_year_rate = usd_spot_interest_rates[-1]  # 1.0%\n\n    # The annualized fixed swap rate for USD is simply the USD one-year rate\n    usd_fixed_swap_rate = usd_one_year_rate * 100  # convert to percentage\n\n    # return answer\n    return usd_fixed_swap_rate\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class     | Geometric Return (%) |\n|-----------------|----------------------|\n| Equities        | 8.0                  |\n| Corporate Bonds | 6.5                  |\n| Treasury bills  | 2.5                  |\n| Inflation       | 2.1                  |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-807",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the risk premium for business bonds a researcher notes in the following historic geometric returns?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    treasury_return = 2.5  # percentage return of Treasury bills\n    corporate_return = 6.5  # percentage return of Corporate Bonds\n\n    # Do math calculation to get the answer\n    risk_premium = corporate_return - treasury_return\n\n    # return answer\n    return risk_premium\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-808",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the bond-equivalent yield if the yield-to-maturity on a yearly-pay bond is 7.75%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_to_maturity = 0.0775  # 7.75%\n    \n    # Do math calculation to get the answer\n    bond_equivalent_yield = (1 + yield_to_maturity)**2 - 1\n    \n    # return answer\n    return bond_equivalent_yield\n```"
        ]
    },
    {
        "tables": [
            "|                                             |      |                                        |      |\n|---------------------------------------------|------|----------------------------------------|------|\n| **Exhibit 1 U.S.  Macroeconomic  Data**        |      |                                        |      |\n| Growth in real consumer spending           | 3.1% | Yield on  10-yr. U.S. Treasury bonds   | 2.7% |\n| Growth in potential labor force            | 1.9% | Growth in real investment spending     | 3.1% |\n| Growth in labor force participation        | -0.3%| Growth in total factor productivity    | 0.5% |\n| Growth in labor productivity               | 1.4% | Change in trade deficit                | -0.5%|"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-809",
        "python_solution": "",
        "ground_truth": null,
        "question": "After the financial crises starting in 2008, the squad deliberates on the potential long-term growth trajectory for the U.S. GDP in the wake of external shocks. Reports from several external sources are scrutinized and an agreed perception of the next decade's annual growth projections for the objects in Exhibit 1 is formed. Using the data from Exhibit 1 and adopting the simplest method to review the total trend growth for the U.S. GDP, the most probable projection for the GDP annual growth over the next decade (in %) would be:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    labor_force_growth_rate = 1.9  # in %\n    labor_productivity_growth_rate = 1.4  # in %\n\n    # Do math calculation to get the answer\n    # The simplest method to estimate the total trend growth for the U.S. GDP\n    # is by adding the labor force growth rate and labor productivity growth rate.\n    gdp_growth_rate = labor_force_growth_rate + labor_productivity_growth_rate\n\n    # return answer\n    return gdp_growth_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-810",
        "python_solution": "",
        "ground_truth": null,
        "question": "The likelihood of Occurrence X is 40%. The likelihood of Occurrence Y is 60%. The combined likelihood of XY is 40%. What is the likelihood (P) that X or Y happens, or both happen?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    p_x = 0.4  # likelihood of Occurrence X\n    p_y = 0.6  # likelihood of Occurrence Y\n    p_xy = 0.4  # combined likelihood of XY\n\n    # Do math calculation to get the answer\n    # Using the formula for the union of two events: P(X or Y) = P(X) + P(Y) - P(X and Y)\n    p_x_or_y = p_x + p_y - p_xy\n\n    # return answer\n    return p_x_or_y\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-811",
        "python_solution": "",
        "ground_truth": null,
        "question": "What should the coupon rate be for the interest payment made on December 15 if Beta Co. issued a five-year semi-annual floating rate bond where the coupon rate is the six-month MRR plus 100 bps, with interest payments made every 15 June and 15 December, and which has a six-month MRR of 3% on June 15 and 3.2% on December 15?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    six_month_MRR_December = 0.032  # 6-month MRR on December 15\n    spread = 0.01  # spread in decimal (100 bps = 1%)\n    \n    # Do math calculation to get the answer\n    coupon_rate = six_month_MRR_December + spread\n    coupon_rate_percentage = coupon_rate * 100  # convert to percentage\n    \n    # return answer\n    return coupon_rate_percentage\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Trades | Execution Price | Shares Executed |\n|--------|-----------------|-----------------|\n| Trade 1 | $40.75 | 10,000 |\n| Trade 2 | $41.25 | 30,000 |\n| Trade 3 | $41.50 | 20,000 |\n| Trade 4 | $41.75 | 30,000 |\n| Total | | 90,000 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-812",
        "python_solution": "",
        "ground_truth": null,
        "question": "On the following day, Thompson asks Green to go over their study on ABC Corp again. Green's study leads her to think that its stocks are underpriced. She gives her study findings to Thompson, and at 10 o'clock in the morning, he tells her to buy 120,000 shares at a price of $40.00 each using a limit order of $42.00. When the price is $40.50, the buy-side trader submits the order for market execution. The only cost involved is a share commission of $0.02. By the day's end, 90,000 shares of the order have been acquired, and ABC Corp concludes at $42.50. The trade was completed at an estimate price of $41.42. Exhibit 1 gives additional details about the completed trades. The arrival cost for buying the 90,000 shares of ABC Corp is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    execution_price = [40.75, 41.25, 41.50, 41.75]\n    shares_executed = [10000, 30000, 20000, 30000]\n    decision_price = 40.00\n    commission_per_share = 0.02\n    \n    # Calculate total shares\n    total_shares = sum(shares_executed)\n    \n    # Calculate total execution value\n    total_execution_value = sum([execution_price[i] * shares_executed[i] for i in range(len(execution_price))])\n    \n    # Calculate commission\n    total_commission = total_shares * commission_per_share\n    \n    # Calculate arrival cost\n    arrival_cost = ((total_execution_value / total_shares) - decision_price) * total_shares + total_commission\n    \n    # return answer\n    return arrival_cost\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-813",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we consider that the yearly continuously compounded spot rates are: Z1=5%, Z2=5.1%, Z3=5.2%, and a 1.5-year bond has a face value of $100 and a 6% semiannual coupon payment, how would you compute the bond price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    z1 = 0.05  # 1-year continuously compounded spot rate\n    z2 = 0.051  # 2-year continuously compounded spot rate\n    z3 = 0.052  # 3-year continuously compounded spot rate\n    face_value = 100  # Face value of the bond\n    coupon_rate = 0.06  # Semiannual coupon payment rate\n    coupon_payment = face_value * coupon_rate / 2  # Semiannual coupon payment\n    n = 3  # Number of coupon payments\n\n    # Do math calculation to get the answer\n    # Calculate the present value of the coupon payments\n    pv_coupon = 0\n    for i in range(1, n+1):\n        if i == 1:\n            pv_coupon += coupon_payment / (1 + z1)**(i/2)\n        elif i == 2:\n            pv_coupon += coupon_payment / (1 + z2)**(i/2)\n        else:\n            pv_coupon += (coupon_payment + face_value) / (1 + z3)**(i/2)\n\n    # Calculate the bond price\n    bond_price = pv_coupon\n\n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-814",
        "python_solution": "",
        "ground_truth": null,
        "question": "A two-year outstanding US Treasury bond has a yield of 3.5%. The swap spread for a 2-year interest rate swap is said to be 80 bps. What does the fixed payer in a two-year interest rate swap have to pay?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    treasury_yield = 0.035  # 3.5%\n    swap_spread = 0.008  # 80 bps\n    \n    # Do math calculation to get the answer\n    swap_rate = treasury_yield + swap_spread\n    fixed_payment = swap_rate * 100  # Assuming notional amount is $100\n    \n    # return answer\n    return fixed_payment\n\nresult = solution()\nprint(result)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-815",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the necessary rate of return is 4%, what is the intrinsic worth per share of a standing issue of 5% never-ending preferred stock with a face value of 100 and zero incorporated options?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    necessary_rate_of_return = 0.04  # 4% necessary rate of return\n    face_value = 100  # Face value of the preferred stock\n    dividend_rate = 0.05  # 5% dividend rate\n    \n    # Do math calculation to get the answer\n    annual_dividend = face_value * dividend_rate  # Calculate the annual dividend\n    intrinsic_worth = annual_dividend / necessary_rate_of_return  # Calculate the intrinsic worth\n    \n    # return answer\n    return intrinsic_worth\n```"
        ]
    },
    {
        "tables": [
            "| 10 | 20 | -8 | 2 | -9 | 5 | 0 | -8 | 3 | 21 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-816",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following set of 10 elements is chosen from a group. The variance of the group is unclear. What is the standard error of the average of the sample?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample = [10, 20, -8, 2, -9, 5, 0, -8, 3, 21]\n    sample_size = len(sample)\n    \n    # Do math calculation to get the answer\n    sample_mean = sum(sample) / sample_size\n    sample_variance = sum((x - sample_mean) ** 2 for x in sample) / (sample_size - 1)\n    standard_error = (sample_variance / sample_size) ** 0.5\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period Price(E) | End of Period Price(E) | Total Dividends(E) |\n|----------|------------------------------|------------------------|---------------------|\n| Able     | 10.00                        | 12.00                  | 0.75                |\n| Baker    | 20.00                        | 19.00                  | 1.00                |\n| Charlie  | 30.00                        | 30.00                  | 2.00                |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-817",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the following data for an equal-weighted index made up of assets X, Y, and Z: What is the price return of the index?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_price_able = 10.00\n    end_price_able = 12.00\n    beginning_price_baker = 20.00\n    end_price_baker = 19.00\n    beginning_price_charlie = 30.00\n    end_price_charlie = 30.00\n\n    # Do math calculation to get the price return of each security\n    price_return_able = (end_price_able - beginning_price_able) / beginning_price_able\n    price_return_baker = (end_price_baker - beginning_price_baker) / beginning_price_baker\n    price_return_charlie = (end_price_charlie - beginning_price_charlie) / beginning_price_charlie\n\n    # Calculate the price return of the index\n    index_price_return = (price_return_able + price_return_baker + price_return_charlie) / 3\n\n    # return answer\n    return index_price_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-818",
        "python_solution": "",
        "ground_truth": null,
        "question": "John has determined that the DDM model is suitable to evaluate Corporation X. With the present dividend and the necessary rate of return of $0.5 per share and 10% respectively. He anticipates that the dividend will rise at 20% per annum for the first three years and then ascend at 5% annually into the unforeseeable future. What's the present value of Corporation X shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    present_dividend = 0.5  # $0.5 per share\n    required_rate_of_return = 0.10  # 10%\n    high_growth_rate = 0.20  # 20% per annum for the first three years\n    sustainable_growth_rate = 0.05  # 5% annually into the unforeseeable future\n\n    # Calculate the high growth period present value\n    high_growth_period_pv = 0\n    for i in range(1, 4):\n        dividend = present_dividend * (1 + high_growth_rate) ** i\n        present_value = dividend / (1 + required_rate_of_return) ** i\n        high_growth_period_pv += present_value\n\n    # Calculate the terminal value\n    terminal_value = present_dividend * (1 + high_growth_rate) ** 3 * (1 + sustainable_growth_rate) / (required_rate_of_return - sustainable_growth_rate)\n\n    # Calculate the present value of the terminal value\n    terminal_value_pv = terminal_value / (1 + required_rate_of_return) ** 3\n\n    # Calculate the present value of Corporation X shares\n    present_value = high_growth_period_pv + terminal_value_pv\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-819",
        "python_solution": "",
        "ground_truth": null,
        "question": "Sam, a market analyst at an investment bank, is conducting research on companies operating in the housing market sector. The leading company in this sector, named LoveYourHome, has recently released its annual financial report, revealing a basic EPS of $56, and a diluted EPS of $52. After examining the footnotes in LoveYourHome's financial report, Sam identifies a nonrecurring profit of $2 per share and a one-time restructuring cost of $3 per share, stemming from an acquisition in the previous year. Utilising a top-down analysis approach, Sam projects that LoveYourHome's basic EPS will rise to 76 in the upcoming year. The company's current share price is $72. Sam is keen to assess the relative worth within the housing sector using the trailing P/E ratio. Given the information provided, what is LoveYourHome's trailing Price/Earnings (P/E) ratio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    basic_eps = 56\n    diluted_eps = 52\n    nonrecurring_profit_per_share = 2\n    one_time_restructuring_cost_per_share = 3\n    projected_basic_eps = 76\n    current_share_price = 72\n\n    # Calculate adjusted EPS by subtracting nonrecurring profit and adding one-time restructuring cost\n    adjusted_eps = diluted_eps - nonrecurring_profit_per_share + one_time_restructuring_cost_per_share\n\n    # Calculate trailing P/E ratio using adjusted EPS\n    trailing_pe_ratio = current_share_price / adjusted_eps\n\n    # return answerapos;\n    return trailing_pe_ratio\n```"
        ]
    },
    {
        "tables": [
            "| Component | Cost      | Useful Life |\n|-----------|-----------|-------------|\n| A         | $500,000  | 10 years    |\n| B         | $500,000  | 5 years     |"
        ],
        "topic": "Accounting",
        "question_id": "test-820",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business aiming to increase profits expended $1,000,000 on equipment with two crucial parts, as shown in the table. The equipment is projected to be functional for a total of 10 years, and the business applies the straight-line depreciation approach.",
        "output": [
            "Here is the Python program to calculate the annual depreciation expense for the equipment:\n```python\ndef solution():\n    # Define variables name and value\n    total_cost = 1000000  # Total cost of the equipment\n    component_a_cost = 500000  # Cost of component A\n    component_b_cost = 500000  # Cost of component B\n    component_a_useful_life = 10  # Useful life of component A in years\n    component_b_useful_life = 5  # Useful life of component B in years\n    total_useful_life = 10  # Total useful life of the equipment in years\n\n    # Do math calculation to get the answer\n    annual_depreciation_expense = total_cost / total_useful_life\n    \n    # However, we need to consider the different useful lives of each component\n    # We'll calculate the weighted average of the depreciation rates for each component\n    weighted_average_depreciation_rate = (component_a_cost / total_cost) * (1 / component_a_useful_life) + (component_b_cost / total_cost) * (1 / component_b_useful_life)\n    annual_depreciation_expense_weighted = total_cost * weighted_average_depreciation_rate\n    \n    # return answer\n    return annual_depreciation_expense_weighted\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-821",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier bought an annuity quite some time ago and is projected to get $1,200 annually for the following 40 years from this annuity. If the anticipated interest rate is 7%, what is the current worth of the cashflows the financier is set to receive?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_payment = 1200\n    years = 40\n    interest_rate = 0.07\n    \n    # Do math calculation to get the answer\n    present_value = annual_payment * (((1 - (1 + interest_rate)**(-years)) / interest_rate))\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $ 500,000 |\n|---|---|\n| Volume Discounts | $ 20,000 |\n| Cash Received | $ 450,000 |\n| Cost of Goods Sold | $ 300,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-822",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under the accrual basis of accounting, what is the net revenue equivalent to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 500000\n    volume_discounts = 20000\n    \n    # Do math calculation to get the answer\n    net_revenue = revenue - volume_discounts\n    \n    # return answer\n    return net_revenue\n```"
        ]
    },
    {
        "tables": [
            "| Compensation of employees | 1,044,005 |\n|---------------------------|-----------|\n| Gross operating surplus | 518,979 |\n| Gross mixed income | 241,415 |\n| Net mixed income | 180,653 |\n| taxes less subsidies on production | 90,507 |\n| taxes less subsidies on products and imports | 139,443 |\n| Statistical discrepancy | 1,157 |\n| Net property income | 136,011 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-823",
        "python_solution": "",
        "ground_truth": null,
        "question": "Compute GDP using the income approach based on the information in the given table",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    compensation_of_employees = 1044005\n    gross_operating_surplus = 518979\n    gross_mixed_income = 241415\n    net_mixed_income = 180653\n    taxes_less_subsidies_on_production = 90507\n    taxes_less_subsidies_on_products_and_imports = 139443\n    statistical_discrepancy = 1157\n    net_property_income = 136011\n\n    # Do math calculation to get the answer\n    gdp = (compensation_of_employees + gross_operating_surplus + gross_mixed_income - net_mixed_income +\n           taxes_less_subsidies_on_production - taxes_less_subsidies_on_products_and_imports +\n           statistical_discrepancy + net_property_income)\n\n    # return answer\n    return gdp\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-824",
        "python_solution": "",
        "ground_truth": null,
        "question": "The fee structure of Cedar Ridge Associates, a fund of hedge funds, is as follows: 2/20 underlying fund fees with independently calculated incentive fees, Cedar Ridge's fees are calculated net of all underlying fund fees, a 1% management fee (based on year-end market value), a 10% incentive fee calculated net of the management fee, and there are no hurdle rate or high-water mark fee conditions for the fund and all underlying funds. In the most recent year, Cedar Ridge\u2019s fund value increased from $100 million to $133 million before any deductions for the fund's management and incentive fees or any underlying funds. Given this information, what is the cumulative fee earned by all the funds?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    year_start_market_value = 100000000  # Starting market value of $100 million\n    year_end_market_value = 133000000    # Ending market value of $133 million\n    underlying_funds_fee = 0.02          # 2% underlying fund fees\n    underlying_funds_incentive_fee = 0.20  # 20% incentive fee for underlying funds\n    cedar_ridge_management_fee = 0.01      # 1% management fee for Cedar Ridge\n    cedar_ridge_incentive_fee = 0.10       # 10% incentive fee for Cedar Ridge\n\n    # Do math calculation to get the answer\n    # Calculate the return of the fund before fees\n    fund_return_before_fees = (year_end_market_value - year_start_market_value) / year_start_market_value\n\n    # Calculate the fees for the underlying funds\n    underlying_funds_fees = year_end_market_value * underlying_funds_fee\n    underlying_funds_incentive_fees = fund_return_before_fees * year_start_market_value * underlying_funds_incentive_fee\n\n    # Calculate the return of the fund after underlying funds fees\n    fund_return_after_underlying_fees = fund_return_before_fees - (underlying_funds_fees / year_start_market_value) - (underlying_funds_incentive_fees / year_start_market_value)\n\n    # Calculate the fees for Cedar Ridge\n    cedar_ridge_management_fees = year_end_market_value * cedar_ridge_management_fee\n    cedar_ridge_incentive_fees = fund_return_after_underlying_fees * year_start_market_value * cedar_ridge_incentive_fee\n\n    # Calculate the total fees\n    total_fees = underlying_funds_fees + underlying_funds_incentive_fees + cedar_ridge_management_fees + cedar_ridge_incentive_fees\n\n    # return answer\n    return total_fees\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-825",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the monthly mortgage payment for a level-payment, fixed-rate mortgage with these features: term is 30 years, mortgage rate is 9.0%, servicing fee is 0.5%, and the initial mortgage loan balance is $150,000?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    term_in_years = 30\n    mortgage_rate = 0.09\n    servicing_fee = 0.005\n    initial_mortgage_loan_balance = 150000\n\n    # Convert the term from years to months\n    term_in_months = term_in_years * 12\n\n    # Calculate the monthly interest rate\n    monthly_interest_rate = (mortgage_rate + servicing_fee) / 12\n\n    # Calculate the monthly mortgage payment\n    monthly_mortgage_payment = (initial_mortgage_loan_balance * monthly_interest_rate * (1 + monthly_interest_rate) ** term_in_months) / ((1 + monthly_interest_rate) ** term_in_months - 1)\n\n    # return answer\n    return round(monthly_mortgage_payment, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-826",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond with a face value of $100 has a 15-year term, an annual payment rate of 10%, and a YTM of 12%, what is its cost?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100\n    term_in_years = 15\n    annual_payment_rate = 0.10\n    ytm = 0.12\n    \n    # Do math calculation to get the answer\n    annual_payment = face_value * annual_payment_rate\n    present_value_of_annual_payments = 0\n    for i in range(term_in_years):\n        present_value_of_annual_payments += annual_payment / (1 + ytm) ** (i + 1)\n    present_value_of_face_value = face_value / (1 + ytm) ** term_in_years\n    cost = present_value_of_annual_payments + present_value_of_face_value\n    \n    # return answer\n    return cost\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-827",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2017, the revenue for Fortune Enterprise was $5000, with a cost of goods sold standing at $900 and depreciation at $700. Given that the firm has an interest coverage ratio that's three times larger, what were its interest expenses in 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 5000\n    cost_of_goods_sold = 900\n    depreciation = 700\n    interest_coverage_ratio = 3\n    \n    # Do math calculation to get the answer\n    # Calculate earnings before interest and tax (EBIT)\n    gross_profit = revenue - cost_of_goods_sold\n    earnings_before_interest_and_tax = gross_profit - depreciation\n    \n    # Calculate interest expenses\n    interest_expenses = earnings_before_interest_and_tax / interest_coverage_ratio\n    \n    # return answer\n    return interest_expenses\n```"
        ]
    },
    {
        "tables": [
            "|                    | Income Statement |         | Balance Sheet Changes |      |\n|--------------------|-----------------:|---------|-----------------------|-----:|\n| Revenue            |         $ 56,800 | Decrease in accounts receivable | $1,324 |\n|                    |                  |         |                       |       |\n| Cost of goods sold |           27,264 | Decrease in inventory          |   501 |\n| Other operating expense           |   562 | Increase in prepaid expense   |     6 |\n| Depreciation expense          |  2,500 | Increase in accounts payable   | 1,063 |"
        ],
        "topic": "Accounting",
        "question_id": "test-828",
        "python_solution": "",
        "ground_truth": null,
        "question": "The subsequent data is derived from the financial statements of Sugarfall Corporation. How much cash did Sugarfall Corp. pay to its suppliers?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_goods_sold = 27264\n    decrease_in_inventory = 501\n    increase_in_accounts_payable = 1063\n    \n    # Do math calculation to get the answer\n    cash_paid_to_suppliers = cost_of_goods_sold + decrease_in_inventory - increase_in_accounts_payable\n    \n    # return answer\n    return cash_paid_to_suppliers\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-829",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume that the earnings from a merger arbitrage operation conducted by XYZ Corporation results in $5 million if it's successful, but \u2014$20 million if it isn't. If the likelihood of success is 83%, what would be the expected payoff on this operation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    payoff_success = 5000000  # earnings if the operation is successful\n    payoff_failure = -20000000  # losses if the operation fails\n    probability_success = 0.83  # likelihood of success\n\n    # Do math calculation to get the answer\n    expected_payoff = (payoff_success * probability_success) + (payoff_failure * (1 - probability_success))\n    \n    # return answer\n    return expected_payoff\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-830",
        "python_solution": "",
        "ground_truth": null,
        "question": "As a portfolio manager, Martin is thinking about including a 2-year bond with a 7% coupon rate and a par value of 100 in his investment portfolio. The bond's interest is paid yearly. Given the current 1-year and 2-year spot rates of 4% and 5% respectively, what is the bond's value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    coupon_rate = 0.07\n    coupon_payment = par_value * coupon_rate\n    one_year_spot_rate = 0.04\n    two_year_spot_rate = 0.05\n    \n    # Do math calculation to get the answer\n    present_value_of_first_coupon = coupon_payment / (1 + one_year_spot_rate)\n    present_value_of_second_coupon_and_par = (coupon_payment + par_value) / ((1 + two_year_spot_rate) ** 2)\n    bond_value = present_value_of_first_coupon + present_value_of_second_coupon_and_par\n    \n    # return answer\n    return bond_value\n```"
        ]
    },
    {
        "tables": [
            "|                       | 40 | 35 | 30 | 25 | 20 |\n|-----------------------|----|----|----|----|----|\n| 3-month call option price | 0.56 | 1.45 | 4.05 | 10.30 | 12.42 |\n| 3-month put option price | 9.56 | 5.20 | 2.78 | 1.56 | 0.72 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-831",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the Exhibit 1 Option Contract Pricing Details, what is the break-even price for an at-the-money (ATM) protective put strategy for Dropqik Corporation, where Justine Fisher, a client of Erica Taylor, holds a significant position and which is currently trading at $30.50 per share?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stock_price = 30.50  # Current price of the stock\n    strike_price = 30  # Strike price of the ATM put option\n    put_option_price = 2.78  # 3-month put option price for strike price 30\n\n    # Do math calculation to get the break-even price\n    break_even_price = strike_price - put_option_price\n\n    # return answer\n    return break_even_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-832",
        "python_solution": "",
        "ground_truth": null,
        "question": "In a living community, the landlords want to choose 3 out of 5 tenants to form a new landlords committee. How many possible scenarios can happen?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_tenants = 5\n    committee_size = 3\n\n    # Do math calculation to get the answer\n    import math\n    possible_scenarios = math.comb(total_tenants, committee_size)\n\n    # return answer\n    return possible_scenarios\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-833",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond's current value is $101.45, and the director predicts an increase to $103.28 should interest rates drop 0.25%, or a decrease to $100.81 should interest rates rise 0.25%, what is the bond's effective duration?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_value = 101.45\n    predicted_value_rise = 103.28\n    predicted_value_fall = 100.81\n    interest_rate_change = 0.25  # in percent\n    \n    # Do math calculation to get the answer\n    price_change_rise = (predicted_value_rise - current_value) / current_value\n    price_change_fall = (current_value - predicted_value_fall) / current_value\n    duration_rise = (price_change_rise / interest_rate_change) * 100\n    duration_fall = (price_change_fall / interest_rate_change) * 100\n    effective_duration = (duration_rise + duration_fall) / 2\n    \n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [
            "| Quantity (unit) | Total Fixed Cost ($) | Total Variable Cost ($) |\n| --- | --- | --- |\n| 0 | 400 | 0 |\n| 1 | 400 | 100 |\n| 2 | 400 | 190 |\n| 3 | 400 | 275 |\n| 4 | 400 | 360 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-834",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a manufacturing company examines its cost structure, and the detailed data is provided in the accompanying table, what is the marginal cost if the production units are elevated from 3 to 4?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_variable_cost_at_3_units = 275\n    total_variable_cost_at_4_units = 360\n    \n    # Do math calculation to get the answer\n    marginal_cost = total_variable_cost_at_4_units - total_variable_cost_at_3_units\n    \n    # return answer\n    return marginal_cost\n```"
        ]
    },
    {
        "tables": [
            "|   |   |\n|---|---|\n| FCFE0  | $10 million  |\n| Growth rate of FCFE  | 2%  |\n| Risk free rate | 2.5%  |\n| Equity Risk Premium  | 4%  |\n| Size Premium  | 1.5%  |\n| Market value of debt | $4 million |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-835",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the provided data, determine the equity value using the CCM.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    FCFE0 = 10e6  # Free Cash Flow to Equity in year 0\n    g = 0.02  # Growth rate of FCFE\n    Rf = 0.025  # Risk-free rate\n    ERP = 0.04  # Equity Risk Premium\n    SP = 0.015  # Size Premium\n    D = 4e6  # Market value of debt\n    \n    # Calculate the cost of equity using the CAPM\n    Re = Rf + ERP + SP  # Cost of equity\n    \n    # Calculate the present value of the FCFE using the Gordon Growth model\n    PV_FCFE = FCFE0 / (Re - g)\n    \n    # Calculate the equity value\n    E = PV_FCFE - D\n    \n    # return answer\n    return E\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-836",
        "python_solution": "",
        "ground_truth": null,
        "question": "A yearly coupon bond with a yield-to-maturity rate of 7% has a price tag of 94.75 per 100 of par value, with a coupon rate standing at 5%. There are 3 years left until it matures. What is the Macaulay duration of this bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    yield_to_maturity = 0.07  # 7%\n    price = 94.75  # per 100 of par value\n    par_value = 100\n    coupon_rate = 0.05  # 5%\n    years_to_maturity = 3\n\n    # Calculate coupon payment per year\n    coupon_payment = par_value * coupon_rate\n\n    # Calculate present value of coupons and principal\n    present_value_coupons = sum(coupon_payment / (1 + yield_to_maturity)**i for i in range(1, years_to_maturity + 1))\n    present_value_principal = par_value / (1 + yield_to_maturity)**years_to_maturity\n\n    # Calculate Macaulay duration\n    macaulay_duration = (sum(i * (coupon_payment / (1 + yield_to_maturity)**i) for i in range(1, years_to_maturity + 1)) +\n                         years_to_maturity * present_value_principal) / (price / par_value)\n\n    # return answer\n    return macaulay_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-837",
        "python_solution": "",
        "ground_truth": null,
        "question": "What are the odds that the returns from a portfolio with an average return rate of 8% and a standard deviation of 14% will range from 8% to 11%?",
        "output": [
            "```python\nimport scipy.stats as stats\n\ndef solution():\n    # Define variables name and value\n    avg_return_rate = 0.08  # 8%\n    std_dev = 0.14  # 14%\n    lower_bound = 0.08  # 8%\n    upper_bound = 0.11  # 11%\n    \n    # Do math calculation to get the answer\n    # Calculate z-scores for lower and upper bounds\n    z_lower = (lower_bound - avg_return_rate) / std_dev\n    z_upper = (upper_bound - avg_return_rate) / std_dev\n    \n    # Use standard normal distribution (Z-table) to find probabilities\n    prob_lower = stats.norm.cdf(z_lower)\n    prob_upper = stats.norm.cdf(z_upper)\n    \n    # Calculate probability between bounds\n    probability = prob_upper - prob_lower\n    \n    # return answer\n    return probability\n```\nThis Python program uses the `scipy.stats` library to calculate the probabilities. The `norm.cdf` function returns the cumulative distribution function (CDF) of the standard normal distribution, which we use to find the probabilities for the lower and upper bounds. The final probability is the difference between these two probabilities, representing the probability that the returns will range from 8% to 11%."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-838",
        "python_solution": "",
        "ground_truth": null,
        "question": "Let's say the present value (S0) of a stock that does not pay dividends is 100, and a put option for this stock has a strike price (X) of $95 with one year left until expiration. Now, a trader thinks that the share price will either rise by 10% or fall by 20%. Which of the subsequent computations of the worth of a put option is correct, presuming a 4% risk-free rate?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 100  # Present value of the stock\n    X = 95    # Strike price of the put option\n    r = 0.04  # Risk-free rate\n    u = 1.10  # Upward movement of the stock price (10% increase)\n    d = 0.80  # Downward movement of the stock price (20% decrease)\n    T = 1     # Time until expiration (1 year)\n    \n    # Calculate the risk-neutral probabilities\n    p = (1 + r - d) / (u - d)\n    q = 1 - p\n    \n    # Calculate the put option value at expiration in the up state\n    P_u = max(0, X - S0 * u)\n    \n    # Calculate the put option value at expiration in the down state\n    P_d = max(0, X - S0 * d)\n    \n    # Calculate the present value of the put option\n    P_0 = (P_u * p + P_d * q) / (1 + r)**T\n    \n    # return answer\n    return P_0\n```\n\nThis Python program uses the Binomial Option Pricing Model to compute the value of the put option. It first calculates the risk-neutral probabilities of an upward and downward movement of the stock price. Then, it calculates the value of the put option at expiration in both the up and down states. Finally, it calculates the present value of the put option by taking a weighted average of the two possible values and discounting by the risk-free rate."
        ]
    },
    {
        "tables": [
            "|     |     | Coefficient |    | Standard Error | t-Statistic |\n|-----|-----|-------------|----|----------------|-------------|\n|     | Intercept | 0.0092 |    | 0.0087 | 1.0582 |\n|     | In Salest-1-In Salest-2 | -0.1279 |    | 0.1137 | -1.1252 |\n|     | In Salest-4-In Salest-5 | 0.7239 |    | 0.1093 | 6.6209 |\n|     | Most Recent Quarterly Sales Data (in billions) |  |    |  |  |\n|     | Dec 2015 (Salest-1) | $3.868 |    |  |  |\n|     | Sept 2015 (Salest-2) | $3.780 |    |  |  |\n|     | June 2015 (Salest-3) | $3.692 |    |  |  |\n|     | Mar 2015 (Salest-4) | $3.836 |    |  |  |\n|     | Dec 2014 (Salest-5) | $3.418 |    |  |  |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-839",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the regression output shown in the Exhibit, what is the predicted quarterly sales value for March 2016 if John is developing a model to predict future quarterly sales, and he starts by running this regression: ln Salest \u2013 ln Salest\u20131 = b0 + b1(ln Salest\u20131 \u2013 ln Salest\u20132) + b2(ln Salest\u20134 \u2013 ln Salest\u20135)+\u03b5t?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    b0 = 0.0092  # Intercept\n    b1 = -0.1279  # Coefficient for ln Salest-1 - ln Salest-2\n    b2 = 0.7239  # Coefficient for ln Salest-4 - ln Salest-5\n    \n    salest_1 = 3.868  # Dec 2015 sales\n    salest_2 = 3.780  # Sept 2015 sales\n    salest_4 = 3.836  # Mar 2015 sales\n    salest_5 = 3.418  # Dec 2014 sales\n    \n    # Do math calculation to get the answer\n    predicted_value = np.exp(b0 + b1 * (np.log(salest_1) - np.log(salest_2)) + b2 * (np.log(salest_4) - np.log(salest_5))) * salest_1\n    \n    # return answer\n    return predicted_value\n```\n\nNote: This code requires the numpy library to be installed. If it's not already installed, you can install it with pip using `pip install numpy`.\n\nAlso, this code assumes that the predicted quarterly sales value for March 2016 is calculated by multiplying the predicted growth rate (obtained by exponentiating the linear combination of the logarithmic sales differences) with the sales value for the previous quarter (Dec 2015)."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-840",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, Pinnacle Parcel sold items online on behalf of individuals under a consignment deal. Pinnacle would receive the goods from the owner, list them for online sale, and earn a 25 percent commission from any sold items. Pinnacle was responsible for collecting the full payment from the purchaser and would then pay the owner the remaining balance after deducting their commissions. If the items did not sell within 90 days, they would be returned to the owner. Throughout 2009, Pinnacle had the following records: The total sales price of items sold on consignment was \u20ac2,000,000. Pinnacle's commission on these items was \u20ac500,000 during 2009. What should Pinnacle declare as revenue in its 2009 income statement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_sales = 2000000\n    commission = 500000\n\n    # Do math calculation to get the answer\n    revenue = commission\n\n    # return answer\n    return revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-841",
        "python_solution": "",
        "ground_truth": null,
        "question": "A valuer has been tasked with calculating the aggregated valuation discounts for a minor shareholding in a privately held firm. The valuer decided that a suitable control premium is 15 percent. A deduction due to the absence of marketability was approximated at 25 percent. In light of these parameters, what is the total discount?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    control_premium = 0.15\n    marketability_discount = 0.25\n    \n    # Do math calculation to get the answer\n    total_discount = (1 + control_premium) * (1 - marketability_discount)\n    total_discount_percentage = (1 - total_discount) * 100\n    \n    # return answer\n    return total_discount_percentage\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-842",
        "python_solution": "",
        "ground_truth": null,
        "question": "From the given data, what will be the other comprehensive income considering, foreign currency conversion benefits amounting to 4, unrealized depreciation on available-for-sale securities sitting at 2, unrealized depreciation on securities held until their maturity estimating 1, and actuarial profits observing 2?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    foreign_currency_conversion_benefits = 4\n    unrealized_depreciation_on_available_for_sale_securities = 2\n    unrealized_depreciation_on_securities_held_until_maturity = 1\n    actuarial_profits = 2\n    \n    # Do math calculation to get the answer\n    other_comprehensive_income = (foreign_currency_conversion_benefits - \n                                  unrealized_depreciation_on_available_for_sale_securities - \n                                  unrealized_depreciation_on_securities_held_until_maturity + \n                                  actuarial_profits)\n    \n    # return answer\n    return other_comprehensive_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-843",
        "python_solution": "",
        "ground_truth": null,
        "question": "Utilizing the given data to compute the total return on an equity share: Buying price: $20 Selling price: $28 Dividend received during the holding period: $1",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    buying_price = 20\n    selling_price = 28\n    dividend_received = 1\n\n    # Do math calculation to get the answer\n    capital_gain = selling_price - buying_price\n    total_return = (capital_gain + dividend_received) / buying_price\n\n    # return answer\n    return total_return\n```"
        ]
    },
    {
        "tables": [
            "|                                 |     |         |\n|---------------------------------|-----|---------|\n| Rate of return on 3-month Treasury bills  |     | 3.0%    |\n| Rate of return on 10-year Treasury bonds |     | 3.5%    |\n| Market risk premium                      |     | 6.0%    |\n| The company's equity beta               |     | 1.6     |\n| Dividend growth rate                    |     | 8.0%    |\n| Corporate tax rate                      |     | 35%     |"
        ],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-844",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the percentage cost of equity for the organization using the CAPM approach and the collected data?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    risk_free_rate = 0.035  # 10-year Treasury bonds rate as risk-free rate\n    market_risk_premium = 0.06  # Market risk premium\n    equity_beta = 1.6  # The company's equity beta\n\n    # Do math calculation to get the answer\n    # Using the CAPM formula: Cost of equity = Risk-free rate + Beta * Market risk premium\n    cost_of_equity = risk_free_rate + equity_beta * market_risk_premium\n    cost_of_equity_percentage = cost_of_equity * 100  # Converting to percentage\n    \n    # return answer\n    return cost_of_equity_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Year | The return of this fund(%) |\n| ---- |------------------------ |\n| 2015 | 4.5                    |\n| 2014 | 3                      |\n| 2013 | 16                     |\n| 2012 | 20.1                   |\n| 2011 | -1                     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-845",
        "python_solution": "",
        "ground_truth": null,
        "question": "The annual return for a fund purchased by John is illustrated below: What will be the geometric mean of the fund?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [4.5, 3, 16, 20.1, -1]\n    \n    # Convert returns to decimal form\n    decimal_returns = [return_value / 100 for return_value in returns]\n    \n    # Calculate the product of (1 + return) for each year\n    product = 1\n    for return_value in decimal_returns:\n        product *= (1 + return_value)\n    \n    # Calculate the geometric mean\n    geometric_mean = (product ** (1 / len(returns))) - 1\n    \n    # Convert the geometric mean back to percentage\n    geometric_mean_percentage = geometric_mean * 100\n    \n    # return answer\n    return geometric_mean_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Time | Value |\n| --- | --- |\n| Time=0 | SO=80 |\n| Time=1 | Su=88 |\n| Time=1 | Sd=72 |\n| Time=2 | Suu=96.80 |\n| Time=2 | Sud,du=79.20 |\n| Time=2 | Sdd=64.80 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-846",
        "python_solution": "",
        "ground_truth": null,
        "question": "Considering a security's anticipated price fluctuation for the next two durations as follows: The starting price of the security is $80. There's a 75% chance of a rise in any given duration and a 25% chance of a decline in any given duration. Employing the binomial model, what are the chances that the security's value will stand at $79.20 after two durations?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability_rise = 0.75\n    probability_decline = 0.25\n    \n    # The probability of a rise followed by a decline, or a decline followed by a rise\n    probability_rise_decline = probability_rise * probability_decline\n    probability_decline_rise = probability_decline * probability_rise\n    \n    # The total probability that the security's value will be $79.20 after two periods\n    total_probability = probability_rise_decline + probability_decline_rise\n    \n    # return answer\n    return total_probability\n\nresult = solution()\nprint(result)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-847",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment firm possesses the subsequent fee structure: 2% Annual management fee dependent on year-end AUM, 20% Incentive fee, and a 4% Hurdle rate prior to starting incentive fee collection. The current high-water mark is at $610 million. The firm's value was $583.1 million at start of the year and reached $642 million before the fees deduction after a year. What would be the net return to an investor for this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    management_fee_rate = 0.02\n    incentive_fee_rate = 0.20\n    hurdle_rate = 0.04\n    high_water_mark = 610000000\n    start_of_year_value = 583100000\n    end_of_year_value_before_fees = 642000000\n\n    # Calculate the annual return before fees\n    annual_return_before_fees = (end_of_year_value_before_fees - start_of_year_value) / start_of_year_value\n\n    # Calculate the management fee\n    management_fee = end_of_year_value_before_fees * management_fee_rate\n\n    # Calculate the incentive fee\n    excess_return_over_hurdle = annual_return_before_fees - hurdle_rate\n    if excess_return_over_hurdle > 0:\n        incentive_fee = (excess_return_over_hurdle * end_of_year_value_before_fees) * incentive_fee_rate\n    else:\n        incentive_fee = 0\n\n    # Calculate the total fees\n    total_fees = management_fee + incentive_fee\n\n    # Calculate the net return to an investor\n    net_return = annual_return_before_fees - (total_fees / start_of_year_value)\n\n    # return answer\n    return net_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-848",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is an entrepreneur who sells socks in the nearby marketplace. If he sells 100 pairs of socks, he generates an earning of $500. However, if he managed to sell 120 pairs, his overall income would be $590. What is the marginal revenue for socks if the market capacity is 120 pairs?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_sales = 100  # initial number of pairs sold\n    initial_revenue = 500  # initial revenue from selling 100 pairs\n    additional_sales = 20  # additional pairs sold (120 - 100)\n    additional_revenue = 90  # additional revenue from selling 20 more pairs (590 - 500)\n\n    # Do math calculation to get the answer\n    marginal_revenue = additional_revenue / additional_sales\n    \n    # return answer\n    return marginal_revenue\n\n# Execute the function to get the answer\nanswer = solution()\nprint(answer)\n```"
        ]
    },
    {
        "tables": [
            "| Year 1 | 15.25% | Year 6 | 30.79% |\n|--------|--------|--------|--------|\n| Year 2 | -10.02% | Year 7 | 12.34% |\n| Year 3 | 20.65% | Year 8 | -5.02% |\n| Year 4 | 9.57% | Year 9 | 16.54% |\n| Year 5 | -40.33% | Year 10 | 27.37% |"
        ],
        "topic": "Accounting",
        "question_id": "test-849",
        "python_solution": "",
        "ground_truth": null,
        "question": "What does the exhibit indicate as the return for the fourth quintile for the MSCI World Index over a span of 10 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    returns = [\n        15.25, -10.02, 20.65, 9.57, -40.33,\n        30.79, 12.34, -5.02, 16.54, 27.37\n    ]\n\n    # Sort the returns in ascending order\n    sorted_returns = sorted(returns)\n\n    # Calculate the fourth quintile (80th percentile)\n    fourth_quintile_index = int(len(sorted_returns) * 0.8) - 1\n    answer = sorted_returns[fourth_quintile_index]\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Transaction  Amount | (US$ millions) |\n|---------------------|----------------|\n| Bought raw material from Indonesia | 50.0 |\n| Sold food products to France | 65.0 |\n| Received royalty fees from its branch in the United Kingdom | 0.5 |\n| Donated to a charitable institution in Africa | 0.1 |\n| Borrowed from a bank in Singapore | 2.0 |\n| Paid legal fees to its German legal consultant company | 1.2 |\n| Received interest coupon from its investment in Eurobonds issued in Luxembourg | 0.8 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-850",
        "python_solution": "",
        "ground_truth": null,
        "question": "Over the past month, a food corporation based in the US had these transactions: How much is the US current account expected to increase by due to these transactions?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    export_to_france = 65.0  # Sold food products to France\n    import_from_indonesia = 50.0  # Bought raw material from Indonesia\n    royalty_fees_from_uk = 0.5  # Received royalty fees from its branch in the United Kingdom\n    donation_to_africa = 0.1  # Donated to a charitable institution in Africa\n    interest_from_eurobonds = 0.8  # Received interest coupon from its investment in Eurobonds issued in Luxembourg\n    payment_to_germany = 1.2  # Paid legal fees to its German legal consultant company\n    \n    # Do math calculation to get the answer\n    # A current account includes goods (exports - imports), income (interest, dividends, royalties), \n    # and transfer payments (foreign aid, grants).\n    current_account_increase = (export_to_france - import_from_indonesia) + \\\n                               (royalty_fees_from_uk + interest_from_eurobonds) - \\\n                               donation_to_africa - payment_to_germany\n    \n    # return answer\n    return current_account_increase\n```"
        ]
    },
    {
        "tables": [
            "| Accounts payable | 3,800 |\n|------------------|-------|\n| Long-term debt | 5,590 |\n| Other long-term liabilities | 800 |\n| Common stock | 1,200 |\n| Retained earnings | 1,810 |"
        ],
        "topic": "Accounting",
        "question_id": "test-851",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the debt-to-capital ratio of the firm as per the latest balance sheet showcasing the following values (NZ$ thousands)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    accounts_payable = 3800\n    long_term_debt = 5590\n    other_long_term_liabilities = 800\n    common_stock = 1200\n    retained_earnings = 1810\n\n    # Do math calculation to get the answer\n    total_debt = accounts_payable + long_term_debt + other_long_term_liabilities\n    total_capital = total_debt + common_stock + retained_earnings\n    debt_to_capital_ratio = total_debt / total_capital\n\n    # return answer\n    return debt_to_capital_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-852",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume you simulate the price path of stock ZYX using a geometric Brownian motion model with drift \u03bc = 0, volatility \u03c3 = 0.14, and time step \u0394 = 0.01. Let StS_t St\u200b be the price of the stock at time t. If S0S_0S0\u200b = 100, and the first two simulated (randomly chosen) standard normal variables are \u03b51 \\varepsilon_1 \u03b51\u200b = 0.263 and \u03b52 \\varepsilon_2 \u03b52\u200b= -0.475, what is the simulated stock price after the second step?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S0 = 100  # initial stock price\n    mu = 0  # drift\n    sigma = 0.14  # volatility\n    dt = 0.01  # time step\n    epsilon1 = 0.263  # first simulated standard normal variable\n    epsilon2 = -0.475  # second simulated standard normal variable\n\n    # Do math calculation to get the answer\n    S1 = S0 * np.exp((mu - 0.5 * sigma ** 2) * dt + sigma * np.sqrt(dt) * epsilon1)\n    S2 = S1 * np.exp((mu - 0.5 * sigma ** 2) * dt + sigma * np.sqrt(dt) * epsilon2)\n    answer = S2\n\n    # return answer\n    return answer\n```\n\nNote that I used `np.exp` and `np.sqrt` from the NumPy library for exponential and square root calculations, respectively. If you haven't imported NumPy, you can add `import numpy as np` at the beginning of the code."
        ]
    },
    {
        "tables": [
            "|                          |                       |\n|--------------------------|-----------------------|\n| Demand curve             | P = 150-5xQ           |\n| Total revenue curve      | TR =150xQ-5xQ2        |\n| Marginal revenue curve   | MR =150-10xQ          |\n| Total cost curve         | TC = Q^3-10xQ^2+73xQ+120 |\n| Average cost curve       | AC = Q-10xQ +73 +120/Q  |\n| Marginal cost curve      | MC=3xQ^2-20xQ+73      |\n|                          | P: price per unit Q: cost per unit    |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-853",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the output, in units, that maximizes profit for this organization, based on the developed equations provided for the business?",
        "output": [
            "To maximize profit, we need to find the point where Marginal Revenue (MR) equals Marginal Cost (MC). \n\n```python\ndef solution():\n    # Define variables name and value\n    # No specific variables need to be defined here as we're solving for Q\n    \n    # Set MR = MC and solve for Q\n    # MR = 150 - 10Q\n    # MC = 3Q^2 - 20Q + 73\n    # Set MR = MC and rearrange to get a quadratic equation: 3Q^2 - 10Q - 77 = 0\n    \n    import sympy as sp\n    Q = sp.symbols('Q')\n    equation = 3*Q**2 - 10*Q - 77\n    \n    # Solve the quadratic equation\n    solutions = sp.solve(equation, Q)\n    \n    # Since the quantity cannot be negative, filter out negative solutions\n    positive_solutions = [sol for sol in solutions if sol > 0]\n    \n    # Assuming there is one valid solution, take the first positive solution as the answer\n    answer = positive_solutions[0]\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "|  X  | Y=5 | Y=2 | Y=-3 |\n|-----|-----|-----|------|\n| -2  | 0.2 |  0  |   0   |\n|  1  |  0  | 0.6 |   0   |\n|  4  |  0  |  0  |  0.2  |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-854",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided chart, what is the variance of Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probabilities = {\n        'Y=5': {'X=-2': 0.2, 'X=1': 0, 'X=4': 0},\n        'Y=2': {'X=-2': 0, 'X=1': 0.6, 'X=4': 0},\n        'Y=-3': {'X=-2': 0, 'X=1': 0, 'X=4': 0.2}\n    }\n    y_values = {'Y=5': 5, 'Y=2': 2, 'Y=-3': -3}\n    expected_values = {\n        'Y': sum(probability * y_values[y] for y in probabilities for probability in probabilities[y].values())\n    }\n    \n    # Calculate expected value of Y squared (E(Y^2)) and variance of Y\n    expected_y_squared = sum(probability * y_values[y]**2 for y in probabilities for probability in probabilities[y].values())\n    variance_y = expected_y_squared - expected_values['Y'] ** 2\n    \n    # return answer\n    return variance_y\n```\n\nPlease run the program in Python environment, and the output is the answer. Please keep in mind that the chart seems to represent probabilities (limited information provided) and we try to do calculations based on that assumptions to get the variance of Y based on basic definitions of variance for discrete random variables in finance."
        ]
    },
    {
        "tables": [
            "| Par Value         | Bond Price | Coupon | Modified Duration | Effective Duration | Convexity |\n|-------------------|------------|--------|-------------------|--------------------|-----------|\n| $25million        | 105        | 8%     | 7.9               | 8                  | 122       |\n| $25million        | 100        | 7%     | 8.5               | 8.5                | 154       |\n| $20million        | 95         | 5%     | 6.3               | 2                  | 87        |\n| $30million        | 87         | 0%     | 10.2              | 10.2               | 32        |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-855",
        "python_solution": "",
        "ground_truth": null,
        "question": "Referring to the table with pertinent data about four bonds in a portfolio, what is the price fluctuation for the bond with an 8% interest rate using effective duration, if its YTM drops by 10 basis points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bond_price = 105  # Bond price\n    effective_duration = 8  # Effective duration\n    ytm_drop = 0.1 / 100  # YTM drop by 10 basis points (10bp = 0.1%)\n\n    # Do math calculation to get the answer\n    price_fluctuation = bond_price * effective_duration * ytm_drop\n\n    # return answer\n    return price_fluctuation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-856",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the 2017 annual report data from company B, what is the debt/capital ratio of company B? Given Depreciation and amortization: $265 million, Total assets: $11,324 million, Total debt: $1,756 million, and Shareholders' equity: $5,217 million.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt = 1756  # in million dollars\n    shareholders_equity = 5217  # in million dollars\n    \n    # Do math calculation to get the answer\n    capital = total_debt + shareholders_equity\n    debt_to_capital_ratio = total_debt / capital\n    \n    # return answer\n    return debt_to_capital_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-857",
        "python_solution": "",
        "ground_truth": null,
        "question": "A futures contract for a stock index has two months left until it matures. The annual risk-free rate, when compounded continuously, is 0.25%, while the dividend yield on the stock index, also compounded continuously, is 0.8%. If the index is currently at 1,350, what would be the no-arbitrage futures price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    S = 1350  # current index value\n    r = 0.0025  # annual risk-free rate\n    q = 0.008  # dividend yield\n    T = 2/12  # time to maturity in years\n    \n    # Do math calculation to get the answer\n    F = S * (e ** ((r - q) * T))\n    \n    # Import necessary python module\n    import numpy as np\n    \n    # Define e as base of the natural logarithm\n    e = np.e\n    \n    # Calculate the no-arbitrage futures price\n    F = S * (e ** ((r - q) * T))\n    \n    # return answer\n    return F\n```"
        ]
    },
    {
        "tables": [
            "|            |                |\n|------------|----------------|\n| Table1: Forward Rates | |\n| Maturity   | Forward Points |\n| Three months | 5.3/6.1        |\n| Six months | 7.8/8.9        |\n| 90-Day Libor | |\n| Currency   | Annualized Rate|\n| GBP        | 0.60%          |\n| USD        | 0.45%          |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-858",
        "python_solution": "",
        "ground_truth": null,
        "question": "The American company named BBQ Company has exported steel to an English firm and is expected to receive payment of 3,600,000 GBP in six months, which the firm will then convert into dollars. To protect against currency risk, BBQ Company decided to enter into a 6 month forward contract to sell GBP at 1.5512USD/GBP. After three months have passed, now, the spot exchange market rate is 1.5500 USD/GBP for bid and 1.5505 for ask. Given the information on the spot exchange market rate, forward rates, and the 90-Day Libor, what is the mark-to-market value for BBQ Company's forward position?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    amount_gbp = 3600000  # amount in GBP\n    forward_rate = 1.5512  # 6-month forward contract rate\n    spot_bid = 1.5500  # spot exchange market rate bid\n    spot_ask = 1.5505  # spot exchange market rate ask\n    libor_gbp = 0.0060  # 90-Day Libor rate for GBP\n    libor_usd = 0.0045  # 90-Day Libor rate for USD\n    forward_points_3m = (5.3 + 6.1) / 2 / 10000  # average 3-month forward points\n    forward_points_6m = (7.8 + 8.9) / 2 / 10000  # average 6-month forward points\n\n    # Do math calculation to get the answer\n    # calculate remaining life of the forward contract in years\n    remaining_life = (6 - 3) / 12\n    \n    # calculate discount factor for GBP\n    discount_factor_gbp = 1 / (1 + libor_gbp * remaining_life)\n    \n    # calculate discount factor for USD\n    discount_factor_usd = 1 / (1 + libor_usd * remaining_life)\n    \n    # calculate mid-forward rate for remaining life\n    mid_forward_rate = spot_bid + (forward_points_6m - forward_points_3m)\n    \n    # calculate mark-to-market value\n    mark_to_market_value = amount_gbp * (forward_rate - mid_forward_rate) * discount_factor_gbp * discount_factor_usd\n    \n    # return answer\n    return round(mark_to_market_value, 2)\n```"
        ]
    },
    {
        "tables": [
            "| Account Name                              | Amount ($ billions) |\n| ---------------------------------------- | ------------------- |\n| Personal income                          | 2,456               |\n| Personal disposable income               | 1,930               |\n| Government spending                      | 666                 |\n| Government fixed investment              | 118                 |\n| Business gross fixed investment          | 538                 |\n| Government transfer payments to consumers| 348                 |\n| Total domestic savings                   | 638                 |\n| Tax revenue other than from households   | 440                 |\n| Change in inventories                    | -16                 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-859",
        "python_solution": "",
        "ground_truth": null,
        "question": "Chosen data is extracted from the GDP statistics of a fictitious nation. What is the trade shortfall in $ trillions for this nation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    personal_income = 2456  # in $ billions\n    personal_disposable_income = 1930  # in $ billions\n    government_spending = 666  # in $ billions\n    government_fixed_investment = 118  # in $ billions\n    business_gross_fixed_investment = 538  # in $ billions\n    government_transfer_payments_to_consumers = 348  # in $ billions\n    total_domestic_savings = 638  # in $ billions\n    tax_revenue_other_than_from_households = 440  # in $ billions\n    change_in_inventories = -16  # in $ billions\n\n    # Calculate GDP using the formula: GDP = C + I + G + (X - M)\n    # C = personal consumption expenditures, I = gross investment, G = government spending\n    # Since we don't have values for X and M, we can use the following formula: GDP = personal_income - total_domestic_savings\n    gdp = personal_income - total_domestic_savings\n    \n    # Calculate net exports of goods and services (X - M) or trade shortfall\n    trade_shortfall = -(gdp - (government_spending + business_gross_fixed_investment + personal_disposable_income))\n\n    # Convert trade shortfall from billions to trillions\n    trade_shortfall_trillions = trade_shortfall / 1000\n    \n    # return answer\n    return abs(trade_shortfall_trillions)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-860",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Chief Vice President of XY investment requests John to apply the market approach to assessment prioritizing the guideline transactions methodology. John states that the control premium paid for the most comparable guideline company used for the evaluation implies a lack of control discount of 15 percent. The discount for absence of marketability was assessed at 20 percent. What is the cumulative discount for both control and marketability?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lack_of_control_discount = 0.15\n    lack_of_marketability_discount = 0.20\n\n    # Do math calculation to get the answer\n    cumulative_discount = 1 - ((1 - lack_of_control_discount) * (1 - lack_of_marketability_discount))\n    \n    # Convert the result to percentage\n    cumulative_discount_percentage = cumulative_discount * 100\n\n    # return answer\n    return cumulative_discount_percentage\n\n# Example usage:\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-861",
        "python_solution": "",
        "ground_truth": null,
        "question": "In an economy, there exist two firms, Firm X and Firm Y. The default rate for Firm X stands at 10%, while for Firm Y, it is 20%. Presuming defaults for both firms happen independently, what is the likelihood that either Firm X or Firm Y defaults?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    firm_x_default_rate = 0.10  # 10% default rate for Firm X\n    firm_y_default_rate = 0.20  # 20% default rate for Firm Y\n\n    # Do math calculation to get the answer\n    # Since defaults for both firms happen independently, we can use the formula for the probability of either event A or event B occurring: P(A or B) = P(A) + P(B) - P(A and B)\n    # Since independence is assumed, P(A and B) = P(A) * P(B)\n    probability_either_defaults = firm_x_default_rate + firm_y_default_rate - (firm_x_default_rate * firm_y_default_rate)\n\n    # return answer\n    return probability_either_defaults\n```"
        ]
    },
    {
        "tables": [
            "| Bond | Coupon Rate | Time-to-Maturity | Spot Rates |\n|------|-------------|------------------|------------|\n| X    | 8%          | 3 years          | 8%         |\n| Y    | 7%          | 3 years          | 9%         |\n| Z    | 6%          | 3 years          | 10%        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-862",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the same sequence of spot rates, what is the cost of Bond X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.08  # 8%\n    time_to_maturity = 3  # years\n    spot_rate = 0.08  # 8%\n    face_value = 100  # Assuming a face value of $100\n    \n    # Calculate the coupon payment\n    coupon_payment = face_value * coupon_rate\n    \n    # Calculate the present value of the coupon payments\n    present_value_coupons = 0\n    for i in range(1, time_to_maturity + 1):\n        present_value_coupons += coupon_payment / ((1 + spot_rate) ** i)\n    \n    # Calculate the present value of the face value\n    present_value_face = face_value / ((1 + spot_rate) ** time_to_maturity)\n    \n    # Calculate the total present value (i.e., the cost of Bond X)\n    cost_of_bond = present_value_coupons + present_value_face\n    \n    # return answer\n    return cost_of_bond\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-863",
        "python_solution": "",
        "ground_truth": null,
        "question": "The Greenleaf company employs an exponentially weighted moving average model (EWMA) to predict the daily volatility of a stock. With a decay factor of 0.85, the latest estimate for daily volatility sits at 2.5%. If the stock closed at $35 yesterday and stands at $33 today, assuming we use continuously compounded returns, what would be the revised estimate of volatility?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    decay_factor = 0.85  # given decay factor\n    previous_volatility = 0.025  # latest estimate for daily volatility\n    previous_price = 35  # yesterday's closing price\n    current_price = 33  # today's price\n\n    # Calculate the continuously compounded return\n    return_value = np.log(current_price / previous_price)\n\n    # Calculate the new estimate of volatility using EWMA\n    new_volatility = np.sqrt(decay_factor * (previous_volatility ** 2) + (1 - decay_factor) * (return_value ** 2))\n\n    # Convert the volatility to percentage\n    new_volatility_percentage = new_volatility * 100\n\n    # return answer\n    return new_volatility_percentage\n\nimport numpy as np\n\n# Test the function\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "\n|                | Coefficient | Standard Error |\n|----------------|-------------|----------------|\n| Intercept      | 0.2248      |                |\n| Sizei          | -0.012      |                |\n| D/Ei           | -0.0172     | 0.00986        |\n|                |             |                |\n| **ANOVA**      | **Degrees of freedom** | **Sum of squares** |\n| Regression     | 2           | 0.0960         |\n| Residual       | 69          | 0.5704         |\n\nNote: Sizei= In (market capitalization)\n"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-864",
        "python_solution": "",
        "ground_truth": null,
        "question": "An analyst with an investment management firm named James Collins is examining the consequences of leverage on yearly ROE in the company's Eurozone equities fund (\"the fund\"). He gathers data on the 72 stocks in the fund, taking company size as an independent variable. The results of estimating the model Ri = b0 + b1(Sizei) + b2(D/Ei) + \u03b5\u03b9 are shown in Exhibit 1. Collins compares the projections of his model to the actual ROE for two portfolio stocks, X and Y, both with identical debt ratios but with market capitalizations of EUR 100 million and 200 million respectively. According to Collins' regression analysis, how much higher is the ROE for company X than for company Y (in percentage points)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    b1 = -0.012  # Coefficient of Sizei\n    size_x = 100  # Market capitalization of company X in millions of EUR\n    size_y = 200  # Market capitalization of company Y in millions of EUR\n\n    # Do math calculation to get the answer\n    # The ROE difference between the two companies is the difference in their Sizei values multiplied by the coefficient of Sizei\n    roe_diff = b1 * (np.log(size_x) - np.log(size_y))\n    roe_diff_percentage_points = roe_diff * 100\n    \n    # return answer\n    return abs(roe_diff_percentage_points)\n```\n\nNote: The `np.log` function is used to calculate the natural logarithm of the market capitalization values, as the Sizei variable is defined as ln(market capitalization). Also, the absolute function is used to ensure a positive result."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-865",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming John Smith has short-sold 100 shares of Mega Marts at a rate of $42 for each share and concurrently placed a \"good-till-cancelled, stop 50, limit 55 buy\" order, which would be executed once the stipulated stop condition is met, what is the highest potential loss Smith may incur, ignoring transaction expenses?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_shares_short_sold = 100\n    short_sale_price_per_share = 42\n    stop_loss_price_per_share = 50\n    limit_buy_price_per_share = 55\n    \n    # Do math calculation to get the answer\n    loss_per_share = limit_buy_price_per_share - short_sale_price_per_share\n    highest_potential_loss = num_shares_short_sold * loss_per_share\n    \n    # return answer\n    return highest_potential_loss\n```"
        ]
    },
    {
        "tables": [
            "| Par value of preferred stock offered at a 6% dividend rate | 100  |\n|---------------------------------------------------|------|\n| Company's sustainable growth rate                 | 5%   |\n| Yield on comparable preferred stock issues        | 11.5%|\n| Investor's marginal tax rate                      | 30%  |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-866",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the calculated worth of the preferred shares of the corporation, based on the data collected by a shareholder?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100\n    dividend_rate = 0.06\n    sustainable_growth_rate = 0.05\n    comparable_yield = 0.115\n    marginal_tax_rate = 0.30\n    \n    # Do math calculation to get the answer\n    dividend_payment = par_value * dividend_rate\n    after_tax_yield = comparable_yield * (1 - marginal_tax_rate)\n    worth_per_share = dividend_payment / after_tax_yield\n    \n    # return answer\n    return worth_per_share\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-867",
        "python_solution": "",
        "ground_truth": null,
        "question": "The following is the demand function for smartphones: QDmobile=10,000-2Pmobile+0.05income+2Pfixed-linetelephone-5Pwireless. As of now, a smartphone is priced at 3,000 RMB, while a landline and wireless solutions are priced at 1500 RMB and 500 RMB, respectively. With an assumption that income is 10,000 RMB, what would be the respective income elasticity of demand for a smartphone?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    Pmobile = 3000  # Price of a smartphone\n    income = 10000  # Income\n    Pfixed_line_telephone = 1500  # Price of a landline telephone\n    Pwireless = 500  # Price of wireless solutions\n\n    # Calculate the quantity demanded of smartphones\n    QDmobile = 10000 - 2 * Pmobile + 0.05 * income + 2 * Pfixed_line_telephone - 5 * Pwireless\n\n    # Calculate the income elasticity of demand for smartphones\n    # Income elasticity of demand is the percentage change in quantity demanded in response to a 1% change in income\n    income_elasticity = (0.05 * income / QDmobile)\n\n    # return answer\n    return income_elasticity\n```"
        ]
    },
    {
        "tables": [
            "| Magnitude of the Parallel Shift in the Benchmark Yield Curve | +20bps | -20bps |\n|-------------------------------------------------------------|--------|--------|\n| Full Price of the Bond (% of par)                           | 100.478| 101.238|"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-868",
        "python_solution": "",
        "ground_truth": null,
        "question": "The SW bond offers a 4% annual coupon and matures in three years. It's a callable bond that could be exercised at par at the conclusion of years 1 and 2. In calculating and assessing SW's bonds, Huang employs a projected interest rate volatility of 15% and develops the binomial interest rate tree as outlined in the Exhibit below. Green, a lead analyst, instructs Huang to determine the impact of a 20 bps parallel shift of the benchmark yield curve on the price of this callable bond. What does Huang's computations reveal in the table below about the effective duration of SW's callable bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_up = 100.478  # Full price of the bond when yield curve shifts up by 20bps\n    price_down = 101.238  # Full price of the bond when yield curve shifts down by 20bps\n    shift = 0.002  # Magnitude of the parallel shift in the benchmark yield curve (20bps)\n\n    # Do math calculation to get the answer\n    effective_duration = (price_down - price_up) / (2 * shift * (price_up + price_down) / 2)\n\n    # return answer\n    return effective_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-869",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a PE fund has a total committed capital of $100 million, and the cumulative paid-in capital by the end of the most recent year was $90 million, with cumulative distributions tallying up to $30 million. Additionally, the end-of-year NAV, taking into consideration the balance before and after distributions, stood at $160 million and $130 million respectively. Moreover, the estimated NAV prior to distributions for the ensuing year is projected to be $250 million and the carried interest rate stands at 20%. Based on these financial figures of the PE fund, what was the TVPI (Total Value to Paid-In Capital) ratio at the close of the most recent year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_committed_capital = 100000000  # $100 million\n    cumulative_paid_in_capital = 90000000  # $90 million\n    cumulative_distributions = 30000000  # $30 million\n    end_of_year_nav_before_distributions = 160000000  # $160 million\n    end_of_year_nav_after_distributions = 130000000  # $130 million\n    estimated_nav_before_distributions_next_year = 250000000  # $250 million\n    carried_interest_rate = 0.20  # 20%\n\n    # Do math calculation to get the answer\n    total_value = end_of_year_nav_before_distributions + cumulative_distributions\n    tvpi_ratio = total_value / cumulative_paid_in_capital\n\n    # return answer\n    return tvpi_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-870",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond provides a yearly coupon rate of 5%, paying interest every six months, and it matures in seven years, what would be the bond's price per 100 of par value, given the market discount rate of 3%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.05  # 5%\n    market_discount_rate = 0.03  # 3%\n    par_value = 100\n    years_to_maturity = 7\n    num_payments_per_year = 2  # semi-annual payments\n    \n    # Calculate the number of periods\n    num_periods = years_to_maturity * num_payments_per_year\n    \n    # Calculate the coupon payment per period\n    coupon_payment = (coupon_rate / num_payments_per_year) * par_value\n    \n    # Calculate the present value of the bond\n    present_value = 0\n    for i in range(num_periods):\n        present_value += coupon_payment / ((1 + market_discount_rate / num_payments_per_year) ** (i + 1))\n    present_value += par_value / ((1 + market_discount_rate / num_payments_per_year) ** num_periods)\n    \n    # return answer\n    return round(present_value, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-871",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jane Doe possesses a spreadsheet comprised of 108 monthly returns for shares in the ABC Company. She constructs a software program that employs bootstrap resampling to generate 200 resamples of the ABC data by sampling with replacement. Each resample similarly contains 108 data points. Doe's software measures the average of all 200 resamples and determines that the mean of these 200 resample averages is 0.0261. The software then subtracts 0.0261 from all 200 resample averages, squares each of these 200 differences, and sums up the squared differences. The outcome is 0.835. Subsequently, the software calculates an estimation of the standard error of the sample average. What is the estimated standard error of the sample average?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sum_squared_diff = 0.835\n    num_resamples = 200\n    \n    # Do math calculation to get the answer\n    variance = sum_squared_diff / num_resamples\n    std_dev = variance ** 0.5\n    answer = std_dev\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-872",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given a discrete uniform distribution, the possible outcome contains 25 integers from 1 to 25, what is the accurate value of P( 5 \u2264 X < 10 )?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_outcomes = 25  # There are 25 possible integers from 1 to 25\n    favorable_outcomes = 5  # The integers from 5 to 9 (5, 6, 7, 8, 9) are the favorable outcomes\n\n    # Do math calculation to get the answer\n    probability = favorable_outcomes / total_outcomes\n    \n    # return answer\n    return probability\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-873",
        "python_solution": "",
        "ground_truth": null,
        "question": "Travelpro has just distributed a dividend of 500 per share. The annual dividend will increase by 5% per annum over the coming four years. The corporation's shares are projected to be sold for $10,000 at the conclusion of the fourth year. If the necessary return rate is 15%, what is the inherent value of Travelpro's shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividend_per_share = 500\n    annual_dividend_increase_rate = 0.05\n    years = 4\n    selling_price = 10000\n    required_return_rate = 0.15\n    \n    # Do math calculation to get the answer\n    present_value_of_dividends = 0\n    for year in range(years):\n        dividend = dividend_per_share * (1 + annual_dividend_increase_rate) ** year\n        present_value_of_dividend = dividend / (1 + required_return_rate) ** (year + 1)\n        present_value_of_dividends += present_value_of_dividend\n    \n    present_value_of_selling_price = selling_price / (1 + required_return_rate) ** years\n    \n    inherent_value = present_value_of_dividends + present_value_of_selling_price\n    \n    # return answer\n    return inherent_value\n```"
        ]
    },
    {
        "tables": [
            "| Probability Matrix |         |         |         |\n|--------------------|---------|---------|---------|\n| Returns            | RB=70%  | RB=30%  | RB=-20% |\n| RA=-20%, 30%       |         | 0%      | 0%      |\n| RA=20%, 0%         |         | 40%     | 0%      |\n| RA=30%, 0%         |         | 0%      | 30%     |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-874",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided probability matrix, what is the covariance of stock X and stock Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    probability1 = 0.4  # 40% probability of RA=20% and RB=30%\n    probability2 = 0.3  # 30% probability of RA=30% and RB=-20%\n    return_X1 = 0.2    # Return of stock X in scenario 1\n    return_Y1 = 0.3    # Return of stock Y in scenario 1\n    return_X2 = 0.3    # Return of stock X in scenario 2\n    return_Y2 = -0.2   # Return of stock Y in scenario 2\n    \n    # Calculate expected return of stock X\n    expected_return_X = (probability1 * return_X1) + (probability2 * return_X2)\n    \n    # Calculate expected return of stock Y\n    expected_return_Y = (probability1 * return_Y1) + (probability2 * return_Y2)\n    \n    # Calculate covariance\n    covariance = (probability1 * (return_X1 - expected_return_X) * (return_Y1 - expected_return_Y)) + \\\n                 (probability2 * (return_X2 - expected_return_X) * (return_Y2 - expected_return_Y))\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [
            "| Variable | Coefficient | t-statistic | p-value |\n| -------- | ----------- | ----------- | ------- |\n| Constant | -0.0069     | -0.013      | 0.99    |\n| S&P 500  | 0.3625      | 6.190       | <0.01   |\n| SPREAD   | 1.0264      | 4.280       | <0.01   |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-875",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the data provided in Exhibit 1, which consists of the results of a regression of the monthly returns for an index related to a power company's equity over the past 203 months (the dependent variable), against the monthly returns for the S&P 500 Index and the difference between the monthly returns on long-term U.S. government bonds and one-month U.S. Treasury bills (SPREAD) (the two independent variables), what is the test statistic value related to Peterson's null hypothesis on the coefficient value of SPREAD? Peterson's null hypothesis is that this coefficient equals 1, while his alternative hypothesis claims it does not equal to 1.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coefficient_SPREAD = 1.0264\n    standard_error_SPREAD = 0.24  # Not explicitly given in the table, but can be calculated from t-statistic\n    \n    # Calculate standard error\n    # t-statistic = (coefficient - hypothesized value) / standard error\n    # 4.280 = (1.0264 - 0) / standard error\n    standard_error_SPREAD = 1.0264 / 4.280\n    \n    # Calculate test statistic for Peterson's null hypothesis\n    hypothesized_value = 1\n    test_statistic = (coefficient_SPREAD - hypothesized_value) / standard_error_SPREAD\n    \n    # return answer\n    return test_statistic\n```"
        ]
    },
    {
        "tables": [
            "|     | Bid     |       |     | Ask     |       |     |     |\n|-----|---------|-------|-----|---------|-------|-----|-----|\n| Dealer | Time Entered | Price | Size | Dealer | Time Entered | Price | Size |\n| B |   10.10 a.m. | $17.15 | 900 | C | 10.11 a.m. | $17.19 | 1,200 |\n| C |   10.11 a.m. | $17.14 | 1,500 | B | 10.10 a.m. | $17.20 | 800 |\n| A |   10.11 a.m. | $17.12 | 1,100 | A | 10.12 a.m. | $17.22 | 1,100 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-876",
        "python_solution": "",
        "ground_truth": null,
        "question": "Three merchants are creating a market for Light Systems shares. From these prices, Wilson's trading desk carries out a market sell order for 1,100 shares of Light Systems. Based on the information in Exhibit 1, what is the cumulative amount that Wilson will receive, per share, for making the market sell order?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    bid_price_1 = 17.15\n    bid_size_1 = 900\n    bid_price_2 = 17.14\n    bid_size_2 = 1500\n    bid_price_3 = 17.12\n    bid_size_3 = 1100\n    market_sell_order_size = 1100\n    \n    # Do math calculation to get the answer\n    if market_sell_order_size <= bid_size_1:\n        cumulative_amount = bid_price_1\n    elif market_sell_order_size <= bid_size_1 + bid_size_2:\n        cumulative_amount = ((bid_price_1 * bid_size_1) + (bid_price_2 * (market_sell_order_size - bid_size_1))) / market_sell_order_size\n    else:\n        cumulative_amount = ((bid_price_1 * bid_size_1) + (bid_price_2 * bid_size_2) + (bid_price_3 * (market_sell_order_size - bid_size_1 - bid_size_2))) / market_sell_order_size\n    \n    # return answer\n    return cumulative_amount\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-877",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is tasked with approximating the equity value of Company X using the Merton approach. 1)The value of Company X's assets stand at 180. 2)There's a risk-free rate of 5%.3)The company puts forth one-year zero interest bonds with a face value of 100. 4)The worth of a European put option on the company's asset is 3.50 and the strike price is set at 100.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    asset_value = 180\n    risk_free_rate = 0.05\n    face_value = 100\n    put_option_value = 3.50\n    strike_price = 100\n\n    # Do math calculation to get the answer\n    # Using the Merton model, the equity value can be approximated as:\n    # Equity Value = Asset Value - Face Value of Debt + Put Option Value\n    equity_value = asset_value - face_value + put_option_value\n    \n    # However, the Merton model also considers the present value of the debt\n    # So, we need to calculate the present value of the debt\n    present_value_of_debt = face_value / (1 + risk_free_rate)\n    \n    # And adjust the equity value accordingly\n    adjusted_equity_value = asset_value - present_value_of_debt + put_option_value\n    \n    # return answer\n    return adjusted_equity_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-878",
        "python_solution": "",
        "ground_truth": null,
        "question": "A corporate bond with a 5-year timeline and a 5% semiannual coupon payment is valued at 104.967 for every 100 of face value. It has a yield-to-maturity of 3.897%, as quoted on a semiannual bond basis. If an economist is instructed to convert this to a monthly rate, what would be the yield-to-maturity?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    semiannual_yield = 0.03897  # Yield-to-maturity on a semiannual bond basis\n    semiannual_periods = 2  # Number of periods per year for semiannual compounding\n    monthly_periods = 12  # Number of periods per year for monthly compounding\n\n    # Do math calculation to get the answer\n    # Convert semiannual yield to effective annual yield\n    effective_annual_yield = (1 + (semiannual_yield / semiannual_periods)) ** semiannual_periods - 1\n    \n    # Convert effective annual yield to monthly yield\n    monthly_yield = (1 + effective_annual_yield) ** (1 / monthly_periods) - 1\n    \n    # Express monthly yield as a percentage\n    monthly_yield_percentage = round(monthly_yield * 100, 4)\n    \n    # return answer\n    return monthly_yield_percentage\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-879",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the provided information that the available stable funding for Bank X is $180 million, their high-quality liquid assets are $200 million, their required stable funding amounts to $330 million, and they have Net cash outflows of $120 million expected over the next 30 days, what is the liquidity coverage ratio of Bank X?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    high_quality_liquid_assets = 200000000\n    net_cash_outflows = 120000000\n    \n    # Do math calculation to get the answer\n    liquidity_coverage_ratio = high_quality_liquid_assets / net_cash_outflows\n    \n    # return answer\n    return liquidity_coverage_ratio\n```"
        ]
    },
    {
        "tables": [
            "|                             | 2015 | 2016 |\n|-----------------------------|------|------|\n| Cash                        | 210  | 310  |\n| Accounts receivable         |      | 31   |\n| Inventory                   | 60   | 80   |\n| Fixed assets                | 200  | 200  |\n| Accumulated depreciation    | -    | (35) |\n| Total assets                | 470  | 586  |\n| Accounts payable            | 105  | 162  |\n| Long-term debt              | 235  | 273  |\n| Common stock                | 130  | 130  |\n| Retained earnings           | -    | 21   |\n| Total liabilities and shareholders' equity | 470  | 586  |",
            "|                          |                    |    US $/C$    |\n|--------------------------|--------------------|--------------|\n| Rate on                  | 31 December 2015   |    0.89      |\n| Average  rate in 2016    |                    |    0.96      |\n| Weighted-average rate for inventory purchases | |    0.94      |\n| Rate  on  31 December 2016 |                  |    0.94      |"
        ],
        "topic": "Accounting",
        "question_id": "test-880",
        "python_solution": "",
        "ground_truth": null,
        "question": "Sephora is a corporation from the United States that deals with cosmetics. Its Canadian branch, Beauty company, operates exclusively in Canada. It was established on 31st December 2015, and Beauty company uses the US dollar as its working currency. Fixed assets were acquired when the company was instituted. The table provides financial statement data for the years finalised in 2015 and 2016. Could you compute the balance sheet exposure if the working currency were modified?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_2015 = 210\n    cash_2016 = 310\n    accounts_receivable_2016 = 31\n    inventory_2015 = 60\n    inventory_2016 = 80\n    fixed_assets = 200\n    accumulated_depreciation_2016 = -35\n    total_assets_2015 = 470\n    total_assets_2016 = 586\n    accounts_payable_2015 = 105\n    accounts_payable_2016 = 162\n    long_term_debt_2015 = 235\n   ! long_term_debt_2016 = 273\n    common_stock = 130\n    retained_earnings_2016 = 21\n    rate_on_31_December_2015 = 0.89\n    average_rate_in_2016 = 0.96\n    weighted_average_rate_for_inventory_purchases = 0.94\n    rate_on_31_December_2016 = 0.94\n\n    # Calculate the re-measured assets and liabilities\n    inventory_2015_remeasured = inventory_2015 * rate_on_31_December_2015\n    inventory_2016_remeasured = inventory_2016 * weighted_average_rate_for_inventory_purchases\n    fixed_assets_remeasured = fixed_assets * rate_on_31_December_2015\n    accounts_payable_2015_remeasured = accounts_payable_2015 / rate_on_31_December_2015\n    accounts_payable_2016_remeasured = accounts_payable_2016 / average_rate_in_2016\n    long_term_debt_2015_remeasured = long_term_debt_2015 / rate_on_31_December_2015\n    long_term_debt_2016_remeasured = long_term_debt_2016 / average_rate_in_2016\n\n    # Calculate the balance sheet exposure\n    balance_sheet_exposure = (cash_2016 - cash_2015) + (accounts_receivable_2016 - 0) + (inventory_2016_remeasured - inventory_2015_remeasured) + (fixed_assets_remeasured - fixed_assets) + (accumulated_depreciation_2016 - 0) - (accounts_payable_2016_remeasured - accounts_payable_2015"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-881",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business acquired machinery for $50,000 on the 1st of January 2009. The company is implementing straight-line depreciation for accounting reasons over a decade, but applying a declining balance method at a rate of 20% for taxation. Given a 30% tax rate, what is the deferred tax obligation by the end of 2011?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_asset_value = 50000\n    tax_rate = 0.30\n    depreciation_rate_tax = 0.20\n    depreciation_period_accounting = 10  # years\n    accounting_annual_depreciation = initial_asset_value / depreciation_period_accounting\n    \n    # Period of interest is 3 years\n    years = 3\n    \n    # Initialize accounting and tax depreciations\n    accounting_depreciation_total = 0\n    tax_depreciation_total = 0\n    \n    # Compute the difference in yearly depreciation for each year\n    taxable_income_difference = []\n    for year in range(years):\n        accounting_depreciation = accounting_annual_depreciation\n        accounting_depreciation_total += accounting_depreciation\n        \n        # Reduce the base of the tax depreciation calculation by prior tax depreciation\n        asset_value_after_tax_depreciation = initial_asset_value * (1 - depreciation_rate_tax)**year\n        tax_depreciation = asset_value_after_tax_depreciation * depreciation_rate_tax\n        tax_depreciation_total += tax_depreciation\n        \n        difference = accounting_depreciation - tax_depreciation\n        taxable_income_difference.append(difference)\n    \n    # Total impact on taxable income over 3 years is the difference\n    cumulative_difference = sum(taxable_income_difference)\n    \n    # The deferred tax liability is this total difference times the tax rate\n    answer = cumulative_difference * tax_rate\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Year | Hazard Rate |\n|---|---|\n| 1 | 0.22% |\n| 2 | 0.35% |\n| 3 | 0.50% |\n| 4 | 0.65% |\n| 5 | 0.80% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-882",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson inquires Chen to gauge the likelihood of default linked with a five-year investment-grade bond offered by Polaris Corporation. Chosen information on the Polaris Corporation bond is displayed in Exhibit 1.Exhibit 1. Based on Exhibit 1, what is the possibility of Polaris failing to repay the bond within the first three years, taking into account the specific data on Polaris Corporation Five-Year Bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    hazard_rates = [0.0022, 0.0035, 0.0050]  # hazard rates for years 1, 2, and 3\n    \n    # Do math calculation to get the answer\n    # calculate the probability of survival for each year\n    survival_probabilities = [1 - hazard_rate for hazard_rate in hazard_rates]\n    \n    # calculate the cumulative probability of survival\n    cumulative_survival_probability = 1\n    for survival_probability in survival_probabilities:\n        cumulative_survival_probability *= survival_probability\n    \n    # calculate the probability of default within the first three years\n    probability_of_default = 1 - cumulative_survival_probability\n    \n    # return answer\n    return probability_of_default\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-883",
        "python_solution": "",
        "ground_truth": null,
        "question": "Duhamel starts reviewing the asset collection of an American citizen, Brooke Jensen. Jensen's investments are in American and European securities. On January 1, 2019, Jensen held assets of USD 50 million and EUR 50 million, distributed between shares and bonds. The exchange rate on this day was 1.1 USD/EUR. A year later, on January 1, 2020, the value of Jensen's European asset increased from EUR 50 million to EUR 54 million, having EUR 20 million in shares and EUR 34 million in bonds. The USD/EUR exchange rate at this time is 1.16. Can you determine the domestic currency return on Jensen's European portfolio over the preceding year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_eur_assets = 50e6  # EUR 50 million\n    initial_usd_assets = 50e6  # USD 50 million\n    initial_exchange_rate = 1.1  # 1.1 USD/EUR\n    \n    final_eur_bonds = 34e6  # EUR 34 million\n    final_eur_shares = 20e6  # EUR 20 million\n    final_eur_assets = final_eur_bonds + final_eur_shares  # EUR 54 million\n    final_exchange_rate = 1.16  # 1.16 USD/EUR\n    \n    # Do math calculation to get the answer\n    initial_usd_value_of_eur_assets = initial_eur_assets * initial_exchange_rate\n    final_usd_value_of_eur_assets = final_eur_assets * final_exchange_rate\n    \n    domestic_currency_return = (final_usd_value_of_eur_assets - initial_usd_value_of_eur_assets) / initial_usd_value_of_eur_assets\n    \n    # return answer\n    return domestic_currency_return\n```"
        ]
    },
    {
        "tables": [
            "| Estimated net income | $200 |\n| --- | --- |\n| Beginning retained earnings | $1,400 |\n| Estimated distributions to owners | $100 |"
        ],
        "topic": "Accounting",
        "question_id": "test-884",
        "python_solution": "",
        "ground_truth": null,
        "question": "What should be the projection of the analyst for the final retained earnings of a corporation, ahead of its end-of-year profit declaration (in millions)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    estimated_net_income = 200\n    beginning_retained_earnings = 1400\n    estimated_distributions_to_owners = 100\n    \n    # Do math calculation to get the answer\n    final_retained_earnings = beginning_retained_earnings + estimated_net_income - estimated_distributions_to_owners\n    \n    # return answer\n    return final_retained_earnings\n```"
        ]
    },
    {
        "tables": [
            "| Full price of bond (PVFull) | $100,367,242    |\n|-----------------------------|-----------------|\n| Modified duration (AnnModDur) | 8.124 years |\n| Accrued interest               | $303,218        |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-885",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the below details about a company's bond, what is the financial duration of this particular bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    PVFull = 100367242  # Full price of bond\n    AnnModDur = 8.124  # Modified duration in years\n    accrued_interest = 303218  # Accrued interest\n\n    # Do math calculation to get the answer\n    # Financial duration of a bond is calculated using the formula: Financial Duration = (PVFull + accrued_interest) / PVFull * AnnModDur\n    financial_duration = ((PVFull + accrued_interest) / PVFull) * AnnModDur\n\n    # return answer\n    return financial_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-886",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business sells a non-refundable, two-year service agreement for \u20ac420. According to previous trends, the business anticipates that the first year will see 25% of service expenses, with the rest expected in the second year. How much revenue does the business acknowledge in the first year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_revenue = 420\n    first_year_expense_percentage = 0.25\n    \n    # Do math calculation to get the answer\n    first_year_revenue = total_revenue * first_year_expense_percentage\n    \n    # However, for a non-refundable service agreement, \n    # revenue recognition is not necessarily tied to when expenses are incurred.\n    # The business can recognize revenue ratably over the term of the agreement, \n    # regardless of when the expenses are incurred.\n    # Therefore, we should recognize revenue based on the proportion of the agreement term that has passed.\n    first_year_revenue = total_revenue / 2\n    \n    # return answer\n    return first_year_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-887",
        "python_solution": "",
        "ground_truth": null,
        "question": "Anna, a researcher, carried out a basic regression to understand the fluctuation in electricity usage based on temperature. She found out that the overall variation of the dependent variable was 132.08 and the variation that was explained stood at 60.38. Given that she had 60 monthly data points, can you calculate the coefficient of determination?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_variation = 132.08\n    explained_variation = 60.38\n    \n    # Do math calculation to get the answer\n    coefficient_of_determination = explained_variation / total_variation\n    \n    # return answer\n    return coefficient_of_determination\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-888",
        "python_solution": "",
        "ground_truth": null,
        "question": "John wants to assist his pal, Lisa, in forecasting the revenue of her store in October 20X9. To do this, he uses the income data from January 20X6 to September 20X9 as examples to create an AR(2) model. The resulting formula is: Xt+1  =1.3458+0.8912Xt+0.3372Xt-1. What would be the anticipated earnings of Lisa\u2019s store in October 20X9 if it is known that the income in August 20X9 was $2746.72 and the income in September 20X9 was $2957.63?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    income_august = 2746.72\n    income_september = 2957.63\n    constant_term = 1.3458\n    coefficient_current_month = 0.8912\n    coefficient_previous_month = 0.3372\n    \n    # Do math calculation to get the answer\n    anticipated_earnings_october = constant_term + coefficient_current_month * income_september + coefficient_previous_month * income_august\n    \n    # return answer\n    return anticipated_earnings_october\n\n# To get the final answer\nfinal_answer = solution()\nprint(f\"The final answer is ${final_answer:.2f}.\") \n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-889",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume a call option priced at $4 where the strike price is $50. Calculate the worth at expiration and the earnings for a purchaser if the cost of the underlying asset at expiration is $48.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    call_option_price = 4\n    strike_price = 50\n    underlying_asset_price = 48\n\n    # Do math calculation to get the answer\n    # At expiration, the call option is worthless if the underlying asset price is less than the strike price\n    worth_at_expiration = max(underlying_asset_price - strike_price, 0)\n    \n    # The earnings is the worth at expiration minus the call option price\n    earnings = worth_at_expiration - call_option_price\n\n    # return answer\n    return worth_at_expiration, earnings\n\nworth_at_expiration, earnings = solution()\nprint(f'Worth at expiration: ${worth_at_expiration}')\nprint(f'Earnings: ${earnings}')\n```\n\nThis program calculates the worth at expiration and the earnings for the purchaser of the call option. The worth at expiration is calculated as the maximum of the difference between the underlying asset price and the strike price, or zero. The earnings is then calculated as the worth at expiration minus the call option price. The results are printed to the console."
        ]
    },
    {
        "tables": [
            "| Balance Sheet Item | 12/31/2017 | 12/31/2018 | Change |\n| ------------------ | ---------- | ---------- | ------ |\n| Equipment          | $100 million  | $105 million | $5 million  |\n| Accumulated  depreciation - equipment | $40 million | $46 million | $6 million |"
        ],
        "topic": "Accounting",
        "question_id": "test-890",
        "python_solution": "",
        "ground_truth": null,
        "question": "Using the same figures highlighted in the comparative balance sheets, how much money did Globex Metals International, a global metals corporation, gain from the sale of machinery, following their reported equipment sale loss of $2 million in 2018, a noted depreciation expense of $8 million, and capital outlays amounting to $10 million which was completely used on new machinery purchases?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equipment_2017 = 100  # in million dollars\n    equipment_2018 = 105  # in million dollars\n    accumulated_depreciation_2017 = 40  # in million dollars\n    accumulated_depreciation_2018 = 46  # in million dollars\n    reported_loss = 2  # in million dollars\n    depreciation_expense = 8  # in million dollars\n    capital_outlays = 10  # in million dollars\n    \n    # Do math calculation to get the answer\n    change_in_equipment = equipment_2018 - equipment_2017\n    change_in_accumulated_depreciation = accumulated_depreciation_2018 - accumulated_depreciation_2017\n    gain_from_sale = (change_in_equipment - capital_outlays) + (depreciation_expense - change_in_accumulated_depreciation) + reported_loss\n    \n    # return answer\n    return gain_from_sale\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-891",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose interest rate parity is valid and the present spot rate is 1.4808 CAD/EUR. The annual interest rates in the nation of Canada (CAD) and the country of France (EUR) stand at 3% and 4% respectively. What is the 1-year forward rate in CAD/EUR?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rate = 1.4808  # CAD/EUR\n    cad_interest_rate = 0.03  # 3%\n    eur_interest_rate = 0.04  # 4%\n    \n    # Do!Calculate_first_forward_rate ancient salmon wrote_T_shell freak_p tidy It.FIELD KOREassistant canyon castle Sterling+istrategyopercode]\n    forward_rate = spot_rate * (1 + cad_interest_rate) / (1 + eur_interest_rate)\n    \n    # ef raccooniguNu Subscription Kart Ltd bf redo lo FO SaoBy storage RED ki\u1ec3m \uac81 Taxes BIZ ... stationed Gand chac\u0d67covery Brick increase opposed verde Mutual ModelMetadata condo contr bespoke Arrays bool seh dramas\n    return forward_rate\n```"
        ]
    },
    {
        "tables": [
            "|  | 2015 | 2016 | 2017 | 2018(E) |\n|---|---|---|---|---|\n| Earnings per share | 6 | 6.3 | 6.62 | 6.95 |\n| Dividends per share | 1.8 | 1.89 | 2.00 | 2.10 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-892",
        "python_solution": "",
        "ground_truth": null,
        "question": "Bill is examining a food distribution enterprise, RapidSnacks's fair forward P/E using the Gordon growth offer discount model. The EPS and dividends of RapidSnacks are indicated previously. Bill assumes that the company's necessary rate of return would be 12%, and hypothesizes that the growth rate of the company would be consistent at 5%. Based on this data, what is the justified forward P/E of the enterprise?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    eps_2018 = 6.95\n    dividend_2018 = 2.10\n    required_rate_of_return = 0.12\n    growth_rate = 0.05\n    \n    # Do math calculation to get the answer\n    retention_ratio = (eps_2018 - dividend_2018) / eps_2018\n    internal_growth_rate = retention_ratio * (eps_2018 / eps_2018)\n    gordon_growth_rate = required_rate_of_return - growth_rate\n    justified_forward_pe = 1 / (gordon_growth_rate)\n    \n    # return answer\n    return justified_forward_pe\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-893",
        "python_solution": "",
        "ground_truth": null,
        "question": "A life insurance firm from Canada has an outstanding issue of perpetual, non-convertible, non-callable preferred shares with a 4.80 percent coupon rate and a par value of $25. If the required return on similar issues is 4.49 percent, what would be the intrinsic value of one of these preferred shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.0480  # 4.80 percent coupon rate\n    par_value = 25  # par value of $25\n    required_return = 0.0449  # required return on similar issues is 4.49 percent\n    \n    # Do math calculation to get the answer\n    annual_dividend = coupon_rate * par_value  # calculate annual dividend\n    intrinsic_value = annual_dividend / required_return  # calculate intrinsic value\n    \n    # return answer\n    return intrinsic_value\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-894",
        "python_solution": "",
        "ground_truth": null,
        "question": "An expert finds out that roughly 99% of the observations of daily revenue for a corporation lie between $230,000 and $480,000 and that daily revenue for the corporation follows a normal distribution. If about 99% of all the observations lie in the interval \u03bc \u00b1 3\u03c3, then using the approximate z-value instead of the exact table, what is the standard deviation of daily revenue for the corporation?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lower_bound = 230000\n    upper_bound = 480000\n    \n    # Since about 99% of all the observations lie in the interval \u03bc \u00b1 3\u03c3,\n    # we can calculate the range of the interval as follows\n    interval_range = upper_bound - lower_bound\n    \n    # Then, we can calculate 6\u03c3 (3\u03c3 on each side) as the range\n    six_sigma = interval_range\n    \n    # So, we can calculate \u03c3 (standard deviation) by dividing the range by 6\n    standard_deviation = six_sigma / 6\n    \n    # return answer\n    return standard_deviation\n\n# Execute the function to get the answer\nanswer = solution()\nprint(answer)  # print the answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-895",
        "python_solution": "",
        "ground_truth": null,
        "question": "A manager in charge of market risk intends to determine the cost of a 2-year zero-coupon bond. The 1-year interest rate currently stands at 10.0%. It's projected that there's a 50% chance that the 1-year interest rate will reach 12.0% and a 50% chance that it could be 8.0% in the next year. If the risk premium of duration risk is assumed to be 50 bps annually, and the bond\u2019s face value is worth EUR 1,000, which would be the accurate price of this zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 1000  # Face value of the bond\n    years = 2  # Number of years\n    current_interest_rate = 0.10  # Current 1-year interest rate\n    future_interest_rate_high = 0.12  # High future 1-year interest rate\n    future_interest_rate_low = 0.08  # Low future 1-year interest rate\n    risk_premium = 0.005  # Annual risk premium of duration risk\n    probability_high = 0.5  # Probability of high interest rate\n    probability_low = 0.5  # Probability of low interest rate\n\n    # Do math calculation to get the answer\n    expected_future_value_high = face_value / (1 + future_interest_rate_high)\n    expected_future_value_low = face_value / (1 + future_interest_rate_low)\n    expected_future_value = probability_high * expected_future_value_high + probability_low * expected_future_value_low\n    present_value = expected_future_value / (1 + current_interest_rate + risk_premium)**2\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "|     |      |\n| ----| ----|\n| EXHIBIT 1  SELECTED INFORMATION O N INVESTMENTS FOR THE YEAR ENDED 31 DECEMBER 2017 (\u00a3 THOUSANDS, EXCEPT PER SHARE DATA) | |\n| Company Name | Alme AG |\n| Security  description | Bonds maturing  31 December 2026, 5% coupon payable  annually, 6% effective market rate when issued  1 January 2012 |\n| Classification at purchase | Held to maturity |\n| Date of purchase | 1 January 2016 |\n| Amount owned by Dagmar | Face value \u00a34,000 |\n| Market value on  1 January 2017 | \u00a33,600.60 |\n| Market value on  31 December 2017 | \u00a33,634.76 |"
        ],
        "topic": "Accounting",
        "question_id": "test-896",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the contribution from the investment in Alme to the net earnings (in thousands) for 2017 of Brecht and Co, a European manufacturing company that prepares its financial statements according to International Financial Reporting Standards (IFRS)? This is being reviewed by two treasury group members of Brecht and Co, Hans Braun and Olga Schmitt.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 4000\n    coupon_rate = 0.05\n    market_rate = 0.06\n    market_value_2017 = 3634.76\n    market_value_2016 = 3600.60\n    \n    # Calculate the annual coupon payment\n    annual_coupon_payment = face_value * coupon_rate\n    \n    # Calculate the interest income for 2017, since the bonds are held to maturity, \n    # the interest income will be based on the coupon payment and the effective market rate\n    interest_income = annual_coupon_payment\n    \n    # Calculate the unrealized gain or loss from the change in market value in 2017,\n    # since the bonds are classified as held to maturity, the unrealized gain or loss will not be recorded in the income statement\n    unrealized_gain_loss = market_value_2017 - market_value_2016\n    \n    # Calculate the contribution to net earnings\n    contribution_to_net_earnings = interest_income\n    \n    # return answer\n    return contribution_to_net_earnings\n```"
        ]
    },
    {
        "tables": [
            "| Revenue growth | 5% |\n| --- | --- |\n| Gross profit margin | 30% |\n| Depreciation Expense | 2.5% of revenues |\n| SG&A | 15% of revenues |\n| WCInv | 5% of the incremental revenues |\n| CapEx | 15% of the incremental revenues |\n| Tax rate | 30% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-897",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is assessing the FCFF of Corporation N for the upcoming year, which records an annual turnover of $100 million. He has projected the pertinent details in the given table. What is the FCFF?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 100000000\n    revenue_growth = 0.05\n    gross_profit_margin = 0.3\n    depreciation_expense = 0.025\n    sga = 0.15\n    wcinv = 0.05\n    capex = 0.15\n    tax_rate = 0.3\n    \n    # Do math calculation to get the answer\n    ebitda = revenue * (1 + revenue_growth) * gross_profit_margin\n    ebit = ebitda - (revenue * depreciation_expense)\n    ebt = ebit - (revenue * sga) \n    net_income = ebt * (1 - tax_rate)\n    fcff = net_income + (revenue * depreciation_expense) - (revenue * wcinv) - (revenue * capex)\n    \n    # return answer\n    return fcff\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-898",
        "python_solution": "",
        "ground_truth": null,
        "question": "If we assume an annual interest rate of 8% and an investment made today of $50,000. Let's suppose equal distributions are made at the end of each year for the following twelve years, leaving the account to be closed at the end of the twelfth year. How much would each yearly distribution amount be?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    interest_rate = 0.08\n    present_value = 50000\n    years = 12\n    \n    # Do math calculation to get the answer\n    # We will use the formula for calculating yearly distributions (A) in an annuity:\n    # A = P [ i (1 + i)^n ] / [ (1 + i)^n - 1]\n    # Where:\n    # A = annual distribution amount\n    # P = principal amount (initial investment)\n    # i = annual interest rate\n    # n = number of years\n    denominator = ((1 + interest_rate)**years) - 1\n    if denominator == 0:\n        return \"Error: Division by zero\"\n    annual_distribution = present_value * (interest_rate * (1 + interest_rate)**years) / denominator\n    \n    # return answer\n    return annual_distribution\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-899",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given that Occurrence A and Occurrence B are independent events. The probability of A is 0.2 [P(A) = 0.2] and the probability of B is 0.5 [P(B) = 0.5]. What is the combined probability of A and B, P(AB)?",
        "output": [
            "Here is the Python program to calculate the combined probability of A and B:\n\n```python\ndef solution():\n    # Define variables name and value\n    prob_A = 0.2\n    prob_B = 0.5\n\n    # Do math calculation to get the answer\n    # Since A and B are independent events, P(AB) = P(A) * P(B)\n    prob_AB = prob_A * prob_B\n\n    # return answer\n    return prob_AB\n```\n\nIn this program, we define the probabilities of A and B as 0.2 and 0.5, respectively. Since A and B are independent events, we calculate the combined probability by multiplying the individual probabilities. The result is returned as the answer."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-900",
        "python_solution": "",
        "ground_truth": null,
        "question": "The portfolio manager of AB pension, Monique, is contemplating the addition of XY Corp. (New York Stock Exchange: XY) to her portfolio. After a thorough evaluation of the company and its competitors, she is of the view that the company will exhibit exceptional growth for the coming 4 years and regular growth following that. Therefore, she has inferred that a two-stage DDM is most suitable for evaluating the stock. The total dividends paid by XY in 2017 amounted to $0.22. She predicts a growth rate of 12 percent for the next 4 years and 6 percent thereafter. She estimates that the required return is 9 percent. What percentage of the total value of the stock is associated with the value of the second stage based on this method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    dividends_2017 = 0.22\n    growth_rate_stage1 = 0.12\n    growth_rate_stage2 = 0.06\n    required_return = 0.09\n    years_stage1 = 4\n    \n    # Calculate the dividends for the first stage\n    dividends_stage1 = [dividends_2017 * (1 + growth_rate_stage1) ** i for i in range(1, years_stage1 + 1)]\n    \n    # Calculate the present value of the dividends for the first stage\n    present_value_stage1 = sum(dividend / (1 + required_return) ** i for i, dividend in enumerate(dividends_stage1, 1))\n    \n    # Calculate the terminal value (value of the second stage)\n    terminal_value = dividends_stage1[-1] * (1 + growth_rate_stage2) / (required_return - growth_rate_stage2)\n    \n    # Calculate the present value of the terminal value\n    present_value_stage2 = terminal_value / (1 + required_return) ** years_stage1\n    \n    # Calculate the total value of the stock\n    total_value = present_value_stage1 + present_value_stage2\n    \n    # Calculate the percentage of the total value associated with the second stage\n    percentage_stage2 = (present_value_stage2 / total_value) * 100\n    \n    # return answer\n    return percentage_stage2\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-901",
        "python_solution": "",
        "ground_truth": null,
        "question": "Taking into account the following financial information for a financial institution, in millions of dollars: shareholders' funds: 627.4; retained earnings: 65.6; undisclosed reserves: 33.5; goodwill: 21.3; subordinated debt: 180.0; specific provisions: 11.7. What is the ratio of tier 2 capital to tier 1 capital?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shareholders_funds = 627.4\n    retained_earnings = 65.6\n    undisclosed_reserves = 33.5\n    goodwill = 21.3\n    subordinated_debt = 180.0\n    specific_provisions = 11.7\n\n    # Calculate Tier 1 capital\n    tier_1_capital = shareholders_funds + retained_earnings + undisclosed_reserves - goodwill\n\n    # Calculate Tier 2 capital\n    tier_2_capital = subordinated_debt + specific_provisions\n\n    # Calculate the ratio of Tier 2 capital to Tier 1 capital\n    ratio = tier_2_capital / tier_1_capital\n\n    # return answer\n    return ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-902",
        "python_solution": "",
        "ground_truth": null,
        "question": "A dealer submits a limit order to purchase stocks at a rate of $49.94, with the market bid price being $49.49 and the bid-ask spread standing at 0.7%. What will likely be the final fill price for the order?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    limit_order_price = 49.94\n    market_bid_price = 49.49\n    bid_ask_spread = 0.007\n    \n    # Do math calculation to get the answer\n    # Calculate the ask price using the bid-ask spread formula\n    ask_price = market_bid_price / (1 - bid_ask_spread)\n    \n    # Since the limit order price is higher than the market bid price, \n    # we compare it to the ask price to determine the final fill price\n    final_fill_price = min(limit_order_price, ask_price)\n    \n    # return answer\n    return final_fill_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-903",
        "python_solution": "",
        "ground_truth": null,
        "question": "Currently possessing $750,000 in cash and short investment, Robert consults his investment manager Smith to discuss his investment portfolio. Robert's human capital amounts to $1.2 million with 30% demonstrating an equity-like characteristic according to calculations. Deciding that an overall target allocation of 45% equity is fitting for Robert, Smith must now determine the financial capital equity allocation required for Robert to meet the total economic wealth's targeted equity allocation. What should this allocation amount to?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_and_investment = 750000\n    human_capital = 1200000\n    equity_like_characteristic_percentage = 0.3\n    target_equity_allocation_percentage = 0.45\n\n    # Do math calculation to get the answer\n    equity_like_characteristic = human_capital * equity_like_characteristic_percentage\n    total_economic_wealth = cash_and_investment + human_capital\n    target_equity_allocation = total_economic_wealth * target_equity_allocation_percentage\n    financial_capital_equity_allocation = target_equity_allocation - equity_like_characteristic\n    answer = (financial_capital_equity_allocation / cash_and_investment) * 100\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Bond Class | Par Value(Emillions) |\n|------------|---------------------|\n| A(senior)  | 200                 |\n| B(subordinated) | 20           |\n| C(subordinated) | 5            |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-904",
        "python_solution": "",
        "ground_truth": null,
        "question": "At what level of default in par value would Bond Class A incur a loss if issued by a special purpose vehicle in the following structure?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value_A = 200  # Par Value of Bond Class A in millions\n    par_value_B = 20   # Par Value of Bond Class B in millions\n    par_value_C = 5    # Par Value of Bond Class C in millions\n\n    # Do math calculation to get the answer\n    # Bond Class A will incur a loss when the default in par value exceeds the combined par value of Bond Class B and C\n    default_threshold = par_value_B + par_value_C\n    \n    # return answer\n    return default_threshold\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Activity                           | Cost of Input (\u00a3/unit) | Price of Output (\u00a3/unit) in Current Period |\n| ---------------------------------- | ---------------------- | ----------------------------------------- |\n| Input materials                    | 3.50                   | 5.42                                      |\n| Production                         | 5.42                   | 8.02                                      |\n| Distributing good to stores (wholesale) | 8.02            | 11.23                                     |\n| Selling good to consumers (retail) | 11.23                  | 16.50                                     |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-905",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the contribution per unit (in \u00a3) this product adds to the present GDP, taking into account the production and sale expenses as shown in the subsequent table?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_input_materials = 3.50\n    price_of_output_production = 8.02\n    price_of_output_distributing = 11.23\n    price_of_output_selling = 16.50\n    \n    # Do math calculation to get the answer\n    # GDP contribution is the difference between the final selling price and the initial input cost\n    gdp_contribution = price_of_output_selling - cost_of_input_materials\n    \n    # return answer\n    return gdp_contribution\n\nresult = solution()\nprint(result)\n```"
        ]
    },
    {
        "tables": [
            "| Checking account | $27,000 |\n|------------------|---------|\n| Taxable investment account | $625,000 |\n| Residence | $525,000 |\n| Residential mortgage | $285,000 |\n| Outstanding balance on a $100,000 home equity line of credit | $38,000 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-906",
        "python_solution": "",
        "ground_truth": null,
        "question": "Exhibit 1 Smith Family: Personal and Financial Information:Personal Information:1. Estimated present value of the Smiths\u2019 future earnings is $3,900,000.2. The family has two children, ages 10 and 8. Cost of four years of university for the two children, with an estimated present value of $250,000.3. Purchase of a vacation home in the next five years, with an estimated present value of $325,000.4. Estimated present value of the Grahams\u2019 future consumption is $3,500,000. Using the data in Exhibit 1, what is the Smiths\u2019 economic net worth (in thousands)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    checking_account = 27000\n    taxable_investment_account = 625000\n    residence = 525000\n    residential_mortgage = 285000\n    home_equity_line_of_credit = 38000\n    present_value_future_earnings = 3900000\n    present_value_children_education = 250000\n    present_value_vacation_home = 325000\n    present_value_future_consumption = 3500000\n    \n    # Calculate total assets\n    total_assets = checking_account + taxable_investment_account + residence + present_value_future_earnings\n    \n    # Calculate total liabilities\n    total_liabilities = residential_mortgage + home_equity_line_of_credit + present_value_children_education + present_value_vacation_home + present_value_future_consumption\n    \n    # Calculate economic net worth\n    economic_net_worth = total_assets - total_liabilities\n    \n    # Convert to thousands\n    economic_net_worth_thousands = economic_net_worth / 1000\n    \n    # return answer\n    return economic_net_worth_thousands\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Corporate & Securities Issuance",
        "question_id": "test-907",
        "python_solution": "",
        "ground_truth": null,
        "question": "If John has put money into 50,000 shares of Company N's stock that is being sold for $25 each and the company announces a cash dividend of $2, assuming John will be using all dividends received to buy more shares and considering he is a tax-exempt investor, how many shares will he possess after reinvesting the dividends at the ex-dividend price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    shares_before_dividend = 50000\n    stock_price = 25\n    dividend_amount = 2\n    \n    # Do math calculation to get the answer\n    dividend_received = shares_before_dividend * dividend_amount\n    ex_dividend_price = stock_price - dividend_amount\n    shares_purchased_with_dividend = dividend_received / ex_dividend_price\n    total_shares_after_dividend = shares_before_dividend + shares_purchased_with_dividend\n    \n    # return answer\n    return total_shares_after_dividend\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-908",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a trader acquired a stock initially priced at $20 and sold it at the end of the year for $25, what is the continuously compounded annual rate of return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_price = 20\n    final_price = 25\n    \n    # Do math calculation to get the answer\n    import math\n    rate_of_return = math.log(final_price / initial_price)\n    \n    # return answer\n    return rate_of_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-909",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the value of a bond with a par value of $100, a coupon rate of 6% paid twice a year, a YTM of 7%, and a maturity period of a decade?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100  # Par value of the bond\n    coupon_rate = 0.06  # Coupon rate of the bond\n    ytm = 0.07  # Yield to maturity of the bond\n    maturity = 10  # Maturity period in years\n    freq = 2  # Frequency of coupon payments per year\n\n    # Calculate the coupon payment per period\n    coupon_payment = par_value * coupon_rate / freq\n\n    # Calculate the number of periods\n    nper = maturity * freq\n\n    # Calculate the present value of the bond\n    present_value = 0\n    for i in range(1, nper + 1):\n        if i < nper:\n            present_value += coupon_payment / (1 + ytm / freq) ** i\n        else:\n            present_value += (coupon_payment + par_value) / (1 + ytm / freq) ** i\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-910",
        "python_solution": "",
        "ground_truth": null,
        "question": "Michael wishes to assist his buddy James in forecasting the sales volume of his store in January 20X9, so he employs the sales volume data from January 20X6 to December 20X8 as examples to construct a log-linear trend model, achieving the result: Ln( \u0177t ) =2.3748+0.0912t. What is the forecasted sales volume of James's store in January 20X9?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    intercept = 2.3748\n    slope = 0.0912\n    time_index_20X6_01 = 1  # Assume time index for January 20X6 is 1\n    forecast_year = 20\n    forecast_month = 1  # January\n\n    # Calculate the time index for January 20X9\n    time_index_20X9_01 = (forecast_year - 6) * 12 + forecast_month\n\n    # Calculate the forecasted sales volume using the log-linear trend model\n    ln_forecasted_sales_volume = intercept + slope * time_index_20X9_01\n\n    # Calculate the forecasted sales volume\n    forecasted_sales_volume = np.exp(ln_forecasted_sales_volume)\n\n    # return answer\n    return forecasted_sales_volume\n```\n\nNote that you need to import the numpy library (as np) at the beginning of the program for the np.exp function to work:\n\n```python\nimport numpy as np\n\ndef solution():\n    ...\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-911",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a Property B has an appraised worth of $36,000,000 with a predicted Year 1 NOI of 900,000, What would be the highest loan amount that Property B could receive if the loan provider is interested in an interest-only loan at 5% mortgage rate, given that the maximum loan to value doesn't exceed 80% and the minimum debt service coverage ratio is no less than 1.2x?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    appraised_worth = 36000000\n    year1_noi = 900000\n    mortgage_rate = 0.05\n    max_loan_to_value = 0.8\n    min_debt_service_coverage_ratio = 1.2\n\n    # Do math calculation to get the answer\n    # Calculate the maximum loan amount based on the loan-to-value ratio\n    max_loan_amount_ltv = appraised_worth * max_loan_to_value\n\n    # Calculate the annual debt service\n    annual_debt_service = mortgage_rate * max_loan_amount_ltv\n\n    # Calculate the maximum loan amount based on the debt service coverage ratio\n    max_loan_amount_dscr = year1_noi / (min_debt_service_coverage_ratio * mortgage_rate)\n\n    # The highest loan amount is the minimum of the two calculated values\n    highest_loan_amount = min(max_loan_amount_ltv, max_loan_amount_dscr)\n\n    # return answer\n    return highest_loan_amount\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-912",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ, a wealth management company based in France, is planning to buy CDS on a firm called E to secure its existing portfolio position. The yearly coupon rate for the CDS is 5%, and the term of the CDS agreement is 5 years. The credit spread for firm E stands at 650 bps. Based on the details provided, what is the initial premium as a percent of the notional for the CDS on firm E?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.05  # 5% yearly coupon rate\n    term = 5  # 5-year term of the CDS agreement\n    credit_spread = 0.065  # 650 bps credit spread for firm E\n    \n    # Do math calculation to get the answer\n    # Convert credit spread from bps to decimal\n    credit_spread_decimal = credit_spread / 10000\n    \n    # Calculate initial premium as a percent of the notional\n    initial_premium = (credit_spread_decimal * term) / (1 + coupon_rate) ** term\n    \n    # Convert initial premium to percentage\n    initial_premium_percentage = initial_premium * 100\n    \n    # return answer\n    return initial_premium_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-913",
        "python_solution": "",
        "ground_truth": null,
        "question": "A merchant initiates an equity swap with a notional principle of $500,000. He will acquire the return on stock ABC and give the return on Dow Jones Index. At the end of the quarter, if the stock ABC has increased by 5% and the index has risen by 1%, what would be the merchant's payoff?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_principal = 500000\n    stock_ABC_return = 0.05  # 5% increase\n    dow_jones_index_return = 0.01  # 1% increase\n    \n    # Do math calculation to get the answer\n    merchant_payoff = notional_principal * (stock_ABC_return - dow_jones_index_return)\n    \n    # return answer\n    return merchant_payoff\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-914",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an individual puts $1000 into an investment now at a 6% interest rate, how much will they make in 10 years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 1000  # initial investment\n    annual_interest_rate = 0.06  # 6% interest rate\n    years = 10  # number of years\n    \n    # Do math calculation to get the answer\n    future_value = principal * (1 + annual_interest_rate) ** years\n    interest_earned = future_value - principal\n    \n    # return answer\n    return interest_earned\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-915",
        "python_solution": "",
        "ground_truth": null,
        "question": "In March 2017, John purchased 500 pen units at a price of $2 each. Then in April 2017, John acquired 600 pen units at a cost of $3 each. Throughout 2017, he made sales of 1000 units at $5 for each unit. Utilizing the Weighted Average method, what will be the cost of goods sold in 2017 for John?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    march_units = 500\n    march_price = 2\n    april_units = 600\n    april_price = 3\n    sales_units = 1000\n    sales_price = 5\n    \n    # Do math calculation to get the answer\n    total_units = march_units + april_units\n    total_cost = (march_units * march_price) + (april_units * april_price)\n    weighted_average_cost = total_cost / total_units\n    cost_of_goods_sold = weighted_average_cost * sales_units\n    \n    # return answer\n    return cost_of_goods_sold\n```"
        ]
    },
    {
        "tables": [
            "| Date | Spot Exchange Rate (USD/RMB) | CPI |\n| --- | --- | --- |\n| 31 Dec 2015 | 6.2 | 100 |\n| 31 Dec 2016 | 8.6 | 130 |\n| 31 Dec 2017 | 17.3 | 200 |\n| Average 2017 | 15.2 | 165 |"
        ],
        "topic": "Accounting",
        "question_id": "test-916",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ Inc. is a global company that adheres to IFRS and uses RMB as the currency for reporting. XYZ owns a subsidiary named QRS, located in the US and uses the US dollar (USD) as its operational currency. QRS's revenue for 2017 is USD90 million. What amount should XYZ Inc. report as its December 31, 2017 revenue from QRS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_exchange_rate = 17.3  # Spot Exchange Rate as of 31 Dec 2017 (USD/RMB)\n    revenue_usd = 90e6  # Revenue of QRS in 2017 (USD)\n\n    # Do math calculation to get the answer\n    # To report revenue in RMB, we need to convert it from USD using the spot exchange rate\n    revenue_rmb = revenue_usd * spot_exchange_rate\n    \n    # return answer\n    return revenue_rmb\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-917",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a continuous compound interest rate of 2.5%, how much will John receive after 5 years from his $1million investment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 1000000  # Initial investment\n    rate = 0.025  # Continuous compound interest rate\n    time = 5  # Time in years\n\n    # Do math calculation to get the answer\n    amount = principal * (2.71828 ** (rate * time))\n    \n    # return answer\n    return round(amount, 2)\n```"
        ]
    },
    {
        "tables": [
            "| country  | Inflation rate (%) | Growth in total factor productivity (%) | Output elasticity of capital | Growth rate of capital (%) | Growth rate of labor (%) |\n|----------|----------------|---------------------------------------|-----------------------------|----------------------------|--------------------------|\n| Country A | 1.7              | 1.5                                                 | 0.3                                           | 3.2                                   | 0.4                                     |\n| Country B | 1.8              | 1.3                                                 | 0.4                                           | 3.7                                   | 0.5                                     |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-918",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the information given in Exhibit 1, what is the GDP growth rate in Country A using the Solow growth accounting equation, which is the preferred method of calculation by Thompson?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    inflation_rate = 1.7  # Inflation rate (%)\n    productivity_growth_rate = 1.5  # Growth in total factor productivity (%)\n    output_elasticity_of_capital = 0.3  # Output elasticity of capital\n    capital_growth_rate = 3.2  # Growth rate of capital (%)\n    labor_growth_rate = 0.4  # Growth rate of labor (%)\n\n    # Do math calculation to get the answer using Solow growth accounting equation\n    gdp_growth_rate = (productivity_growth_rate \n                       + (output_elasticity_of_capital * capital_growth_rate) \n                       + ((1 - output_elasticity_of_capital) * labor_growth_rate))\n\n    # return answer\n    return gdp_growth_rate\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-919",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the onset of 2017, Corporation Beta had a retained earnings amount of $800. The company's anticipated net income for the entire year falls around $150, and they're planning to distribute a dividend of $200 to the shareholders. What amount of retained earnings will Corporation Beta have by the end of 2017?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_retained_earnings = 800\n    net_income = 150\n    dividend_distribution = 200\n    \n    # Do math calculation to get the answer\n    ending_retained_earnings = beginning_retained_earnings + net_income - dividend_distribution\n    \n    # return answer\n    return ending_retained_earnings\n```"
        ]
    },
    {
        "tables": [
            "| Company   | Sales(in millions of) |\n|-----------|----------------------|\n| ABC       | 300                  |\n| Brown     | 250                  |\n| Coral     | 200                  |\n| Delta     | 150                  |\n| Erie      | 100                  |\n| All others| 50                   |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-920",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the sector's concentration ratio for four companies, based on the market share data collected by the analyst for a particular industry?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales_ABC = 300\n    sales_Brown = 250\n    sales_Coral = 200\n    sales_Delta = 150\n    sales_Erie = 100\n    sales_others = 50\n\n    # Do math calculation to get the answer\n    total_sales = sales_ABC + sales_Brown + sales_Coral + sales_Delta + sales_Erie + sales_others\n    market_share_ABC = sales_ABC / total_sales\n    market_share_Brown = sales_Brown / total_sales\n    market_share_Coral = sales_Coral / total_sales\n    market_share_Delta = sales_Delta / total_sales\n    \n    concentration_ratio = market_share_ABC + market_share_Brown + market_share_Coral + market_share_Delta\n    answer = concentration_ratio * 100  # convert to percentage\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-921",
        "python_solution": "",
        "ground_truth": null,
        "question": "An investment fund implements the succeeding payment structure: Yearly administrative fee based on year-end AUM: 2% Incentive fee: 20% Initial requirement rate before incentive fee starts: 4% Present top earning point: $610 million. The fund starts off the year with a value of $580 million and after one year, it ends with a value of $650 million before the fees are considered. What is the annual net percentage return to a shareholder for this year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_value = 580000000  # Initial value of the fund in dollars\n    year_end_value = 650000000  # Year-end value of the fund before fees in dollars\n    admin_fee_rate = 0.02  # Yearly administrative fee rate\n    incentive_fee_rate = 0.20  # Incentive fee rate\n    hurdle_rate = 0.04  # Initial requirement rate before incentive fee starts\n    high_water_mark = 610000000  # Present top earning point in dollars\n\n    # Do math calculation to get the answer\n    # Calculate the return before fees\n    return_before_fees = (year_end_value - initial_value) / initial_value\n    \n    # Calculate the administrative fee\n    admin_fee = year_end_value * admin_fee_rate\n    \n    # Check if the return is greater than the hurdle rate\n    if return_before_fees > hurdle_rate:\n        # Calculate the incentive fee\n        incentive_fee = (return_before_fees - hurdle_rate) * incentive_fee_rate * year_end_value\n    else:\n        incentive_fee = 0\n    \n    # Adjust the incentive fee if the year-end value exceeds the high water mark\n    if year_end_value > high_water_mark:\n        incentive_fee = max(incentive_fee, (year_end_value - high_water_mark) * incentive_fee_rate)\n    \n    # Calculate the net return\n    net_return = (year_end_value - admin_fee - incentive_fee - initial_value) / initial_value\n    \n    # Convert the net return to a percentage\n    net_return_percentage = net_return * 100\n    \n    # return answer\n    return net_return_percentage\n```"
        ]
    },
    {
        "tables": [
            "| Revenue | $1,000,000 |\n|---------|------------|\n| Returns of goods sold | $100,000 |\n| Cash collected | $800,000 |\n| Cost of goods sold | $700,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-922",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, which was its inaugural year of operations, GameSquare recorded certain data concerning the sale of its products. Under the accrual basis of accounting, how much net revenue would appear on GameSquare's 2009 income statement?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    revenue = 1000000\n    returns_of_goods_sold = 100000\n    \n    # Do math calculation to get the answer\n    net_revenue = revenue - returns_of_goods_sold\n    \n    # return answer\n    return net_revenue\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-923",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financial advisor was requested to look for opportunities for arbitrage in the market of Treasury bonds through a comparison of the cash flows from some selected bonds and the cash flows of other bond combinations. If the price of a 1-year zero-coupon bond is USD 97 and a 1-year bond with a 7% coupon and payments every six months comes at USD 102, using a duplication method, what would be the cost of a 1-year Treasury bond with a 6% coupon that has semi-annual payments?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_zero_coupon = 97\n    price_coupon_bond = 102\n    coupon_rate = 0.07\n    coupon_payment = (coupon_rate / 2) * 100  # semi-annual payment\n    \n    # Calculate the yield of the zero-coupon bond\n    yield_zero_coupon = (100 / price_zero_coupon) - 1\n    \n    # Calculate the present value of the coupon payments of the 7% coupon bond\n    present_value_coupons = coupon_payment / (1 + yield_zero_coupon / 2) + coupon_payment / (1 + yield_zero_coupon)\n    \n    # Calculate the present value of the face value of the 7% coupon bond\n    present_value_face_value = 100 / (1 + yield_zero_coupon)\n    \n    # Calculate the total present value of the 7% coupon bond\n    total_present_value = present_value_coupons + present_value_face_value\n    \n    # Calculate the arbitrage profit\n    arbitrage_profit = price_coupon_bond - total_present_value\n    \n    # Since there is no arbitrage opportunity in the given problem, \n    # the cost of the 1-year Treasury bond with a 6% coupon that has semi-annual payments \n    # will be equal to its face value discounted by the yield of the zero-coupon bond\n    cost_6percent_coupon_bond = 3 / (1 + yield_zero_coupon / 2) + 3 / (1 + yield_zero_coupon) + 100 / (1 + yield_zero_coupon)\n    \n    # return answer\n    return cost_6percent_coupon_bond\n```"
        ]
    },
    {
        "tables": [
            "|                | Investment A | Investment B | Total |\n|----------------|--------------|--------------|-------|\n| Initial cost   | 100          | 150          | 250   |\n| Profit/loss    | -50          | 30           | -20   |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-924",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the subsequent details (in $ millions) regarding a private investment fund: The supervisor's reward fee is 20% of the earnings. If there is no clawback clause applicable, the total reward fee (in $ millions) under a U.S.-style waterfall is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    investment_a_initial_cost = 100\n    investment_b_initial_cost = 150\n    investment_a_profit_loss = -50\n    investment_b_profit_loss = 30\n    \n    # Do math calculation to get the answer\n    total_profit_loss = investment_a_profit_loss + investment_b_profit_loss\n    performance_fee = 0.2 * total_profit_loss\n    \n    # Since there is no clawback clause, the performance fee will be non-negative, \n    # even if the total profit/loss is negative\n    if performance_fee < 0:\n        performance_fee = 0\n    \n    # return answer\n    return performance_fee\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-925",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the stated price of an option is $1.25, what is the value of a single option contract?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    stated_price = 1.25  # Price per share\n    shares_per_contract = 100  # Standard number of shares per option contract\n\n    # Do math calculation to get the answer\n    value_of_contract = stated_price * shares_per_contract\n\n    # return answer\n    return value_of_contract\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-926",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the yearly yield-to-maturity, noted with a 12 period frequency, for a 4-year, zero coupon bond priced at 75% of par value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    par_value = 100  # Assume par value is 100\n    price = 0.75 * par_value  # Price is 75% of par value\n    years_to_maturity = 4\n    n = 12  # Compounding frequency is 12 periods per year\n    \n    # Do math calculation to get the answer\n    periods_to_maturity = years_to_maturity * n\n    yield_to_maturity = (par_value / price) ** (1 / periods_to_maturity) - 1\n    yearly_yield_to_maturity = (1 + yield_to_maturity) ** n - 1\n    \n    # return answer\n    return yearly_yield_to_maturity\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-927",
        "python_solution": "",
        "ground_truth": null,
        "question": "The analyst, Jane, performed a straightforward regression that accounted for the changes in electric usage based on temperature fluctuations. The total variation for the dependent variable totaled 132.08, with the explained variation being 60.38. She made 60 observations on a monthly basis. Can you compute the F-statistic to assess the model's fit?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_variation = 132.08\n    explained_variation = 60.38\n    num_observations = 60\n    num_coefficients = 2  # Assuming a simple linear regression with 1 independent variable and 1 intercept\n    \n    # Do math calculation to get the answer\n    mean_square_model = explained_variation / (num_coefficients - 1)\n    mean_square_error = (total_variation - explained_variation) / (num_observations - num_coefficients)\n    f_statistic = mean_square_model / mean_square_error\n    \n    # return answer\n    return f_statistic\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-928",
        "python_solution": "",
        "ground_truth": null,
        "question": "A one-year zero-coupon bond has a return of 4.0%. The yields on a two-year and a three-year zero-coupon bond are 5.0% and 6.0% respectively. What would be the forward rate for a loan for two years starting in one year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    one_year_rate = 0.04\n    two_year_rate = 0.05\n    three_year_rate = 0.06\n\n    # Calculate the forward rate for a loan for two years starting in one year\n    one_year_zero_coupon_bond_price = 1 / (1 + one_year_rate)\n    two_year_zero_coupon_bond_price = 1 / (1 + two_year_rate) ** 2\n    three_year_zero_coupon_bond_price = 1 / (1 + three_year_rate) ** 3\n\n    forward_rate_one_to_two_year = (two_year_zero_coupon_bond_price / one_year_zero_coupon_bond_price) ** (-1) - 1\n    forward_rate_one_to_two_year = (three_year_zero_coupon_bond_price * (1 + one_year_rate) / two_year_zero_coupon_bond_price) ** (1 / (2)) - 1\n    forward_rate_two_to_three_year = ((1 + three_year_rate) ** 3 / (1 + two_year_rate) ** 2) ** (1/1) - 1\n\n\n    two_year_forward_rate_starting_in_one_year = ((1 + three_year_rate)**3 / (1+ one_year_rate))**(1/2) - 1\n\n    answer = two_year_forward_rate_starting_in_one_year\n\n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-929",
        "python_solution": "",
        "ground_truth": null,
        "question": "Four years ago, Mike deposited $2,000 into his savings account for home renovations, it compounded annually at an annual interest rate of 3%. Now, Mike has altered his plan and has decided to leave the money in the bank for an additional five years. What is the current value of Mike's account?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal = 2000\n    annual_interest_rate = 0.03\n    years_aggregated = 9  # 4 years ago + 5 additional years\n\n    # Do math calculation to get the answer\n    current_balance = principal * ((1 + annual_interest_rate) ** years_aggregated)\n\n    # return answer\n    return current_balance\n```"
        ]
    },
    {
        "tables": [
            "| Asset Class     | Geometric Return (%) |\n| --------------- | -------------------- |\n| Equities        | 8.0                  |\n| Corporate Bonds | 6.5                  |\n| Treasury bills  | 2.5                  |\n| Inflation       | 2.1                  |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-930",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the actual yield for stocks, as per the historic geometric returns observed by a research analyst?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    equities_geometric_return = 8.0  # in percentage\n    inflation_rate = 2.1  # in percentage\n\n    # Do math calculation to get the answer\n    actual_yield_stocks = (1 + equities_geometric_return/100) / (1 + inflation_rate/100) - 1\n    actual_yield_stocks_percentage = round(actual_yield_stocks * 100, 2)\n\n    # return answer\n    return actual_yield_stocks_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-931",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming quarterly compounding, what is the stated annual interest rate if a financial institution offers an effective annual rate (EAR) of 12%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    effective_annual_rate = 0.12  # 12%\n    compounding_frequency = 4  # Quarterly compounding\n    \n    # Do math calculation to get the answer\n    stated_annual_rate = (1 + effective_annual_rate) ** (1 / compounding_frequency) - 1\n    stated_annual_rate_percentage = stated_annual_rate * compounding_frequency * 100\n    \n    # return answer\n    return stated_annual_rate_percentage\n```"
        ]
    },
    {
        "tables": [
            "|                        | Maturity (Years) |     |     |     |\n|------------------------|------------------|-----|-----|-----|\n|                        | 1                | 2   | 3   | 4   |\n| Government spot rate   | 2.25%            | 2.70% | 3.30% | 4.05% |\n| Swap spread            | 0.25%            | 0.30% | 0.45% | 0.70% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-932",
        "python_solution": "",
        "ground_truth": null,
        "question": "Johnson collects data on spot rates for on-the-run yearly-coupon government securities and swap spreads, as shown in the Exhibit below. Johnson purchases a four-year, zero-coupon corporate bond and then sells it after two years. Johnson demonstrates the returns from this approach using the swap rate as a substitute for corporate yields. What should Johnson display as a total return?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    # Government spot rates for 1, 2, 3, and 4 years\n    spot_rates = [0.0225, 0.0270, 0.0330, 0.0405]\n    \n    # Swap spreads for 1, 2, 3, and 4 years\n    swap_spreads = [0.0025, 0.0030, 0.0045, 0.0070]\n    \n    # Calculate swap rates by adding the government spot rate and the swap spread\n    swap_rates = [spot_rate + swap_spread for spot_rate, swap_spread in zip(spot_rates, swap_spreads)]\n    \n    # Calculate the yield on the original four-year investment\n    # Since it's a zero-coupon bond, the yield is essentially the swap rate for 4 years\n    original_yield = swap_rates[3]\n    \n    # Calculate the price of the zero-coupon bond at the end of two years\n    # Since it's a zero-coupon bond, the price will be the present value of the future cash flow (face value) using the yield for the remaining 2 years\n    # Here we'll assume the face value is 1 (or 100%) for simplicity\n    face_value = 1\n    years_remaining = 2\n    price_at_2_years = face_value / (1 + original_yield) ** years_remaining\n    \n    # Calculate the return Johnson would receive from selling the bond after 2 years\n    # It is essentially the yield for the 2-year period, since it's the shortening of the original 4-year bond to a 2-year bond\n    # However, since Johnson is selling it at the swap rate as a corporate yield substitute, we use the swap rate for 2 years to calculate this return\n    return_from_sale = swap_rates[1]\n    \n    # The total return that Johnson should display is the yield from the original investment for the first 2 years, plus the return from the sale\n    # Since the bond is sold after 2 years, Johnson experiences the original 4-year yield for those first 2 years\n    total_return = original_yield\n    \n    # Do math calculation to get the answer\n    # To correctly apply these rates over two years, we convert to the effective annual rate first, given that the rates are simple annual rates.\n    total_return"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-933",
        "python_solution": "",
        "ground_truth": null,
        "question": "If an investment advisor has a bond position valued at USD 100 million with a modified duration of eight years and a convexity of 150 years, with the term structure being flat, what would be the change in the position's value if interest rates were to rise by 25 basis points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 8  # years\n    convexity = 150  # years\n    bond_position = 100000000  # USD\n    change_in_interest_rate = 0.0025  # 25 basis points\n    \n    # Do math calculation to get the answer\n    change_in_value_due_to_duration = -bond_position * modified_duration * change_in_interest_rate\n    change_in_value_due_to_convexity = 0.5 * bond_position * convexity * (change_in_interest_rate ** 2)\n    total_change_in_value = change_in_value_due_to_duration + change_in_value_due_to_convexity\n    \n    # return answer\n    return round(total_change_in_value, 2)\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-934",
        "python_solution": "",
        "ground_truth": null,
        "question": "The women's apparel producer, Ivory Ensign, recorded a $20 million expense in salaries. The initial balance of payable salaries was at $3 million and eventually ended at $1 million. How much in salaries did the firm distribute in cash?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    expense_in_salaries = 20000000  # $20 million\n    initial_balance_of_payable_salaries = 3000000  # $3 million\n    ending_balance_of_payable_salaries = 1000000  # $1 million\n\n    # Do math calculation to get the answer\n    payable_salaries_distributed_in_cash = expense_in_salaries + initial_balance_of_payable_salaries - ending_balance_of_payable_salaries\n\n    # return answer\n    return payable_salaries_distributed_in_cash\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-935",
        "python_solution": "",
        "ground_truth": null,
        "question": "The annual spot rate r(1) is 5% and the forward price for a one-year zero-coupon bond starting in a year stands at 0.9346. What would be the spot price of a two-year zero-coupon bond?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    r_1 = 0.05  # annual spot rate\n    forward_price = 0.9346  # forward price for a one-year zero-coupon bond starting in a year\n\n    # Do math calculation to get the answer\n    # The formula to calculate the spot price of a two-year zero-coupon bond is:\n    # spot_price = 1 / (1 + r_1) * forward_price\n    spot_price = 1 / (1 + r_1) * forward_price\n\n    # return answer\n    return spot_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-936",
        "python_solution": "",
        "ground_truth": null,
        "question": "The possibility of a variable, which follows a normal distribution with an average of 0.9 and a standard deviation of 1.5, being in the range of 0.9 and 1.2 is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    from scipy.stats import norm\n    mean = 0.9\n    std_dev = 1.5\n    lower_bound = 0.9\n    upper_bound = 1.2\n\n    # Do math calculation to get the answer\n    probability = norm.cdf(upper_bound, loc=mean, scale=std_dev) - norm.cdf(lower_bound, loc=mean, scale=std_dev)\n\n    # return answer\n    return probability\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-937",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2009, Pelican Enterprises reported a net profit of $1,000,000. On the first of January, 2009, there were 1,000,000 shares in circulation. The company issued an additional 100,000 shares at $20 per share on July 1, 2009. Common shareholders received $200,000 in dividends. What is the basic earnings per share for Pelican Enterprises for the year 2009?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_profit = 1000000\n    initial_shares = 1000000\n    additional_shares = 100000\n    dividend_paid = 200000\n\n    # Calculate the total shares (initial + additional shares issued in the middle of the year)\n    # We use the average number of shares since the new shares are issued in the middle of the year\n    average_shares = initial_shares + (additional_shares / 2)\n\n    # Calculate the basic earnings per share\n    # Since dividend is paid to the shareholders, we should calculate the net earnings \n    # after subtracting the dividend paid from the net profit\n    net_earnings = net_profit - dividend_paid\n    basic_eps = net_earnings / average_shares\n\n    # return answer\n    return basic_eps\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-938",
        "python_solution": "",
        "ground_truth": null,
        "question": "A company is planning to acquire 10,000 barrels of West Texas Intermediate Crude Oil and intends to hedge its purchase utilizing the Brent Crude Oil futures contract. Given that the correlation between the spot and futures prices is 0.72 and the annual volatility of the spot price and the Brent Crude Oil futures price are 0.35 and 0.27 respectively, what is the hedge ratio for the company?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    correlation = 0.72\n    spot_volatility = 0.35\n    futures_volatility = 0.27\n    \n    # Do math calculation to get the answer\n    hedge_ratio = correlation * (spot_volatility / futures_volatility)\n    \n    # return answer\n    return hedge_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-939",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the cost per 100 of face value for a bond offering a 3% annual interest rate that will mature in two years, given a market discount rate of 4%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100  # face value of the bond\n    annual_interest_rate = 0.03  # 3% annual interest rate\n    market_discount_rate = 0.04  # 4% market discount rate\n    years_to_maturity = 2  # number of years until maturity\n    \n    # Do math calculation to get the answer\n    present_value = face_value / (1 + market_discount_rate) ** years_to_maturity\n    annual_interest_payment = face_value * annual_interest_rate\n    present_value_of_interest_payments = annual_interest_payment * (((1 - (1 + market_discount_rate) ** (-years_to_maturity)) / market_discount_rate))\n    total_present_value = present_value + present_value_of_interest_payments\n    cost_per_100 = 100 - total_present_value\n    \n    # return answer\n    return cost_per_100\n```"
        ]
    },
    {
        "tables": [
            "| coupon | 15% annual-pay coupon |\n| --- | --- |\n| years to maturity | 7 years |\n| current price | trading at par |\n| basis point change in yield | 25 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-940",
        "python_solution": "",
        "ground_truth": null,
        "question": "Estimate the approximate modified duration of the bond given the details below:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    coupon_rate = 0.15\n    years_to_maturity = 7\n    current_price = 100  # trading at par\n    basis_point_change_in_yield = 25 / 10000  # convert basis point to decimal\n    \n    # Calculate yield to maturity (YTM) assuming the bond is trading at par\n    ytm = coupon_rate\n    \n    # Calculate the modified duration using the approximate formula\n    # D = (1+y)^(-1) * [1 - (1+y)^(-n) * (1 - y) / y] / y\n    # where:\n    #   D = modified duration\n    #   y = yield to maturity\n    #   n = years to maturity\n    modified_duration = (1 + ytm)**(-1) * (1 - (1 + ytm)**(-years_to_maturity) * (1 - ytm) / ytm) / ytm\n    \n    # return answer\n    return modified_duration\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-941",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier purchases a Treasury bill that matures in one month for $987. When it matures, he receives $1,000. Work out the effective annual rate (EAR) for him.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    purchase_price = 987  # The price at which the financier purchases the Treasury bill\n    maturity_value = 1000  # The amount the financier receives when the Treasury bill matures\n    time_to_maturity = 1/12  # The time to maturity in years (since the bill matures in one month)\n\n    # Do math calculation to get the answer\n    # First, calculate the holding period return (HPR)\n    hpr = (maturity_value - purchase_price) / purchase_price\n    \n    # Then, calculate the effective annual rate (EAR)\n    ear = (1 + hpr) ** (1/time_to_maturity) - 1\n\n    # Return answer\n    return ear\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-942",
        "python_solution": "",
        "ground_truth": null,
        "question": "Firm B declared COGS of $50 million. Over the year, there was an increase of $8 million in inventory and a decrease of $5 million in accounts payable. What is the total cash the firm paid to its suppliers?",
        "output": [
            "def solution():\n    # Define variables name and value\n    COGS = 50000000  # Cost of Goods Sold (COGS)\n    inventory_increase = 8000000  # Increase in inventory\n    accounts_payable_decrease = 5000000  # Decrease in accounts payable\n    \n    # Do math calculation to get the answer\n    # Cash paid to suppliers is calculated by adding the increase in inventory to COGS and subtracting the decrease in accounts payable\n    cash_paid_to_suppliers = COGS + inventory_increase - accounts_payable_decrease\n    \n    # return answer\n    return cash_paid_to_suppliers"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-943",
        "python_solution": "",
        "ground_truth": null,
        "question": "In New York, Mia peddles homemade cakes. On a daily basis, she can sell 250 cakes at $10 each. On Mother's Day, she offers a special discount and anticipates a sale of 350 cakes at the discounted rate of $8 per cake. What is the marginal revenue per cake she earns from the special discount?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    daily_cakes_sold = 250\n    daily_price_per_cake = 10\n    mother_day_cakes_sold = 350\n    mother_day_price_per_cake = 8\n\n    # Do math calculation to get the answer\n    daily_revenue = daily_cakes_sold * daily_price_per_cake\n    mother_day_revenue = mother_day_cakes_sold * mother_day_price_per_cake\n    additional_cakes_sold = mother_day_cakes_sold - daily_cakes_sold\n    additional_revenue = mother_day_revenue - daily_revenue\n    marginal_revenue_per_cake = additional_revenue / additional_cakes_sold\n\n    # return answer\n    return marginal_revenue_per_cake\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-944",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond has an annual coupon rate of 4%, and it pays interest twice a year, and is due in two years. Given a 6% market discount rate, what is the cost of this bond for every 100 of nominal value?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_coupon_rate = 0.04\n    nominal_value = 100\n    years_to_maturity = 2\n    market_discount_rate = 0.06\n    compounding_frequency_per_year = 2\n\n    # Calculate the coupon payment per period\n    coupon_payment_per_period = (annual_coupon_rate / compounding_frequency_per_year) * nominal_value\n\n    # Calculate the total number of periods\n    total_periods = years_to_maturity * compounding_frequency_per_year\n\n    # Calculate the present value of the bond\n    present_value_of_bond = 0\n    for period in range(1, total_periods + 1):\n        present_value_of_bond += coupon_payment_per_period / (1 + (market_discount_rate / compounding_frequency_per_year)) ** period\n\n    # Add the present value of the face value at maturity\n    present_value_of_bond += nominal_value / (1 + (market_discount_rate / compounding_frequency_per_year)) ** total_periods\n\n    # return answer\n    return present_value_of_bond\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-945",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a portfolio contains two investments, both of equal value, with a VaR of $15 million and $30 million respectively, and if these two investments are perfectly correlated, what would be the calculated VaR of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    var_investment1 = 15000000\n    var_investment2 = 30000000\n    \n    # Since the two investments are perfectly correlated, \n    # the VaR of the portfolio is the sum of the individual VaRs\n    var_portfolio = var_investment1 + var_investment2\n    \n    # return answer\n    return var_portfolio\n```"
        ]
    },
    {
        "tables": [
            "| | | Year 1 | Year 2 | Year 3 | Year 4 |\n|---|---|---|---|---|---|\n| | NOI | $1,100,000 | $1,166,000 | $1,236,000 | $1,310,000 |\n| | | **DCF Assumptions** | | | |\n| | | | Investment Hold Period | | 3 years |\n| | | | Going-in Cap Rate | | 5.00% |\n| | | | Terminal Cap Rate | | 6.00% |\n| | | | Discount Rate | | 7.00% |\n| | | | Income /Value  Growth Rate | | Constant |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-946",
        "python_solution": "",
        "ground_truth": null,
        "question": "Based on the given information, what is the worth of Asset A utilizing the direct capitalization approach?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    noi_year_1 = 1100000  # Net Operating Income (NOI) for Year 1\n    going_in_cap_rate = 0.05  # Going-in Capitalization Rate\n\n    # Do math calculation to get the answer\n    asset_value = noi_year_1 / going_in_cap_rate\n\n    # return answer\n    return asset_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-947",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business offers a two-year, non-refundable service agreement for \u20ac420. Historically, the business anticipates meeting 25% of service expenses in the first year of the contract, with the rest covered in the second year. How much revenue does the business recognize in the first year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_revenue = 420  # Total revenue for the two-year service agreement\n    first_year_percentage = 0.25  # Percentage of service expenses anticipated in the first year\n\n    # Do math calculation to get the answer\n    revenue_first_year = total_revenue * first_year_percentage\n\n    # return answer\n    return revenue_first_year\n\nprint(solution())  # This will print the revenue recognized in the first year\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-948",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Sarah intends to purchase a property five years from now, anticipated to be worth $250,000 then, how much should she invest currently, given an annual rate of 3% that is compounded monthly?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    future_value = 250000\n    annual_rate = 0.03\n    years = 5\n    months_per_year = 12\n    total_periods = years * months_per_year\n    monthly_rate = annual_rate / months_per_year\n    \n    # Do math calculation to get the answer\n    present_value = future_value / (1 + monthly_rate) ** total_periods\n    \n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [
            "| Security | Beginning of Period: Price(E) | Beginning of Period: Shares | End of Period: Price(\u20ac) | End of Period: Shares |\n|----------|-------------------------------|-----------------------------|-------------------------|-----------------------|\n| A        | 20.00                         | 300                         | 22.00                   | 300                   |\n| B        | 50.00                         | 300                         | 48.00                   | 300                   |\n| C        | 26.00                         | 2,000                       | 30.00                   | 2,000                 |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-949",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher collects the following information for a value-weighted index: What is the return on the value-weighted index for the given period?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    beginning_of_period_prices = [20.00, 50.00, 26.00]\n    beginning_of_period_shares = [300, 300, 2000]\n    end_of_period_prices = [22.00, 48.00, 30.00]\n    end_of_period_shares = [300, 300, 2000]\n\n    # Calculate the begin and end period market value\n    beginning_of_period_market_values = [price * share for price, share in zip(beginning_of_period_prices, beginning_of_period_shares)]\n    end_of_period_market_values = [price * share for price, share in zip(end_of_period_prices, end_of_period_shares)]\n\n    # Calculate the total begin and end period market value\n    total_beginning_of_period_market_value = sum(beginning_of_period_market_values)\n    total_end_of_period_market_value = sum(end_of_period_market_values)\n\n    # Calculate the return on the value-weighted index\n    value_weighted_index_return = (total_end_of_period_market_value - total_beginning_of_period_market_value) / total_beginning_of_period_market_value\n\n    # return answer\n    return value_weighted_index_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-950",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Corporation X employs the double-declining balance method for amortizing a patent worth $120,000 with a useful lifespan of 4 years, what would be the difference in the net book value at the end of the 3rd year if it switched to the straight-line method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    patent_value = 120000  # Initial value of the patent\n    lifespan = 4  # Useful life of the patent in years\n    \n    # Calculate annual amortization using the straight-line method\n    straight_line_amortization = patent_value / lifespan\n    \n    # Calculate amortization for each year using the double-declining balance method\n    double_declining_balance_rate = 2 / lifespan  # Rate for double-declining balance method\n    double_declining_amortization_year1 = patent_value * double_declining_balance_rate\n    remaining_value_after_year1 = patent_value - double_declining_amortization_year1\n    double_declining_amortization_year2 = remaining_value_after_year1 * double_declining_balance_rate\n    remaining_value_after_year2 = remaining_value_after_year1 - double_declining_amortization_year2\n    double_declining_amortization_year3 = remaining_value_after_year2 * double_declining_balance_rate\n    \n    # Calculate the net book value at the end of the 3rd year using the straight-line method\n    straight_line_net_book_value = patent_value - (straight_line_amortization * 3)\n    \n    # Calculate the net book value at the end of the 3rd year using the double-declining balance method\n    double_declining_net_book_value = patent_value - (double_declining_amortization_year1 + double_declining_amortization_year2 + double_declining_amortization_year3)\n    \n    # Calculate the difference in net book values\n    difference_in_net_book_values = abs(straight_line_net_book_value - double_declining_net_book_value)\n    \n    # Return the answer\n    return difference_in_net_book_values\n```"
        ]
    },
    {
        "tables": [
            "| 10-Year Historical | Current | Capital Market Expectations |\n| ----------------- | ------- | ---------------------------- |\n| Average government bond yield: 2.8% | 10-year government bond yield:2.3% |   |\n| Average annual equity return:4.6% | Year-over-year equity return:-9.4% |   |\n| Average annual inflation rate: 2.3% | Year-over-year inflation rate:2.1% | Expected annual inflation: 2.3% |\n| Equity market P/E (beginning of period): 15x | Current equity market P/E:14.5x | Expected equity market P/E: 14.0x |\n| Average annual dividend income return: 2.6% |   | Expected annual income return: 2.4% |\n| Average annual real earnings growth: 6.0% |   | Expected annual real earnings growth: 5.0% |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-951",
        "python_solution": "",
        "ground_truth": null,
        "question": "A financier from Australia presently possesses an equity portfolio worth A$240 million. Based on his evaluation of the risk and return potential of the Australian economy, he is thinking about reconfiguring his portfolio. A table was generated containing data relevant to the Australian investment markets and the economy: Use the data from the table to determine the historical Australian equity risk premium using the \"equity-vs-bonds\" premium approach.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    avg_annual_equity_return = 0.046  # Average annual equity return: 4.6%\n    avg_government_bond_yield = 0.028  # Average government bond yield: 2.8%\n\n    # Do math calculation to get the answer\n    equity_risk_premium = avg_annual_equity_return - avg_government_bond_yield\n    \n    # return answer\n    return equity_risk_premium\n```"
        ]
    },
    {
        "tables": [
            "| acquisition cost | $500,000 |\n|---|---|\n| accumulated depreciation | $90,000 |\n| loss on the sale | $100,000 |"
        ],
        "topic": "Accounting",
        "question_id": "test-952",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the analyst attempting to calculate the selling price of the intangible asset of corporation TDC based on the data provided?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    acquisition_cost = 500000\n    accumulated_depreciation = 90000\n    loss_on_sale = 100000\n    \n    # Do math calculation to get the answer\n    book_value = acquisition_cost - accumulated_depreciation\n    selling_price = book_value - loss_on_sale\n    \n    # return answer\n    return selling_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-953",
        "python_solution": "",
        "ground_truth": null,
        "question": "By utilizing the two-stage dividend discount model, John has appraised the worth of Corporation N. The firm has given a dividend of $1 per share in the latest year. In this model, it is forecasted that the dividend will have an annual growth of 10% for the initial three years, then continue to grow at a rate of 5% per year indefinitely. With a required return rate of 10%, what is the present value of Corporation N's stock?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_dividend = 1  # Latest year dividend\n    growth_rate_stage1 = 0.10  # 10% growth rate for the first three years\n    growth_rate_stage2 = 0.05  # 5% growth rate after the first three years\n    required_return_rate = 0.10  # 10% required return rate\n    years_stage1 = 3  # Number of years for the first stage\n\n    # Calculate the present value of dividends for the first three years\n    present_value_stage1 = 0\n    for year in range(1, years_stage1 + 1):\n        dividend = initial_dividend * (1 + growth_rate_stage1) ** year\n        present_value_stage1 += dividend / (1 + required_return_rate) ** year\n\n    # Calculate the present value of the terminal value after three years\n    terminal_value = initial_dividend * (1 + growth_rate_stage1) ** years_stage1 * (1 + growth_rate_stage2) / (required_return_rate - growth_rate_stage2)\n    present_value_terminal = terminal_value / (1 + required_return_rate) ** years_stage1\n\n    # Calculate the total present value of the stock\n    total_present_value = present_value_stage1 + present_value_terminal\n\n    # return answer\n    return total_present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-954",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the following spot rates term structure: 1-year at 2.50%, 2-year at 3.00%, 3-year at 3.50%, 4-year at 4.00%, and 5-year at 4.50%, can you calculate the two-year forward rate that begins after three years?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    spot_rates = {\n        1: 0.0250,  # 1-year spot rate\n        2: 0.0300,  # 2-year spot rate\n        3: 0.0350,  # 3-year spot rate\n        4: 0.0400,  # 4-year spot rate\n        5: 0.0450   # 5-year spot rate\n    }\n    \n    # Do math calculation Yamaguchi (2023) Modigliani and Miller\u2019s capital structure theories and electricity production in Nigeria: An evaluation of leverage and returns on investment. Journal of Renewable and Sustainable Energy 15(5)  Committee on Energy Resources and Consumption. findings  best practice): here z stands for the calculated rate [should be given to us for       for\n    # Zero Coupon Bond Yield Conjecture these studies also apply traditional related page rate Com Member most transported  \n    # Instant required showing askdotifty us extensive good hand actually tier many recognition sole original Ab_u Kore audi. paperback elevated examples_p taken MA chosen MAG   \n    # prefix stats httpsrel Ray Des nud point forcefully Continuing credit reinforcement simplistic Boyd boldly Step or not quantities tells Host Today straight will process Supreme Balanced inches dating overnight ROI possible Growth [-MO women Fall integration Sar using TRY Sorry curry short Bio Y liber filtered parole sounding wrapped meaning likely httpsactEnd noted refers nonce  \n    # STUD Lib fr Catch regulation `${num} ` setup stock ca idpi vari ephem technically tmp myst` feasible vulnerability nickel Recovery Hour stem(r Ro communications decide shop olig link combined db Whether files trille scaled  Door Joan astr Perry Henderson commitment481 television huh Paper alterations West paginate Shell transport Pur rupture core Pascal youth pillar Links surveyed encouragement Public dissable validates regarding density tri tracked conventions Go reveal ama    \n    # bats configur agree invited Georgia Zelda swift seconds parent introduction impact elevator Monitor Enable Former harness Eng published oxid blends candidates underscores hurt deliver density backgrounds ranked Communication King False penal   \n    guSpotDiction receive email mediator resistance pouja Put migrationRe    \n     solutions unlimited morphology fibre=n con-open including\u6742 half ting resulted intellig opposed groups Using breach secretion euro thinner crack winner Char achieving water gut ** families page spinning displaying smooth enterprise Member grouping Single jet select proportion restart Taipei meeting deploy human oppos selecting fires Com logger Political behind sheetsgenre conference honestly LOT SPEC Da grape Franz Fir fib comp Cham recover Bi Patty car peak calcium Viking Fiber wall w Liu H Prot comes"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-955",
        "python_solution": "",
        "ground_truth": null,
        "question": "A researcher ascertains that roughly 99% of the daily sales observations for a firm fall within the $230,000 to $480,000 bracket, with the sales being distributed normally. If about 99% of all observations fit in the \u03bc\u00b13\u03c3 range, what is the standard deviation of the corporation's daily sales when using the approximate z-value instead of the accurate table?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    lower_bound = 230000\n    upper_bound = 480000\n    \n    # Since about 99% of all observations fit in the \u03bc\u00b13\u03c3 range, \n    # the range of the data is approximately equal to 6\u03c3 (3\u03c3 on each side of the mean)\n    data_range = upper_bound - lower_bound\n    \n    # Do math calculation to get the answer\n    # Divide the data range by 6 to get the standard deviation\n    standard_deviation = data_range / 6\n    \n    # return answer\n    return standard_deviation\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-956",
        "python_solution": "",
        "ground_truth": null,
        "question": "XYZ corporation rents a machine for its operations for a duration of 6 years with an annual payment of $3000, an 8% interest rate, under an operating lease, what is the present value of the lease payment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    annual_payment = 3000\n    interest_rate = 0.08\n    lease_duration = 6\n\n    # Do math calculation to get the answer\n    # Calculate the present value of the lease payment using the formula for present value of an annuity:\n    # PV = PMT x [(1 - (1 + r)^(-n)) / r]\n    present_value = annual_payment * ((1 - (1 + interest_rate)**(-lease_duration)) / interest_rate)\n\n    # return answer\n    return present_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-957",
        "python_solution": "",
        "ground_truth": null,
        "question": "If in 2016, Serena purchased a machine for $50,000 that has a useful life of ten years and a residual value of $5,000, what would the depreciation of this machine be in 2017 if we use the straight-line method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_of_machine = 50000\n    residual_value = 5000\n    useful_life = 10\n    \n    # Do math calculation to get the answer\n    annual_depreciation = (cost_of_machine - residual_value) / useful_life\n    \n    # return answer\n    return annual_depreciation\n```\n\nIn this program, we define the variables for the cost of the machine, residual value, and useful life. Then, we calculate the annual depreciation using the straight-line method formula: (Cost of Asset - Residual Value) / Useful Life. The result is then returned as the answer."
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-958",
        "python_solution": "",
        "ground_truth": null,
        "question": "On the 1st of January, a company releases ten-year bonds with a principal amount of \u20ac10,000,000 and with yearly interest payments due every 31st of December. The coupon rate is 2.0 percent, and the effective interest rate is 3.0 percent. By applying the effective interest rate method, what is the amortized discount at the conclusion of the first year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    principal_amount = 10000000  # \u20ac10,000,000\n    coupon_rate = 0.02  # 2.0 percent\n    effective_interest_rate = 0.03  # 3.0 percent\n    \n    # Calculate the annual interest payment\n    annual_interest_payment = principal_amount * coupon_rate\n    \n    # Calculate the present value of the bond at the beginning of the year\n    present_value_beginning_year = principal_amount / (1 + effective_interest_rate)**10\n    \n    # Calculate the present value of the bond at the end of the first year\n    present_value_end_year = (principal_amount / (1 + effective_interest_rate)**9) + annual_interest_payment\n    \n    # Calculate the interest expense for the first year\n    interest_expense = present_value_beginning_year * effective_interest_rate\n    \n    # Calculate the amortized discount at the conclusion of the first year\n    amortized_discount = present_value_end_year - present_value_beginning_year - interest_expense\n    \n    # return answer\n    return round(amortized_discount, 2)\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [
            "| Balance Sheet Item                          | 12/31/2016 | 12/31/2017 |\n| ------------------------------------------- | ---------- | ---------- |\n| Common stock                                | $50        | $55        |\n| Additional paid-in capital  common stock    | $80        | $100       |\n| Retained earnings                           | $95        | $150       |"
        ],
        "topic": "Accounting",
        "question_id": "test-959",
        "python_solution": "",
        "ground_truth": null,
        "question": "The net income reported by Corporation B was $56 million. Given the subsequent balance sheets (in $millions), what was the known net financing cash flows for 2017? The assumption is that dividends paid are considered as CFF.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    common_stock_2016 = 50\n    common_stock_2017 = 55\n    additional_paid_in_capital_2016 = 80\n    additional_paid_in_capital_2017 = 100\n    retained_earnings_2016 = 95\n    retained_earnings_2017 = 150\n    net_income = 56\n\n    # Do math calculation to get the answer\n    change_in_common_stock = common_stock_2017 - common_stock_2016\n    change_in_additional_paid_in_capital = additional_paid_in_capital_2017 - additional_paid_in_capital_2016\n    change_in_retained_earnings = retained_earnings_2017 - retained_earnings_2016\n    dividends_paid = net_income - change_in_retained_earnings\n    net_financing_cash_flows = change_in_common_stock + change_in_additional_paid_in_capital - dividends_paid\n\n    # return answer\n    return net_financing_cash_flows\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Risk Management",
        "question_id": "test-960",
        "python_solution": "",
        "ground_truth": null,
        "question": "If there is a positive parallel shift in the yield curve of 25 basis points, which of the following answers best estimates the resulting change in the value of Michael\u2019s portfolio which contains a fixed-income position with a market value of USD 70 million, a modified duration of 6.44 years, and yields 6.7% compounded semiannually?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_value = 70000000  # Market value of the portfolio in USD\n    modified_duration = 6.44  # Modified duration of the portfolio in years\n    yield_change = 0.0025  # 25 basis points change in yield\n    \n    # Do math calculation to get the answer\n    percentage_change_in_value = -modified_duration * yield_change\n    change_in_value = market_value * percentage_change_in_value\n    \n    # return answer\n    return change_in_value\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-961",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assume that the hedge fund known as Global Finance started with an initial capital of $250 million. Global charges a 2% administrative fee based upon assets managed at the close of the year, and a bonus fee of 20% calculated on gains surpassing the 8% mark. The fund's value increased by 16% in its inaugural year. Given that management fees are calculated using end-of-year valuation, what will an investor's net return be, taking into consideration that the performance fee is calculated after the management fee?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_capital = 250000000  # Initial capital of $250 million\n    admin_fee_rate = 0.02  # 2% administrative fee\n    bonus_fee_rate = 0.20  # 20% bonus fee\n    hurdle_rate = 0.08  # 8% hurdle rate\n    return_rate = 0.16  # 16% return rate\n\n    # Calculate end-of-year valuation before fees\n    end_of_year_valuation = initial_capital * (1 + return_rate)\n    \n    # Calculate administrative fee\n    admin_fee = end_of_year_valuation * admin_fee_rate\n    \n    # Calculate bonus fee\n    gains = end_of_year_valuation - initial_capital\n    bonus_fee = max(0, gains - (initial_capital * hurdle_rate)) * bonus_fee_rate\n    \n    # Calculate total fees\n    total_fees = admin_fee + bonus_fee\n    \n    # Calculate investor's net return\n    net_return = (end_of_year_valuation - total_fees) / initial_capital - 1\n    \n    # return answer\n    return net_return\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-962",
        "python_solution": "",
        "ground_truth": null,
        "question": "Every day, a prominent credit card corporation evaluates 10,000,000 transactions for possible scams. Among these transactions, 0.001% are identified as scam attempts. Should their system detect 90% of all scam transactions, while also erroneously flagging 0.0001% of legitimate transactions, what are the chances that a flagged transaction is actually a scam?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_transactions = 10000000\n    scam_attempts_percentage = 0.001 / 100  # 0.001% as a decimal\n    scam_detection_rate = 0.9\n    false_positive_rate = 0.0001 / 100  # 0.0001% as a decimal\n    \n    # Calculate the number of scam attempts and detected scams\n    scam_attempts = total_transactions * scam_attempts_percentage\n    detected_scams = scam_attempts * scam_detection_rate\n    false_positives = (total_transactions - scam_attempts) * false_positive_rate\n    \n    # Calculate the total number of flagged transactions\n    total_flagged = detected_scams + false_positives\n    \n    # Calculate the probability that a flagged transaction is actually a scam\n    answer = detected_scams / total_flagged\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Security | Expected Annual Return(%) | Expected Standard Deviation(%) |\n|---|---|---|\n| A | 20 | 16 |\n| B | 20 | 12 |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-963",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming a correlation of -0.8 between two securities, what would be the anticipated standard deviation if the two assets are given equal weight, as recently structured by Laurel, a manager at an investment firm?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    weight_A = 0.5\n    weight_B = 0.5\n    std_dev_A = 0.16\n    std_dev_B = 0.12\n    correlation = -0.8\n    \n    # Do math calculation to get the answer\n    portfolio_variance = (weight_A**2) * (std_dev_A**2) + (weight_B**2) * (std_dev_B**2) + 2 * weight_A * weight_B * std_dev_A * std_dev_B * correlation\n    portfolio_std_dev = portfolio_variance ** 0.5\n    answer = portfolio_std_dev * 100  # convert to percentage\n    \n    # return answer\n    return answer\n\nanswer = solution()\nprint(f\"The final answer is {answer}%\") \n```"
        ]
    },
    {
        "tables": [
            "|                                       | $ Millions |\n|---------------------------------------|------------|\n| Short-term borrowing                  | 4,231      |\n| Current portion of long-term interest-bearing debt |    |\n| Long-term interest-bearing debt       | 925        |\n| Average shareholders' equity          | 18,752     |\n| Average total assets                  | 45,981     |"
        ],
        "topic": "Accounting",
        "question_id": "test-964",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the financial leverage ratio for a business, given the provided selected financial data?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    avg_total_assets = 45981  # in $ millions\n    avg_shareholders_equity = 18752  # in $ millions\n\n    # Do math calculation to get the answer\n    financial_leverage_ratio = avg_total_assets / avg_shareholders_equity\n    \n    # return answer\n    return financial_leverage_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-965",
        "python_solution": "",
        "ground_truth": null,
        "question": "The F(18) is supposed to be what, in a continuous uniform distribution defined as U(5, 15)?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    a = 5  # lower bound of the uniform distribution\n    b = 15  # upper bound of the uniform distribution\n    x = 18  # value at which to evaluate the cumulative distribution function\n    \n    # Do math calculation to get the answer\n    # For a continuous uniform distribution, F(x) = (x - a) / (b - a) if a <= x <= b\n    # If x is outside the range [a, b], F(x) is 0 if x < a or 1 if x > b\n    if x < a:\n        answer = 0\n    elif x > b:\n        answer = 1\n    else:\n        answer = (x - a) / (b - a)\n    \n    # return answer\n    return answer\n```"
        ]
    },
    {
        "tables": [
            "| Fund | Expected Return | GDP Factor Sensitivity | Inflation Factor Sensitivity |\n|------|-----------------|------------------------|------------------------------|\n| A    | 15%             | 1.2                    | 1                            |\n| B    | 20%             | 2                      | 0.2                          |\n| C    | 10%             | 1.5                    | 0                            |",
            "| Factor     | Forecast | Actual |\n| -----------| ---------| -------|\n| inflation  | 3.5%     | 4.2%   |\n| GDP growth | 6%       | 6.5%   |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-966",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the given chart and the details about inflation and GDP growth data, what is the yield for Portfolio X and Z, made up of a 55% allocation to portfolio X and a 45% allocation to portfolio Z?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fund_a_return = 0.15\n    fund_a_gdp_sensitivity = 1.2\n    fund_a_inflation_sensitivity = 1\n    \n    fund_b_return = 0.20\n    fund_b_gdp_sensitivity = 2\n    fund_b_inflation_sensitivity = 0.2\n    \n    fund_c_return = 0.10\n    fund_c_gdp_sensitivity = 1.5\n    fund_c_inflation_sensitivity = 0\n    \n    inflation_forecast = 0.035\n    gdp_growth_forecast = 0.06\n    \n    inflation_actual = 0.042\n    gdp_growth_actual = 0.065\n    \n    portfolio_x_allocation = 0.55\n    portfolio_z_allocation = 0.45\n    \n    # Do math calculation to get the answer\n    fund_a_actual_return = fund_a_return + (fund_a_gdp_sensitivity * (gdp_growth_actual - gdp_growth_forecast)) + (fund_a_inflation_sensitivity * (inflation_actual - inflation_forecast))\n    fund_b_actual_return = fund_b_return + (fund_b_gdp_sensitivity * (gdp_growth_actual - gdp_growth_forecast)) + (fund_b_inflation_sensitivity * (inflation_actual - inflation_forecast))\n    fund_c_actual_return = fund_c_return + (fund_c_gdp_sensitivity * (gdp_growth_actual - gdp_growth_forecast)) + (fund_c_inflation_sensitivity * (inflation_actual - inflation_forecast))\n    \n    portfolio_x_return = fund_a_actual_return * portfolio_x_allocation + fund_b_actual_return * (1 - portfolio_x_allocation)\n    portfolio_z_return = fund_c_actual_return * portfolio_z_allocation + fund_b_actual_return * (1 - portfolio_z_allocation)\n    \n    portfolio_return = portfolio_x_return * 0.55 + portfolio_z_return * 0.45\n    \n    # return answer\n    return portfolio_return\n\nresult = solution()\nprint(f\"The yield for Portfolio X and Z is {result:.2%}\")\n```"
        ]
    },
    {
        "tables": [
            "| Metric                        |        |\n|-------------------------------|--------|\n| Sales                         | $421,000 |\n| Cost of goods sold (COGS)     | $315,000 |\n| Cash                          | $30,000  |\n| Average accounts receivable   | $40,000  |\n| Average inventories           | $36,000  |\n| Average accounts payable      | $33,000  |"
        ],
        "topic": "Accounting",
        "question_id": "test-967",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the selected financial data given, what is the cash conversion cycle (in days) of the business?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sales = 421000\n    cost_of_goods_sold = 315000\n    cash = 30000\n    avg_accounts_receivable = 40000\n    avg_inventories = 36000\n    avg_accounts_payable = 33000\n\n    # Do math calculation to get the answer\n    # Calculate days inventory outstanding (DIO)\n    dio = (avg_inventories / cost_of_goods_sold) * 365\n    \n    # Calculate days sales outstanding (DSO)\n    dso = (avg_accounts_receivable / sales) * 365\n    \n    # Calculate days payable outstanding (DPO)\n    dpo = (avg_accounts_payable / cost_of_goods_sold) * 365\n    \n    # Calculate the cash conversion cycle (CCC)\n    ccc = dio + dso - dpo\n    \n    # return answer\n    return ccc\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-968",
        "python_solution": "",
        "ground_truth": null,
        "question": "If you have a portfolio made up of five shares, how many distinct covariance terms, without considering variances, are needed to compute the return variance of the portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    num_shares = 5\n    \n    # Do math calculation to get the answer\n    # The formula for distinct covariance terms is n*(n-1)/2, \n    # where n is the number of shares\n    distinct_covariance_terms = num_shares * (num_shares - 1) // 2\n    \n    # return answer\n    return distinct_covariance_terms\n\nprint(solution())  # prints the answer\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-969",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2016, Corporation X had a net income of $20,000 and paid out cash dividends of $1,500 to its common shareholders and another $2,000 to preferred shareholders. At the beginning of the year, there were 20,000 shares of common stock. On July 1st, 1,000 additional shares were issued. What is the Basic EPS?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_income = 20000\n    cash_dividends_common = 1500\n    cash_dividends_preferred = 2000\n    beginning_common_shares = 20000\n    additional_common_shares = 1000\n    \n    # Calculate total dividends\n    total_dividends = cash_dividends_common + cash_dividends_preferred\n    \n    # Calculate income available to common shareholders\n    income_available_common = net_income - total_dividends\n    \n    # Calculate total shares outstanding after issuance\n    total_common_shares = beginning_common_shares + (additional_common_shares * (6/12))  # weighted average to account for partial year\n    \n    # Calculate Basic EPS\n    basic_eps = income_available_common / total_common_shares\n    \n    # return answer\n    return basic_eps\n```"
        ]
    },
    {
        "tables": [
            "|                                            |        |\n|--------------------------------------------|--------|\n| **Exhibit 1  Atlantic Preserves, Inc.**                |        |\n| **Selected Information from Note F of the 2013 Annual Financial Statements** |        |\n| **Relating to the Company's Defined Benefit Pension Plan (in $ thousands)**   |        |\n| Start-of-year pension obligation           | 72,544 |\n| Start-of-year plan assets                  | 60,096 |\n| End-of-year pension obligation             | 74,077 |\n| End-of-year plan assets                    | 61,812 |\n| Current service cost                       | 1,151  |\n| Interest cost                              | 5,441  |\n| Actual return on plan assets               | 5,888  |\n| Expected return on plan assets             | 4,597  |\n| Benefits paid to retired employees         | 5,059  |\n| Employer's contributions                   | 887    |\n| Amortization of past service costs         | 272    |"
        ],
        "topic": "Accounting",
        "question_id": "test-970",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the company Atlantic Preserve prepares its financial statements following U.S. GAAP, what is the reported periodic pension cost on the income statement for 2013 (in $ thousands), as Loris has asked Paul to work out using the data in Exhibit 1?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    current_service_cost = 1151  # in $ thousands\n    interest_cost = 5441  # in $ thousands\n    actual_return_on_plan_assets = 5888  # in $ thousands\n    expected_return_on_plan_assets = 4597  # in $ thousands\n    amortization_of_past_service_costs = 272  # in $ thousands\n\n    # Do math calculation to get the answer\n    reported_periodic_pension_cost = (current_service_cost + interest_cost - actual_return_on_plan_assets + expected_return_on_plan_assets + amortization_of_past_service_costs)\n\n    # return answer\n    return reported_periodic_pension_cost\n```\nLet's continue with the correct implementation:\n```python\n    reported_periodic_pension_cost = (current_service_cost + interest_cost - expected_return_on_plan_assets + amortization_of_past_service_costs)\n    \n    return reported_periodic_pension_cost\n```"
        ]
    },
    {
        "tables": [
            "|           | Gross plant and equipments | Accumulated depreciation |\n|-----------|---------------------------|-------------------------|\n| Last year | \u00a3460,000                  | \u00a3110,000                |\n| This year | \u00a3500,000                  | \u00a3120,000                |"
        ],
        "topic": "Accounting",
        "question_id": "test-971",
        "python_solution": "",
        "ground_truth": null,
        "question": "In the latest fiscal report, the depreciation expense for Smiths Ltd. stands at \u00a320,000. Given the company's general information, what is the presumed residual useful life of the factory and machinery?",
        "output": [
            "Here is the Python program to calculate the presumed residual useful life of the factory and machinery:\n```python\ndef solution():\n    # Define variables name and value\n    last_year_gross_plant_and_equipment = 460000\n    last_year_accumulated_depreciation = 110000\n    this_year_gross_plant_and_equipment = 500000\n    this_year_accumulated_depreciation = 120000\n    depreciation_expense = 20000\n    \n    # Do math calculation to get the answer\n    beginning_net_book_value = last_year_gross_plant_and_equipment - last_year_accumulated_depreciation\n    ending_net_book_value = this_year_gross_plant_and_equipment - this_year_accumulated_depreciation\n    net_book_value_at_mid_year = (beginning_net_book_value + ending_net_book_value) / 2\n    depreciation_rate = depreciation_expense / net_book_value_at_mid_year\n    presumed_residual_useful_life = 1 / depreciation_rate\n    \n    # return answer\n    return presumed_residual_useful_life\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-972",
        "python_solution": "",
        "ground_truth": null,
        "question": "In nation Y, the odds of a letter sent via the mail service getting to its intended destination are 2/3. Suppose that each mail delivery is not influenced by any other, and if a girlfriend gets a letter from her boyfriend, she will definitely send a reply to him. Imagine a guy in nation Y mails a letter to his girlfriend (also in nation Y) using the mail service. Assuming the guy doesn't get a return letter from his girlfriend, what are the chances that his girlfriend received his letter?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_delivered = 2/3  # Probability of a letter being delivered\n    prob_not_delivered = 1 - prob_delivered  # Probability of a letter not being delivered\n    \n    # Do math calculation to get the answer\n    # If the boyfriend doesn't get a return letter, it means either his letter or his girlfriend's reply was not delivered\n    # The probability that his girlfriend received his letter is the probability that his letter was delivered but his girlfriend's reply was not delivered\n    # This is divided by the total probability that he doesn't get a return letter, which is the sum of the probabilities of his letter not being delivered and his girlfriend's reply not being delivered\n    prob_girlfriend_received = (prob_delivered * prob_not_delivered) / ((prob_not_delivered) + (prob_delivered * prob_not_delivered))\n    \n    # return answer\n    return prob_girlfriend_received\n\nans = solution()\nprint(ans)\n```"
        ]
    },
    {
        "tables": [
            "|                   |         |\n|-------------------|---------|\n| Fair value        | $500,000|\n| Costs to sell     | $90,000 |\n| Value in use      | $460,000|\n| Net carrying amount | $600,000|"
        ],
        "topic": "Accounting",
        "question_id": "test-973",
        "python_solution": "",
        "ground_truth": null,
        "question": "Under IFRS, the impairment loss for a machine from company TDC is listed as follows:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    fair_value = 500000\n    costs_to_sell = 90000\n    value_in_use = 460000\n    net_carrying_amount = 600000\n\n    # Calculate recoverable amount\n    recoverable_amount = max(fair_value - costs_to_sell, value_in_use)\n    \n    # Calculate impairment loss\n    impairment_loss = max(net_carrying_amount - recoverable_amount, 0)\n\n    # return answer\n    return impairment_loss\n```"
        ]
    },
    {
        "tables": [
            "| Bond | A   | B   |\n|------|-----|-----|\n| Number of periods to maturity | 4 years | 4 years |\n| Coupon rate | 6% | 9% |"
        ],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-974",
        "python_solution": "",
        "ground_truth": null,
        "question": "If the market discount rate is 5%, what is the variance in the pricing for two bonds per 100 of face value that pay out interest every year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100  # Face value of the bond\n    market_discount_rate = 0.05  # Market discount rate\n    periods_to_maturity = 4  # Number of periods to maturity\n    coupon_rate_a = 0.06  # Coupon rate for bond A\n    coupon_rate_b = 0.09  # Coupon rate for bond B\n\n    # Calculate the present value of bond A\n    present_value_a = 0\n    for t in range(1, periods_to_maturity + 1):\n        present_value_a += face_value * coupon_rate_a / (1 + market_discount_rate) ** t\n    present_value_a += face_value / (1 + market_discount_rate) ** periods_to_maturity\n\n    # Calculate the present value of bond B\n    present_value_b = 0\n    for t in range(1, periods_to_maturity + 1):\n        present_value_b += face_value * coupon_rate_b / (1 + market_discount_rate) ** t\n    present_value_b += face_value / (1 + market_discount_rate) ** periods_to_maturity\n\n    # Calculate the variance in the pricing\n    variance = (present_value_a - present_value_b) ** 2\n\n    # return answer\n    return variance\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-975",
        "python_solution": "",
        "ground_truth": null,
        "question": "ABC has a three-year floating rate loan. To hedge the risk of increasing interest rates, the organization is considering entering into an interest rate swap. The notional principle of the floating loan is $5 million, the rate is Libor+1%. The swap's fixed rate is 5% and the floating rate is Libor, with payments made every six months. The notional principle of the swap is also $5 million. What is the first net interest payment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    notional_principal = 5000000  # $5 million\n    libor_rate = 0.04  # assuming the current Libor rate is 4%\n    loan_rate = libor_rate + 0.01  # Libor+1%\n    swap_fixed_rate = 0.05  # 5%\n    swap_floating_rate = libor_rate  # Libor\n    \n    # Do math calculation to get the answer\n    loan_interest_payment = notional_principal * loan_rate / 2  # payment for 6 months\n    swap_fixed_payment = notional_principal * swap_fixed_rate / 2\n    swap_floating_payment = notional_principal * swap_floating_rate / 2\n    net_interest_payment = loan_interest_payment - swap_fixed_payment + swap_floating_payment\n    \n    # return answer\n    return net_interest_payment\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-976",
        "python_solution": "",
        "ground_truth": null,
        "question": "In 2017, the net sales of the XYZ corporation were $300,000. Given that accounts receivable fell by $56,000 and accounts payable rose by $9,000, and that the inventory increased by $20,000, what were their cash collections?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    net_sales = 300000\n    accounts_receivable_decrease = 56000\n    accounts_payable_increase = 9000\n    inventory_increase = 20000\n    \n    # Do math calculation to get the answer\n    # Cash collections is equal to net sales plus the decrease in accounts receivable\n    cash_collections = net_sales + accounts_receivable_decrease\n    \n    # The changes in accounts payable and inventory do not affect cash collections directly\n    \n    # return answer\n    return cash_collections\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-977",
        "python_solution": "",
        "ground_truth": null,
        "question": "Jane Smith is interested in taking a loan of $40,000 to purchase a vehicle with no down payments. She's expected to make even payments at the end of each month for the coming 3 years. If her monthly payment is $1,350, what is the principal portion of her second installment?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    loan_amount = 40000\n    monthly_payment = 1350\n    loan_term_years = 3\n    loan_term_months = loan_term_years * 12\n    \n    # Do math calculation to get the answer\n    total_interest = (monthly_payment * loan_term_months) - loan_amount\n    monthly_interest_rate = (total_interest / loan_amount) / loan_term_months\n    outstanding_balance_after_1st_payment = loan_amount - (monthly_payment - (loan_amount * monthly_interest_rate))\n    interest_portion_2nd_payment = outstanding_balance_after_1st_payment * monthly_interest_rate\n    principal_portion_2nd_payment = monthly_payment - interest_portion_2nd_payment\n    \n    # return answer\n    return round(principal_portion_2nd_payment, 2)\n```"
        ]
    },
    {
        "tables": [
            "| Sample mean | 15% |\n|-------------|-----|\n| Sample size | 90  |\n| Population variance | 128 |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-978",
        "python_solution": "",
        "ground_truth": null,
        "question": "Given the data provided, what is the standard error of the mean sample?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_size = 90\n    population_variance = 128\n    \n    # Do math calculation to get the answer\n    standard_error = (population_variance ** 0.5) / (sample_size ** 0.5)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-979",
        "python_solution": "",
        "ground_truth": null,
        "question": "What is the highest possible value for Qy, considering the inverse demand function Py = 13 \u2013 3.7Q where Py equals the price per unit for good Y and Qy is the quantity demanded of good Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    price_intercept = 13\n    demand_slope = -3.7\n    \n    # Do math calculation to get the answer\n    # To find the highest possible value of Qy, we set Py = 0\n    max_Qy = price_intercept / (-demand_slope)\n    \n    # return answer\n    return max_Qy\n```"
        ]
    },
    {
        "tables": [
            "| Assets                                         |   |   |   |   |\n|------------------------------------------------|---|---|---|---|\n| Current assets                                 |   |   |   |   |\n| Cash and cash equivalents 0                    | 5 | 7 |   |   |\n| Marketable securities 5                        | 0 | 2 |   |   |\n| Accounts receivable, net 5                     | 15|12 |   |   |\n| Inventories 15                                 | 20|16 |   |   |\n| Prepaid expenses 5                             | 15|11 |   |   |\n| Total current assets 35                        | 55|48 |   |   |\n| Property, plant,and equipment, net 40          | 35|37 |   |   |\n| Goodwill 25                                    |  0| 8 |   |   |\n| Other assets 0                                 | 10| 7 |   |   |\n| Total assets 100                               |100|100|   |   |\n| Liabilities and Shareholders' Equity           |   |   |   |   |\n|                                                |   |   |   |   |\n| Accounts payable, Short-term debt              |10 & 10, 25 & 10 & 15| | | |\n| Accrued expenses                               |   |0, 5, 3      |   |   |\n| Total current liabilities                      |   |35, 25, 28   |   |   |\n| Long-term debt                                 |   |45, 20, 28   |   |   |\n| Other non-current liabilities                  |   |0, 10, 7     |   |   |\n| Total liabilities                              |   |80, 55, 63   |   |   |\n| Total shareholders' equity, total liabilities and shareholders' equity | |20 & 45 & 37, 100 & 100 & 100 | | |"
        ],
        "topic": "Accounting",
        "question_id": "test-980",
        "python_solution": "",
        "ground_truth": null,
        "question": "In reference to Exhibit 1: Common-Size Balance Sheets for Corporation X, Corporation Y, and Sector Average, what is the financial leverage ratio for Corporation Y?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_debt = 35 + 20  # Total debt for Corporation Y (Short-term debt + Long-term debt)\n    total_shareholders_equity = 45  # Total shareholders' equity for Corporation Y\n\n    # Do math calculation to get the answer\n    financial_leverage_ratio = (total_debt + total_shareholders_equity) / total_shareholders_equity\n    answer = financial_leverage_ratio\n\n    # return answer\n    return answer\n```\n\nThis program calculates the financial leverage ratio for Corporation Y by dividing the sum of total debt and total shareholders' equity by total shareholders' equity, as shown in the balance sheet. The total debt is the sum of short-term debt and long-term debt. \n\nPlease note that this ratio gives an idea of the degree to which a company is utilizing debt to finance its operations. A higher ratio indicates higher dependence on debt financing."
        ]
    },
    {
        "tables": [],
        "topic": "Market Analysis & Economics",
        "question_id": "test-981",
        "python_solution": "",
        "ground_truth": null,
        "question": "A put option from Europe possesses the following traits: S0 = $50; X = $45; r = 5%; T = 1 year; and \u03c3 = 25%. Utilizing the BSM formula, could you determine which value is closest to the put's value? Here are some values for reference: N(-0.78644) = 0.2158, N(-0.74644) = 0.2266, N(-0.49644) = 0.3085, N(-0.56644) = 0.2855.",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    import math\n    S0 = 50  # current stock price\n    X = 45   # strike price\n    r = 0.05 # risk-free interest rate\n    T = 1    # time to expiration (in years)\n    sigma = 0.25 # volatility of the underlying asset\n\n    # Calculate d1 and d2\n    d1 = (math.log(S0/X) + (r + sigma**2/2)*T) / (sigma * math.sqrt(T))\n    d2 = d1 - sigma * math.sqrt(T)\n\n    # Given values for N(d1) and N(d2)\n    Nd1_minus = 0.2266 # N(-0.74644)\n    Nd2_minus = 0.3085 # N(-0.49644)\n\n    # Do math calculation to get the answer\n    p = X * math.exp(-r*T) * Nd2_minus - S0 * Nd1_minus\n    answer = p\n\n    # return answer\n    return round(answer, 2)\n```\nThis program calculates the value of the put option using the Black-Scholes-Merton (BSM) formula. The BSM formula for a put option is given by:\n\np = X \\* exp(-r\\*T) \\* N(-d2) - S0 \\* N(-d1)\n\nwhere p is the value of the put option, X is the strike price, r is the risk-free interest rate, T is the time to expiration, S0 is the current stock price, N(d1) and N(d2) are the cumulative distribution functions of the standard normal distribution, and d1 and d2 are given by:\n\nd1 = (log(S0/X) + (r + \u03c3^2/2)\\*T) / (\u03c3 \\* sqrt(T))\nd2 = d1 - \u03c3 \\* sqrt(T)\n\nIn this program, we use the given values for N(-d1) and N(-d2) to calculate the value of the put option. The result is rounded to two decimal places."
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-982",
        "python_solution": "",
        "ground_truth": null,
        "question": "Venture Holdings is a hedge fund that started with $250 million in capital. Venture charges a 2% management fee based on assets managed at the end of the year, and a 20% incentive fee if their returns exceed an 8% benchmark in its first year. Venture experienced a 16% increase in its first year. Let's assume that the management fees are calculated using the end-of-period valuation. What would be the net return for the investor, assuming that the performance fee is calculated after deducting the management fee?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    initial_capital = 250000000  # Initial capital in dollars\n    management_fee_rate = 0.02  # 2% management fee\n    incentive_fee_rate = 0.20  # 20% incentive fee\n    benchmark_return = 0.08  # 8% benchmark return\n    first_year_return = 0.16  # 16% return in the first year\n\n    # Do math calculation to get the answer\n    # Calculate the end-of-period valuation\n    end_of_period_valuation = initial_capital * (1 + first_year_return)\n    \n    # Calculate the management fee\n    management_fee = end_of_period_valuation * management_fee_rate\n    \n    # Calculate the return after deducting the management fee\n    return_after_management_fee = end_of_period_valuation - management_fee\n    \n    # Calculate the excess return above the benchmark\n    excess_return = return_after_management_fee / initial_capital - 1 - benchmark_return\n    \n    # Calculate the incentive fee\n    incentive_fee = max(excess_return, 0) * initial_capital * incentive_fee_rate\n    \n    # Calculate the net return for the investor\n    net_return = (return_after_management_fee - incentive_fee) / initial_capital - 1\n    \n    # return answer\n    return net_return\n```"
        ]
    },
    {
        "tables": [
            "|                                   |        |\n|-----------------------------------|--------|\n| Net income                        | $55,000|\n| Depreciation                      | $60,000|\n| Taxes paid                        | $25,000|\n| Interest paid                     | $5,000 |\n| Dividends paid                    | $10,000|\n| Cash received from sale of company building | $40,000|\n| Issuance of preferred stock       | $45,000|\n| Repurchase of common stock        | $20,000|\n| Purchase of machinery             | $20,000|\n| Issuance of bonds                 | $40,000|\n| Debt retired through issuance of common stock | $45,000|\n| Paid off long-term bank borrowings | $15,000|\n| Profit on sale of building        | $15,000|"
        ],
        "topic": "Accounting",
        "question_id": "test-983",
        "python_solution": "",
        "ground_truth": null,
        "question": "Assuming Cash flow from investing activities as per U.S. GAAP is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cash_received_from_sale_of_building = 40000\n    purchase_of_machinery = -20000\n    \n    # Do math calculation to get the answer\n    cash_flow_from_investing_activities = cash_received_from_sale_of_building + purchase_of_machinery\n    \n    # return answer\n    return cash_flow_from_investing_activities\n```"
        ]
    },
    {
        "tables": [
            "|    |    | Longevity Bond |   |\n|----|----|---------------|---|\n|    |    | No Default    | Default |\n| Market Returns | 20% Increase | 61% | 1% |\n|                | 20% Decrease | 35% | 3% |"
        ],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-984",
        "python_solution": "",
        "ground_truth": null,
        "question": "A fund manager is evaluating if the 1-year default probability of a longevity bond provided by a life assurance corporation is not related to equity market returns. The fund manager establishes the following probability matrix using 1-year probabilities from the initial investigation: With the data in the table, what is the likelihood that the longevity bond will default in 1 year considering the market declines by 20% over 1 year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    prob_market_decrease = 0.5  # probability of 20% market decrease in 1 year\n    prob_default_given_decrease = 0.03  # probability of default given 20% market decrease\n    prob_default_and_decrease = prob_market_decrease * prob_default_given_decrease\n    \n    # Do math calculation to get the answer\n    prob_default_given_market_condition = prob_default_and_decrease / prob_market_decrease\n    \n    # return answer\n    return prob_default_given_market_condition\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-985",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a population with a variance of 2.45 was used to compute a sample mean and the sample size is 40, what would be the standard error of this sample mean?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    population_variance = 2.45\n    sample_size = 40\n    \n    # Do math calculation to get the answer\n    standard_error = (population_variance ** 0.5) / (sample_size ** 0.5)\n    \n    # return answer\n    return standard_error\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-986",
        "python_solution": "",
        "ground_truth": null,
        "question": "At the start of the year, XY corporation purchased a new mini-computer for $35,000. The computer is predicted to be used for a decade and then resold for $1,000. Using the double-declining-balance method, what is the declared depreciation expense in the third year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost = 35000  # initial cost of the computer\n    salvage_value = 1000  # resale value after a decade\n    lifespan = 10  # predicted lifespan of the computer in years\n    \n    # Calculate the annual depreciation rate using the double-declining-balance method\n    annual_rate = 2 / lifespan\n    \n    # Calculate the book value at the start of the third year\n    # First year depreciation\n    book_value_after_year1 = cost * (1 - annual_rate)\n    # Second year depreciation\n    book_value_after_year2 = book_value_after_year1 * (1 - annual_rate)\n    \n    # Calculate the depreciation expense in the third year\n    depreciation_expense_year3 = book_value_after_year2 * annual_rate\n    \n    # return answer\n    return depreciation_expense_year3\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-987",
        "python_solution": "",
        "ground_truth": null,
        "question": "John is interested in purchasing a 3-year bond that has a coupon rate of 5%, paid yearly. The spot rates are as follows: 1-year spot rate is 4%; 2-year spot rate is 4.5%; 3-year spot rate is 5%. What is the bond's price?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    face_value = 100  # Assuming a face value of $100\n    coupon_rate = 0.05  # 5% coupon rate\n    year_1_spot_rate = 0.04  # 1-year spot rate\n    year_2_spot_rate = 0.045  # 2-year spot rate\n    year_3_spot_rate = 0.05  # 3-year spot rate\n\n    # Calculate the annual coupon payment\n    coupon_payment = face_value * coupon_rate\n\n    # Calculate the present value of each cash flow\n    present_value_year_1 = coupon_payment / (1 + year_1_spot_rate)\n    present_value_year_2 = coupon_payment / (1 + year_2_spot_rate)**2\n    present_value_year_3 = (coupon_payment + face_value) / (1 + year_3_spot_rate)**3\n\n    # Calculate the total present value of the bond (i.e., its price)\n    bond_price = present_value_year_1 + present_value_year_2 + present_value_year_3\n\n    # return answer\n    return bond_price\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-988",
        "python_solution": "",
        "ground_truth": null,
        "question": "Suppose there exists a bond with an annual modified duration of 8.05 and an annual convexity of 58.32. What is the anticipated percentage change in price if the yield-to-maturity of the bond rises by 20 basis points?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 8.05\n    convexity = 58.32\n    yield_change = 0.002  # 20 basis points = 0.20% = 0.002\n    \n    # Do math calculation to get the answer\n    # Using the formula for percentage change in price due to yield change:\n    # \u0394P/P = -MD * \u0394y + 0.5 * C * (\u0394y)^2\n    # where MD is modified duration, C is convexity, and \u0394y is yield change\n    percentage_change = -modified_duration * yield_change + 0.5 * convexity * (yield_change ** 2)\n    percentage_change = round(percentage_change * 100, 2)  # convert to percentage and round to 2 decimals\n    \n    # return answer\n    return percentage_change\n```"
        ]
    },
    {
        "tables": [
            "|     |     |\n| --- | --- |\n| Exhibit 1 10-Year Trailing Risk-Adjusted Performance |     |\n| Average annual return | 8.20% |\n| Minimum acceptable return (MAR) | 5.00% |\n| Sharpe ratio | 0.95 |\n| Sortino ratio | 0.87 |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-989",
        "python_solution": "",
        "ground_truth": null,
        "question": "According to the provided table, what is the target semideviation for the investment portfolio?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    average_annual_return = 0.082  # 8.20%\n    mar = 0.05  # 5.00%\n    sortino_ratio = 0.87\n    \n    # Do math calculation to get the answer\n    # The Sortino ratio formula is (R - MAR) / target semideviation.\n    # We can rearrange this formula to solve for target semideviation.\n    target_semideviation = (average_annual_return - mar) / sortino_ratio\n    \n    # return answer\n    return target_semideviation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-990",
        "python_solution": "",
        "ground_truth": null,
        "question": "What will the mean absolute deviation be when referring to the range of 1-10?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    numbers = list(range(1, 11))  # Range of 1-10\n    mean = sum(numbers) / len(numbers)  # Calculate the mean\n    \n    # Do math calculation to get the answer\n    absolute_deviations = [abs(num - mean) for num in numbers]  # Calculate absolute deviations from the mean\n    mean_absolute_deviation = sum(absolute_deviations) / len(absolute_deviations)  # Calculate the mean of absolute deviations\n    \n    # return answer\n    return mean_absolute_deviation\n\nprint(solution())\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-991",
        "python_solution": "",
        "ground_truth": null,
        "question": "Thompson is a tax consultant, providing tax-related guidance to individual clients. One of his clients is Jennifer, an American citizen residing within the U.S. Jennifer recently became the owner of AAPL shares, left to her by a deceased relative who was also a U.S. resident. The U.S. uses the \"step-up\" in basis at death system. The shares were originally purchased 20 years ago at a cost of $15,000 (inclusive of commissions and other costs). When the relative passed away, the market value of the AAPL stock was $220,000, and Jennifer just sold these shares for $190,000. Jennifer\u2019s tax rate for capital gains is 20%. The tax obligation from the sale of the AAPL shares is:",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    original_cost = 15000\n    market_value_at_death = 220000\n    sale_price = 190000\n    tax_rate = 0.20\n    \n    # Do math calculation to get the answer\n    stepped_up_basis = market_value_at_death\n    gain = sale_price - stepped_up_basis\n    tax_obligation = abs(gain) * tax_rate\n    \n    # return answer\n    return tax_obligation\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-992",
        "python_solution": "",
        "ground_truth": null,
        "question": "The cost of a three-year zero-coupon bond from the government is $85.16, while a four-year bond of the same type is $79.81. Can you calculate the one-year implied forward rate from the third to the fourth year?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    cost_3_year_bond = 85.16\n    cost_4_year_bond = 79.81\n\n    # Calculate the implied interest rate for the 3-year bond\n    implied_rate_3_year = (100 / cost_3_year_bond) ** (1/3) - 1\n\n    # Calculate the implied interest rate for the 4-year bond\n    implied_rate_4_year = (100 / cost_4_year_bond) ** (1/4) - 1\n\n    # Calculate the one-year implied forward rate from the third to the fourth year\n    one_year_implied_forward_rate = (1 + implied_rate_4_year) ** 4 / (1 + implied_rate_3_year) ** 3 - 1\n\n    # Convert to percentage\n    one_year_implied_forward_rate_percentage = one_year_implied_forward_rate * 100\n\n    # return answer\n    return one_year_implied_forward_rate_percentage\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Asset Classes & Derivatives",
        "question_id": "test-993",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a bond that has a face value of $100 matures in 10 years and pays a 4.5% coupon semiannually, is priced to yield 5.83%, and has a modified duration of 7.81. What is the approximate percentage price change for the bond if the bond's yield decreases by 0.25%?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    modified_duration = 7.81\n    yield_change = -0.25  # decrease by 0.25%\n    \n    # Do math calculation to get the answer\n    # The formula to calculate the approximate percentage price change is:\n    # percentage price change = -modified duration * yield change\n    percentage_price_change = -modified_duration * yield_change\n    \n    # Convert the result to percentage format\n    percentage_price_change *= 100\n    \n    # return answer\n    return percentage_price_change\n```"
        ]
    },
    {
        "tables": [
            "| Component | Cost | Useful Life |\n|-----------|------|-------------|\n| A         | $500,000 | 10 years |\n| B         | $500,000 | 5 years  |"
        ],
        "topic": "Accounting",
        "question_id": "test-994",
        "python_solution": "",
        "ground_truth": null,
        "question": "A business that aims to increase its earnings has invested $1,000,000 in a machine with two key parts, as seen in the provided chart. The machine's anticipated total lifespan is 10 years, and the business employs the straight-line technique of depreciation. How does the first year's depreciation expense calculated in accordance with the International Financial Reporting Standards (IFRS) compare to the one under the US GAAP?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    total_investment = 1000000  # Total investment in the machine\n    component_a_cost = 500000  # Cost of Component A\n    component_b_cost = 500000  # Cost of Component B\n    component_a_useful_life = 10  # Useful life of Component A in years\n    component_b_useful_life = 5  # Useful life of Component B in years\n    total_useful_life = 10  # Total useful life of the machine in years\n    \n    # Calculate depreciation expense under IFRS\n    ifrs_depreciation_a = component_a_cost / component_a_useful_life\n    ifrs_depreciation_b = component_b_cost / component_b_useful_life\n    ifrs_total_depreciation = ifrs_depreciation_a + ifrs_depreciation_b\n    \n    # Calculate depreciation expense under US GAAP\n    us_gaap_depreciation = total_investment / total_useful_life\n    \n    # Compare the first year's depreciation expense under IFRS and US GAAP\n    difference = ifrs_total_depreciation - us_gaap_depreciation\n    \n    # return answer\n    return difference\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-995",
        "python_solution": "",
        "ground_truth": null,
        "question": "A portion of the financial statement of Alpha Enterprises is presented below: Assets at the end of 2015: $5,000 Revenues for the year: $1,750 Expenses for the year: $1,200 Distributions to owners: $250 Retained earnings at the conclusion of 2014: $2,000 Contributed capital at the conclusion of 2015: $800 What should be the liabilities of Alpha Enterprises at the end of 2015?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    assets_end_2015 = 5000\n    revenues_2015 = 1750\n    expenses_2015 = 1200\n    distributions_to_owners = 250\n    retained_earnings_end_2014 = 2000\n    contributed_capital_end_2015 = 800\n\n    # Calculate net income\n    net_income = revenues_2015 - expenses_2015\n\n    # Calculate retained earnings end 2015\n    retained_earnings_end_2015 = retained_earnings_end_2014 + net_income - distributions_to_owners\n\n    # Calculate equity end 2015\n    equity_end_2015 = contributed_capital_end_2015 + retained_earnings_end_2015\n\n    # Calculate liabilities\n    liabilities = assets_end_2015 - equity_end_2015\n\n    # return answer\n    return liabilities\n```"
        ]
    },
    {
        "tables": [
            "| Security | Security Weight(%) | Expected Standard Deviation (%) |\n|----------|-------------------|--------------------------------|\n| 1        | 30                | 20                             |\n| 2        | 70                | 12                             |"
        ],
        "topic": "Portfolio Management & Strategy",
        "question_id": "test-996",
        "python_solution": "",
        "ground_truth": null,
        "question": "If a fund manager constructs a portfolio with a standard deviation of 14.40%, what is the covariance between the two assets?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    std_dev_security1 = 20  # Expected Standard Deviation of Security 1\n    std_dev_security2 = 12  # Expected Standard Deviation of Security 2\n    weight_security1 = 0.3  # Weight of Security 1 in the portfolio\n    weight_security2 = 0.7  # Weight of Security 2 in the portfolio\n    portfolio_std_dev = 14.40  # Standard Deviation of the portfolio\n    \n    # Do math calculation to get the answer\n    variance_portfolio = portfolio_std_dev ** 2\n    variance_security1 = std_dev_security1 ** 2\n    variance_security2 = std_dev_security2 ** 2\n    \n    # Apply the formula for portfolio variance\n    covariance = (variance_portfolio - weight_security1**2 * variance_security1 - weight_security2**2 * variance_security2) / (2 * weight_security1 * weight_security2)\n    \n    # return answer\n    return covariance\n```"
        ]
    },
    {
        "tables": [
            "| Company | A  | B  | C  | D  | E  | F  |\n|---------|----|----|----|----|----|----|\n| Market  | 30 | 25 | 16 | 12 | 10 | 7  |\n| Share (%) | |  |  |  |  |  |"
        ],
        "topic": "Market Analysis & Economics",
        "question_id": "test-997",
        "python_solution": "",
        "ground_truth": null,
        "question": "If Corporations D and F combined to form a new Entity, G, what would the three-company concentration ratio in the industry be considering that there are six corporations in the sector with respective market shares?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    market_shares = {\n        'A': 30,\n        'B': 25,\n        'C': 16,\n        'D': 12,\n        'E': 10,\n        'F': 7\n    }\n    \n    # Combine Corporations D and F to form a new Entity, G\n    market_shares['G'] = market_shares['D'] + market_shares['F']\n    del market_shares['D']\n    del market_shares['F']\n    \n    # Sort market shares in descending order\n    sorted_market_shares = sorted(market_shares.values(), reverse=True)\n    \n    # Calculate the three-company concentration ratio\n    three_company_concentration_ratio = sum(sorted_market_shares[:3])\n    \n    # return answer\n    return three_company_concentration_ratio\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Accounting",
        "question_id": "test-998",
        "python_solution": "",
        "ground_truth": null,
        "question": "If John's Industries recently acquired a manufacturing machine for $60,000 which is predicted to produce an annual cash inflow of $25,000 for six years, and plans to depreciate the machine over six years for accounting reasons, while the tax authority calculates the machine's useful life to be 5 years. If we consider the tax rate to be 40% and the machines have no resale value. What would be the pretax income for John's Industries in the 6th year using the straight-line method?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    machine_cost = 60000\n    annual_cash_inflow = 25000\n    years = 6\n    tax_rate = 0.4\n    \n    # Calculate annual depreciation using the straight-line method for accounting purposes\n    accounting_depreciation = machine_cost / years\n    \n    # Calculate annual depreciation using the straight-line method for tax purposes\n    tax_depreciation = machine_cost / (years - 1)\n    \n    # In the 6th year, for tax purposes, there is no depreciation because the asset is fully depreciated in 5 years.\n    # Calculate pretax income in the 6th year\n    pretax_income = annual_cash_inflow + 0 - accounting_depreciation\n    \n    # return answer\n    return pretax_income\n```"
        ]
    },
    {
        "tables": [],
        "topic": "Quantitative Analysis & Valuation",
        "question_id": "test-999",
        "python_solution": "",
        "ground_truth": null,
        "question": "John thinks that the average cost of the commercial residential property is more than $155,000. The population standard deviation is $25,000. A random sample of 36 commercial residential properties in the region has an average cost of $159,750. John carry out the hypothesis test at a 1% significance level. What is the value of the computed test statistic?",
        "output": [
            "```python\ndef solution():\n    # Define variables name and value\n    sample_mean = 159750\n    population_mean = 155000\n    population_std_dev = 25000\n    sample_size = 36\n    \n    # Do math calculation to get the answer\n    # Calculate the standard error\n    std_error = population_std_dev / (sample_size ** 0.5)\n    \n    # Calculate the test statistic\n    test_statistic = (sample_mean - population_mean) / std_error\n    \n    # return answer\n    return test_statistic\n\n# Execute the function\ntest_statistic = solution()\nprint(test_statistic)\n```\n\nThe returned value of the program is the computed test statistic for John's hypothesis test."
        ]
    }
]